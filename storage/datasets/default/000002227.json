{
	"title": "async_drop_in_place in std::future - Rust",
	"url": "https://doc.rust-lang.org/stable/std/future/fn.async_drop_in_place.html",
	"markdown": "# async\\_drop\\_in\\_place in std::future - Rust\n\n```\npub unsafe fn async_drop_in_place<T>(to_drop: *mut T) -> AsyncDropInPlace<T> â“˜where\n    T: ?Sized,\n```\n\nðŸ”¬This is a nightly-only experimental API. (`async_drop`)\n\nExpand description\n\nCreates the asynchronous destructor of the pointed-to value.\n\n## [Â§](#safety)Safety\n\nBehavior is undefined if any of the following conditions are violated:\n\n-   `to_drop` must be [valid](about:blank/ptr/index.html#safety \"mod std::ptr\") for both reads and writes.\n    \n-   `to_drop` must be properly aligned, even if `T` has size 0.\n    \n-   `to_drop` must be nonnull, even if `T` has size 0.\n    \n-   The value `to_drop` points to must be valid for async dropping, which may mean it must uphold additional invariants. These invariants depend on the type of the value being dropped. For instance, when dropping a Box, the boxâ€™s pointer to the heap must be valid.\n    \n-   While `async_drop_in_place` is executing or the returned async destructor is alive, the only way to access parts of `to_drop` is through the `self: Pin<&mut Self>` references supplied to the `AsyncDrop::async_drop` methods that `async_drop_in_place` or `AsyncDropInPlace<T>::poll` invokes. This usually means the returned future stores the `to_drop` pointer and user is required to guarantee that dropped value doesnâ€™t move.",
	"html": "<!DOCTYPE html><html lang=\"en\" data-theme=\"light\"><head><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><meta name=\"generator\" content=\"rustdoc\"><meta name=\"description\" content=\"Creates the asynchronous destructor of the pointed-to value.\"><title>async_drop_in_place in std::future - Rust</title><script>if(window.location.protocol!==\"file:\")document.head.insertAdjacentHTML(\"beforeend\",\"SourceSerif4-Regular-46f98efaafac5295.ttf.woff2,FiraSans-Regular-018c141bf0843ffd.woff2,FiraSans-Medium-8f9a781e4970d388.woff2,SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2,SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\".split(\",\").map(f=>`<link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin href=\"../../static.files/${f}\">`).join(\"\"))</script><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceSerif4-Regular-46f98efaafac5295.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/FiraSans-Regular-018c141bf0843ffd.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/FiraSans-Medium-8f9a781e4970d388.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\"><link rel=\"stylesheet\" href=\"../../static.files/normalize-76eba96aa4d2e634.css\"><link rel=\"stylesheet\" href=\"../../static.files/rustdoc-dd39b87e5fcfba68.css\"><meta name=\"rustdoc-vars\" data-root-path=\"../../\" data-static-root-path=\"../../static.files/\" data-current-crate=\"std\" data-themes=\"\" data-resource-suffix=\"1.80.0\" data-rustdoc-version=\"1.80.0 (051478957 2024-07-21)\" data-channel=\"1.80.0\" data-search-js=\"search-d52510db62a78183.js\" data-settings-js=\"settings-4313503d2e1961c2.js\"><script src=\"../../static.files/storage-118b08c4c78b968e.js\"></script><script defer=\"\" src=\"sidebar-items1.80.0.js\"></script><script defer=\"\" src=\"../../static.files/main-20a3ad099b048cf2.js\"></script><noscript><link rel=\"stylesheet\" href=\"../../static.files/noscript-df360f571f6edeae.css\"></noscript><link rel=\"alternate icon\" type=\"image/png\" href=\"../../static.files/favicon-32x32-422f7d1d52889060.png\"><link rel=\"icon\" type=\"image/svg+xml\" href=\"../../static.files/favicon-2c020d218678b618.svg\"></head><body class=\"rustdoc fn\"><!--[if lte IE 11]><div class=\"warning\">This old browser is unsupported and will most likely display funky things.</div><![endif]--><nav class=\"mobile-topbar\"><button class=\"sidebar-menu-toggle\" title=\"show sidebar\"></button><a class=\"logo-container\" href=\"../../std/index.html\"><img class=\"rust-logo\" src=\"../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"\"></a><h2 class=\"location\"></h2></nav><nav class=\"sidebar\"><div class=\"sidebar-crate\"><a class=\"logo-container\" href=\"../../std/index.html\"><img class=\"rust-logo\" src=\"../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"logo\"></a><h2><a href=\"../../std/index.html\">std</a><span class=\"version\">1.80.0</span></h2></div><div class=\"version\">(051478957\t2024-07-21)</div><div class=\"sidebar-elems\"><h2><a href=\"index.html\">In std::future</a></h2><h3><a href=\"index.html#macros\">Macros</a></h3><ul class=\"block macro\"><li><a href=\"macro.join.html\">join</a></li></ul><h3><a href=\"index.html#structs\">Structs</a></h3><ul class=\"block struct\"><li><a href=\"struct.AsyncDropInPlace.html\">AsyncDropInPlace</a></li><li><a href=\"struct.Pending.html\">Pending</a></li><li><a href=\"struct.PollFn.html\">PollFn</a></li><li><a href=\"struct.Ready.html\">Ready</a></li></ul><h3><a href=\"index.html#traits\">Traits</a></h3><ul class=\"block trait\"><li><a href=\"trait.AsyncDrop.html\">AsyncDrop</a></li><li><a href=\"trait.Future.html\">Future</a></li><li><a href=\"trait.IntoFuture.html\">IntoFuture</a></li></ul><h3><a href=\"index.html#functions\">Functions</a></h3><ul class=\"block fn\"><li><a href=\"fn.async_drop.html\">async_drop</a></li><li><a href=\"fn.async_drop_in_place.html\">async_drop_in_place</a></li><li><a href=\"fn.pending.html\">pending</a></li><li><a href=\"fn.poll_fn.html\">poll_fn</a></li><li><a href=\"fn.ready.html\">ready</a></li></ul></div></nav><div class=\"sidebar-resizer\"></div><main><div class=\"width-limiter\"><rustdoc-search><nav class=\"sub\">\n            <form class=\"search-form\">\n                <span></span> <!-- This empty span is a hacky fix for Safari - See #93184 -->\n                <div id=\"sidebar-button\" tabindex=\"-1\">\n                    <a href=\"../../std/all.html\" title=\"show sidebar\"></a>\n                </div>\n                <input class=\"search-input\" name=\"search\" aria-label=\"Run search in the documentation\" autocomplete=\"off\" spellcheck=\"false\" placeholder=\"Type â€˜Sâ€™ or â€˜/â€™ to search, â€˜?â€™ for more optionsâ€¦\" type=\"search\">\n                <div id=\"help-button\" tabindex=\"-1\">\n                    <a href=\"../../help.html\" title=\"help\">?</a>\n                </div>\n                <div id=\"settings-menu\" tabindex=\"-1\">\n                    <a href=\"../../settings.html\" title=\"settings\">\n                        Settings\n                    </a>\n                </div>\n            </form>\n        </nav></rustdoc-search><section id=\"main-content\" class=\"content\"><div class=\"main-heading\"><h1>Function <a href=\"../index.html\">std</a>::<wbr><a href=\"index.html\">future</a>::<wbr><a class=\"fn\" href=\"#\">async_drop_in_place</a><button id=\"copy-path\" title=\"Copy item path to clipboard\">Copy item path</button></h1><span class=\"out-of-band\"><a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/future/async_drop.rs.html#90\">source</a> Â· <button id=\"toggle-all-docs\" title=\"collapse all docs\">[<span>âˆ’</span>]</button></span></div><pre class=\"rust item-decl\"><code>pub unsafe fn async_drop_in_place&lt;T&gt;(to_drop: <a class=\"primitive\" href=\"../primitive.pointer.html\">*mut T</a>) -&gt; <a class=\"struct\" href=\"struct.AsyncDropInPlace.html\" title=\"struct std::future::AsyncDropInPlace\">AsyncDropInPlace</a>&lt;T&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"AsyncDropInPlace<T>\">â“˜</a><div class=\"where\">where\n    T: ?<a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,</div></code></pre><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>async_drop</code>)</span></div></span><details class=\"toggle top-doc\" open=\"\"><summary class=\"hideme\"><span>Expand description</span></summary><div class=\"docblock\"><p>Creates the asynchronous destructor of the pointed-to value.</p>\n<h2 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">Â§</a>Safety</h2>\n<p>Behavior is undefined if any of the following conditions are violated:</p>\n<ul>\n<li>\n<p><code>to_drop</code> must be <a href=\"../ptr/index.html#safety\" title=\"mod std::ptr\">valid</a> for both reads and writes.</p>\n</li>\n<li>\n<p><code>to_drop</code> must be properly aligned, even if <code>T</code> has size 0.</p>\n</li>\n<li>\n<p><code>to_drop</code> must be nonnull, even if <code>T</code> has size 0.</p>\n</li>\n<li>\n<p>The value <code>to_drop</code> points to must be valid for async dropping,\nwhich may mean it must uphold additional invariants. These\ninvariants depend on the type of the value being dropped. For\ninstance, when dropping a Box, the boxâ€™s pointer to the heap must\nbe valid.</p>\n</li>\n<li>\n<p>While <code>async_drop_in_place</code> is executing or the returned async\ndestructor is alive, the only way to access parts of <code>to_drop</code>\nis through the <code>self: Pin&lt;&amp;mut Self&gt;</code> references supplied to\nthe <code>AsyncDrop::async_drop</code> methods that <code>async_drop_in_place</code>\nor <code>AsyncDropInPlace&lt;T&gt;::poll</code> invokes. This usually means the\nreturned future stores the <code>to_drop</code> pointer and user is required\nto guarantee that dropped value doesnâ€™t move.</p>\n</li>\n</ul>\n</div></details><script type=\"text/json\" id=\"notable-traits-data\">{\"AsyncDropInPlace<T>\":\"<h3>Notable traits for <code><a class=\\\"struct\\\" href=\\\"struct.AsyncDropInPlace.html\\\" title=\\\"struct std::future::AsyncDropInPlace\\\">AsyncDropInPlace</a>&lt;T&gt;</code></h3><pre><code><div class=\\\"where\\\">impl&lt;T&gt; <a class=\\\"trait\\\" href=\\\"trait.Future.html\\\" title=\\\"trait std::future::Future\\\">Future</a> for <a class=\\\"struct\\\" href=\\\"struct.AsyncDropInPlace.html\\\" title=\\\"struct std::future::AsyncDropInPlace\\\">AsyncDropInPlace</a>&lt;T&gt;<div class=\\\"where\\\">where\\n    T: ?<a class=\\\"trait\\\" href=\\\"../marker/trait.Sized.html\\\" title=\\\"trait std::marker::Sized\\\">Sized</a>,</div></div><div class=\\\"where\\\">    type <a href=\\\"trait.Future.html#associatedtype.Output\\\" class=\\\"associatedtype\\\">Output</a> = <a class=\\\"primitive\\\" href=\\\"../primitive.unit.html\\\">()</a>;</div>\"}</script></section></div></main></body></html>",
	"crawlDate": "2024-07-28T05:23:15.799Z"
}