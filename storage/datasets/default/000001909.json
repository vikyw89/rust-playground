{
	"title": "f32.rs - source",
	"url": "https://doc.rust-lang.org/stable/src/std/f32.rs.html#31-1228",
	"markdown": "# f32.rs - source\n\n```\n//! Constants for the `f32` single-precision floating point type.\n//!\n//! *[See also the `f32` primitive type](primitive@f32).*\n//!\n//! Mathematically significant numbers are provided in the `consts` sub-module.\n//!\n//! For the constants defined directly in this module\n//! (as distinct from those defined in the `consts` sub-module),\n//! new code should instead use the associated constants\n//! defined directly on the `f32` type.\n\n#![stable(feature = \"rust1\", since = \"1.0.0\")]\n#![allow(missing_docs)]\n\n#[cfg(test)]\nmod tests;\n\n#[cfg(not(test))]\nuse crate::intrinsics;\n#[cfg(not(test))]\nuse crate::sys::cmath;\n\n#[stable(feature = \"rust1\", since = \"1.0.0\")]\n#[allow(deprecated, deprecated_in_future)]\npub use core::f32::{\n    consts, DIGITS, EPSILON, INFINITY, MANTISSA_DIGITS, MAX, MAX_10_EXP, MAX_EXP, MIN, MIN_10_EXP,\n    MIN_EXP, MIN_POSITIVE, NAN, NEG_INFINITY, RADIX,\n};\n\n#[cfg(not(test))]\nimpl f32 {\n    /// Returns the largest integer less than or equal to `self`.\n    ///\n    /// This function always returns the precise result.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let f = 3.7_f32;\n    /// let g = 3.0_f32;\n    /// let h = -3.7_f32;\n    ///\n    /// assert_eq!(f.floor(), 3.0);\n    /// assert_eq!(g.floor(), 3.0);\n    /// assert_eq!(h.floor(), -4.0);\n    /// ```\n    #[rustc_allow_incoherent_impl]\n    #[must_use = \"method returns a new number and does not mutate the original value\"]\n    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n    #[inline]\n    pub fn floor(self) -> f32 {\n        unsafe { intrinsics::floorf32(self) }\n    }\n\n    /// Returns the smallest integer greater than or equal to `self`.\n    ///\n    /// This function always returns the precise result.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let f = 3.01_f32;\n    /// let g = 4.0_f32;\n    ///\n    /// assert_eq!(f.ceil(), 4.0);\n    /// assert_eq!(g.ceil(), 4.0);\n    /// ```\n    #[doc(alias = \"ceiling\")]\n    #[rustc_allow_incoherent_impl]\n    #[must_use = \"method returns a new number and does not mutate the original value\"]\n    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n    #[inline]\n    pub fn ceil(self) -> f32 {\n        unsafe { intrinsics::ceilf32(self) }\n    }\n\n    /// Returns the nearest integer to `self`. If a value is half-way between two\n    /// integers, round away from `0.0`.\n    ///\n    /// This function always returns the precise result.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let f = 3.3_f32;\n    /// let g = -3.3_f32;\n    /// let h = -3.7_f32;\n    /// let i = 3.5_f32;\n    /// let j = 4.5_f32;\n    ///\n    /// assert_eq!(f.round(), 3.0);\n    /// assert_eq!(g.round(), -3.0);\n    /// assert_eq!(h.round(), -4.0);\n    /// assert_eq!(i.round(), 4.0);\n    /// assert_eq!(j.round(), 5.0);\n    /// ```\n    #[rustc_allow_incoherent_impl]\n    #[must_use = \"method returns a new number and does not mutate the original value\"]\n    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n    #[inline]\n    pub fn round(self) -> f32 {\n        unsafe { intrinsics::roundf32(self) }\n    }\n\n    /// Returns the nearest integer to a number. Rounds half-way cases to the number\n    /// with an even least significant digit.\n    ///\n    /// This function always returns the precise result.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let f = 3.3_f32;\n    /// let g = -3.3_f32;\n    /// let h = 3.5_f32;\n    /// let i = 4.5_f32;\n    ///\n    /// assert_eq!(f.round_ties_even(), 3.0);\n    /// assert_eq!(g.round_ties_even(), -3.0);\n    /// assert_eq!(h.round_ties_even(), 4.0);\n    /// assert_eq!(i.round_ties_even(), 4.0);\n    /// ```\n    #[rustc_allow_incoherent_impl]\n    #[must_use = \"method returns a new number and does not mutate the original value\"]\n    #[stable(feature = \"round_ties_even\", since = \"1.77.0\")]\n    #[inline]\n    pub fn round_ties_even(self) -> f32 {\n        unsafe { intrinsics::rintf32(self) }\n    }\n\n    /// Returns the integer part of `self`.\n    /// This means that non-integer numbers are always truncated towards zero.\n    ///\n    /// This function always returns the precise result.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let f = 3.7_f32;\n    /// let g = 3.0_f32;\n    /// let h = -3.7_f32;\n    ///\n    /// assert_eq!(f.trunc(), 3.0);\n    /// assert_eq!(g.trunc(), 3.0);\n    /// assert_eq!(h.trunc(), -3.0);\n    /// ```\n    #[doc(alias = \"truncate\")]\n    #[rustc_allow_incoherent_impl]\n    #[must_use = \"method returns a new number and does not mutate the original value\"]\n    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n    #[inline]\n    pub fn trunc(self) -> f32 {\n        unsafe { intrinsics::truncf32(self) }\n    }\n\n    /// Returns the fractional part of `self`.\n    ///\n    /// This function always returns the precise result.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let x = 3.6_f32;\n    /// let y = -3.6_f32;\n    /// let abs_difference_x = (x.fract() - 0.6).abs();\n    /// let abs_difference_y = (y.fract() - (-0.6)).abs();\n    ///\n    /// assert!(abs_difference_x <= f32::EPSILON);\n    /// assert!(abs_difference_y <= f32::EPSILON);\n    /// ```\n    #[rustc_allow_incoherent_impl]\n    #[must_use = \"method returns a new number and does not mutate the original value\"]\n    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n    #[inline]\n    pub fn fract(self) -> f32 {\n        self - self.trunc()\n    }\n\n    /// Computes the absolute value of `self`.\n    ///\n    /// This function always returns the precise result.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let x = 3.5_f32;\n    /// let y = -3.5_f32;\n    ///\n    /// assert_eq!(x.abs(), x);\n    /// assert_eq!(y.abs(), -y);\n    ///\n    /// assert!(f32::NAN.abs().is_nan());\n    /// ```\n    #[rustc_allow_incoherent_impl]\n    #[must_use = \"method returns a new number and does not mutate the original value\"]\n    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n    #[inline]\n    pub fn abs(self) -> f32 {\n        unsafe { intrinsics::fabsf32(self) }\n    }\n\n    /// Returns a number that represents the sign of `self`.\n    ///\n    /// - `1.0` if the number is positive, `+0.0` or `INFINITY`\n    /// - `-1.0` if the number is negative, `-0.0` or `NEG_INFINITY`\n    /// - NaN if the number is NaN\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let f = 3.5_f32;\n    ///\n    /// assert_eq!(f.signum(), 1.0);\n    /// assert_eq!(f32::NEG_INFINITY.signum(), -1.0);\n    ///\n    /// assert!(f32::NAN.signum().is_nan());\n    /// ```\n    #[rustc_allow_incoherent_impl]\n    #[must_use = \"method returns a new number and does not mutate the original value\"]\n    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n    #[inline]\n    pub fn signum(self) -> f32 {\n        if self.is_nan() { Self::NAN } else { 1.0_f32.copysign(self) }\n    }\n\n    /// Returns a number composed of the magnitude of `self` and the sign of\n    /// `sign`.\n    ///\n    /// Equal to `self` if the sign of `self` and `sign` are the same, otherwise\n    /// equal to `-self`. If `self` is a NaN, then a NaN with the sign bit of\n    /// `sign` is returned. Note, however, that conserving the sign bit on NaN\n    /// across arithmetical operations is not generally guaranteed.\n    /// See [explanation of NaN as a special value](primitive@f32) for more info.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let f = 3.5_f32;\n    ///\n    /// assert_eq!(f.copysign(0.42), 3.5_f32);\n    /// assert_eq!(f.copysign(-0.42), -3.5_f32);\n    /// assert_eq!((-f).copysign(0.42), 3.5_f32);\n    /// assert_eq!((-f).copysign(-0.42), -3.5_f32);\n    ///\n    /// assert!(f32::NAN.copysign(1.0).is_nan());\n    /// ```\n    #[rustc_allow_incoherent_impl]\n    #[must_use = \"method returns a new number and does not mutate the original value\"]\n    #[inline]\n    #[stable(feature = \"copysign\", since = \"1.35.0\")]\n    pub fn copysign(self, sign: f32) -> f32 {\n        unsafe { intrinsics::copysignf32(self, sign) }\n    }\n\n    /// Fused multiply-add. Computes `(self * a) + b` with only one rounding\n    /// error, yielding a more accurate result than an unfused multiply-add.\n    ///\n    /// Using `mul_add` *may* be more performant than an unfused multiply-add if\n    /// the target architecture has a dedicated `fma` CPU instruction. However,\n    /// this is not always true, and will be heavily dependant on designing\n    /// algorithms with specific target hardware in mind.\n    ///\n    /// # Precision\n    ///\n    /// The result of this operation is guaranteed to be the rounded\n    /// infinite-precision result. It is specified by IEEE 754 as\n    /// `fusedMultiplyAdd` and guaranteed not to change.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let m = 10.0_f32;\n    /// let x = 4.0_f32;\n    /// let b = 60.0_f32;\n    ///\n    /// assert_eq!(m.mul_add(x, b), 100.0);\n    /// assert_eq!(m * x + b, 100.0);\n    ///\n    /// let one_plus_eps = 1.0_f32 + f32::EPSILON;\n    /// let one_minus_eps = 1.0_f32 - f32::EPSILON;\n    /// let minus_one = -1.0_f32;\n    ///\n    /// // The exact result (1 + eps) * (1 - eps) = 1 - eps * eps.\n    /// assert_eq!(one_plus_eps.mul_add(one_minus_eps, minus_one), -f32::EPSILON * f32::EPSILON);\n    /// // Different rounding with the non-fused multiply and add.\n    /// assert_eq!(one_plus_eps * one_minus_eps + minus_one, 0.0);\n    /// ```\n    #[rustc_allow_incoherent_impl]\n    #[must_use = \"method returns a new number and does not mutate the original value\"]\n    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n    #[inline]\n    pub fn mul_add(self, a: f32, b: f32) -> f32 {\n        unsafe { intrinsics::fmaf32(self, a, b) }\n    }\n\n    /// Calculates Euclidean division, the matching method for `rem_euclid`.\n    ///\n    /// This computes the integer `n` such that\n    /// `self = n * rhs + self.rem_euclid(rhs)`.\n    /// In other words, the result is `self / rhs` rounded to the integer `n`\n    /// such that `self >= n * rhs`.\n    ///\n    /// # Precision\n    ///\n    /// The result of this operation is guaranteed to be the rounded\n    /// infinite-precision result.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let a: f32 = 7.0;\n    /// let b = 4.0;\n    /// assert_eq!(a.div_euclid(b), 1.0); // 7.0 > 4.0 * 1.0\n    /// assert_eq!((-a).div_euclid(b), -2.0); // -7.0 >= 4.0 * -2.0\n    /// assert_eq!(a.div_euclid(-b), -1.0); // 7.0 >= -4.0 * -1.0\n    /// assert_eq!((-a).div_euclid(-b), 2.0); // -7.0 >= -4.0 * 2.0\n    /// ```\n    #[rustc_allow_incoherent_impl]\n    #[must_use = \"method returns a new number and does not mutate the original value\"]\n    #[inline]\n    #[stable(feature = \"euclidean_division\", since = \"1.38.0\")]\n    pub fn div_euclid(self, rhs: f32) -> f32 {\n        let q = (self / rhs).trunc();\n        if self % rhs < 0.0 {\n            return if rhs > 0.0 { q - 1.0 } else { q + 1.0 };\n        }\n        q\n    }\n\n    /// Calculates the least nonnegative remainder of `self (mod rhs)`.\n    ///\n    /// In particular, the return value `r` satisfies `0.0 <= r < rhs.abs()` in\n    /// most cases. However, due to a floating point round-off error it can\n    /// result in `r == rhs.abs()`, violating the mathematical definition, if\n    /// `self` is much smaller than `rhs.abs()` in magnitude and `self < 0.0`.\n    /// This result is not an element of the function's codomain, but it is the\n    /// closest floating point number in the real numbers and thus fulfills the\n    /// property `self == self.div_euclid(rhs) * rhs + self.rem_euclid(rhs)`\n    /// approximately.\n    ///\n    /// # Precision\n    ///\n    /// The result of this operation is guaranteed to be the rounded\n    /// infinite-precision result.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let a: f32 = 7.0;\n    /// let b = 4.0;\n    /// assert_eq!(a.rem_euclid(b), 3.0);\n    /// assert_eq!((-a).rem_euclid(b), 1.0);\n    /// assert_eq!(a.rem_euclid(-b), 3.0);\n    /// assert_eq!((-a).rem_euclid(-b), 1.0);\n    /// // limitation due to round-off error\n    /// assert!((-f32::EPSILON).rem_euclid(3.0) != 0.0);\n    /// ```\n    #[doc(alias = \"modulo\", alias = \"mod\")]\n    #[rustc_allow_incoherent_impl]\n    #[must_use = \"method returns a new number and does not mutate the original value\"]\n    #[inline]\n    #[stable(feature = \"euclidean_division\", since = \"1.38.0\")]\n    pub fn rem_euclid(self, rhs: f32) -> f32 {\n        let r = self % rhs;\n        if r < 0.0 { r + rhs.abs() } else { r }\n    }\n\n    /// Raises a number to an integer power.\n    ///\n    /// Using this function is generally faster than using `powf`.\n    /// It might have a different sequence of rounding operations than `powf`,\n    /// so the results are not guaranteed to agree.\n    ///\n    /// # Unspecified precision\n    ///\n    /// The precision of this function is non-deterministic. This means it varies by platform, Rust version, and\n    /// can even differ within the same execution from one invocation to the next.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let x = 2.0_f32;\n    /// let abs_difference = (x.powi(2) - (x * x)).abs();\n    ///\n    /// assert!(abs_difference <= f32::EPSILON);\n    /// ```\n    #[rustc_allow_incoherent_impl]\n    #[must_use = \"method returns a new number and does not mutate the original value\"]\n    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n    #[inline]\n    pub fn powi(self, n: i32) -> f32 {\n        unsafe { intrinsics::powif32(self, n) }\n    }\n\n    /// Raises a number to a floating point power.\n    ///\n    /// # Unspecified precision\n    ///\n    /// The precision of this function is non-deterministic. This means it varies by platform, Rust version, and\n    /// can even differ within the same execution from one invocation to the next.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let x = 2.0_f32;\n    /// let abs_difference = (x.powf(2.0) - (x * x)).abs();\n    ///\n    /// assert!(abs_difference <= f32::EPSILON);\n    /// ```\n    #[rustc_allow_incoherent_impl]\n    #[must_use = \"method returns a new number and does not mutate the original value\"]\n    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n    #[inline]\n    pub fn powf(self, n: f32) -> f32 {\n        unsafe { intrinsics::powf32(self, n) }\n    }\n\n    /// Returns the square root of a number.\n    ///\n    /// Returns NaN if `self` is a negative number other than `-0.0`.\n    ///\n    /// # Precision\n    ///\n    /// The result of this operation is guaranteed to be the rounded\n    /// infinite-precision result. It is specified by IEEE 754 as `squareRoot`\n    /// and guaranteed not to change.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let positive = 4.0_f32;\n    /// let negative = -4.0_f32;\n    /// let negative_zero = -0.0_f32;\n    ///\n    /// assert_eq!(positive.sqrt(), 2.0);\n    /// assert!(negative.sqrt().is_nan());\n    /// assert!(negative_zero.sqrt() == negative_zero);\n    /// ```\n    #[rustc_allow_incoherent_impl]\n    #[must_use = \"method returns a new number and does not mutate the original value\"]\n    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n    #[inline]\n    pub fn sqrt(self) -> f32 {\n        unsafe { intrinsics::sqrtf32(self) }\n    }\n\n    /// Returns `e^(self)`, (the exponential function).\n    ///\n    /// # Unspecified precision\n    ///\n    /// The precision of this function is non-deterministic. This means it varies by platform, Rust version, and\n    /// can even differ within the same execution from one invocation to the next.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let one = 1.0f32;\n    /// // e^1\n    /// let e = one.exp();\n    ///\n    /// // ln(e) - 1 == 0\n    /// let abs_difference = (e.ln() - 1.0).abs();\n    ///\n    /// assert!(abs_difference <= f32::EPSILON);\n    /// ```\n    #[rustc_allow_incoherent_impl]\n    #[must_use = \"method returns a new number and does not mutate the original value\"]\n    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n    #[inline]\n    pub fn exp(self) -> f32 {\n        unsafe { intrinsics::expf32(self) }\n    }\n\n    /// Returns `2^(self)`.\n    ///\n    /// # Unspecified precision\n    ///\n    /// The precision of this function is non-deterministic. This means it varies by platform, Rust version, and\n    /// can even differ within the same execution from one invocation to the next.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let f = 2.0f32;\n    ///\n    /// // 2^2 - 4 == 0\n    /// let abs_difference = (f.exp2() - 4.0).abs();\n    ///\n    /// assert!(abs_difference <= f32::EPSILON);\n    /// ```\n    #[rustc_allow_incoherent_impl]\n    #[must_use = \"method returns a new number and does not mutate the original value\"]\n    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n    #[inline]\n    pub fn exp2(self) -> f32 {\n        unsafe { intrinsics::exp2f32(self) }\n    }\n\n    /// Returns the natural logarithm of the number.\n    ///\n    /// # Unspecified precision\n    ///\n    /// The precision of this function is non-deterministic. This means it varies by platform, Rust version, and\n    /// can even differ within the same execution from one invocation to the next.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let one = 1.0f32;\n    /// // e^1\n    /// let e = one.exp();\n    ///\n    /// // ln(e) - 1 == 0\n    /// let abs_difference = (e.ln() - 1.0).abs();\n    ///\n    /// assert!(abs_difference <= f32::EPSILON);\n    /// ```\n    #[rustc_allow_incoherent_impl]\n    #[must_use = \"method returns a new number and does not mutate the original value\"]\n    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n    #[inline]\n    pub fn ln(self) -> f32 {\n        unsafe { intrinsics::logf32(self) }\n    }\n\n    /// Returns the logarithm of the number with respect to an arbitrary base.\n    ///\n    /// The result might not be correctly rounded owing to implementation details;\n    /// `self.log2()` can produce more accurate results for base 2, and\n    /// `self.log10()` can produce more accurate results for base 10.\n    ///\n    /// # Unspecified precision\n    ///\n    /// The precision of this function is non-deterministic. This means it varies by platform, Rust version, and\n    /// can even differ within the same execution from one invocation to the next.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let five = 5.0f32;\n    ///\n    /// // log5(5) - 1 == 0\n    /// let abs_difference = (five.log(5.0) - 1.0).abs();\n    ///\n    /// assert!(abs_difference <= f32::EPSILON);\n    /// ```\n    #[rustc_allow_incoherent_impl]\n    #[must_use = \"method returns a new number and does not mutate the original value\"]\n    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n    #[inline]\n    pub fn log(self, base: f32) -> f32 {\n        self.ln() / base.ln()\n    }\n\n    /// Returns the base 2 logarithm of the number.\n    ///\n    /// # Unspecified precision\n    ///\n    /// The precision of this function is non-deterministic. This means it varies by platform, Rust version, and\n    /// can even differ within the same execution from one invocation to the next.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let two = 2.0f32;\n    ///\n    /// // log2(2) - 1 == 0\n    /// let abs_difference = (two.log2() - 1.0).abs();\n    ///\n    /// assert!(abs_difference <= f32::EPSILON);\n    /// ```\n    #[rustc_allow_incoherent_impl]\n    #[must_use = \"method returns a new number and does not mutate the original value\"]\n    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n    #[inline]\n    pub fn log2(self) -> f32 {\n        crate::sys::log2f32(self)\n    }\n\n    /// Returns the base 10 logarithm of the number.\n    ///\n    /// # Unspecified precision\n    ///\n    /// The precision of this function is non-deterministic. This means it varies by platform, Rust version, and\n    /// can even differ within the same execution from one invocation to the next.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let ten = 10.0f32;\n    ///\n    /// // log10(10) - 1 == 0\n    /// let abs_difference = (ten.log10() - 1.0).abs();\n    ///\n    /// assert!(abs_difference <= f32::EPSILON);\n    /// ```\n    #[rustc_allow_incoherent_impl]\n    #[must_use = \"method returns a new number and does not mutate the original value\"]\n    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n    #[inline]\n    pub fn log10(self) -> f32 {\n        unsafe { intrinsics::log10f32(self) }\n    }\n\n    /// The positive difference of two numbers.\n    ///\n    /// * If `self <= other`: `0.0`\n    /// * Else: `self - other`\n    ///\n    /// # Unspecified precision\n    ///\n    /// The precision of this function is non-deterministic. This means it varies by platform, Rust version, and\n    /// can even differ within the same execution from one invocation to the next.\n    /// This function currently corresponds to the `fdimf` from libc on Unix\n    /// and Windows. Note that this might change in the future.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let x = 3.0f32;\n    /// let y = -3.0f32;\n    ///\n    /// let abs_difference_x = (x.abs_sub(1.0) - 2.0).abs();\n    /// let abs_difference_y = (y.abs_sub(1.0) - 0.0).abs();\n    ///\n    /// assert!(abs_difference_x <= f32::EPSILON);\n    /// assert!(abs_difference_y <= f32::EPSILON);\n    /// ```\n    #[rustc_allow_incoherent_impl]\n    #[must_use = \"method returns a new number and does not mutate the original value\"]\n    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n    #[inline]\n    #[deprecated(\n        since = \"1.10.0\",\n        note = \"you probably meant `(self - other).abs()`: \\\n                this operation is `(self - other).max(0.0)` \\\n                except that `abs_sub` also propagates NaNs (also \\\n                known as `fdimf` in C). If you truly need the positive \\\n                difference, consider using that expression or the C function \\\n                `fdimf`, depending on how you wish to handle NaN (please consider \\\n                filing an issue describing your use-case too).\"\n    )]\n    pub fn abs_sub(self, other: f32) -> f32 {\n        unsafe { cmath::fdimf(self, other) }\n    }\n\n    /// Returns the cube root of a number.\n    ///\n    /// # Unspecified precision\n    ///\n    /// The precision of this function is non-deterministic. This means it varies by platform, Rust version, and\n    /// can even differ within the same execution from one invocation to the next.\n    /// This function currently corresponds to the `cbrtf` from libc on Unix\n    /// and Windows. Note that this might change in the future.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let x = 8.0f32;\n    ///\n    /// // x^(1/3) - 2 == 0\n    /// let abs_difference = (x.cbrt() - 2.0).abs();\n    ///\n    /// assert!(abs_difference <= f32::EPSILON);\n    /// ```\n    #[rustc_allow_incoherent_impl]\n    #[must_use = \"method returns a new number and does not mutate the original value\"]\n    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n    #[inline]\n    pub fn cbrt(self) -> f32 {\n        unsafe { cmath::cbrtf(self) }\n    }\n\n    /// Compute the distance between the origin and a point (`x`, `y`) on the\n    /// Euclidean plane. Equivalently, compute the length of the hypotenuse of a\n    /// right-angle triangle with other sides having length `x.abs()` and\n    /// `y.abs()`.\n    ///\n    /// # Unspecified precision\n    ///\n    /// The precision of this function is non-deterministic. This means it varies by platform, Rust version, and\n    /// can even differ within the same execution from one invocation to the next.\n    /// This function currently corresponds to the `hypotf` from libc on Unix\n    /// and Windows. Note that this might change in the future.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let x = 2.0f32;\n    /// let y = 3.0f32;\n    ///\n    /// // sqrt(x^2 + y^2)\n    /// let abs_difference = (x.hypot(y) - (x.powi(2) + y.powi(2)).sqrt()).abs();\n    ///\n    /// assert!(abs_difference <= f32::EPSILON);\n    /// ```\n    #[rustc_allow_incoherent_impl]\n    #[must_use = \"method returns a new number and does not mutate the original value\"]\n    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n    #[inline]\n    pub fn hypot(self, other: f32) -> f32 {\n        unsafe { cmath::hypotf(self, other) }\n    }\n\n    /// Computes the sine of a number (in radians).\n    ///\n    /// # Unspecified precision\n    ///\n    /// The precision of this function is non-deterministic. This means it varies by platform, Rust version, and\n    /// can even differ within the same execution from one invocation to the next.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let x = std::f32::consts::FRAC_PI_2;\n    ///\n    /// let abs_difference = (x.sin() - 1.0).abs();\n    ///\n    /// assert!(abs_difference <= f32::EPSILON);\n    /// ```\n    #[rustc_allow_incoherent_impl]\n    #[must_use = \"method returns a new number and does not mutate the original value\"]\n    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n    #[inline]\n    pub fn sin(self) -> f32 {\n        unsafe { intrinsics::sinf32(self) }\n    }\n\n    /// Computes the cosine of a number (in radians).\n    ///\n    /// # Unspecified precision\n    ///\n    /// The precision of this function is non-deterministic. This means it varies by platform, Rust version, and\n    /// can even differ within the same execution from one invocation to the next.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let x = 2.0 * std::f32::consts::PI;\n    ///\n    /// let abs_difference = (x.cos() - 1.0).abs();\n    ///\n    /// assert!(abs_difference <= f32::EPSILON);\n    /// ```\n    #[rustc_allow_incoherent_impl]\n    #[must_use = \"method returns a new number and does not mutate the original value\"]\n    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n    #[inline]\n    pub fn cos(self) -> f32 {\n        unsafe { intrinsics::cosf32(self) }\n    }\n\n    /// Computes the tangent of a number (in radians).\n    ///\n    /// # Unspecified precision\n    ///\n    /// The precision of this function is non-deterministic. This means it varies by platform, Rust version, and\n    /// can even differ within the same execution from one invocation to the next.\n    /// This function currently corresponds to the `tanf` from libc on Unix and\n    /// Windows. Note that this might change in the future.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let x = std::f32::consts::FRAC_PI_4;\n    /// let abs_difference = (x.tan() - 1.0).abs();\n    ///\n    /// assert!(abs_difference <= f32::EPSILON);\n    /// ```\n    #[rustc_allow_incoherent_impl]\n    #[must_use = \"method returns a new number and does not mutate the original value\"]\n    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n    #[inline]\n    pub fn tan(self) -> f32 {\n        unsafe { cmath::tanf(self) }\n    }\n\n    /// Computes the arcsine of a number. Return value is in radians in\n    /// the range [-pi/2, pi/2] or NaN if the number is outside the range\n    /// [-1, 1].\n    ///\n    /// # Unspecified precision\n    ///\n    /// The precision of this function is non-deterministic. This means it varies by platform, Rust version, and\n    /// can even differ within the same execution from one invocation to the next.\n    /// This function currently corresponds to the `asinf` from libc on Unix\n    /// and Windows. Note that this might change in the future.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let f = std::f32::consts::FRAC_PI_2;\n    ///\n    /// // asin(sin(pi/2))\n    /// let abs_difference = (f.sin().asin() - std::f32::consts::FRAC_PI_2).abs();\n    ///\n    /// assert!(abs_difference <= f32::EPSILON);\n    /// ```\n    #[doc(alias = \"arcsin\")]\n    #[rustc_allow_incoherent_impl]\n    #[must_use = \"method returns a new number and does not mutate the original value\"]\n    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n    #[inline]\n    pub fn asin(self) -> f32 {\n        unsafe { cmath::asinf(self) }\n    }\n\n    /// Computes the arccosine of a number. Return value is in radians in\n    /// the range [0, pi] or NaN if the number is outside the range\n    /// [-1, 1].\n    ///\n    /// # Unspecified precision\n    ///\n    /// The precision of this function is non-deterministic. This means it varies by platform, Rust version, and\n    /// can even differ within the same execution from one invocation to the next.\n    /// This function currently corresponds to the `acosf` from libc on Unix\n    /// and Windows. Note that this might change in the future.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let f = std::f32::consts::FRAC_PI_4;\n    ///\n    /// // acos(cos(pi/4))\n    /// let abs_difference = (f.cos().acos() - std::f32::consts::FRAC_PI_4).abs();\n    ///\n    /// assert!(abs_difference <= f32::EPSILON);\n    /// ```\n    #[doc(alias = \"arccos\")]\n    #[rustc_allow_incoherent_impl]\n    #[must_use = \"method returns a new number and does not mutate the original value\"]\n    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n    #[inline]\n    pub fn acos(self) -> f32 {\n        unsafe { cmath::acosf(self) }\n    }\n\n    /// Computes the arctangent of a number. Return value is in radians in the\n    /// range [-pi/2, pi/2];\n    ///\n    /// # Unspecified precision\n    ///\n    /// The precision of this function is non-deterministic. This means it varies by platform, Rust version, and\n    /// can even differ within the same execution from one invocation to the next.\n    /// This function currently corresponds to the `atanf` from libc on Unix\n    /// and Windows. Note that this might change in the future.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let f = 1.0f32;\n    ///\n    /// // atan(tan(1))\n    /// let abs_difference = (f.tan().atan() - 1.0).abs();\n    ///\n    /// assert!(abs_difference <= f32::EPSILON);\n    /// ```\n    #[doc(alias = \"arctan\")]\n    #[rustc_allow_incoherent_impl]\n    #[must_use = \"method returns a new number and does not mutate the original value\"]\n    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n    #[inline]\n    pub fn atan(self) -> f32 {\n        unsafe { cmath::atanf(self) }\n    }\n\n    /// Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`) in radians.\n    ///\n    /// * `x = 0`, `y = 0`: `0`\n    /// * `x >= 0`: `arctan(y/x)` -> `[-pi/2, pi/2]`\n    /// * `y >= 0`: `arctan(y/x) + pi` -> `(pi/2, pi]`\n    /// * `y < 0`: `arctan(y/x) - pi` -> `(-pi, -pi/2)`\n    ///\n    /// # Unspecified precision\n    ///\n    /// The precision of this function is non-deterministic. This means it varies by platform, Rust version, and\n    /// can even differ within the same execution from one invocation to the next.\n    /// This function currently corresponds to the `atan2f` from libc on Unix\n    /// and Windows. Note that this might change in the future.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// // Positive angles measured counter-clockwise\n    /// // from positive x axis\n    /// // -pi/4 radians (45 deg clockwise)\n    /// let x1 = 3.0f32;\n    /// let y1 = -3.0f32;\n    ///\n    /// // 3pi/4 radians (135 deg counter-clockwise)\n    /// let x2 = -3.0f32;\n    /// let y2 = 3.0f32;\n    ///\n    /// let abs_difference_1 = (y1.atan2(x1) - (-std::f32::consts::FRAC_PI_4)).abs();\n    /// let abs_difference_2 = (y2.atan2(x2) - (3.0 * std::f32::consts::FRAC_PI_4)).abs();\n    ///\n    /// assert!(abs_difference_1 <= f32::EPSILON);\n    /// assert!(abs_difference_2 <= f32::EPSILON);\n    /// ```\n    #[rustc_allow_incoherent_impl]\n    #[must_use = \"method returns a new number and does not mutate the original value\"]\n    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n    #[inline]\n    pub fn atan2(self, other: f32) -> f32 {\n        unsafe { cmath::atan2f(self, other) }\n    }\n\n    /// Simultaneously computes the sine and cosine of the number, `x`. Returns\n    /// `(sin(x), cos(x))`.\n    ///\n    /// # Unspecified precision\n    ///\n    /// The precision of this function is non-deterministic. This means it varies by platform, Rust version, and\n    /// can even differ within the same execution from one invocation to the next.\n    /// This function currently corresponds to the `(f32::sin(x),\n    /// f32::cos(x))`. Note that this might change in the future.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let x = std::f32::consts::FRAC_PI_4;\n    /// let f = x.sin_cos();\n    ///\n    /// let abs_difference_0 = (f.0 - x.sin()).abs();\n    /// let abs_difference_1 = (f.1 - x.cos()).abs();\n    ///\n    /// assert!(abs_difference_0 <= f32::EPSILON);\n    /// assert!(abs_difference_1 <= f32::EPSILON);\n    /// ```\n    #[doc(alias = \"sincos\")]\n    #[rustc_allow_incoherent_impl]\n    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n    #[inline]\n    pub fn sin_cos(self) -> (f32, f32) {\n        (self.sin(), self.cos())\n    }\n\n    /// Returns `e^(self) - 1` in a way that is accurate even if the\n    /// number is close to zero.\n    ///\n    /// # Unspecified precision\n    ///\n    /// The precision of this function is non-deterministic. This means it varies by platform, Rust version, and\n    /// can even differ within the same execution from one invocation to the next.\n    /// This function currently corresponds to the `expm1f` from libc on Unix\n    /// and Windows. Note that this might change in the future.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let x = 1e-8_f32;\n    ///\n    /// // for very small x, e^x is approximately 1 + x + x^2 / 2\n    /// let approx = x + x * x / 2.0;\n    /// let abs_difference = (x.exp_m1() - approx).abs();\n    ///\n    /// assert!(abs_difference < 1e-10);\n    /// ```\n    #[rustc_allow_incoherent_impl]\n    #[must_use = \"method returns a new number and does not mutate the original value\"]\n    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n    #[inline]\n    pub fn exp_m1(self) -> f32 {\n        unsafe { cmath::expm1f(self) }\n    }\n\n    /// Returns `ln(1+n)` (natural logarithm) more accurately than if\n    /// the operations were performed separately.\n    ///\n    /// # Unspecified precision\n    ///\n    /// The precision of this function is non-deterministic. This means it varies by platform, Rust version, and\n    /// can even differ within the same execution from one invocation to the next.\n    /// This function currently corresponds to the `log1pf` from libc on Unix\n    /// and Windows. Note that this might change in the future.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let x = 1e-8_f32;\n    ///\n    /// // for very small x, ln(1 + x) is approximately x - x^2 / 2\n    /// let approx = x - x * x / 2.0;\n    /// let abs_difference = (x.ln_1p() - approx).abs();\n    ///\n    /// assert!(abs_difference < 1e-10);\n    /// ```\n    #[doc(alias = \"log1p\")]\n    #[rustc_allow_incoherent_impl]\n    #[must_use = \"method returns a new number and does not mutate the original value\"]\n    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n    #[inline]\n    pub fn ln_1p(self) -> f32 {\n        unsafe { cmath::log1pf(self) }\n    }\n\n    /// Hyperbolic sine function.\n    ///\n    /// # Unspecified precision\n    ///\n    /// The precision of this function is non-deterministic. This means it varies by platform, Rust version, and\n    /// can even differ within the same execution from one invocation to the next.\n    /// This function currently corresponds to the `sinhf` from libc on Unix\n    /// and Windows. Note that this might change in the future.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let e = std::f32::consts::E;\n    /// let x = 1.0f32;\n    ///\n    /// let f = x.sinh();\n    /// // Solving sinh() at 1 gives `(e^2-1)/(2e)`\n    /// let g = ((e * e) - 1.0) / (2.0 * e);\n    /// let abs_difference = (f - g).abs();\n    ///\n    /// assert!(abs_difference <= f32::EPSILON);\n    /// ```\n    #[rustc_allow_incoherent_impl]\n    #[must_use = \"method returns a new number and does not mutate the original value\"]\n    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n    #[inline]\n    pub fn sinh(self) -> f32 {\n        unsafe { cmath::sinhf(self) }\n    }\n\n    /// Hyperbolic cosine function.\n    ///\n    /// # Unspecified precision\n    ///\n    /// The precision of this function is non-deterministic. This means it varies by platform, Rust version, and\n    /// can even differ within the same execution from one invocation to the next.\n    /// This function currently corresponds to the `coshf` from libc on Unix\n    /// and Windows. Note that this might change in the future.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let e = std::f32::consts::E;\n    /// let x = 1.0f32;\n    /// let f = x.cosh();\n    /// // Solving cosh() at 1 gives this result\n    /// let g = ((e * e) + 1.0) / (2.0 * e);\n    /// let abs_difference = (f - g).abs();\n    ///\n    /// // Same result\n    /// assert!(abs_difference <= f32::EPSILON);\n    /// ```\n    #[rustc_allow_incoherent_impl]\n    #[must_use = \"method returns a new number and does not mutate the original value\"]\n    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n    #[inline]\n    pub fn cosh(self) -> f32 {\n        unsafe { cmath::coshf(self) }\n    }\n\n    /// Hyperbolic tangent function.\n    ///\n    /// # Unspecified precision\n    ///\n    /// The precision of this function is non-deterministic. This means it varies by platform, Rust version, and\n    /// can even differ within the same execution from one invocation to the next.\n    /// This function currently corresponds to the `tanhf` from libc on Unix\n    /// and Windows. Note that this might change in the future.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let e = std::f32::consts::E;\n    /// let x = 1.0f32;\n    ///\n    /// let f = x.tanh();\n    /// // Solving tanh() at 1 gives `(1 - e^(-2))/(1 + e^(-2))`\n    /// let g = (1.0 - e.powi(-2)) / (1.0 + e.powi(-2));\n    /// let abs_difference = (f - g).abs();\n    ///\n    /// assert!(abs_difference <= f32::EPSILON);\n    /// ```\n    #[rustc_allow_incoherent_impl]\n    #[must_use = \"method returns a new number and does not mutate the original value\"]\n    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n    #[inline]\n    pub fn tanh(self) -> f32 {\n        unsafe { cmath::tanhf(self) }\n    }\n\n    /// Inverse hyperbolic sine function.\n    ///\n    /// # Unspecified precision\n    ///\n    /// The precision of this function is non-deterministic. This means it varies by platform, Rust version, and\n    /// can even differ within the same execution from one invocation to the next.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let x = 1.0f32;\n    /// let f = x.sinh().asinh();\n    ///\n    /// let abs_difference = (f - x).abs();\n    ///\n    /// assert!(abs_difference <= f32::EPSILON);\n    /// ```\n    #[doc(alias = \"arcsinh\")]\n    #[rustc_allow_incoherent_impl]\n    #[must_use = \"method returns a new number and does not mutate the original value\"]\n    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n    #[inline]\n    pub fn asinh(self) -> f32 {\n        let ax = self.abs();\n        let ix = 1.0 / ax;\n        (ax + (ax / (Self::hypot(1.0, ix) + ix))).ln_1p().copysign(self)\n    }\n\n    /// Inverse hyperbolic cosine function.\n    ///\n    /// # Unspecified precision\n    ///\n    /// The precision of this function is non-deterministic. This means it varies by platform, Rust version, and\n    /// can even differ within the same execution from one invocation to the next.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let x = 1.0f32;\n    /// let f = x.cosh().acosh();\n    ///\n    /// let abs_difference = (f - x).abs();\n    ///\n    /// assert!(abs_difference <= f32::EPSILON);\n    /// ```\n    #[doc(alias = \"arccosh\")]\n    #[rustc_allow_incoherent_impl]\n    #[must_use = \"method returns a new number and does not mutate the original value\"]\n    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n    #[inline]\n    pub fn acosh(self) -> f32 {\n        if self < 1.0 {\n            Self::NAN\n        } else {\n            (self + ((self - 1.0).sqrt() * (self + 1.0).sqrt())).ln()\n        }\n    }\n\n    /// Inverse hyperbolic tangent function.\n    ///\n    /// # Unspecified precision\n    ///\n    /// The precision of this function is non-deterministic. This means it varies by platform, Rust version, and\n    /// can even differ within the same execution from one invocation to the next.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let e = std::f32::consts::E;\n    /// let f = e.tanh().atanh();\n    ///\n    /// let abs_difference = (f - e).abs();\n    ///\n    /// assert!(abs_difference <= 1e-5);\n    /// ```\n    #[doc(alias = \"arctanh\")]\n    #[rustc_allow_incoherent_impl]\n    #[must_use = \"method returns a new number and does not mutate the original value\"]\n    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n    #[inline]\n    pub fn atanh(self) -> f32 {\n        0.5 * ((2.0 * self) / (1.0 - self)).ln_1p()\n    }\n\n    /// Gamma function.\n    ///\n    /// # Unspecified precision\n    ///\n    /// The precision of this function is non-deterministic. This means it varies by platform, Rust version, and\n    /// can even differ within the same execution from one invocation to the next.\n    /// This function currently corresponds to the `tgammaf` from libc on Unix\n    /// and Windows. Note that this might change in the future.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// #![feature(float_gamma)]\n    /// let x = 5.0f32;\n    ///\n    /// let abs_difference = (x.gamma() - 24.0).abs();\n    ///\n    /// assert!(abs_difference <= f32::EPSILON);\n    /// ```\n    #[rustc_allow_incoherent_impl]\n    #[must_use = \"method returns a new number and does not mutate the original value\"]\n    #[unstable(feature = \"float_gamma\", issue = \"99842\")]\n    #[inline]\n    pub fn gamma(self) -> f32 {\n        unsafe { cmath::tgammaf(self) }\n    }\n\n    /// Natural logarithm of the absolute value of the gamma function\n    ///\n    /// The integer part of the tuple indicates the sign of the gamma function.\n    ///\n    /// # Unspecified precision\n    ///\n    /// The precision of this function is non-deterministic. This means it varies by platform, Rust version, and\n    /// can even differ within the same execution from one invocation to the next.\n    /// This function currently corresponds to the `lgamma_r` from libc on Unix\n    /// and Windows. Note that this might change in the future.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// #![feature(float_gamma)]\n    /// let x = 2.0f32;\n    ///\n    /// let abs_difference = (x.ln_gamma().0 - 0.0).abs();\n    ///\n    /// assert!(abs_difference <= f32::EPSILON);\n    /// ```\n    #[rustc_allow_incoherent_impl]\n    #[must_use = \"method returns a new number and does not mutate the original value\"]\n    #[unstable(feature = \"float_gamma\", issue = \"99842\")]\n    #[inline]\n    pub fn ln_gamma(self) -> (f32, i32) {\n        let mut signgamp: i32 = 0;\n        let x = unsafe { cmath::lgammaf_r(self, &mut signgamp) };\n        (x, signgamp)\n    }\n}\n\n```",
	"html": "<!DOCTYPE html><html lang=\"en\" data-theme=\"light\"><head><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><meta name=\"generator\" content=\"rustdoc\"><meta name=\"description\" content=\"Source of the Rust file `library/std/src/f32.rs`.\"><title>f32.rs - source</title><script>if(window.location.protocol!==\"file:\")document.head.insertAdjacentHTML(\"beforeend\",\"SourceSerif4-Regular-46f98efaafac5295.ttf.woff2,FiraSans-Regular-018c141bf0843ffd.woff2,FiraSans-Medium-8f9a781e4970d388.woff2,SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2,SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\".split(\",\").map(f=>`<link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin href=\"../../static.files/${f}\">`).join(\"\"))</script><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceSerif4-Regular-46f98efaafac5295.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/FiraSans-Regular-018c141bf0843ffd.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/FiraSans-Medium-8f9a781e4970d388.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\"><link rel=\"stylesheet\" href=\"../../static.files/normalize-76eba96aa4d2e634.css\"><link rel=\"stylesheet\" href=\"../../static.files/rustdoc-dd39b87e5fcfba68.css\"><meta name=\"rustdoc-vars\" data-root-path=\"../../\" data-static-root-path=\"../../static.files/\" data-current-crate=\"std\" data-themes=\"\" data-resource-suffix=\"1.80.0\" data-rustdoc-version=\"1.80.0 (051478957 2024-07-21)\" data-channel=\"1.80.0\" data-search-js=\"search-d52510db62a78183.js\" data-settings-js=\"settings-4313503d2e1961c2.js\"><script src=\"../../static.files/storage-118b08c4c78b968e.js\"></script><script defer=\"\" src=\"../../static.files/src-script-e66d777a5a92e9b2.js\"></script><script defer=\"\" src=\"../../src-files1.80.0.js\"></script><script defer=\"\" src=\"../../static.files/main-20a3ad099b048cf2.js\"></script><noscript><link rel=\"stylesheet\" href=\"../../static.files/noscript-df360f571f6edeae.css\"></noscript><link rel=\"alternate icon\" type=\"image/png\" href=\"../../static.files/favicon-32x32-422f7d1d52889060.png\"><link rel=\"icon\" type=\"image/svg+xml\" href=\"../../static.files/favicon-2c020d218678b618.svg\"></head><body class=\"rustdoc src\"><!--[if lte IE 11]><div class=\"warning\">This old browser is unsupported and will most likely display funky things.</div><![endif]--><nav class=\"sidebar\"><div class=\"src-sidebar-title\"><h2>Files</h2></div><div id=\"src-sidebar\"><details class=\"dir-entry\"><summary>alloc</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>boxed</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/alloc/boxed/thin.rs.html\">thin.rs</a></div></details><details class=\"dir-entry\"><summary>collections</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>binary_heap</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/alloc/collections/binary_heap/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>btree</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>map</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/alloc/collections/btree/map/entry.rs.html\">entry.rs</a></div></details></div><div class=\"files\"><a href=\"../../src/alloc/collections/btree/append.rs.html\">append.rs</a><a href=\"../../src/alloc/collections/btree/borrow.rs.html\">borrow.rs</a><a href=\"../../src/alloc/collections/btree/dedup_sorted_iter.rs.html\">dedup_sorted_iter.rs</a><a href=\"../../src/alloc/collections/btree/fix.rs.html\">fix.rs</a><a href=\"../../src/alloc/collections/btree/map.rs.html\">map.rs</a><a href=\"../../src/alloc/collections/btree/mem.rs.html\">mem.rs</a><a href=\"../../src/alloc/collections/btree/merge_iter.rs.html\">merge_iter.rs</a><a href=\"../../src/alloc/collections/btree/mod.rs.html\">mod.rs</a><a href=\"../../src/alloc/collections/btree/navigate.rs.html\">navigate.rs</a><a href=\"../../src/alloc/collections/btree/node.rs.html\">node.rs</a><a href=\"../../src/alloc/collections/btree/remove.rs.html\">remove.rs</a><a href=\"../../src/alloc/collections/btree/search.rs.html\">search.rs</a><a href=\"../../src/alloc/collections/btree/set.rs.html\">set.rs</a><a href=\"../../src/alloc/collections/btree/set_val.rs.html\">set_val.rs</a><a href=\"../../src/alloc/collections/btree/split.rs.html\">split.rs</a></div></details><details class=\"dir-entry\"><summary>vec_deque</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/alloc/collections/vec_deque/drain.rs.html\">drain.rs</a><a href=\"../../src/alloc/collections/vec_deque/into_iter.rs.html\">into_iter.rs</a><a href=\"../../src/alloc/collections/vec_deque/iter.rs.html\">iter.rs</a><a href=\"../../src/alloc/collections/vec_deque/iter_mut.rs.html\">iter_mut.rs</a><a href=\"../../src/alloc/collections/vec_deque/macros.rs.html\">macros.rs</a><a href=\"../../src/alloc/collections/vec_deque/mod.rs.html\">mod.rs</a><a href=\"../../src/alloc/collections/vec_deque/spec_extend.rs.html\">spec_extend.rs</a><a href=\"../../src/alloc/collections/vec_deque/spec_from_iter.rs.html\">spec_from_iter.rs</a></div></details></div><div class=\"files\"><a href=\"../../src/alloc/collections/linked_list.rs.html\">linked_list.rs</a><a href=\"../../src/alloc/collections/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>ffi</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/alloc/ffi/c_str.rs.html\">c_str.rs</a><a href=\"../../src/alloc/ffi/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>vec</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/alloc/vec/cow.rs.html\">cow.rs</a><a href=\"../../src/alloc/vec/drain.rs.html\">drain.rs</a><a href=\"../../src/alloc/vec/extract_if.rs.html\">extract_if.rs</a><a href=\"../../src/alloc/vec/in_place_collect.rs.html\">in_place_collect.rs</a><a href=\"../../src/alloc/vec/in_place_drop.rs.html\">in_place_drop.rs</a><a href=\"../../src/alloc/vec/into_iter.rs.html\">into_iter.rs</a><a href=\"../../src/alloc/vec/is_zero.rs.html\">is_zero.rs</a><a href=\"../../src/alloc/vec/mod.rs.html\">mod.rs</a><a href=\"../../src/alloc/vec/partial_eq.rs.html\">partial_eq.rs</a><a href=\"../../src/alloc/vec/set_len_on_drop.rs.html\">set_len_on_drop.rs</a><a href=\"../../src/alloc/vec/spec_extend.rs.html\">spec_extend.rs</a><a href=\"../../src/alloc/vec/spec_from_elem.rs.html\">spec_from_elem.rs</a><a href=\"../../src/alloc/vec/spec_from_iter.rs.html\">spec_from_iter.rs</a><a href=\"../../src/alloc/vec/spec_from_iter_nested.rs.html\">spec_from_iter_nested.rs</a><a href=\"../../src/alloc/vec/splice.rs.html\">splice.rs</a></div></details></div><div class=\"files\"><a href=\"../../src/alloc/alloc.rs.html\">alloc.rs</a><a href=\"../../src/alloc/borrow.rs.html\">borrow.rs</a><a href=\"../../src/alloc/boxed.rs.html\">boxed.rs</a><a href=\"../../src/alloc/fmt.rs.html\">fmt.rs</a><a href=\"../../src/alloc/lib.rs.html\">lib.rs</a><a href=\"../../src/alloc/macros.rs.html\">macros.rs</a><a href=\"../../src/alloc/raw_vec.rs.html\">raw_vec.rs</a><a href=\"../../src/alloc/rc.rs.html\">rc.rs</a><a href=\"../../src/alloc/slice.rs.html\">slice.rs</a><a href=\"../../src/alloc/str.rs.html\">str.rs</a><a href=\"../../src/alloc/string.rs.html\">string.rs</a><a href=\"../../src/alloc/sync.rs.html\">sync.rs</a><a href=\"../../src/alloc/task.rs.html\">task.rs</a></div></details><details class=\"dir-entry\"><summary>core</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>alloc</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/core/alloc/global.rs.html\">global.rs</a><a href=\"../../src/core/alloc/layout.rs.html\">layout.rs</a><a href=\"../../src/core/alloc/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>array</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/core/array/ascii.rs.html\">ascii.rs</a><a href=\"../../src/core/array/drain.rs.html\">drain.rs</a><a href=\"../../src/core/array/equality.rs.html\">equality.rs</a><a href=\"../../src/core/array/iter.rs.html\">iter.rs</a><a href=\"../../src/core/array/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>ascii</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/core/ascii/ascii_char.rs.html\">ascii_char.rs</a></div></details><details class=\"dir-entry\"><summary>async_iter</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/core/async_iter/async_iter.rs.html\">async_iter.rs</a><a href=\"../../src/core/async_iter/from_iter.rs.html\">from_iter.rs</a><a href=\"../../src/core/async_iter/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>cell</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/core/cell/lazy.rs.html\">lazy.rs</a><a href=\"../../src/core/cell/once.rs.html\">once.rs</a></div></details><details class=\"dir-entry\"><summary>char</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/core/char/convert.rs.html\">convert.rs</a><a href=\"../../src/core/char/decode.rs.html\">decode.rs</a><a href=\"../../src/core/char/methods.rs.html\">methods.rs</a><a href=\"../../src/core/char/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>cmp</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/core/cmp/bytewise.rs.html\">bytewise.rs</a></div></details><details class=\"dir-entry\"><summary>convert</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/core/convert/mod.rs.html\">mod.rs</a><a href=\"../../src/core/convert/num.rs.html\">num.rs</a></div></details><details class=\"dir-entry\"><summary>ffi</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/core/ffi/c_str.rs.html\">c_str.rs</a><a href=\"../../src/core/ffi/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>fmt</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/core/fmt/builders.rs.html\">builders.rs</a><a href=\"../../src/core/fmt/float.rs.html\">float.rs</a><a href=\"../../src/core/fmt/mod.rs.html\">mod.rs</a><a href=\"../../src/core/fmt/num.rs.html\">num.rs</a><a href=\"../../src/core/fmt/rt.rs.html\">rt.rs</a></div></details><details class=\"dir-entry\"><summary>future</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/core/future/async_drop.rs.html\">async_drop.rs</a><a href=\"../../src/core/future/future.rs.html\">future.rs</a><a href=\"../../src/core/future/into_future.rs.html\">into_future.rs</a><a href=\"../../src/core/future/join.rs.html\">join.rs</a><a href=\"../../src/core/future/mod.rs.html\">mod.rs</a><a href=\"../../src/core/future/pending.rs.html\">pending.rs</a><a href=\"../../src/core/future/poll_fn.rs.html\">poll_fn.rs</a><a href=\"../../src/core/future/ready.rs.html\">ready.rs</a></div></details><details class=\"dir-entry\"><summary>hash</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/core/hash/mod.rs.html\">mod.rs</a><a href=\"../../src/core/hash/sip.rs.html\">sip.rs</a></div></details><details class=\"dir-entry\"><summary>intrinsics</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/core/intrinsics/mir.rs.html\">mir.rs</a><a href=\"../../src/core/intrinsics/simd.rs.html\">simd.rs</a></div></details><details class=\"dir-entry\"><summary>io</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/core/io/borrowed_buf.rs.html\">borrowed_buf.rs</a><a href=\"../../src/core/io/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>iter</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>adapters</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/core/iter/adapters/array_chunks.rs.html\">array_chunks.rs</a><a href=\"../../src/core/iter/adapters/by_ref_sized.rs.html\">by_ref_sized.rs</a><a href=\"../../src/core/iter/adapters/chain.rs.html\">chain.rs</a><a href=\"../../src/core/iter/adapters/cloned.rs.html\">cloned.rs</a><a href=\"../../src/core/iter/adapters/copied.rs.html\">copied.rs</a><a href=\"../../src/core/iter/adapters/cycle.rs.html\">cycle.rs</a><a href=\"../../src/core/iter/adapters/enumerate.rs.html\">enumerate.rs</a><a href=\"../../src/core/iter/adapters/filter.rs.html\">filter.rs</a><a href=\"../../src/core/iter/adapters/filter_map.rs.html\">filter_map.rs</a><a href=\"../../src/core/iter/adapters/flatten.rs.html\">flatten.rs</a><a href=\"../../src/core/iter/adapters/fuse.rs.html\">fuse.rs</a><a href=\"../../src/core/iter/adapters/inspect.rs.html\">inspect.rs</a><a href=\"../../src/core/iter/adapters/intersperse.rs.html\">intersperse.rs</a><a href=\"../../src/core/iter/adapters/map.rs.html\">map.rs</a><a href=\"../../src/core/iter/adapters/map_while.rs.html\">map_while.rs</a><a href=\"../../src/core/iter/adapters/map_windows.rs.html\">map_windows.rs</a><a href=\"../../src/core/iter/adapters/mod.rs.html\">mod.rs</a><a href=\"../../src/core/iter/adapters/peekable.rs.html\">peekable.rs</a><a href=\"../../src/core/iter/adapters/rev.rs.html\">rev.rs</a><a href=\"../../src/core/iter/adapters/scan.rs.html\">scan.rs</a><a href=\"../../src/core/iter/adapters/skip.rs.html\">skip.rs</a><a href=\"../../src/core/iter/adapters/skip_while.rs.html\">skip_while.rs</a><a href=\"../../src/core/iter/adapters/step_by.rs.html\">step_by.rs</a><a href=\"../../src/core/iter/adapters/take.rs.html\">take.rs</a><a href=\"../../src/core/iter/adapters/take_while.rs.html\">take_while.rs</a><a href=\"../../src/core/iter/adapters/zip.rs.html\">zip.rs</a></div></details><details class=\"dir-entry\"><summary>sources</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/core/iter/sources/empty.rs.html\">empty.rs</a><a href=\"../../src/core/iter/sources/from_coroutine.rs.html\">from_coroutine.rs</a><a href=\"../../src/core/iter/sources/from_fn.rs.html\">from_fn.rs</a><a href=\"../../src/core/iter/sources/once.rs.html\">once.rs</a><a href=\"../../src/core/iter/sources/once_with.rs.html\">once_with.rs</a><a href=\"../../src/core/iter/sources/repeat.rs.html\">repeat.rs</a><a href=\"../../src/core/iter/sources/repeat_n.rs.html\">repeat_n.rs</a><a href=\"../../src/core/iter/sources/repeat_with.rs.html\">repeat_with.rs</a><a href=\"../../src/core/iter/sources/successors.rs.html\">successors.rs</a></div></details><details class=\"dir-entry\"><summary>traits</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/core/iter/traits/accum.rs.html\">accum.rs</a><a href=\"../../src/core/iter/traits/collect.rs.html\">collect.rs</a><a href=\"../../src/core/iter/traits/double_ended.rs.html\">double_ended.rs</a><a href=\"../../src/core/iter/traits/exact_size.rs.html\">exact_size.rs</a><a href=\"../../src/core/iter/traits/iterator.rs.html\">iterator.rs</a><a href=\"../../src/core/iter/traits/marker.rs.html\">marker.rs</a><a href=\"../../src/core/iter/traits/mod.rs.html\">mod.rs</a><a href=\"../../src/core/iter/traits/unchecked_iterator.rs.html\">unchecked_iterator.rs</a></div></details></div><div class=\"files\"><a href=\"../../src/core/iter/mod.rs.html\">mod.rs</a><a href=\"../../src/core/iter/range.rs.html\">range.rs</a><a href=\"../../src/core/iter/sources.rs.html\">sources.rs</a></div></details><details class=\"dir-entry\"><summary>macros</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/core/macros/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>mem</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/core/mem/manually_drop.rs.html\">manually_drop.rs</a><a href=\"../../src/core/mem/maybe_uninit.rs.html\">maybe_uninit.rs</a><a href=\"../../src/core/mem/mod.rs.html\">mod.rs</a><a href=\"../../src/core/mem/transmutability.rs.html\">transmutability.rs</a></div></details><details class=\"dir-entry\"><summary>net</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/core/net/display_buffer.rs.html\">display_buffer.rs</a><a href=\"../../src/core/net/ip_addr.rs.html\">ip_addr.rs</a><a href=\"../../src/core/net/mod.rs.html\">mod.rs</a><a href=\"../../src/core/net/parser.rs.html\">parser.rs</a><a href=\"../../src/core/net/socket_addr.rs.html\">socket_addr.rs</a></div></details><details class=\"dir-entry\"><summary>num</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>dec2flt</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/core/num/dec2flt/common.rs.html\">common.rs</a><a href=\"../../src/core/num/dec2flt/decimal.rs.html\">decimal.rs</a><a href=\"../../src/core/num/dec2flt/float.rs.html\">float.rs</a><a href=\"../../src/core/num/dec2flt/fpu.rs.html\">fpu.rs</a><a href=\"../../src/core/num/dec2flt/lemire.rs.html\">lemire.rs</a><a href=\"../../src/core/num/dec2flt/mod.rs.html\">mod.rs</a><a href=\"../../src/core/num/dec2flt/number.rs.html\">number.rs</a><a href=\"../../src/core/num/dec2flt/parse.rs.html\">parse.rs</a><a href=\"../../src/core/num/dec2flt/slow.rs.html\">slow.rs</a><a href=\"../../src/core/num/dec2flt/table.rs.html\">table.rs</a></div></details><details class=\"dir-entry\"><summary>flt2dec</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>strategy</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/core/num/flt2dec/strategy/dragon.rs.html\">dragon.rs</a><a href=\"../../src/core/num/flt2dec/strategy/grisu.rs.html\">grisu.rs</a></div></details></div><div class=\"files\"><a href=\"../../src/core/num/flt2dec/decoder.rs.html\">decoder.rs</a><a href=\"../../src/core/num/flt2dec/estimator.rs.html\">estimator.rs</a><a href=\"../../src/core/num/flt2dec/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>shells</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/core/num/shells/i128.rs.html\">i128.rs</a><a href=\"../../src/core/num/shells/i16.rs.html\">i16.rs</a><a href=\"../../src/core/num/shells/i32.rs.html\">i32.rs</a><a href=\"../../src/core/num/shells/i64.rs.html\">i64.rs</a><a href=\"../../src/core/num/shells/i8.rs.html\">i8.rs</a><a href=\"../../src/core/num/shells/int_macros.rs.html\">int_macros.rs</a><a href=\"../../src/core/num/shells/isize.rs.html\">isize.rs</a><a href=\"../../src/core/num/shells/u128.rs.html\">u128.rs</a><a href=\"../../src/core/num/shells/u16.rs.html\">u16.rs</a><a href=\"../../src/core/num/shells/u32.rs.html\">u32.rs</a><a href=\"../../src/core/num/shells/u64.rs.html\">u64.rs</a><a href=\"../../src/core/num/shells/u8.rs.html\">u8.rs</a><a href=\"../../src/core/num/shells/usize.rs.html\">usize.rs</a></div></details></div><div class=\"files\"><a href=\"../../src/core/num/bignum.rs.html\">bignum.rs</a><a href=\"../../src/core/num/diy_float.rs.html\">diy_float.rs</a><a href=\"../../src/core/num/error.rs.html\">error.rs</a><a href=\"../../src/core/num/f128.rs.html\">f128.rs</a><a href=\"../../src/core/num/f16.rs.html\">f16.rs</a><a href=\"../../src/core/num/f32.rs.html\">f32.rs</a><a href=\"../../src/core/num/f64.rs.html\">f64.rs</a><a href=\"../../src/core/num/fmt.rs.html\">fmt.rs</a><a href=\"../../src/core/num/int_log10.rs.html\">int_log10.rs</a><a href=\"../../src/core/num/int_macros.rs.html\">int_macros.rs</a><a href=\"../../src/core/num/mod.rs.html\">mod.rs</a><a href=\"../../src/core/num/nonzero.rs.html\">nonzero.rs</a><a href=\"../../src/core/num/overflow_panic.rs.html\">overflow_panic.rs</a><a href=\"../../src/core/num/saturating.rs.html\">saturating.rs</a><a href=\"../../src/core/num/uint_macros.rs.html\">uint_macros.rs</a><a href=\"../../src/core/num/wrapping.rs.html\">wrapping.rs</a></div></details><details class=\"dir-entry\"><summary>ops</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/core/ops/arith.rs.html\">arith.rs</a><a href=\"../../src/core/ops/async_function.rs.html\">async_function.rs</a><a href=\"../../src/core/ops/bit.rs.html\">bit.rs</a><a href=\"../../src/core/ops/control_flow.rs.html\">control_flow.rs</a><a href=\"../../src/core/ops/coroutine.rs.html\">coroutine.rs</a><a href=\"../../src/core/ops/deref.rs.html\">deref.rs</a><a href=\"../../src/core/ops/drop.rs.html\">drop.rs</a><a href=\"../../src/core/ops/function.rs.html\">function.rs</a><a href=\"../../src/core/ops/index.rs.html\">index.rs</a><a href=\"../../src/core/ops/index_range.rs.html\">index_range.rs</a><a href=\"../../src/core/ops/mod.rs.html\">mod.rs</a><a href=\"../../src/core/ops/range.rs.html\">range.rs</a><a href=\"../../src/core/ops/try_trait.rs.html\">try_trait.rs</a><a href=\"../../src/core/ops/unsize.rs.html\">unsize.rs</a></div></details><details class=\"dir-entry\"><summary>panic</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/core/panic/location.rs.html\">location.rs</a><a href=\"../../src/core/panic/panic_info.rs.html\">panic_info.rs</a><a href=\"../../src/core/panic/unwind_safe.rs.html\">unwind_safe.rs</a></div></details><details class=\"dir-entry\"><summary>portable-simd</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>crates</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>core_simd</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>src</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>masks</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/core/portable-simd/crates/core_simd/src/masks/full_masks.rs.html\">full_masks.rs</a></div></details><details class=\"dir-entry\"><summary>ops</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/core/portable-simd/crates/core_simd/src/ops/assign.rs.html\">assign.rs</a><a href=\"../../src/core/portable-simd/crates/core_simd/src/ops/deref.rs.html\">deref.rs</a><a href=\"../../src/core/portable-simd/crates/core_simd/src/ops/shift_scalar.rs.html\">shift_scalar.rs</a><a href=\"../../src/core/portable-simd/crates/core_simd/src/ops/unary.rs.html\">unary.rs</a></div></details><details class=\"dir-entry\"><summary>simd</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>cmp</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/core/portable-simd/crates/core_simd/src/simd/cmp/eq.rs.html\">eq.rs</a><a href=\"../../src/core/portable-simd/crates/core_simd/src/simd/cmp/ord.rs.html\">ord.rs</a></div></details><details class=\"dir-entry\"><summary>num</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/core/portable-simd/crates/core_simd/src/simd/num/float.rs.html\">float.rs</a><a href=\"../../src/core/portable-simd/crates/core_simd/src/simd/num/int.rs.html\">int.rs</a><a href=\"../../src/core/portable-simd/crates/core_simd/src/simd/num/uint.rs.html\">uint.rs</a></div></details><details class=\"dir-entry\"><summary>ptr</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/core/portable-simd/crates/core_simd/src/simd/ptr/const_ptr.rs.html\">const_ptr.rs</a><a href=\"../../src/core/portable-simd/crates/core_simd/src/simd/ptr/mut_ptr.rs.html\">mut_ptr.rs</a></div></details></div><div class=\"files\"><a href=\"../../src/core/portable-simd/crates/core_simd/src/simd/cmp.rs.html\">cmp.rs</a><a href=\"../../src/core/portable-simd/crates/core_simd/src/simd/num.rs.html\">num.rs</a><a href=\"../../src/core/portable-simd/crates/core_simd/src/simd/prelude.rs.html\">prelude.rs</a><a href=\"../../src/core/portable-simd/crates/core_simd/src/simd/ptr.rs.html\">ptr.rs</a></div></details><details class=\"dir-entry\"><summary>vendor</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/core/portable-simd/crates/core_simd/src/vendor/x86.rs.html\">x86.rs</a></div></details></div><div class=\"files\"><a href=\"../../src/core/portable-simd/crates/core_simd/src/alias.rs.html\">alias.rs</a><a href=\"../../src/core/portable-simd/crates/core_simd/src/cast.rs.html\">cast.rs</a><a href=\"../../src/core/portable-simd/crates/core_simd/src/fmt.rs.html\">fmt.rs</a><a href=\"../../src/core/portable-simd/crates/core_simd/src/iter.rs.html\">iter.rs</a><a href=\"../../src/core/portable-simd/crates/core_simd/src/lane_count.rs.html\">lane_count.rs</a><a href=\"../../src/core/portable-simd/crates/core_simd/src/masks.rs.html\">masks.rs</a><a href=\"../../src/core/portable-simd/crates/core_simd/src/mod.rs.html\">mod.rs</a><a href=\"../../src/core/portable-simd/crates/core_simd/src/ops.rs.html\">ops.rs</a><a href=\"../../src/core/portable-simd/crates/core_simd/src/select.rs.html\">select.rs</a><a href=\"../../src/core/portable-simd/crates/core_simd/src/swizzle.rs.html\">swizzle.rs</a><a href=\"../../src/core/portable-simd/crates/core_simd/src/swizzle_dyn.rs.html\">swizzle_dyn.rs</a><a href=\"../../src/core/portable-simd/crates/core_simd/src/to_bytes.rs.html\">to_bytes.rs</a><a href=\"../../src/core/portable-simd/crates/core_simd/src/vector.rs.html\">vector.rs</a><a href=\"../../src/core/portable-simd/crates/core_simd/src/vendor.rs.html\">vendor.rs</a></div></details></div><div class=\"files\"></div></details></div><div class=\"files\"></div></details></div><div class=\"files\"></div></details><details class=\"dir-entry\"><summary>prelude</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/core/prelude/common.rs.html\">common.rs</a><a href=\"../../src/core/prelude/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>ptr</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/core/ptr/alignment.rs.html\">alignment.rs</a><a href=\"../../src/core/ptr/const_ptr.rs.html\">const_ptr.rs</a><a href=\"../../src/core/ptr/metadata.rs.html\">metadata.rs</a><a href=\"../../src/core/ptr/mod.rs.html\">mod.rs</a><a href=\"../../src/core/ptr/mut_ptr.rs.html\">mut_ptr.rs</a><a href=\"../../src/core/ptr/non_null.rs.html\">non_null.rs</a><a href=\"../../src/core/ptr/unique.rs.html\">unique.rs</a></div></details><details class=\"dir-entry\"><summary>slice</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>iter</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/core/slice/iter/macros.rs.html\">macros.rs</a></div></details></div><div class=\"files\"><a href=\"../../src/core/slice/ascii.rs.html\">ascii.rs</a><a href=\"../../src/core/slice/cmp.rs.html\">cmp.rs</a><a href=\"../../src/core/slice/index.rs.html\">index.rs</a><a href=\"../../src/core/slice/iter.rs.html\">iter.rs</a><a href=\"../../src/core/slice/memchr.rs.html\">memchr.rs</a><a href=\"../../src/core/slice/mod.rs.html\">mod.rs</a><a href=\"../../src/core/slice/raw.rs.html\">raw.rs</a><a href=\"../../src/core/slice/rotate.rs.html\">rotate.rs</a><a href=\"../../src/core/slice/select.rs.html\">select.rs</a><a href=\"../../src/core/slice/sort.rs.html\">sort.rs</a><a href=\"../../src/core/slice/specialize.rs.html\">specialize.rs</a></div></details><details class=\"dir-entry\"><summary>stdarch</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>crates</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>core_arch</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>src</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>aarch64</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>neon</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/core/stdarch/crates/core_arch/src/aarch64/neon/generated.rs.html\">generated.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/aarch64/neon/mod.rs.html\">mod.rs</a></div></details></div><div class=\"files\"><a href=\"../../src/core/stdarch/crates/core_arch/src/aarch64/mod.rs.html\">mod.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/aarch64/prefetch.rs.html\">prefetch.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/aarch64/tme.rs.html\">tme.rs</a></div></details><details class=\"dir-entry\"><summary>arm</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/core/stdarch/crates/core_arch/src/arm/dsp.rs.html\">dsp.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/arm/mod.rs.html\">mod.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/arm/neon.rs.html\">neon.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/arm/sat.rs.html\">sat.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/arm/simd32.rs.html\">simd32.rs</a></div></details><details class=\"dir-entry\"><summary>arm_shared</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>barrier</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/core/stdarch/crates/core_arch/src/arm_shared/barrier/cp15.rs.html\">cp15.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/arm_shared/barrier/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>neon</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/core/stdarch/crates/core_arch/src/arm_shared/neon/generated.rs.html\">generated.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/arm_shared/neon/mod.rs.html\">mod.rs</a></div></details></div><div class=\"files\"><a href=\"../../src/core/stdarch/crates/core_arch/src/arm_shared/crc.rs.html\">crc.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/arm_shared/crypto.rs.html\">crypto.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/arm_shared/hints.rs.html\">hints.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/arm_shared/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>loongarch64</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>lasx</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/core/stdarch/crates/core_arch/src/loongarch64/lasx/generated.rs.html\">generated.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/loongarch64/lasx/mod.rs.html\">mod.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/loongarch64/lasx/types.rs.html\">types.rs</a></div></details><details class=\"dir-entry\"><summary>lsx</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/core/stdarch/crates/core_arch/src/loongarch64/lsx/generated.rs.html\">generated.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/loongarch64/lsx/mod.rs.html\">mod.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/loongarch64/lsx/types.rs.html\">types.rs</a></div></details></div><div class=\"files\"><a href=\"../../src/core/stdarch/crates/core_arch/src/loongarch64/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>mips</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/core/stdarch/crates/core_arch/src/mips/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>nvptx</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/core/stdarch/crates/core_arch/src/nvptx/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>powerpc</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/core/stdarch/crates/core_arch/src/powerpc/altivec.rs.html\">altivec.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/powerpc/macros.rs.html\">macros.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/powerpc/mod.rs.html\">mod.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/powerpc/vsx.rs.html\">vsx.rs</a></div></details><details class=\"dir-entry\"><summary>powerpc64</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/core/stdarch/crates/core_arch/src/powerpc64/mod.rs.html\">mod.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/powerpc64/vsx.rs.html\">vsx.rs</a></div></details><details class=\"dir-entry\"><summary>riscv32</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/core/stdarch/crates/core_arch/src/riscv32/mod.rs.html\">mod.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/riscv32/zk.rs.html\">zk.rs</a></div></details><details class=\"dir-entry\"><summary>riscv64</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/core/stdarch/crates/core_arch/src/riscv64/mod.rs.html\">mod.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/riscv64/zk.rs.html\">zk.rs</a></div></details><details class=\"dir-entry\"><summary>riscv_shared</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/core/stdarch/crates/core_arch/src/riscv_shared/mod.rs.html\">mod.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/riscv_shared/p.rs.html\">p.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/riscv_shared/zb.rs.html\">zb.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/riscv_shared/zk.rs.html\">zk.rs</a></div></details><details class=\"dir-entry\"><summary>wasm32</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/core/stdarch/crates/core_arch/src/wasm32/atomic.rs.html\">atomic.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/wasm32/memory.rs.html\">memory.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/wasm32/mod.rs.html\">mod.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/wasm32/relaxed_simd.rs.html\">relaxed_simd.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/wasm32/simd128.rs.html\">simd128.rs</a></div></details><details class=\"dir-entry\"><summary>x86</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/core/stdarch/crates/core_arch/src/x86/abm.rs.html\">abm.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/x86/adx.rs.html\">adx.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/x86/aes.rs.html\">aes.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/x86/avx.rs.html\">avx.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/x86/avx2.rs.html\">avx2.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/x86/avx512bf16.rs.html\">avx512bf16.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/x86/avx512bitalg.rs.html\">avx512bitalg.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/x86/avx512bw.rs.html\">avx512bw.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/x86/avx512cd.rs.html\">avx512cd.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/x86/avx512f.rs.html\">avx512f.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/x86/avx512ifma.rs.html\">avx512ifma.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/x86/avx512vbmi.rs.html\">avx512vbmi.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/x86/avx512vbmi2.rs.html\">avx512vbmi2.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/x86/avx512vnni.rs.html\">avx512vnni.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs.html\">avx512vpopcntdq.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/x86/bmi1.rs.html\">bmi1.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/x86/bmi2.rs.html\">bmi2.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/x86/bswap.rs.html\">bswap.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/x86/bt.rs.html\">bt.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/x86/cpuid.rs.html\">cpuid.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/x86/eflags.rs.html\">eflags.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/x86/f16c.rs.html\">f16c.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/x86/fma.rs.html\">fma.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/x86/fxsr.rs.html\">fxsr.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/x86/gfni.rs.html\">gfni.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/x86/macros.rs.html\">macros.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/x86/mod.rs.html\">mod.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/x86/pclmulqdq.rs.html\">pclmulqdq.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/x86/rdrand.rs.html\">rdrand.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/x86/rdtsc.rs.html\">rdtsc.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/x86/rtm.rs.html\">rtm.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/x86/sha.rs.html\">sha.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/x86/sse.rs.html\">sse.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/x86/sse2.rs.html\">sse2.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/x86/sse3.rs.html\">sse3.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/x86/sse41.rs.html\">sse41.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/x86/sse42.rs.html\">sse42.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/x86/sse4a.rs.html\">sse4a.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/x86/ssse3.rs.html\">ssse3.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/x86/tbm.rs.html\">tbm.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/x86/vaes.rs.html\">vaes.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/x86/vpclmulqdq.rs.html\">vpclmulqdq.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/x86/xsave.rs.html\">xsave.rs</a></div></details><details class=\"dir-entry\"><summary>x86_64</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/core/stdarch/crates/core_arch/src/x86_64/abm.rs.html\">abm.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/x86_64/adx.rs.html\">adx.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/x86_64/avx.rs.html\">avx.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/x86_64/avx2.rs.html\">avx2.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/x86_64/avx512f.rs.html\">avx512f.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/x86_64/bmi.rs.html\">bmi.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/x86_64/bmi2.rs.html\">bmi2.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/x86_64/bswap.rs.html\">bswap.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/x86_64/bt.rs.html\">bt.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/x86_64/cmpxchg16b.rs.html\">cmpxchg16b.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/x86_64/fxsr.rs.html\">fxsr.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/x86_64/macros.rs.html\">macros.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/x86_64/mod.rs.html\">mod.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/x86_64/rdrand.rs.html\">rdrand.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/x86_64/sse.rs.html\">sse.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/x86_64/sse2.rs.html\">sse2.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/x86_64/sse41.rs.html\">sse41.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/x86_64/sse42.rs.html\">sse42.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/x86_64/xsave.rs.html\">xsave.rs</a></div></details></div><div class=\"files\"><a href=\"../../src/core/stdarch/crates/core_arch/src/macros.rs.html\">macros.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/mod.rs.html\">mod.rs</a><a href=\"../../src/core/stdarch/crates/core_arch/src/simd.rs.html\">simd.rs</a></div></details></div><div class=\"files\"></div></details></div><div class=\"files\"></div></details></div><div class=\"files\"></div></details><details class=\"dir-entry\"><summary>str</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/core/str/converts.rs.html\">converts.rs</a><a href=\"../../src/core/str/count.rs.html\">count.rs</a><a href=\"../../src/core/str/error.rs.html\">error.rs</a><a href=\"../../src/core/str/iter.rs.html\">iter.rs</a><a href=\"../../src/core/str/lossy.rs.html\">lossy.rs</a><a href=\"../../src/core/str/mod.rs.html\">mod.rs</a><a href=\"../../src/core/str/pattern.rs.html\">pattern.rs</a><a href=\"../../src/core/str/traits.rs.html\">traits.rs</a><a href=\"../../src/core/str/validations.rs.html\">validations.rs</a></div></details><details class=\"dir-entry\"><summary>sync</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/core/sync/atomic.rs.html\">atomic.rs</a><a href=\"../../src/core/sync/exclusive.rs.html\">exclusive.rs</a><a href=\"../../src/core/sync/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>task</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/core/task/mod.rs.html\">mod.rs</a><a href=\"../../src/core/task/poll.rs.html\">poll.rs</a><a href=\"../../src/core/task/ready.rs.html\">ready.rs</a><a href=\"../../src/core/task/wake.rs.html\">wake.rs</a></div></details><details class=\"dir-entry\"><summary>unicode</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/core/unicode/mod.rs.html\">mod.rs</a><a href=\"../../src/core/unicode/printable.rs.html\">printable.rs</a><a href=\"../../src/core/unicode/unicode_data.rs.html\">unicode_data.rs</a></div></details></div><div class=\"files\"><a href=\"../../src/core/any.rs.html\">any.rs</a><a href=\"../../src/core/arch.rs.html\">arch.rs</a><a href=\"../../src/core/ascii.rs.html\">ascii.rs</a><a href=\"../../src/core/asserting.rs.html\">asserting.rs</a><a href=\"../../src/core/bool.rs.html\">bool.rs</a><a href=\"../../src/core/borrow.rs.html\">borrow.rs</a><a href=\"../../src/core/cell.rs.html\">cell.rs</a><a href=\"../../src/core/clone.rs.html\">clone.rs</a><a href=\"../../src/core/cmp.rs.html\">cmp.rs</a><a href=\"../../src/core/default.rs.html\">default.rs</a><a href=\"../../src/core/error.rs.html\">error.rs</a><a href=\"../../src/core/escape.rs.html\">escape.rs</a><a href=\"../../src/core/hint.rs.html\">hint.rs</a><a href=\"../../src/core/internal_macros.rs.html\">internal_macros.rs</a><a href=\"../../src/core/intrinsics.rs.html\">intrinsics.rs</a><a href=\"../../src/core/lib.rs.html\">lib.rs</a><a href=\"../../src/core/marker.rs.html\">marker.rs</a><a href=\"../../src/core/option.rs.html\">option.rs</a><a href=\"../../src/core/panic.rs.html\">panic.rs</a><a href=\"../../src/core/panicking.rs.html\">panicking.rs</a><a href=\"../../src/core/pat.rs.html\">pat.rs</a><a href=\"../../src/core/pin.rs.html\">pin.rs</a><a href=\"../../src/core/primitive.rs.html\">primitive.rs</a><a href=\"../../src/core/primitive_docs.rs.html\">primitive_docs.rs</a><a href=\"../../src/core/result.rs.html\">result.rs</a><a href=\"../../src/core/time.rs.html\">time.rs</a><a href=\"../../src/core/tuple.rs.html\">tuple.rs</a><a href=\"../../src/core/ub_checks.rs.html\">ub_checks.rs</a><a href=\"../../src/core/unit.rs.html\">unit.rs</a></div></details><details class=\"dir-entry\"><summary>proc_macro</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>bridge</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/proc_macro/bridge/arena.rs.html\">arena.rs</a><a href=\"../../src/proc_macro/bridge/buffer.rs.html\">buffer.rs</a><a href=\"../../src/proc_macro/bridge/client.rs.html\">client.rs</a><a href=\"../../src/proc_macro/bridge/closure.rs.html\">closure.rs</a><a href=\"../../src/proc_macro/bridge/fxhash.rs.html\">fxhash.rs</a><a href=\"../../src/proc_macro/bridge/handle.rs.html\">handle.rs</a><a href=\"../../src/proc_macro/bridge/mod.rs.html\">mod.rs</a><a href=\"../../src/proc_macro/bridge/rpc.rs.html\">rpc.rs</a><a href=\"../../src/proc_macro/bridge/selfless_reify.rs.html\">selfless_reify.rs</a><a href=\"../../src/proc_macro/bridge/server.rs.html\">server.rs</a><a href=\"../../src/proc_macro/bridge/symbol.rs.html\">symbol.rs</a></div></details></div><div class=\"files\"><a href=\"../../src/proc_macro/diagnostic.rs.html\">diagnostic.rs</a><a href=\"../../src/proc_macro/lib.rs.html\">lib.rs</a><a href=\"../../src/proc_macro/quote.rs.html\">quote.rs</a></div></details><details class=\"dir-entry\" open=\"\"><summary>std</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>backtrace</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>src</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>backtrace</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/std/backtrace/src/backtrace/libunwind.rs.html\">libunwind.rs</a><a href=\"../../src/std/backtrace/src/backtrace/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>symbolize</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>gimli</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/std/backtrace/src/symbolize/gimli/elf.rs.html\">elf.rs</a><a href=\"../../src/std/backtrace/src/symbolize/gimli/libs_dl_iterate_phdr.rs.html\">libs_dl_iterate_phdr.rs</a><a href=\"../../src/std/backtrace/src/symbolize/gimli/mmap_unix.rs.html\">mmap_unix.rs</a><a href=\"../../src/std/backtrace/src/symbolize/gimli/parse_running_mmaps_unix.rs.html\">parse_running_mmaps_unix.rs</a><a href=\"../../src/std/backtrace/src/symbolize/gimli/stash.rs.html\">stash.rs</a></div></details></div><div class=\"files\"><a href=\"../../src/std/backtrace/src/symbolize/gimli.rs.html\">gimli.rs</a><a href=\"../../src/std/backtrace/src/symbolize/mod.rs.html\">mod.rs</a></div></details></div><div class=\"files\"><a href=\"../../src/std/backtrace/src/lib.rs.html\">lib.rs</a><a href=\"../../src/std/backtrace/src/print.rs.html\">print.rs</a><a href=\"../../src/std/backtrace/src/types.rs.html\">types.rs</a></div></details></div><div class=\"files\"></div></details><details class=\"dir-entry\"><summary>collections</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>hash</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/std/collections/hash/map.rs.html\">map.rs</a><a href=\"../../src/std/collections/hash/mod.rs.html\">mod.rs</a><a href=\"../../src/std/collections/hash/set.rs.html\">set.rs</a></div></details></div><div class=\"files\"><a href=\"../../src/std/collections/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>core</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>src</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/std/core/src/primitive_docs.rs.html\">primitive_docs.rs</a></div></details></div><div class=\"files\"></div></details><details class=\"dir-entry\"><summary>ffi</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/std/ffi/c_str.rs.html\">c_str.rs</a><a href=\"../../src/std/ffi/mod.rs.html\">mod.rs</a><a href=\"../../src/std/ffi/os_str.rs.html\">os_str.rs</a></div></details><details class=\"dir-entry\"><summary>hash</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/std/hash/mod.rs.html\">mod.rs</a><a href=\"../../src/std/hash/random.rs.html\">random.rs</a></div></details><details class=\"dir-entry\"><summary>io</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>buffered</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>bufreader</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/std/io/buffered/bufreader/buffer.rs.html\">buffer.rs</a></div></details></div><div class=\"files\"><a href=\"../../src/std/io/buffered/bufreader.rs.html\">bufreader.rs</a><a href=\"../../src/std/io/buffered/bufwriter.rs.html\">bufwriter.rs</a><a href=\"../../src/std/io/buffered/linewriter.rs.html\">linewriter.rs</a><a href=\"../../src/std/io/buffered/linewritershim.rs.html\">linewritershim.rs</a><a href=\"../../src/std/io/buffered/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>error</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/std/io/error/repr_bitpacked.rs.html\">repr_bitpacked.rs</a></div></details></div><div class=\"files\"><a href=\"../../src/std/io/copy.rs.html\">copy.rs</a><a href=\"../../src/std/io/cursor.rs.html\">cursor.rs</a><a href=\"../../src/std/io/error.rs.html\">error.rs</a><a href=\"../../src/std/io/impls.rs.html\">impls.rs</a><a href=\"../../src/std/io/mod.rs.html\">mod.rs</a><a href=\"../../src/std/io/prelude.rs.html\">prelude.rs</a><a href=\"../../src/std/io/stdio.rs.html\">stdio.rs</a><a href=\"../../src/std/io/util.rs.html\">util.rs</a></div></details><details class=\"dir-entry\"><summary>net</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/std/net/ip_addr.rs.html\">ip_addr.rs</a><a href=\"../../src/std/net/mod.rs.html\">mod.rs</a><a href=\"../../src/std/net/socket_addr.rs.html\">socket_addr.rs</a><a href=\"../../src/std/net/tcp.rs.html\">tcp.rs</a><a href=\"../../src/std/net/udp.rs.html\">udp.rs</a></div></details><details class=\"dir-entry\"><summary>os</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>fd</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/std/os/fd/mod.rs.html\">mod.rs</a><a href=\"../../src/std/os/fd/net.rs.html\">net.rs</a><a href=\"../../src/std/os/fd/owned.rs.html\">owned.rs</a><a href=\"../../src/std/os/fd/raw.rs.html\">raw.rs</a></div></details><details class=\"dir-entry\"><summary>linux</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/std/os/linux/fs.rs.html\">fs.rs</a><a href=\"../../src/std/os/linux/mod.rs.html\">mod.rs</a><a href=\"../../src/std/os/linux/net.rs.html\">net.rs</a><a href=\"../../src/std/os/linux/process.rs.html\">process.rs</a><a href=\"../../src/std/os/linux/raw.rs.html\">raw.rs</a></div></details><details class=\"dir-entry\"><summary>net</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>linux_ext</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/std/os/net/linux_ext/addr.rs.html\">addr.rs</a><a href=\"../../src/std/os/net/linux_ext/mod.rs.html\">mod.rs</a><a href=\"../../src/std/os/net/linux_ext/socket.rs.html\">socket.rs</a><a href=\"../../src/std/os/net/linux_ext/tcp.rs.html\">tcp.rs</a></div></details></div><div class=\"files\"><a href=\"../../src/std/os/net/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>raw</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/std/os/raw/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>unix</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>ffi</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/std/os/unix/ffi/mod.rs.html\">mod.rs</a><a href=\"../../src/std/os/unix/ffi/os_str.rs.html\">os_str.rs</a></div></details><details class=\"dir-entry\"><summary>io</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/std/os/unix/io/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>net</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/std/os/unix/net/addr.rs.html\">addr.rs</a><a href=\"../../src/std/os/unix/net/ancillary.rs.html\">ancillary.rs</a><a href=\"../../src/std/os/unix/net/datagram.rs.html\">datagram.rs</a><a href=\"../../src/std/os/unix/net/listener.rs.html\">listener.rs</a><a href=\"../../src/std/os/unix/net/mod.rs.html\">mod.rs</a><a href=\"../../src/std/os/unix/net/stream.rs.html\">stream.rs</a><a href=\"../../src/std/os/unix/net/ucred.rs.html\">ucred.rs</a></div></details></div><div class=\"files\"><a href=\"../../src/std/os/unix/fs.rs.html\">fs.rs</a><a href=\"../../src/std/os/unix/mod.rs.html\">mod.rs</a><a href=\"../../src/std/os/unix/process.rs.html\">process.rs</a><a href=\"../../src/std/os/unix/raw.rs.html\">raw.rs</a><a href=\"../../src/std/os/unix/thread.rs.html\">thread.rs</a></div></details><details class=\"dir-entry\"><summary>wasi</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>io</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/std/os/wasi/io/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>net</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/std/os/wasi/net/mod.rs.html\">mod.rs</a></div></details></div><div class=\"files\"><a href=\"../../src/std/os/wasi/ffi.rs.html\">ffi.rs</a><a href=\"../../src/std/os/wasi/fs.rs.html\">fs.rs</a><a href=\"../../src/std/os/wasi/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>wasip2</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/std/os/wasip2/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>windows</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>io</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/std/os/windows/io/handle.rs.html\">handle.rs</a><a href=\"../../src/std/os/windows/io/mod.rs.html\">mod.rs</a><a href=\"../../src/std/os/windows/io/raw.rs.html\">raw.rs</a><a href=\"../../src/std/os/windows/io/socket.rs.html\">socket.rs</a></div></details></div><div class=\"files\"><a href=\"../../src/std/os/windows/ffi.rs.html\">ffi.rs</a><a href=\"../../src/std/os/windows/fs.rs.html\">fs.rs</a><a href=\"../../src/std/os/windows/mod.rs.html\">mod.rs</a><a href=\"../../src/std/os/windows/process.rs.html\">process.rs</a><a href=\"../../src/std/os/windows/raw.rs.html\">raw.rs</a><a href=\"../../src/std/os/windows/thread.rs.html\">thread.rs</a></div></details></div><div class=\"files\"><a href=\"../../src/std/os/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>portable-simd</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>crates</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>std_float</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>src</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/std/portable-simd/crates/std_float/src/lib.rs.html\">lib.rs</a></div></details></div><div class=\"files\"></div></details></div><div class=\"files\"></div></details></div><div class=\"files\"></div></details><details class=\"dir-entry\"><summary>prelude</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/std/prelude/common.rs.html\">common.rs</a><a href=\"../../src/std/prelude/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>sync</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>mpmc</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/std/sync/mpmc/array.rs.html\">array.rs</a><a href=\"../../src/std/sync/mpmc/context.rs.html\">context.rs</a><a href=\"../../src/std/sync/mpmc/counter.rs.html\">counter.rs</a><a href=\"../../src/std/sync/mpmc/error.rs.html\">error.rs</a><a href=\"../../src/std/sync/mpmc/list.rs.html\">list.rs</a><a href=\"../../src/std/sync/mpmc/mod.rs.html\">mod.rs</a><a href=\"../../src/std/sync/mpmc/select.rs.html\">select.rs</a><a href=\"../../src/std/sync/mpmc/utils.rs.html\">utils.rs</a><a href=\"../../src/std/sync/mpmc/waker.rs.html\">waker.rs</a><a href=\"../../src/std/sync/mpmc/zero.rs.html\">zero.rs</a></div></details><details class=\"dir-entry\"><summary>mpsc</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/std/sync/mpsc/mod.rs.html\">mod.rs</a></div></details></div><div class=\"files\"><a href=\"../../src/std/sync/barrier.rs.html\">barrier.rs</a><a href=\"../../src/std/sync/condvar.rs.html\">condvar.rs</a><a href=\"../../src/std/sync/lazy_lock.rs.html\">lazy_lock.rs</a><a href=\"../../src/std/sync/mod.rs.html\">mod.rs</a><a href=\"../../src/std/sync/mutex.rs.html\">mutex.rs</a><a href=\"../../src/std/sync/once.rs.html\">once.rs</a><a href=\"../../src/std/sync/once_lock.rs.html\">once_lock.rs</a><a href=\"../../src/std/sync/poison.rs.html\">poison.rs</a><a href=\"../../src/std/sync/reentrant_lock.rs.html\">reentrant_lock.rs</a><a href=\"../../src/std/sync/rwlock.rs.html\">rwlock.rs</a></div></details><details class=\"dir-entry\"><summary>sys</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>os_str</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/std/sys/os_str/bytes.rs.html\">bytes.rs</a><a href=\"../../src/std/sys/os_str/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>pal</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>common</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/std/sys/pal/common/alloc.rs.html\">alloc.rs</a><a href=\"../../src/std/sys/pal/common/mod.rs.html\">mod.rs</a><a href=\"../../src/std/sys/pal/common/small_c_string.rs.html\">small_c_string.rs</a></div></details><details class=\"dir-entry\"><summary>unix</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>process</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/std/sys/pal/unix/process/mod.rs.html\">mod.rs</a><a href=\"../../src/std/sys/pal/unix/process/process_common.rs.html\">process_common.rs</a><a href=\"../../src/std/sys/pal/unix/process/process_unix.rs.html\">process_unix.rs</a></div></details></div><div class=\"files\"><a href=\"../../src/std/sys/pal/unix/alloc.rs.html\">alloc.rs</a><a href=\"../../src/std/sys/pal/unix/args.rs.html\">args.rs</a><a href=\"../../src/std/sys/pal/unix/env.rs.html\">env.rs</a><a href=\"../../src/std/sys/pal/unix/fd.rs.html\">fd.rs</a><a href=\"../../src/std/sys/pal/unix/fs.rs.html\">fs.rs</a><a href=\"../../src/std/sys/pal/unix/futex.rs.html\">futex.rs</a><a href=\"../../src/std/sys/pal/unix/io.rs.html\">io.rs</a><a href=\"../../src/std/sys/pal/unix/kernel_copy.rs.html\">kernel_copy.rs</a><a href=\"../../src/std/sys/pal/unix/mod.rs.html\">mod.rs</a><a href=\"../../src/std/sys/pal/unix/net.rs.html\">net.rs</a><a href=\"../../src/std/sys/pal/unix/os.rs.html\">os.rs</a><a href=\"../../src/std/sys/pal/unix/pipe.rs.html\">pipe.rs</a><a href=\"../../src/std/sys/pal/unix/rand.rs.html\">rand.rs</a><a href=\"../../src/std/sys/pal/unix/stack_overflow.rs.html\">stack_overflow.rs</a><a href=\"../../src/std/sys/pal/unix/stdio.rs.html\">stdio.rs</a><a href=\"../../src/std/sys/pal/unix/thread.rs.html\">thread.rs</a><a href=\"../../src/std/sys/pal/unix/thread_local_dtor.rs.html\">thread_local_dtor.rs</a><a href=\"../../src/std/sys/pal/unix/thread_local_key.rs.html\">thread_local_key.rs</a><a href=\"../../src/std/sys/pal/unix/time.rs.html\">time.rs</a><a href=\"../../src/std/sys/pal/unix/weak.rs.html\">weak.rs</a></div></details></div><div class=\"files\"><a href=\"../../src/std/sys/pal/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>path</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/std/sys/path/mod.rs.html\">mod.rs</a><a href=\"../../src/std/sys/path/unix.rs.html\">unix.rs</a></div></details><details class=\"dir-entry\"><summary>personality</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>dwarf</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/std/sys/personality/dwarf/eh.rs.html\">eh.rs</a><a href=\"../../src/std/sys/personality/dwarf/mod.rs.html\">mod.rs</a></div></details></div><div class=\"files\"><a href=\"../../src/std/sys/personality/gcc.rs.html\">gcc.rs</a><a href=\"../../src/std/sys/personality/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>sync</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>condvar</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/std/sys/sync/condvar/futex.rs.html\">futex.rs</a><a href=\"../../src/std/sys/sync/condvar/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>mutex</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/std/sys/sync/mutex/futex.rs.html\">futex.rs</a><a href=\"../../src/std/sys/sync/mutex/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>once</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/std/sys/sync/once/futex.rs.html\">futex.rs</a><a href=\"../../src/std/sys/sync/once/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>rwlock</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/std/sys/sync/rwlock/futex.rs.html\">futex.rs</a><a href=\"../../src/std/sys/sync/rwlock/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>thread_parking</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/std/sys/sync/thread_parking/futex.rs.html\">futex.rs</a><a href=\"../../src/std/sys/sync/thread_parking/mod.rs.html\">mod.rs</a></div></details></div><div class=\"files\"><a href=\"../../src/std/sys/sync/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>thread_local</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>fast_local</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/std/sys/thread_local/fast_local/eager.rs.html\">eager.rs</a><a href=\"../../src/std/sys/thread_local/fast_local/lazy.rs.html\">lazy.rs</a><a href=\"../../src/std/sys/thread_local/fast_local/mod.rs.html\">mod.rs</a></div></details></div><div class=\"files\"><a href=\"../../src/std/sys/thread_local/mod.rs.html\">mod.rs</a></div></details></div><div class=\"files\"><a href=\"../../src/std/sys/cmath.rs.html\">cmath.rs</a><a href=\"../../src/std/sys/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>sys_common</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/std/sys_common/backtrace.rs.html\">backtrace.rs</a><a href=\"../../src/std/sys_common/fs.rs.html\">fs.rs</a><a href=\"../../src/std/sys_common/io.rs.html\">io.rs</a><a href=\"../../src/std/sys_common/lazy_box.rs.html\">lazy_box.rs</a><a href=\"../../src/std/sys_common/mod.rs.html\">mod.rs</a><a href=\"../../src/std/sys_common/net.rs.html\">net.rs</a><a href=\"../../src/std/sys_common/process.rs.html\">process.rs</a><a href=\"../../src/std/sys_common/thread_local_dtor.rs.html\">thread_local_dtor.rs</a><a href=\"../../src/std/sys_common/thread_local_key.rs.html\">thread_local_key.rs</a><a href=\"../../src/std/sys_common/wstr.rs.html\">wstr.rs</a><a href=\"../../src/std/sys_common/wtf8.rs.html\">wtf8.rs</a></div></details><details class=\"dir-entry\"><summary>thread</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/std/thread/local.rs.html\">local.rs</a><a href=\"../../src/std/thread/mod.rs.html\">mod.rs</a><a href=\"../../src/std/thread/scoped.rs.html\">scoped.rs</a></div></details></div><div class=\"files\"><a href=\"../../src/std/alloc.rs.html\">alloc.rs</a><a href=\"../../src/std/ascii.rs.html\">ascii.rs</a><a href=\"../../src/std/backtrace.rs.html\">backtrace.rs</a><a href=\"../../src/std/env.rs.html\">env.rs</a><a href=\"../../src/std/error.rs.html\">error.rs</a><a href=\"../../src/std/f128.rs.html\">f128.rs</a><a href=\"../../src/std/f16.rs.html\">f16.rs</a><a href=\"../../src/std/f32.rs.html\" class=\"selected\">f32.rs</a><a href=\"../../src/std/f64.rs.html\">f64.rs</a><a href=\"../../src/std/fs.rs.html\">fs.rs</a><a href=\"../../src/std/keyword_docs.rs.html\">keyword_docs.rs</a><a href=\"../../src/std/lib.rs.html\">lib.rs</a><a href=\"../../src/std/macros.rs.html\">macros.rs</a><a href=\"../../src/std/num.rs.html\">num.rs</a><a href=\"../../src/std/panic.rs.html\">panic.rs</a><a href=\"../../src/std/panicking.rs.html\">panicking.rs</a><a href=\"../../src/std/pat.rs.html\">pat.rs</a><a href=\"../../src/std/path.rs.html\">path.rs</a><a href=\"../../src/std/process.rs.html\">process.rs</a><a href=\"../../src/std/rt.rs.html\">rt.rs</a><a href=\"../../src/std/time.rs.html\">time.rs</a></div></details><details class=\"dir-entry\"><summary>test</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>formatters</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/test/formatters/json.rs.html\">json.rs</a><a href=\"../../src/test/formatters/junit.rs.html\">junit.rs</a><a href=\"../../src/test/formatters/mod.rs.html\">mod.rs</a><a href=\"../../src/test/formatters/pretty.rs.html\">pretty.rs</a><a href=\"../../src/test/formatters/terse.rs.html\">terse.rs</a></div></details><details class=\"dir-entry\"><summary>helpers</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/test/helpers/concurrency.rs.html\">concurrency.rs</a><a href=\"../../src/test/helpers/metrics.rs.html\">metrics.rs</a><a href=\"../../src/test/helpers/mod.rs.html\">mod.rs</a><a href=\"../../src/test/helpers/shuffle.rs.html\">shuffle.rs</a></div></details><details class=\"dir-entry\"><summary>term</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>terminfo</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>parser</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../src/test/term/terminfo/parser/compiled.rs.html\">compiled.rs</a></div></details></div><div class=\"files\"><a href=\"../../src/test/term/terminfo/mod.rs.html\">mod.rs</a><a href=\"../../src/test/term/terminfo/parm.rs.html\">parm.rs</a><a href=\"../../src/test/term/terminfo/searcher.rs.html\">searcher.rs</a></div></details></div><div class=\"files\"></div></details></div><div class=\"files\"><a href=\"../../src/test/bench.rs.html\">bench.rs</a><a href=\"../../src/test/cli.rs.html\">cli.rs</a><a href=\"../../src/test/console.rs.html\">console.rs</a><a href=\"../../src/test/event.rs.html\">event.rs</a><a href=\"../../src/test/lib.rs.html\">lib.rs</a><a href=\"../../src/test/options.rs.html\">options.rs</a><a href=\"../../src/test/stats.rs.html\">stats.rs</a><a href=\"../../src/test/term.rs.html\">term.rs</a><a href=\"../../src/test/test_result.rs.html\">test_result.rs</a><a href=\"../../src/test/time.rs.html\">time.rs</a><a href=\"../../src/test/types.rs.html\">types.rs</a></div></details></div></nav><div class=\"sidebar-resizer\"></div><main><rustdoc-search><nav class=\"sub\">\n            <form class=\"search-form\">\n                <span></span> <!-- This empty span is a hacky fix for Safari - See #93184 -->\n                <div id=\"sidebar-button\" tabindex=\"-1\">\n                    <a href=\"../../std/all.html\" title=\"show sidebar\"></a>\n                </div>\n                <input class=\"search-input\" name=\"search\" aria-label=\"Run search in the documentation\" autocomplete=\"off\" spellcheck=\"false\" placeholder=\"Type ‘S’ or ‘/’ to search, ‘?’ for more options…\" type=\"search\">\n                <div id=\"help-button\" tabindex=\"-1\">\n                    <a href=\"../../help.html\" title=\"help\">?</a>\n                </div>\n                <div id=\"settings-menu\" tabindex=\"-1\">\n                    <a href=\"../../settings.html\" title=\"settings\">\n                        Settings\n                    </a>\n                </div>\n            </form>\n        </nav></rustdoc-search><section id=\"main-content\" class=\"content\"><div class=\"example-wrap\"><div data-nosnippet=\"\"><pre class=\"src-line-numbers\"><a href=\"#1\" id=\"1\">1</a>\n<a href=\"#2\" id=\"2\">2</a>\n<a href=\"#3\" id=\"3\">3</a>\n<a href=\"#4\" id=\"4\">4</a>\n<a href=\"#5\" id=\"5\">5</a>\n<a href=\"#6\" id=\"6\">6</a>\n<a href=\"#7\" id=\"7\">7</a>\n<a href=\"#8\" id=\"8\">8</a>\n<a href=\"#9\" id=\"9\">9</a>\n<a href=\"#10\" id=\"10\">10</a>\n<a href=\"#11\" id=\"11\">11</a>\n<a href=\"#12\" id=\"12\">12</a>\n<a href=\"#13\" id=\"13\">13</a>\n<a href=\"#14\" id=\"14\">14</a>\n<a href=\"#15\" id=\"15\">15</a>\n<a href=\"#16\" id=\"16\">16</a>\n<a href=\"#17\" id=\"17\">17</a>\n<a href=\"#18\" id=\"18\">18</a>\n<a href=\"#19\" id=\"19\">19</a>\n<a href=\"#20\" id=\"20\">20</a>\n<a href=\"#21\" id=\"21\">21</a>\n<a href=\"#22\" id=\"22\">22</a>\n<a href=\"#23\" id=\"23\">23</a>\n<a href=\"#24\" id=\"24\">24</a>\n<a href=\"#25\" id=\"25\">25</a>\n<a href=\"#26\" id=\"26\">26</a>\n<a href=\"#27\" id=\"27\">27</a>\n<a href=\"#28\" id=\"28\">28</a>\n<a href=\"#29\" id=\"29\">29</a>\n<a href=\"#30\" id=\"30\">30</a>\n<a href=\"#31\" id=\"31\" class=\"line-highlighted\">31</a>\n<a href=\"#32\" id=\"32\" class=\"line-highlighted\">32</a>\n<a href=\"#33\" id=\"33\" class=\"line-highlighted\">33</a>\n<a href=\"#34\" id=\"34\" class=\"line-highlighted\">34</a>\n<a href=\"#35\" id=\"35\" class=\"line-highlighted\">35</a>\n<a href=\"#36\" id=\"36\" class=\"line-highlighted\">36</a>\n<a href=\"#37\" id=\"37\" class=\"line-highlighted\">37</a>\n<a href=\"#38\" id=\"38\" class=\"line-highlighted\">38</a>\n<a href=\"#39\" id=\"39\" class=\"line-highlighted\">39</a>\n<a href=\"#40\" id=\"40\" class=\"line-highlighted\">40</a>\n<a href=\"#41\" id=\"41\" class=\"line-highlighted\">41</a>\n<a href=\"#42\" id=\"42\" class=\"line-highlighted\">42</a>\n<a href=\"#43\" id=\"43\" class=\"line-highlighted\">43</a>\n<a href=\"#44\" id=\"44\" class=\"line-highlighted\">44</a>\n<a href=\"#45\" id=\"45\" class=\"line-highlighted\">45</a>\n<a href=\"#46\" id=\"46\" class=\"line-highlighted\">46</a>\n<a href=\"#47\" id=\"47\" class=\"line-highlighted\">47</a>\n<a href=\"#48\" id=\"48\" class=\"line-highlighted\">48</a>\n<a href=\"#49\" id=\"49\" class=\"line-highlighted\">49</a>\n<a href=\"#50\" id=\"50\" class=\"line-highlighted\">50</a>\n<a href=\"#51\" id=\"51\" class=\"line-highlighted\">51</a>\n<a href=\"#52\" id=\"52\" class=\"line-highlighted\">52</a>\n<a href=\"#53\" id=\"53\" class=\"line-highlighted\">53</a>\n<a href=\"#54\" id=\"54\" class=\"line-highlighted\">54</a>\n<a href=\"#55\" id=\"55\" class=\"line-highlighted\">55</a>\n<a href=\"#56\" id=\"56\" class=\"line-highlighted\">56</a>\n<a href=\"#57\" id=\"57\" class=\"line-highlighted\">57</a>\n<a href=\"#58\" id=\"58\" class=\"line-highlighted\">58</a>\n<a href=\"#59\" id=\"59\" class=\"line-highlighted\">59</a>\n<a href=\"#60\" id=\"60\" class=\"line-highlighted\">60</a>\n<a href=\"#61\" id=\"61\" class=\"line-highlighted\">61</a>\n<a href=\"#62\" id=\"62\" class=\"line-highlighted\">62</a>\n<a href=\"#63\" id=\"63\" class=\"line-highlighted\">63</a>\n<a href=\"#64\" id=\"64\" class=\"line-highlighted\">64</a>\n<a href=\"#65\" id=\"65\" class=\"line-highlighted\">65</a>\n<a href=\"#66\" id=\"66\" class=\"line-highlighted\">66</a>\n<a href=\"#67\" id=\"67\" class=\"line-highlighted\">67</a>\n<a href=\"#68\" id=\"68\" class=\"line-highlighted\">68</a>\n<a href=\"#69\" id=\"69\" class=\"line-highlighted\">69</a>\n<a href=\"#70\" id=\"70\" class=\"line-highlighted\">70</a>\n<a href=\"#71\" id=\"71\" class=\"line-highlighted\">71</a>\n<a href=\"#72\" id=\"72\" class=\"line-highlighted\">72</a>\n<a href=\"#73\" id=\"73\" class=\"line-highlighted\">73</a>\n<a href=\"#74\" id=\"74\" class=\"line-highlighted\">74</a>\n<a href=\"#75\" id=\"75\" class=\"line-highlighted\">75</a>\n<a href=\"#76\" id=\"76\" class=\"line-highlighted\">76</a>\n<a href=\"#77\" id=\"77\" class=\"line-highlighted\">77</a>\n<a href=\"#78\" id=\"78\" class=\"line-highlighted\">78</a>\n<a href=\"#79\" id=\"79\" class=\"line-highlighted\">79</a>\n<a href=\"#80\" id=\"80\" class=\"line-highlighted\">80</a>\n<a href=\"#81\" id=\"81\" class=\"line-highlighted\">81</a>\n<a href=\"#82\" id=\"82\" class=\"line-highlighted\">82</a>\n<a href=\"#83\" id=\"83\" class=\"line-highlighted\">83</a>\n<a href=\"#84\" id=\"84\" class=\"line-highlighted\">84</a>\n<a href=\"#85\" id=\"85\" class=\"line-highlighted\">85</a>\n<a href=\"#86\" id=\"86\" class=\"line-highlighted\">86</a>\n<a href=\"#87\" id=\"87\" class=\"line-highlighted\">87</a>\n<a href=\"#88\" id=\"88\" class=\"line-highlighted\">88</a>\n<a href=\"#89\" id=\"89\" class=\"line-highlighted\">89</a>\n<a href=\"#90\" id=\"90\" class=\"line-highlighted\">90</a>\n<a href=\"#91\" id=\"91\" class=\"line-highlighted\">91</a>\n<a href=\"#92\" id=\"92\" class=\"line-highlighted\">92</a>\n<a href=\"#93\" id=\"93\" class=\"line-highlighted\">93</a>\n<a href=\"#94\" id=\"94\" class=\"line-highlighted\">94</a>\n<a href=\"#95\" id=\"95\" class=\"line-highlighted\">95</a>\n<a href=\"#96\" id=\"96\" class=\"line-highlighted\">96</a>\n<a href=\"#97\" id=\"97\" class=\"line-highlighted\">97</a>\n<a href=\"#98\" id=\"98\" class=\"line-highlighted\">98</a>\n<a href=\"#99\" id=\"99\" class=\"line-highlighted\">99</a>\n<a href=\"#100\" id=\"100\" class=\"line-highlighted\">100</a>\n<a href=\"#101\" id=\"101\" class=\"line-highlighted\">101</a>\n<a href=\"#102\" id=\"102\" class=\"line-highlighted\">102</a>\n<a href=\"#103\" id=\"103\" class=\"line-highlighted\">103</a>\n<a href=\"#104\" id=\"104\" class=\"line-highlighted\">104</a>\n<a href=\"#105\" id=\"105\" class=\"line-highlighted\">105</a>\n<a href=\"#106\" id=\"106\" class=\"line-highlighted\">106</a>\n<a href=\"#107\" id=\"107\" class=\"line-highlighted\">107</a>\n<a href=\"#108\" id=\"108\" class=\"line-highlighted\">108</a>\n<a href=\"#109\" id=\"109\" class=\"line-highlighted\">109</a>\n<a href=\"#110\" id=\"110\" class=\"line-highlighted\">110</a>\n<a href=\"#111\" id=\"111\" class=\"line-highlighted\">111</a>\n<a href=\"#112\" id=\"112\" class=\"line-highlighted\">112</a>\n<a href=\"#113\" id=\"113\" class=\"line-highlighted\">113</a>\n<a href=\"#114\" id=\"114\" class=\"line-highlighted\">114</a>\n<a href=\"#115\" id=\"115\" class=\"line-highlighted\">115</a>\n<a href=\"#116\" id=\"116\" class=\"line-highlighted\">116</a>\n<a href=\"#117\" id=\"117\" class=\"line-highlighted\">117</a>\n<a href=\"#118\" id=\"118\" class=\"line-highlighted\">118</a>\n<a href=\"#119\" id=\"119\" class=\"line-highlighted\">119</a>\n<a href=\"#120\" id=\"120\" class=\"line-highlighted\">120</a>\n<a href=\"#121\" id=\"121\" class=\"line-highlighted\">121</a>\n<a href=\"#122\" id=\"122\" class=\"line-highlighted\">122</a>\n<a href=\"#123\" id=\"123\" class=\"line-highlighted\">123</a>\n<a href=\"#124\" id=\"124\" class=\"line-highlighted\">124</a>\n<a href=\"#125\" id=\"125\" class=\"line-highlighted\">125</a>\n<a href=\"#126\" id=\"126\" class=\"line-highlighted\">126</a>\n<a href=\"#127\" id=\"127\" class=\"line-highlighted\">127</a>\n<a href=\"#128\" id=\"128\" class=\"line-highlighted\">128</a>\n<a href=\"#129\" id=\"129\" class=\"line-highlighted\">129</a>\n<a href=\"#130\" id=\"130\" class=\"line-highlighted\">130</a>\n<a href=\"#131\" id=\"131\" class=\"line-highlighted\">131</a>\n<a href=\"#132\" id=\"132\" class=\"line-highlighted\">132</a>\n<a href=\"#133\" id=\"133\" class=\"line-highlighted\">133</a>\n<a href=\"#134\" id=\"134\" class=\"line-highlighted\">134</a>\n<a href=\"#135\" id=\"135\" class=\"line-highlighted\">135</a>\n<a href=\"#136\" id=\"136\" class=\"line-highlighted\">136</a>\n<a href=\"#137\" id=\"137\" class=\"line-highlighted\">137</a>\n<a href=\"#138\" id=\"138\" class=\"line-highlighted\">138</a>\n<a href=\"#139\" id=\"139\" class=\"line-highlighted\">139</a>\n<a href=\"#140\" id=\"140\" class=\"line-highlighted\">140</a>\n<a href=\"#141\" id=\"141\" class=\"line-highlighted\">141</a>\n<a href=\"#142\" id=\"142\" class=\"line-highlighted\">142</a>\n<a href=\"#143\" id=\"143\" class=\"line-highlighted\">143</a>\n<a href=\"#144\" id=\"144\" class=\"line-highlighted\">144</a>\n<a href=\"#145\" id=\"145\" class=\"line-highlighted\">145</a>\n<a href=\"#146\" id=\"146\" class=\"line-highlighted\">146</a>\n<a href=\"#147\" id=\"147\" class=\"line-highlighted\">147</a>\n<a href=\"#148\" id=\"148\" class=\"line-highlighted\">148</a>\n<a href=\"#149\" id=\"149\" class=\"line-highlighted\">149</a>\n<a href=\"#150\" id=\"150\" class=\"line-highlighted\">150</a>\n<a href=\"#151\" id=\"151\" class=\"line-highlighted\">151</a>\n<a href=\"#152\" id=\"152\" class=\"line-highlighted\">152</a>\n<a href=\"#153\" id=\"153\" class=\"line-highlighted\">153</a>\n<a href=\"#154\" id=\"154\" class=\"line-highlighted\">154</a>\n<a href=\"#155\" id=\"155\" class=\"line-highlighted\">155</a>\n<a href=\"#156\" id=\"156\" class=\"line-highlighted\">156</a>\n<a href=\"#157\" id=\"157\" class=\"line-highlighted\">157</a>\n<a href=\"#158\" id=\"158\" class=\"line-highlighted\">158</a>\n<a href=\"#159\" id=\"159\" class=\"line-highlighted\">159</a>\n<a href=\"#160\" id=\"160\" class=\"line-highlighted\">160</a>\n<a href=\"#161\" id=\"161\" class=\"line-highlighted\">161</a>\n<a href=\"#162\" id=\"162\" class=\"line-highlighted\">162</a>\n<a href=\"#163\" id=\"163\" class=\"line-highlighted\">163</a>\n<a href=\"#164\" id=\"164\" class=\"line-highlighted\">164</a>\n<a href=\"#165\" id=\"165\" class=\"line-highlighted\">165</a>\n<a href=\"#166\" id=\"166\" class=\"line-highlighted\">166</a>\n<a href=\"#167\" id=\"167\" class=\"line-highlighted\">167</a>\n<a href=\"#168\" id=\"168\" class=\"line-highlighted\">168</a>\n<a href=\"#169\" id=\"169\" class=\"line-highlighted\">169</a>\n<a href=\"#170\" id=\"170\" class=\"line-highlighted\">170</a>\n<a href=\"#171\" id=\"171\" class=\"line-highlighted\">171</a>\n<a href=\"#172\" id=\"172\" class=\"line-highlighted\">172</a>\n<a href=\"#173\" id=\"173\" class=\"line-highlighted\">173</a>\n<a href=\"#174\" id=\"174\" class=\"line-highlighted\">174</a>\n<a href=\"#175\" id=\"175\" class=\"line-highlighted\">175</a>\n<a href=\"#176\" id=\"176\" class=\"line-highlighted\">176</a>\n<a href=\"#177\" id=\"177\" class=\"line-highlighted\">177</a>\n<a href=\"#178\" id=\"178\" class=\"line-highlighted\">178</a>\n<a href=\"#179\" id=\"179\" class=\"line-highlighted\">179</a>\n<a href=\"#180\" id=\"180\" class=\"line-highlighted\">180</a>\n<a href=\"#181\" id=\"181\" class=\"line-highlighted\">181</a>\n<a href=\"#182\" id=\"182\" class=\"line-highlighted\">182</a>\n<a href=\"#183\" id=\"183\" class=\"line-highlighted\">183</a>\n<a href=\"#184\" id=\"184\" class=\"line-highlighted\">184</a>\n<a href=\"#185\" id=\"185\" class=\"line-highlighted\">185</a>\n<a href=\"#186\" id=\"186\" class=\"line-highlighted\">186</a>\n<a href=\"#187\" id=\"187\" class=\"line-highlighted\">187</a>\n<a href=\"#188\" id=\"188\" class=\"line-highlighted\">188</a>\n<a href=\"#189\" id=\"189\" class=\"line-highlighted\">189</a>\n<a href=\"#190\" id=\"190\" class=\"line-highlighted\">190</a>\n<a href=\"#191\" id=\"191\" class=\"line-highlighted\">191</a>\n<a href=\"#192\" id=\"192\" class=\"line-highlighted\">192</a>\n<a href=\"#193\" id=\"193\" class=\"line-highlighted\">193</a>\n<a href=\"#194\" id=\"194\" class=\"line-highlighted\">194</a>\n<a href=\"#195\" id=\"195\" class=\"line-highlighted\">195</a>\n<a href=\"#196\" id=\"196\" class=\"line-highlighted\">196</a>\n<a href=\"#197\" id=\"197\" class=\"line-highlighted\">197</a>\n<a href=\"#198\" id=\"198\" class=\"line-highlighted\">198</a>\n<a href=\"#199\" id=\"199\" class=\"line-highlighted\">199</a>\n<a href=\"#200\" id=\"200\" class=\"line-highlighted\">200</a>\n<a href=\"#201\" id=\"201\" class=\"line-highlighted\">201</a>\n<a href=\"#202\" id=\"202\" class=\"line-highlighted\">202</a>\n<a href=\"#203\" id=\"203\" class=\"line-highlighted\">203</a>\n<a href=\"#204\" id=\"204\" class=\"line-highlighted\">204</a>\n<a href=\"#205\" id=\"205\" class=\"line-highlighted\">205</a>\n<a href=\"#206\" id=\"206\" class=\"line-highlighted\">206</a>\n<a href=\"#207\" id=\"207\" class=\"line-highlighted\">207</a>\n<a href=\"#208\" id=\"208\" class=\"line-highlighted\">208</a>\n<a href=\"#209\" id=\"209\" class=\"line-highlighted\">209</a>\n<a href=\"#210\" id=\"210\" class=\"line-highlighted\">210</a>\n<a href=\"#211\" id=\"211\" class=\"line-highlighted\">211</a>\n<a href=\"#212\" id=\"212\" class=\"line-highlighted\">212</a>\n<a href=\"#213\" id=\"213\" class=\"line-highlighted\">213</a>\n<a href=\"#214\" id=\"214\" class=\"line-highlighted\">214</a>\n<a href=\"#215\" id=\"215\" class=\"line-highlighted\">215</a>\n<a href=\"#216\" id=\"216\" class=\"line-highlighted\">216</a>\n<a href=\"#217\" id=\"217\" class=\"line-highlighted\">217</a>\n<a href=\"#218\" id=\"218\" class=\"line-highlighted\">218</a>\n<a href=\"#219\" id=\"219\" class=\"line-highlighted\">219</a>\n<a href=\"#220\" id=\"220\" class=\"line-highlighted\">220</a>\n<a href=\"#221\" id=\"221\" class=\"line-highlighted\">221</a>\n<a href=\"#222\" id=\"222\" class=\"line-highlighted\">222</a>\n<a href=\"#223\" id=\"223\" class=\"line-highlighted\">223</a>\n<a href=\"#224\" id=\"224\" class=\"line-highlighted\">224</a>\n<a href=\"#225\" id=\"225\" class=\"line-highlighted\">225</a>\n<a href=\"#226\" id=\"226\" class=\"line-highlighted\">226</a>\n<a href=\"#227\" id=\"227\" class=\"line-highlighted\">227</a>\n<a href=\"#228\" id=\"228\" class=\"line-highlighted\">228</a>\n<a href=\"#229\" id=\"229\" class=\"line-highlighted\">229</a>\n<a href=\"#230\" id=\"230\" class=\"line-highlighted\">230</a>\n<a href=\"#231\" id=\"231\" class=\"line-highlighted\">231</a>\n<a href=\"#232\" id=\"232\" class=\"line-highlighted\">232</a>\n<a href=\"#233\" id=\"233\" class=\"line-highlighted\">233</a>\n<a href=\"#234\" id=\"234\" class=\"line-highlighted\">234</a>\n<a href=\"#235\" id=\"235\" class=\"line-highlighted\">235</a>\n<a href=\"#236\" id=\"236\" class=\"line-highlighted\">236</a>\n<a href=\"#237\" id=\"237\" class=\"line-highlighted\">237</a>\n<a href=\"#238\" id=\"238\" class=\"line-highlighted\">238</a>\n<a href=\"#239\" id=\"239\" class=\"line-highlighted\">239</a>\n<a href=\"#240\" id=\"240\" class=\"line-highlighted\">240</a>\n<a href=\"#241\" id=\"241\" class=\"line-highlighted\">241</a>\n<a href=\"#242\" id=\"242\" class=\"line-highlighted\">242</a>\n<a href=\"#243\" id=\"243\" class=\"line-highlighted\">243</a>\n<a href=\"#244\" id=\"244\" class=\"line-highlighted\">244</a>\n<a href=\"#245\" id=\"245\" class=\"line-highlighted\">245</a>\n<a href=\"#246\" id=\"246\" class=\"line-highlighted\">246</a>\n<a href=\"#247\" id=\"247\" class=\"line-highlighted\">247</a>\n<a href=\"#248\" id=\"248\" class=\"line-highlighted\">248</a>\n<a href=\"#249\" id=\"249\" class=\"line-highlighted\">249</a>\n<a href=\"#250\" id=\"250\" class=\"line-highlighted\">250</a>\n<a href=\"#251\" id=\"251\" class=\"line-highlighted\">251</a>\n<a href=\"#252\" id=\"252\" class=\"line-highlighted\">252</a>\n<a href=\"#253\" id=\"253\" class=\"line-highlighted\">253</a>\n<a href=\"#254\" id=\"254\" class=\"line-highlighted\">254</a>\n<a href=\"#255\" id=\"255\" class=\"line-highlighted\">255</a>\n<a href=\"#256\" id=\"256\" class=\"line-highlighted\">256</a>\n<a href=\"#257\" id=\"257\" class=\"line-highlighted\">257</a>\n<a href=\"#258\" id=\"258\" class=\"line-highlighted\">258</a>\n<a href=\"#259\" id=\"259\" class=\"line-highlighted\">259</a>\n<a href=\"#260\" id=\"260\" class=\"line-highlighted\">260</a>\n<a href=\"#261\" id=\"261\" class=\"line-highlighted\">261</a>\n<a href=\"#262\" id=\"262\" class=\"line-highlighted\">262</a>\n<a href=\"#263\" id=\"263\" class=\"line-highlighted\">263</a>\n<a href=\"#264\" id=\"264\" class=\"line-highlighted\">264</a>\n<a href=\"#265\" id=\"265\" class=\"line-highlighted\">265</a>\n<a href=\"#266\" id=\"266\" class=\"line-highlighted\">266</a>\n<a href=\"#267\" id=\"267\" class=\"line-highlighted\">267</a>\n<a href=\"#268\" id=\"268\" class=\"line-highlighted\">268</a>\n<a href=\"#269\" id=\"269\" class=\"line-highlighted\">269</a>\n<a href=\"#270\" id=\"270\" class=\"line-highlighted\">270</a>\n<a href=\"#271\" id=\"271\" class=\"line-highlighted\">271</a>\n<a href=\"#272\" id=\"272\" class=\"line-highlighted\">272</a>\n<a href=\"#273\" id=\"273\" class=\"line-highlighted\">273</a>\n<a href=\"#274\" id=\"274\" class=\"line-highlighted\">274</a>\n<a href=\"#275\" id=\"275\" class=\"line-highlighted\">275</a>\n<a href=\"#276\" id=\"276\" class=\"line-highlighted\">276</a>\n<a href=\"#277\" id=\"277\" class=\"line-highlighted\">277</a>\n<a href=\"#278\" id=\"278\" class=\"line-highlighted\">278</a>\n<a href=\"#279\" id=\"279\" class=\"line-highlighted\">279</a>\n<a href=\"#280\" id=\"280\" class=\"line-highlighted\">280</a>\n<a href=\"#281\" id=\"281\" class=\"line-highlighted\">281</a>\n<a href=\"#282\" id=\"282\" class=\"line-highlighted\">282</a>\n<a href=\"#283\" id=\"283\" class=\"line-highlighted\">283</a>\n<a href=\"#284\" id=\"284\" class=\"line-highlighted\">284</a>\n<a href=\"#285\" id=\"285\" class=\"line-highlighted\">285</a>\n<a href=\"#286\" id=\"286\" class=\"line-highlighted\">286</a>\n<a href=\"#287\" id=\"287\" class=\"line-highlighted\">287</a>\n<a href=\"#288\" id=\"288\" class=\"line-highlighted\">288</a>\n<a href=\"#289\" id=\"289\" class=\"line-highlighted\">289</a>\n<a href=\"#290\" id=\"290\" class=\"line-highlighted\">290</a>\n<a href=\"#291\" id=\"291\" class=\"line-highlighted\">291</a>\n<a href=\"#292\" id=\"292\" class=\"line-highlighted\">292</a>\n<a href=\"#293\" id=\"293\" class=\"line-highlighted\">293</a>\n<a href=\"#294\" id=\"294\" class=\"line-highlighted\">294</a>\n<a href=\"#295\" id=\"295\" class=\"line-highlighted\">295</a>\n<a href=\"#296\" id=\"296\" class=\"line-highlighted\">296</a>\n<a href=\"#297\" id=\"297\" class=\"line-highlighted\">297</a>\n<a href=\"#298\" id=\"298\" class=\"line-highlighted\">298</a>\n<a href=\"#299\" id=\"299\" class=\"line-highlighted\">299</a>\n<a href=\"#300\" id=\"300\" class=\"line-highlighted\">300</a>\n<a href=\"#301\" id=\"301\" class=\"line-highlighted\">301</a>\n<a href=\"#302\" id=\"302\" class=\"line-highlighted\">302</a>\n<a href=\"#303\" id=\"303\" class=\"line-highlighted\">303</a>\n<a href=\"#304\" id=\"304\" class=\"line-highlighted\">304</a>\n<a href=\"#305\" id=\"305\" class=\"line-highlighted\">305</a>\n<a href=\"#306\" id=\"306\" class=\"line-highlighted\">306</a>\n<a href=\"#307\" id=\"307\" class=\"line-highlighted\">307</a>\n<a href=\"#308\" id=\"308\" class=\"line-highlighted\">308</a>\n<a href=\"#309\" id=\"309\" class=\"line-highlighted\">309</a>\n<a href=\"#310\" id=\"310\" class=\"line-highlighted\">310</a>\n<a href=\"#311\" id=\"311\" class=\"line-highlighted\">311</a>\n<a href=\"#312\" id=\"312\" class=\"line-highlighted\">312</a>\n<a href=\"#313\" id=\"313\" class=\"line-highlighted\">313</a>\n<a href=\"#314\" id=\"314\" class=\"line-highlighted\">314</a>\n<a href=\"#315\" id=\"315\" class=\"line-highlighted\">315</a>\n<a href=\"#316\" id=\"316\" class=\"line-highlighted\">316</a>\n<a href=\"#317\" id=\"317\" class=\"line-highlighted\">317</a>\n<a href=\"#318\" id=\"318\" class=\"line-highlighted\">318</a>\n<a href=\"#319\" id=\"319\" class=\"line-highlighted\">319</a>\n<a href=\"#320\" id=\"320\" class=\"line-highlighted\">320</a>\n<a href=\"#321\" id=\"321\" class=\"line-highlighted\">321</a>\n<a href=\"#322\" id=\"322\" class=\"line-highlighted\">322</a>\n<a href=\"#323\" id=\"323\" class=\"line-highlighted\">323</a>\n<a href=\"#324\" id=\"324\" class=\"line-highlighted\">324</a>\n<a href=\"#325\" id=\"325\" class=\"line-highlighted\">325</a>\n<a href=\"#326\" id=\"326\" class=\"line-highlighted\">326</a>\n<a href=\"#327\" id=\"327\" class=\"line-highlighted\">327</a>\n<a href=\"#328\" id=\"328\" class=\"line-highlighted\">328</a>\n<a href=\"#329\" id=\"329\" class=\"line-highlighted\">329</a>\n<a href=\"#330\" id=\"330\" class=\"line-highlighted\">330</a>\n<a href=\"#331\" id=\"331\" class=\"line-highlighted\">331</a>\n<a href=\"#332\" id=\"332\" class=\"line-highlighted\">332</a>\n<a href=\"#333\" id=\"333\" class=\"line-highlighted\">333</a>\n<a href=\"#334\" id=\"334\" class=\"line-highlighted\">334</a>\n<a href=\"#335\" id=\"335\" class=\"line-highlighted\">335</a>\n<a href=\"#336\" id=\"336\" class=\"line-highlighted\">336</a>\n<a href=\"#337\" id=\"337\" class=\"line-highlighted\">337</a>\n<a href=\"#338\" id=\"338\" class=\"line-highlighted\">338</a>\n<a href=\"#339\" id=\"339\" class=\"line-highlighted\">339</a>\n<a href=\"#340\" id=\"340\" class=\"line-highlighted\">340</a>\n<a href=\"#341\" id=\"341\" class=\"line-highlighted\">341</a>\n<a href=\"#342\" id=\"342\" class=\"line-highlighted\">342</a>\n<a href=\"#343\" id=\"343\" class=\"line-highlighted\">343</a>\n<a href=\"#344\" id=\"344\" class=\"line-highlighted\">344</a>\n<a href=\"#345\" id=\"345\" class=\"line-highlighted\">345</a>\n<a href=\"#346\" id=\"346\" class=\"line-highlighted\">346</a>\n<a href=\"#347\" id=\"347\" class=\"line-highlighted\">347</a>\n<a href=\"#348\" id=\"348\" class=\"line-highlighted\">348</a>\n<a href=\"#349\" id=\"349\" class=\"line-highlighted\">349</a>\n<a href=\"#350\" id=\"350\" class=\"line-highlighted\">350</a>\n<a href=\"#351\" id=\"351\" class=\"line-highlighted\">351</a>\n<a href=\"#352\" id=\"352\" class=\"line-highlighted\">352</a>\n<a href=\"#353\" id=\"353\" class=\"line-highlighted\">353</a>\n<a href=\"#354\" id=\"354\" class=\"line-highlighted\">354</a>\n<a href=\"#355\" id=\"355\" class=\"line-highlighted\">355</a>\n<a href=\"#356\" id=\"356\" class=\"line-highlighted\">356</a>\n<a href=\"#357\" id=\"357\" class=\"line-highlighted\">357</a>\n<a href=\"#358\" id=\"358\" class=\"line-highlighted\">358</a>\n<a href=\"#359\" id=\"359\" class=\"line-highlighted\">359</a>\n<a href=\"#360\" id=\"360\" class=\"line-highlighted\">360</a>\n<a href=\"#361\" id=\"361\" class=\"line-highlighted\">361</a>\n<a href=\"#362\" id=\"362\" class=\"line-highlighted\">362</a>\n<a href=\"#363\" id=\"363\" class=\"line-highlighted\">363</a>\n<a href=\"#364\" id=\"364\" class=\"line-highlighted\">364</a>\n<a href=\"#365\" id=\"365\" class=\"line-highlighted\">365</a>\n<a href=\"#366\" id=\"366\" class=\"line-highlighted\">366</a>\n<a href=\"#367\" id=\"367\" class=\"line-highlighted\">367</a>\n<a href=\"#368\" id=\"368\" class=\"line-highlighted\">368</a>\n<a href=\"#369\" id=\"369\" class=\"line-highlighted\">369</a>\n<a href=\"#370\" id=\"370\" class=\"line-highlighted\">370</a>\n<a href=\"#371\" id=\"371\" class=\"line-highlighted\">371</a>\n<a href=\"#372\" id=\"372\" class=\"line-highlighted\">372</a>\n<a href=\"#373\" id=\"373\" class=\"line-highlighted\">373</a>\n<a href=\"#374\" id=\"374\" class=\"line-highlighted\">374</a>\n<a href=\"#375\" id=\"375\" class=\"line-highlighted\">375</a>\n<a href=\"#376\" id=\"376\" class=\"line-highlighted\">376</a>\n<a href=\"#377\" id=\"377\" class=\"line-highlighted\">377</a>\n<a href=\"#378\" id=\"378\" class=\"line-highlighted\">378</a>\n<a href=\"#379\" id=\"379\" class=\"line-highlighted\">379</a>\n<a href=\"#380\" id=\"380\" class=\"line-highlighted\">380</a>\n<a href=\"#381\" id=\"381\" class=\"line-highlighted\">381</a>\n<a href=\"#382\" id=\"382\" class=\"line-highlighted\">382</a>\n<a href=\"#383\" id=\"383\" class=\"line-highlighted\">383</a>\n<a href=\"#384\" id=\"384\" class=\"line-highlighted\">384</a>\n<a href=\"#385\" id=\"385\" class=\"line-highlighted\">385</a>\n<a href=\"#386\" id=\"386\" class=\"line-highlighted\">386</a>\n<a href=\"#387\" id=\"387\" class=\"line-highlighted\">387</a>\n<a href=\"#388\" id=\"388\" class=\"line-highlighted\">388</a>\n<a href=\"#389\" id=\"389\" class=\"line-highlighted\">389</a>\n<a href=\"#390\" id=\"390\" class=\"line-highlighted\">390</a>\n<a href=\"#391\" id=\"391\" class=\"line-highlighted\">391</a>\n<a href=\"#392\" id=\"392\" class=\"line-highlighted\">392</a>\n<a href=\"#393\" id=\"393\" class=\"line-highlighted\">393</a>\n<a href=\"#394\" id=\"394\" class=\"line-highlighted\">394</a>\n<a href=\"#395\" id=\"395\" class=\"line-highlighted\">395</a>\n<a href=\"#396\" id=\"396\" class=\"line-highlighted\">396</a>\n<a href=\"#397\" id=\"397\" class=\"line-highlighted\">397</a>\n<a href=\"#398\" id=\"398\" class=\"line-highlighted\">398</a>\n<a href=\"#399\" id=\"399\" class=\"line-highlighted\">399</a>\n<a href=\"#400\" id=\"400\" class=\"line-highlighted\">400</a>\n<a href=\"#401\" id=\"401\" class=\"line-highlighted\">401</a>\n<a href=\"#402\" id=\"402\" class=\"line-highlighted\">402</a>\n<a href=\"#403\" id=\"403\" class=\"line-highlighted\">403</a>\n<a href=\"#404\" id=\"404\" class=\"line-highlighted\">404</a>\n<a href=\"#405\" id=\"405\" class=\"line-highlighted\">405</a>\n<a href=\"#406\" id=\"406\" class=\"line-highlighted\">406</a>\n<a href=\"#407\" id=\"407\" class=\"line-highlighted\">407</a>\n<a href=\"#408\" id=\"408\" class=\"line-highlighted\">408</a>\n<a href=\"#409\" id=\"409\" class=\"line-highlighted\">409</a>\n<a href=\"#410\" id=\"410\" class=\"line-highlighted\">410</a>\n<a href=\"#411\" id=\"411\" class=\"line-highlighted\">411</a>\n<a href=\"#412\" id=\"412\" class=\"line-highlighted\">412</a>\n<a href=\"#413\" id=\"413\" class=\"line-highlighted\">413</a>\n<a href=\"#414\" id=\"414\" class=\"line-highlighted\">414</a>\n<a href=\"#415\" id=\"415\" class=\"line-highlighted\">415</a>\n<a href=\"#416\" id=\"416\" class=\"line-highlighted\">416</a>\n<a href=\"#417\" id=\"417\" class=\"line-highlighted\">417</a>\n<a href=\"#418\" id=\"418\" class=\"line-highlighted\">418</a>\n<a href=\"#419\" id=\"419\" class=\"line-highlighted\">419</a>\n<a href=\"#420\" id=\"420\" class=\"line-highlighted\">420</a>\n<a href=\"#421\" id=\"421\" class=\"line-highlighted\">421</a>\n<a href=\"#422\" id=\"422\" class=\"line-highlighted\">422</a>\n<a href=\"#423\" id=\"423\" class=\"line-highlighted\">423</a>\n<a href=\"#424\" id=\"424\" class=\"line-highlighted\">424</a>\n<a href=\"#425\" id=\"425\" class=\"line-highlighted\">425</a>\n<a href=\"#426\" id=\"426\" class=\"line-highlighted\">426</a>\n<a href=\"#427\" id=\"427\" class=\"line-highlighted\">427</a>\n<a href=\"#428\" id=\"428\" class=\"line-highlighted\">428</a>\n<a href=\"#429\" id=\"429\" class=\"line-highlighted\">429</a>\n<a href=\"#430\" id=\"430\" class=\"line-highlighted\">430</a>\n<a href=\"#431\" id=\"431\" class=\"line-highlighted\">431</a>\n<a href=\"#432\" id=\"432\" class=\"line-highlighted\">432</a>\n<a href=\"#433\" id=\"433\" class=\"line-highlighted\">433</a>\n<a href=\"#434\" id=\"434\" class=\"line-highlighted\">434</a>\n<a href=\"#435\" id=\"435\" class=\"line-highlighted\">435</a>\n<a href=\"#436\" id=\"436\" class=\"line-highlighted\">436</a>\n<a href=\"#437\" id=\"437\" class=\"line-highlighted\">437</a>\n<a href=\"#438\" id=\"438\" class=\"line-highlighted\">438</a>\n<a href=\"#439\" id=\"439\" class=\"line-highlighted\">439</a>\n<a href=\"#440\" id=\"440\" class=\"line-highlighted\">440</a>\n<a href=\"#441\" id=\"441\" class=\"line-highlighted\">441</a>\n<a href=\"#442\" id=\"442\" class=\"line-highlighted\">442</a>\n<a href=\"#443\" id=\"443\" class=\"line-highlighted\">443</a>\n<a href=\"#444\" id=\"444\" class=\"line-highlighted\">444</a>\n<a href=\"#445\" id=\"445\" class=\"line-highlighted\">445</a>\n<a href=\"#446\" id=\"446\" class=\"line-highlighted\">446</a>\n<a href=\"#447\" id=\"447\" class=\"line-highlighted\">447</a>\n<a href=\"#448\" id=\"448\" class=\"line-highlighted\">448</a>\n<a href=\"#449\" id=\"449\" class=\"line-highlighted\">449</a>\n<a href=\"#450\" id=\"450\" class=\"line-highlighted\">450</a>\n<a href=\"#451\" id=\"451\" class=\"line-highlighted\">451</a>\n<a href=\"#452\" id=\"452\" class=\"line-highlighted\">452</a>\n<a href=\"#453\" id=\"453\" class=\"line-highlighted\">453</a>\n<a href=\"#454\" id=\"454\" class=\"line-highlighted\">454</a>\n<a href=\"#455\" id=\"455\" class=\"line-highlighted\">455</a>\n<a href=\"#456\" id=\"456\" class=\"line-highlighted\">456</a>\n<a href=\"#457\" id=\"457\" class=\"line-highlighted\">457</a>\n<a href=\"#458\" id=\"458\" class=\"line-highlighted\">458</a>\n<a href=\"#459\" id=\"459\" class=\"line-highlighted\">459</a>\n<a href=\"#460\" id=\"460\" class=\"line-highlighted\">460</a>\n<a href=\"#461\" id=\"461\" class=\"line-highlighted\">461</a>\n<a href=\"#462\" id=\"462\" class=\"line-highlighted\">462</a>\n<a href=\"#463\" id=\"463\" class=\"line-highlighted\">463</a>\n<a href=\"#464\" id=\"464\" class=\"line-highlighted\">464</a>\n<a href=\"#465\" id=\"465\" class=\"line-highlighted\">465</a>\n<a href=\"#466\" id=\"466\" class=\"line-highlighted\">466</a>\n<a href=\"#467\" id=\"467\" class=\"line-highlighted\">467</a>\n<a href=\"#468\" id=\"468\" class=\"line-highlighted\">468</a>\n<a href=\"#469\" id=\"469\" class=\"line-highlighted\">469</a>\n<a href=\"#470\" id=\"470\" class=\"line-highlighted\">470</a>\n<a href=\"#471\" id=\"471\" class=\"line-highlighted\">471</a>\n<a href=\"#472\" id=\"472\" class=\"line-highlighted\">472</a>\n<a href=\"#473\" id=\"473\" class=\"line-highlighted\">473</a>\n<a href=\"#474\" id=\"474\" class=\"line-highlighted\">474</a>\n<a href=\"#475\" id=\"475\" class=\"line-highlighted\">475</a>\n<a href=\"#476\" id=\"476\" class=\"line-highlighted\">476</a>\n<a href=\"#477\" id=\"477\" class=\"line-highlighted\">477</a>\n<a href=\"#478\" id=\"478\" class=\"line-highlighted\">478</a>\n<a href=\"#479\" id=\"479\" class=\"line-highlighted\">479</a>\n<a href=\"#480\" id=\"480\" class=\"line-highlighted\">480</a>\n<a href=\"#481\" id=\"481\" class=\"line-highlighted\">481</a>\n<a href=\"#482\" id=\"482\" class=\"line-highlighted\">482</a>\n<a href=\"#483\" id=\"483\" class=\"line-highlighted\">483</a>\n<a href=\"#484\" id=\"484\" class=\"line-highlighted\">484</a>\n<a href=\"#485\" id=\"485\" class=\"line-highlighted\">485</a>\n<a href=\"#486\" id=\"486\" class=\"line-highlighted\">486</a>\n<a href=\"#487\" id=\"487\" class=\"line-highlighted\">487</a>\n<a href=\"#488\" id=\"488\" class=\"line-highlighted\">488</a>\n<a href=\"#489\" id=\"489\" class=\"line-highlighted\">489</a>\n<a href=\"#490\" id=\"490\" class=\"line-highlighted\">490</a>\n<a href=\"#491\" id=\"491\" class=\"line-highlighted\">491</a>\n<a href=\"#492\" id=\"492\" class=\"line-highlighted\">492</a>\n<a href=\"#493\" id=\"493\" class=\"line-highlighted\">493</a>\n<a href=\"#494\" id=\"494\" class=\"line-highlighted\">494</a>\n<a href=\"#495\" id=\"495\" class=\"line-highlighted\">495</a>\n<a href=\"#496\" id=\"496\" class=\"line-highlighted\">496</a>\n<a href=\"#497\" id=\"497\" class=\"line-highlighted\">497</a>\n<a href=\"#498\" id=\"498\" class=\"line-highlighted\">498</a>\n<a href=\"#499\" id=\"499\" class=\"line-highlighted\">499</a>\n<a href=\"#500\" id=\"500\" class=\"line-highlighted\">500</a>\n<a href=\"#501\" id=\"501\" class=\"line-highlighted\">501</a>\n<a href=\"#502\" id=\"502\" class=\"line-highlighted\">502</a>\n<a href=\"#503\" id=\"503\" class=\"line-highlighted\">503</a>\n<a href=\"#504\" id=\"504\" class=\"line-highlighted\">504</a>\n<a href=\"#505\" id=\"505\" class=\"line-highlighted\">505</a>\n<a href=\"#506\" id=\"506\" class=\"line-highlighted\">506</a>\n<a href=\"#507\" id=\"507\" class=\"line-highlighted\">507</a>\n<a href=\"#508\" id=\"508\" class=\"line-highlighted\">508</a>\n<a href=\"#509\" id=\"509\" class=\"line-highlighted\">509</a>\n<a href=\"#510\" id=\"510\" class=\"line-highlighted\">510</a>\n<a href=\"#511\" id=\"511\" class=\"line-highlighted\">511</a>\n<a href=\"#512\" id=\"512\" class=\"line-highlighted\">512</a>\n<a href=\"#513\" id=\"513\" class=\"line-highlighted\">513</a>\n<a href=\"#514\" id=\"514\" class=\"line-highlighted\">514</a>\n<a href=\"#515\" id=\"515\" class=\"line-highlighted\">515</a>\n<a href=\"#516\" id=\"516\" class=\"line-highlighted\">516</a>\n<a href=\"#517\" id=\"517\" class=\"line-highlighted\">517</a>\n<a href=\"#518\" id=\"518\" class=\"line-highlighted\">518</a>\n<a href=\"#519\" id=\"519\" class=\"line-highlighted\">519</a>\n<a href=\"#520\" id=\"520\" class=\"line-highlighted\">520</a>\n<a href=\"#521\" id=\"521\" class=\"line-highlighted\">521</a>\n<a href=\"#522\" id=\"522\" class=\"line-highlighted\">522</a>\n<a href=\"#523\" id=\"523\" class=\"line-highlighted\">523</a>\n<a href=\"#524\" id=\"524\" class=\"line-highlighted\">524</a>\n<a href=\"#525\" id=\"525\" class=\"line-highlighted\">525</a>\n<a href=\"#526\" id=\"526\" class=\"line-highlighted\">526</a>\n<a href=\"#527\" id=\"527\" class=\"line-highlighted\">527</a>\n<a href=\"#528\" id=\"528\" class=\"line-highlighted\">528</a>\n<a href=\"#529\" id=\"529\" class=\"line-highlighted\">529</a>\n<a href=\"#530\" id=\"530\" class=\"line-highlighted\">530</a>\n<a href=\"#531\" id=\"531\" class=\"line-highlighted\">531</a>\n<a href=\"#532\" id=\"532\" class=\"line-highlighted\">532</a>\n<a href=\"#533\" id=\"533\" class=\"line-highlighted\">533</a>\n<a href=\"#534\" id=\"534\" class=\"line-highlighted\">534</a>\n<a href=\"#535\" id=\"535\" class=\"line-highlighted\">535</a>\n<a href=\"#536\" id=\"536\" class=\"line-highlighted\">536</a>\n<a href=\"#537\" id=\"537\" class=\"line-highlighted\">537</a>\n<a href=\"#538\" id=\"538\" class=\"line-highlighted\">538</a>\n<a href=\"#539\" id=\"539\" class=\"line-highlighted\">539</a>\n<a href=\"#540\" id=\"540\" class=\"line-highlighted\">540</a>\n<a href=\"#541\" id=\"541\" class=\"line-highlighted\">541</a>\n<a href=\"#542\" id=\"542\" class=\"line-highlighted\">542</a>\n<a href=\"#543\" id=\"543\" class=\"line-highlighted\">543</a>\n<a href=\"#544\" id=\"544\" class=\"line-highlighted\">544</a>\n<a href=\"#545\" id=\"545\" class=\"line-highlighted\">545</a>\n<a href=\"#546\" id=\"546\" class=\"line-highlighted\">546</a>\n<a href=\"#547\" id=\"547\" class=\"line-highlighted\">547</a>\n<a href=\"#548\" id=\"548\" class=\"line-highlighted\">548</a>\n<a href=\"#549\" id=\"549\" class=\"line-highlighted\">549</a>\n<a href=\"#550\" id=\"550\" class=\"line-highlighted\">550</a>\n<a href=\"#551\" id=\"551\" class=\"line-highlighted\">551</a>\n<a href=\"#552\" id=\"552\" class=\"line-highlighted\">552</a>\n<a href=\"#553\" id=\"553\" class=\"line-highlighted\">553</a>\n<a href=\"#554\" id=\"554\" class=\"line-highlighted\">554</a>\n<a href=\"#555\" id=\"555\" class=\"line-highlighted\">555</a>\n<a href=\"#556\" id=\"556\" class=\"line-highlighted\">556</a>\n<a href=\"#557\" id=\"557\" class=\"line-highlighted\">557</a>\n<a href=\"#558\" id=\"558\" class=\"line-highlighted\">558</a>\n<a href=\"#559\" id=\"559\" class=\"line-highlighted\">559</a>\n<a href=\"#560\" id=\"560\" class=\"line-highlighted\">560</a>\n<a href=\"#561\" id=\"561\" class=\"line-highlighted\">561</a>\n<a href=\"#562\" id=\"562\" class=\"line-highlighted\">562</a>\n<a href=\"#563\" id=\"563\" class=\"line-highlighted\">563</a>\n<a href=\"#564\" id=\"564\" class=\"line-highlighted\">564</a>\n<a href=\"#565\" id=\"565\" class=\"line-highlighted\">565</a>\n<a href=\"#566\" id=\"566\" class=\"line-highlighted\">566</a>\n<a href=\"#567\" id=\"567\" class=\"line-highlighted\">567</a>\n<a href=\"#568\" id=\"568\" class=\"line-highlighted\">568</a>\n<a href=\"#569\" id=\"569\" class=\"line-highlighted\">569</a>\n<a href=\"#570\" id=\"570\" class=\"line-highlighted\">570</a>\n<a href=\"#571\" id=\"571\" class=\"line-highlighted\">571</a>\n<a href=\"#572\" id=\"572\" class=\"line-highlighted\">572</a>\n<a href=\"#573\" id=\"573\" class=\"line-highlighted\">573</a>\n<a href=\"#574\" id=\"574\" class=\"line-highlighted\">574</a>\n<a href=\"#575\" id=\"575\" class=\"line-highlighted\">575</a>\n<a href=\"#576\" id=\"576\" class=\"line-highlighted\">576</a>\n<a href=\"#577\" id=\"577\" class=\"line-highlighted\">577</a>\n<a href=\"#578\" id=\"578\" class=\"line-highlighted\">578</a>\n<a href=\"#579\" id=\"579\" class=\"line-highlighted\">579</a>\n<a href=\"#580\" id=\"580\" class=\"line-highlighted\">580</a>\n<a href=\"#581\" id=\"581\" class=\"line-highlighted\">581</a>\n<a href=\"#582\" id=\"582\" class=\"line-highlighted\">582</a>\n<a href=\"#583\" id=\"583\" class=\"line-highlighted\">583</a>\n<a href=\"#584\" id=\"584\" class=\"line-highlighted\">584</a>\n<a href=\"#585\" id=\"585\" class=\"line-highlighted\">585</a>\n<a href=\"#586\" id=\"586\" class=\"line-highlighted\">586</a>\n<a href=\"#587\" id=\"587\" class=\"line-highlighted\">587</a>\n<a href=\"#588\" id=\"588\" class=\"line-highlighted\">588</a>\n<a href=\"#589\" id=\"589\" class=\"line-highlighted\">589</a>\n<a href=\"#590\" id=\"590\" class=\"line-highlighted\">590</a>\n<a href=\"#591\" id=\"591\" class=\"line-highlighted\">591</a>\n<a href=\"#592\" id=\"592\" class=\"line-highlighted\">592</a>\n<a href=\"#593\" id=\"593\" class=\"line-highlighted\">593</a>\n<a href=\"#594\" id=\"594\" class=\"line-highlighted\">594</a>\n<a href=\"#595\" id=\"595\" class=\"line-highlighted\">595</a>\n<a href=\"#596\" id=\"596\" class=\"line-highlighted\">596</a>\n<a href=\"#597\" id=\"597\" class=\"line-highlighted\">597</a>\n<a href=\"#598\" id=\"598\" class=\"line-highlighted\">598</a>\n<a href=\"#599\" id=\"599\" class=\"line-highlighted\">599</a>\n<a href=\"#600\" id=\"600\" class=\"line-highlighted\">600</a>\n<a href=\"#601\" id=\"601\" class=\"line-highlighted\">601</a>\n<a href=\"#602\" id=\"602\" class=\"line-highlighted\">602</a>\n<a href=\"#603\" id=\"603\" class=\"line-highlighted\">603</a>\n<a href=\"#604\" id=\"604\" class=\"line-highlighted\">604</a>\n<a href=\"#605\" id=\"605\" class=\"line-highlighted\">605</a>\n<a href=\"#606\" id=\"606\" class=\"line-highlighted\">606</a>\n<a href=\"#607\" id=\"607\" class=\"line-highlighted\">607</a>\n<a href=\"#608\" id=\"608\" class=\"line-highlighted\">608</a>\n<a href=\"#609\" id=\"609\" class=\"line-highlighted\">609</a>\n<a href=\"#610\" id=\"610\" class=\"line-highlighted\">610</a>\n<a href=\"#611\" id=\"611\" class=\"line-highlighted\">611</a>\n<a href=\"#612\" id=\"612\" class=\"line-highlighted\">612</a>\n<a href=\"#613\" id=\"613\" class=\"line-highlighted\">613</a>\n<a href=\"#614\" id=\"614\" class=\"line-highlighted\">614</a>\n<a href=\"#615\" id=\"615\" class=\"line-highlighted\">615</a>\n<a href=\"#616\" id=\"616\" class=\"line-highlighted\">616</a>\n<a href=\"#617\" id=\"617\" class=\"line-highlighted\">617</a>\n<a href=\"#618\" id=\"618\" class=\"line-highlighted\">618</a>\n<a href=\"#619\" id=\"619\" class=\"line-highlighted\">619</a>\n<a href=\"#620\" id=\"620\" class=\"line-highlighted\">620</a>\n<a href=\"#621\" id=\"621\" class=\"line-highlighted\">621</a>\n<a href=\"#622\" id=\"622\" class=\"line-highlighted\">622</a>\n<a href=\"#623\" id=\"623\" class=\"line-highlighted\">623</a>\n<a href=\"#624\" id=\"624\" class=\"line-highlighted\">624</a>\n<a href=\"#625\" id=\"625\" class=\"line-highlighted\">625</a>\n<a href=\"#626\" id=\"626\" class=\"line-highlighted\">626</a>\n<a href=\"#627\" id=\"627\" class=\"line-highlighted\">627</a>\n<a href=\"#628\" id=\"628\" class=\"line-highlighted\">628</a>\n<a href=\"#629\" id=\"629\" class=\"line-highlighted\">629</a>\n<a href=\"#630\" id=\"630\" class=\"line-highlighted\">630</a>\n<a href=\"#631\" id=\"631\" class=\"line-highlighted\">631</a>\n<a href=\"#632\" id=\"632\" class=\"line-highlighted\">632</a>\n<a href=\"#633\" id=\"633\" class=\"line-highlighted\">633</a>\n<a href=\"#634\" id=\"634\" class=\"line-highlighted\">634</a>\n<a href=\"#635\" id=\"635\" class=\"line-highlighted\">635</a>\n<a href=\"#636\" id=\"636\" class=\"line-highlighted\">636</a>\n<a href=\"#637\" id=\"637\" class=\"line-highlighted\">637</a>\n<a href=\"#638\" id=\"638\" class=\"line-highlighted\">638</a>\n<a href=\"#639\" id=\"639\" class=\"line-highlighted\">639</a>\n<a href=\"#640\" id=\"640\" class=\"line-highlighted\">640</a>\n<a href=\"#641\" id=\"641\" class=\"line-highlighted\">641</a>\n<a href=\"#642\" id=\"642\" class=\"line-highlighted\">642</a>\n<a href=\"#643\" id=\"643\" class=\"line-highlighted\">643</a>\n<a href=\"#644\" id=\"644\" class=\"line-highlighted\">644</a>\n<a href=\"#645\" id=\"645\" class=\"line-highlighted\">645</a>\n<a href=\"#646\" id=\"646\" class=\"line-highlighted\">646</a>\n<a href=\"#647\" id=\"647\" class=\"line-highlighted\">647</a>\n<a href=\"#648\" id=\"648\" class=\"line-highlighted\">648</a>\n<a href=\"#649\" id=\"649\" class=\"line-highlighted\">649</a>\n<a href=\"#650\" id=\"650\" class=\"line-highlighted\">650</a>\n<a href=\"#651\" id=\"651\" class=\"line-highlighted\">651</a>\n<a href=\"#652\" id=\"652\" class=\"line-highlighted\">652</a>\n<a href=\"#653\" id=\"653\" class=\"line-highlighted\">653</a>\n<a href=\"#654\" id=\"654\" class=\"line-highlighted\">654</a>\n<a href=\"#655\" id=\"655\" class=\"line-highlighted\">655</a>\n<a href=\"#656\" id=\"656\" class=\"line-highlighted\">656</a>\n<a href=\"#657\" id=\"657\" class=\"line-highlighted\">657</a>\n<a href=\"#658\" id=\"658\" class=\"line-highlighted\">658</a>\n<a href=\"#659\" id=\"659\" class=\"line-highlighted\">659</a>\n<a href=\"#660\" id=\"660\" class=\"line-highlighted\">660</a>\n<a href=\"#661\" id=\"661\" class=\"line-highlighted\">661</a>\n<a href=\"#662\" id=\"662\" class=\"line-highlighted\">662</a>\n<a href=\"#663\" id=\"663\" class=\"line-highlighted\">663</a>\n<a href=\"#664\" id=\"664\" class=\"line-highlighted\">664</a>\n<a href=\"#665\" id=\"665\" class=\"line-highlighted\">665</a>\n<a href=\"#666\" id=\"666\" class=\"line-highlighted\">666</a>\n<a href=\"#667\" id=\"667\" class=\"line-highlighted\">667</a>\n<a href=\"#668\" id=\"668\" class=\"line-highlighted\">668</a>\n<a href=\"#669\" id=\"669\" class=\"line-highlighted\">669</a>\n<a href=\"#670\" id=\"670\" class=\"line-highlighted\">670</a>\n<a href=\"#671\" id=\"671\" class=\"line-highlighted\">671</a>\n<a href=\"#672\" id=\"672\" class=\"line-highlighted\">672</a>\n<a href=\"#673\" id=\"673\" class=\"line-highlighted\">673</a>\n<a href=\"#674\" id=\"674\" class=\"line-highlighted\">674</a>\n<a href=\"#675\" id=\"675\" class=\"line-highlighted\">675</a>\n<a href=\"#676\" id=\"676\" class=\"line-highlighted\">676</a>\n<a href=\"#677\" id=\"677\" class=\"line-highlighted\">677</a>\n<a href=\"#678\" id=\"678\" class=\"line-highlighted\">678</a>\n<a href=\"#679\" id=\"679\" class=\"line-highlighted\">679</a>\n<a href=\"#680\" id=\"680\" class=\"line-highlighted\">680</a>\n<a href=\"#681\" id=\"681\" class=\"line-highlighted\">681</a>\n<a href=\"#682\" id=\"682\" class=\"line-highlighted\">682</a>\n<a href=\"#683\" id=\"683\" class=\"line-highlighted\">683</a>\n<a href=\"#684\" id=\"684\" class=\"line-highlighted\">684</a>\n<a href=\"#685\" id=\"685\" class=\"line-highlighted\">685</a>\n<a href=\"#686\" id=\"686\" class=\"line-highlighted\">686</a>\n<a href=\"#687\" id=\"687\" class=\"line-highlighted\">687</a>\n<a href=\"#688\" id=\"688\" class=\"line-highlighted\">688</a>\n<a href=\"#689\" id=\"689\" class=\"line-highlighted\">689</a>\n<a href=\"#690\" id=\"690\" class=\"line-highlighted\">690</a>\n<a href=\"#691\" id=\"691\" class=\"line-highlighted\">691</a>\n<a href=\"#692\" id=\"692\" class=\"line-highlighted\">692</a>\n<a href=\"#693\" id=\"693\" class=\"line-highlighted\">693</a>\n<a href=\"#694\" id=\"694\" class=\"line-highlighted\">694</a>\n<a href=\"#695\" id=\"695\" class=\"line-highlighted\">695</a>\n<a href=\"#696\" id=\"696\" class=\"line-highlighted\">696</a>\n<a href=\"#697\" id=\"697\" class=\"line-highlighted\">697</a>\n<a href=\"#698\" id=\"698\" class=\"line-highlighted\">698</a>\n<a href=\"#699\" id=\"699\" class=\"line-highlighted\">699</a>\n<a href=\"#700\" id=\"700\" class=\"line-highlighted\">700</a>\n<a href=\"#701\" id=\"701\" class=\"line-highlighted\">701</a>\n<a href=\"#702\" id=\"702\" class=\"line-highlighted\">702</a>\n<a href=\"#703\" id=\"703\" class=\"line-highlighted\">703</a>\n<a href=\"#704\" id=\"704\" class=\"line-highlighted\">704</a>\n<a href=\"#705\" id=\"705\" class=\"line-highlighted\">705</a>\n<a href=\"#706\" id=\"706\" class=\"line-highlighted\">706</a>\n<a href=\"#707\" id=\"707\" class=\"line-highlighted\">707</a>\n<a href=\"#708\" id=\"708\" class=\"line-highlighted\">708</a>\n<a href=\"#709\" id=\"709\" class=\"line-highlighted\">709</a>\n<a href=\"#710\" id=\"710\" class=\"line-highlighted\">710</a>\n<a href=\"#711\" id=\"711\" class=\"line-highlighted\">711</a>\n<a href=\"#712\" id=\"712\" class=\"line-highlighted\">712</a>\n<a href=\"#713\" id=\"713\" class=\"line-highlighted\">713</a>\n<a href=\"#714\" id=\"714\" class=\"line-highlighted\">714</a>\n<a href=\"#715\" id=\"715\" class=\"line-highlighted\">715</a>\n<a href=\"#716\" id=\"716\" class=\"line-highlighted\">716</a>\n<a href=\"#717\" id=\"717\" class=\"line-highlighted\">717</a>\n<a href=\"#718\" id=\"718\" class=\"line-highlighted\">718</a>\n<a href=\"#719\" id=\"719\" class=\"line-highlighted\">719</a>\n<a href=\"#720\" id=\"720\" class=\"line-highlighted\">720</a>\n<a href=\"#721\" id=\"721\" class=\"line-highlighted\">721</a>\n<a href=\"#722\" id=\"722\" class=\"line-highlighted\">722</a>\n<a href=\"#723\" id=\"723\" class=\"line-highlighted\">723</a>\n<a href=\"#724\" id=\"724\" class=\"line-highlighted\">724</a>\n<a href=\"#725\" id=\"725\" class=\"line-highlighted\">725</a>\n<a href=\"#726\" id=\"726\" class=\"line-highlighted\">726</a>\n<a href=\"#727\" id=\"727\" class=\"line-highlighted\">727</a>\n<a href=\"#728\" id=\"728\" class=\"line-highlighted\">728</a>\n<a href=\"#729\" id=\"729\" class=\"line-highlighted\">729</a>\n<a href=\"#730\" id=\"730\" class=\"line-highlighted\">730</a>\n<a href=\"#731\" id=\"731\" class=\"line-highlighted\">731</a>\n<a href=\"#732\" id=\"732\" class=\"line-highlighted\">732</a>\n<a href=\"#733\" id=\"733\" class=\"line-highlighted\">733</a>\n<a href=\"#734\" id=\"734\" class=\"line-highlighted\">734</a>\n<a href=\"#735\" id=\"735\" class=\"line-highlighted\">735</a>\n<a href=\"#736\" id=\"736\" class=\"line-highlighted\">736</a>\n<a href=\"#737\" id=\"737\" class=\"line-highlighted\">737</a>\n<a href=\"#738\" id=\"738\" class=\"line-highlighted\">738</a>\n<a href=\"#739\" id=\"739\" class=\"line-highlighted\">739</a>\n<a href=\"#740\" id=\"740\" class=\"line-highlighted\">740</a>\n<a href=\"#741\" id=\"741\" class=\"line-highlighted\">741</a>\n<a href=\"#742\" id=\"742\" class=\"line-highlighted\">742</a>\n<a href=\"#743\" id=\"743\" class=\"line-highlighted\">743</a>\n<a href=\"#744\" id=\"744\" class=\"line-highlighted\">744</a>\n<a href=\"#745\" id=\"745\" class=\"line-highlighted\">745</a>\n<a href=\"#746\" id=\"746\" class=\"line-highlighted\">746</a>\n<a href=\"#747\" id=\"747\" class=\"line-highlighted\">747</a>\n<a href=\"#748\" id=\"748\" class=\"line-highlighted\">748</a>\n<a href=\"#749\" id=\"749\" class=\"line-highlighted\">749</a>\n<a href=\"#750\" id=\"750\" class=\"line-highlighted\">750</a>\n<a href=\"#751\" id=\"751\" class=\"line-highlighted\">751</a>\n<a href=\"#752\" id=\"752\" class=\"line-highlighted\">752</a>\n<a href=\"#753\" id=\"753\" class=\"line-highlighted\">753</a>\n<a href=\"#754\" id=\"754\" class=\"line-highlighted\">754</a>\n<a href=\"#755\" id=\"755\" class=\"line-highlighted\">755</a>\n<a href=\"#756\" id=\"756\" class=\"line-highlighted\">756</a>\n<a href=\"#757\" id=\"757\" class=\"line-highlighted\">757</a>\n<a href=\"#758\" id=\"758\" class=\"line-highlighted\">758</a>\n<a href=\"#759\" id=\"759\" class=\"line-highlighted\">759</a>\n<a href=\"#760\" id=\"760\" class=\"line-highlighted\">760</a>\n<a href=\"#761\" id=\"761\" class=\"line-highlighted\">761</a>\n<a href=\"#762\" id=\"762\" class=\"line-highlighted\">762</a>\n<a href=\"#763\" id=\"763\" class=\"line-highlighted\">763</a>\n<a href=\"#764\" id=\"764\" class=\"line-highlighted\">764</a>\n<a href=\"#765\" id=\"765\" class=\"line-highlighted\">765</a>\n<a href=\"#766\" id=\"766\" class=\"line-highlighted\">766</a>\n<a href=\"#767\" id=\"767\" class=\"line-highlighted\">767</a>\n<a href=\"#768\" id=\"768\" class=\"line-highlighted\">768</a>\n<a href=\"#769\" id=\"769\" class=\"line-highlighted\">769</a>\n<a href=\"#770\" id=\"770\" class=\"line-highlighted\">770</a>\n<a href=\"#771\" id=\"771\" class=\"line-highlighted\">771</a>\n<a href=\"#772\" id=\"772\" class=\"line-highlighted\">772</a>\n<a href=\"#773\" id=\"773\" class=\"line-highlighted\">773</a>\n<a href=\"#774\" id=\"774\" class=\"line-highlighted\">774</a>\n<a href=\"#775\" id=\"775\" class=\"line-highlighted\">775</a>\n<a href=\"#776\" id=\"776\" class=\"line-highlighted\">776</a>\n<a href=\"#777\" id=\"777\" class=\"line-highlighted\">777</a>\n<a href=\"#778\" id=\"778\" class=\"line-highlighted\">778</a>\n<a href=\"#779\" id=\"779\" class=\"line-highlighted\">779</a>\n<a href=\"#780\" id=\"780\" class=\"line-highlighted\">780</a>\n<a href=\"#781\" id=\"781\" class=\"line-highlighted\">781</a>\n<a href=\"#782\" id=\"782\" class=\"line-highlighted\">782</a>\n<a href=\"#783\" id=\"783\" class=\"line-highlighted\">783</a>\n<a href=\"#784\" id=\"784\" class=\"line-highlighted\">784</a>\n<a href=\"#785\" id=\"785\" class=\"line-highlighted\">785</a>\n<a href=\"#786\" id=\"786\" class=\"line-highlighted\">786</a>\n<a href=\"#787\" id=\"787\" class=\"line-highlighted\">787</a>\n<a href=\"#788\" id=\"788\" class=\"line-highlighted\">788</a>\n<a href=\"#789\" id=\"789\" class=\"line-highlighted\">789</a>\n<a href=\"#790\" id=\"790\" class=\"line-highlighted\">790</a>\n<a href=\"#791\" id=\"791\" class=\"line-highlighted\">791</a>\n<a href=\"#792\" id=\"792\" class=\"line-highlighted\">792</a>\n<a href=\"#793\" id=\"793\" class=\"line-highlighted\">793</a>\n<a href=\"#794\" id=\"794\" class=\"line-highlighted\">794</a>\n<a href=\"#795\" id=\"795\" class=\"line-highlighted\">795</a>\n<a href=\"#796\" id=\"796\" class=\"line-highlighted\">796</a>\n<a href=\"#797\" id=\"797\" class=\"line-highlighted\">797</a>\n<a href=\"#798\" id=\"798\" class=\"line-highlighted\">798</a>\n<a href=\"#799\" id=\"799\" class=\"line-highlighted\">799</a>\n<a href=\"#800\" id=\"800\" class=\"line-highlighted\">800</a>\n<a href=\"#801\" id=\"801\" class=\"line-highlighted\">801</a>\n<a href=\"#802\" id=\"802\" class=\"line-highlighted\">802</a>\n<a href=\"#803\" id=\"803\" class=\"line-highlighted\">803</a>\n<a href=\"#804\" id=\"804\" class=\"line-highlighted\">804</a>\n<a href=\"#805\" id=\"805\" class=\"line-highlighted\">805</a>\n<a href=\"#806\" id=\"806\" class=\"line-highlighted\">806</a>\n<a href=\"#807\" id=\"807\" class=\"line-highlighted\">807</a>\n<a href=\"#808\" id=\"808\" class=\"line-highlighted\">808</a>\n<a href=\"#809\" id=\"809\" class=\"line-highlighted\">809</a>\n<a href=\"#810\" id=\"810\" class=\"line-highlighted\">810</a>\n<a href=\"#811\" id=\"811\" class=\"line-highlighted\">811</a>\n<a href=\"#812\" id=\"812\" class=\"line-highlighted\">812</a>\n<a href=\"#813\" id=\"813\" class=\"line-highlighted\">813</a>\n<a href=\"#814\" id=\"814\" class=\"line-highlighted\">814</a>\n<a href=\"#815\" id=\"815\" class=\"line-highlighted\">815</a>\n<a href=\"#816\" id=\"816\" class=\"line-highlighted\">816</a>\n<a href=\"#817\" id=\"817\" class=\"line-highlighted\">817</a>\n<a href=\"#818\" id=\"818\" class=\"line-highlighted\">818</a>\n<a href=\"#819\" id=\"819\" class=\"line-highlighted\">819</a>\n<a href=\"#820\" id=\"820\" class=\"line-highlighted\">820</a>\n<a href=\"#821\" id=\"821\" class=\"line-highlighted\">821</a>\n<a href=\"#822\" id=\"822\" class=\"line-highlighted\">822</a>\n<a href=\"#823\" id=\"823\" class=\"line-highlighted\">823</a>\n<a href=\"#824\" id=\"824\" class=\"line-highlighted\">824</a>\n<a href=\"#825\" id=\"825\" class=\"line-highlighted\">825</a>\n<a href=\"#826\" id=\"826\" class=\"line-highlighted\">826</a>\n<a href=\"#827\" id=\"827\" class=\"line-highlighted\">827</a>\n<a href=\"#828\" id=\"828\" class=\"line-highlighted\">828</a>\n<a href=\"#829\" id=\"829\" class=\"line-highlighted\">829</a>\n<a href=\"#830\" id=\"830\" class=\"line-highlighted\">830</a>\n<a href=\"#831\" id=\"831\" class=\"line-highlighted\">831</a>\n<a href=\"#832\" id=\"832\" class=\"line-highlighted\">832</a>\n<a href=\"#833\" id=\"833\" class=\"line-highlighted\">833</a>\n<a href=\"#834\" id=\"834\" class=\"line-highlighted\">834</a>\n<a href=\"#835\" id=\"835\" class=\"line-highlighted\">835</a>\n<a href=\"#836\" id=\"836\" class=\"line-highlighted\">836</a>\n<a href=\"#837\" id=\"837\" class=\"line-highlighted\">837</a>\n<a href=\"#838\" id=\"838\" class=\"line-highlighted\">838</a>\n<a href=\"#839\" id=\"839\" class=\"line-highlighted\">839</a>\n<a href=\"#840\" id=\"840\" class=\"line-highlighted\">840</a>\n<a href=\"#841\" id=\"841\" class=\"line-highlighted\">841</a>\n<a href=\"#842\" id=\"842\" class=\"line-highlighted\">842</a>\n<a href=\"#843\" id=\"843\" class=\"line-highlighted\">843</a>\n<a href=\"#844\" id=\"844\" class=\"line-highlighted\">844</a>\n<a href=\"#845\" id=\"845\" class=\"line-highlighted\">845</a>\n<a href=\"#846\" id=\"846\" class=\"line-highlighted\">846</a>\n<a href=\"#847\" id=\"847\" class=\"line-highlighted\">847</a>\n<a href=\"#848\" id=\"848\" class=\"line-highlighted\">848</a>\n<a href=\"#849\" id=\"849\" class=\"line-highlighted\">849</a>\n<a href=\"#850\" id=\"850\" class=\"line-highlighted\">850</a>\n<a href=\"#851\" id=\"851\" class=\"line-highlighted\">851</a>\n<a href=\"#852\" id=\"852\" class=\"line-highlighted\">852</a>\n<a href=\"#853\" id=\"853\" class=\"line-highlighted\">853</a>\n<a href=\"#854\" id=\"854\" class=\"line-highlighted\">854</a>\n<a href=\"#855\" id=\"855\" class=\"line-highlighted\">855</a>\n<a href=\"#856\" id=\"856\" class=\"line-highlighted\">856</a>\n<a href=\"#857\" id=\"857\" class=\"line-highlighted\">857</a>\n<a href=\"#858\" id=\"858\" class=\"line-highlighted\">858</a>\n<a href=\"#859\" id=\"859\" class=\"line-highlighted\">859</a>\n<a href=\"#860\" id=\"860\" class=\"line-highlighted\">860</a>\n<a href=\"#861\" id=\"861\" class=\"line-highlighted\">861</a>\n<a href=\"#862\" id=\"862\" class=\"line-highlighted\">862</a>\n<a href=\"#863\" id=\"863\" class=\"line-highlighted\">863</a>\n<a href=\"#864\" id=\"864\" class=\"line-highlighted\">864</a>\n<a href=\"#865\" id=\"865\" class=\"line-highlighted\">865</a>\n<a href=\"#866\" id=\"866\" class=\"line-highlighted\">866</a>\n<a href=\"#867\" id=\"867\" class=\"line-highlighted\">867</a>\n<a href=\"#868\" id=\"868\" class=\"line-highlighted\">868</a>\n<a href=\"#869\" id=\"869\" class=\"line-highlighted\">869</a>\n<a href=\"#870\" id=\"870\" class=\"line-highlighted\">870</a>\n<a href=\"#871\" id=\"871\" class=\"line-highlighted\">871</a>\n<a href=\"#872\" id=\"872\" class=\"line-highlighted\">872</a>\n<a href=\"#873\" id=\"873\" class=\"line-highlighted\">873</a>\n<a href=\"#874\" id=\"874\" class=\"line-highlighted\">874</a>\n<a href=\"#875\" id=\"875\" class=\"line-highlighted\">875</a>\n<a href=\"#876\" id=\"876\" class=\"line-highlighted\">876</a>\n<a href=\"#877\" id=\"877\" class=\"line-highlighted\">877</a>\n<a href=\"#878\" id=\"878\" class=\"line-highlighted\">878</a>\n<a href=\"#879\" id=\"879\" class=\"line-highlighted\">879</a>\n<a href=\"#880\" id=\"880\" class=\"line-highlighted\">880</a>\n<a href=\"#881\" id=\"881\" class=\"line-highlighted\">881</a>\n<a href=\"#882\" id=\"882\" class=\"line-highlighted\">882</a>\n<a href=\"#883\" id=\"883\" class=\"line-highlighted\">883</a>\n<a href=\"#884\" id=\"884\" class=\"line-highlighted\">884</a>\n<a href=\"#885\" id=\"885\" class=\"line-highlighted\">885</a>\n<a href=\"#886\" id=\"886\" class=\"line-highlighted\">886</a>\n<a href=\"#887\" id=\"887\" class=\"line-highlighted\">887</a>\n<a href=\"#888\" id=\"888\" class=\"line-highlighted\">888</a>\n<a href=\"#889\" id=\"889\" class=\"line-highlighted\">889</a>\n<a href=\"#890\" id=\"890\" class=\"line-highlighted\">890</a>\n<a href=\"#891\" id=\"891\" class=\"line-highlighted\">891</a>\n<a href=\"#892\" id=\"892\" class=\"line-highlighted\">892</a>\n<a href=\"#893\" id=\"893\" class=\"line-highlighted\">893</a>\n<a href=\"#894\" id=\"894\" class=\"line-highlighted\">894</a>\n<a href=\"#895\" id=\"895\" class=\"line-highlighted\">895</a>\n<a href=\"#896\" id=\"896\" class=\"line-highlighted\">896</a>\n<a href=\"#897\" id=\"897\" class=\"line-highlighted\">897</a>\n<a href=\"#898\" id=\"898\" class=\"line-highlighted\">898</a>\n<a href=\"#899\" id=\"899\" class=\"line-highlighted\">899</a>\n<a href=\"#900\" id=\"900\" class=\"line-highlighted\">900</a>\n<a href=\"#901\" id=\"901\" class=\"line-highlighted\">901</a>\n<a href=\"#902\" id=\"902\" class=\"line-highlighted\">902</a>\n<a href=\"#903\" id=\"903\" class=\"line-highlighted\">903</a>\n<a href=\"#904\" id=\"904\" class=\"line-highlighted\">904</a>\n<a href=\"#905\" id=\"905\" class=\"line-highlighted\">905</a>\n<a href=\"#906\" id=\"906\" class=\"line-highlighted\">906</a>\n<a href=\"#907\" id=\"907\" class=\"line-highlighted\">907</a>\n<a href=\"#908\" id=\"908\" class=\"line-highlighted\">908</a>\n<a href=\"#909\" id=\"909\" class=\"line-highlighted\">909</a>\n<a href=\"#910\" id=\"910\" class=\"line-highlighted\">910</a>\n<a href=\"#911\" id=\"911\" class=\"line-highlighted\">911</a>\n<a href=\"#912\" id=\"912\" class=\"line-highlighted\">912</a>\n<a href=\"#913\" id=\"913\" class=\"line-highlighted\">913</a>\n<a href=\"#914\" id=\"914\" class=\"line-highlighted\">914</a>\n<a href=\"#915\" id=\"915\" class=\"line-highlighted\">915</a>\n<a href=\"#916\" id=\"916\" class=\"line-highlighted\">916</a>\n<a href=\"#917\" id=\"917\" class=\"line-highlighted\">917</a>\n<a href=\"#918\" id=\"918\" class=\"line-highlighted\">918</a>\n<a href=\"#919\" id=\"919\" class=\"line-highlighted\">919</a>\n<a href=\"#920\" id=\"920\" class=\"line-highlighted\">920</a>\n<a href=\"#921\" id=\"921\" class=\"line-highlighted\">921</a>\n<a href=\"#922\" id=\"922\" class=\"line-highlighted\">922</a>\n<a href=\"#923\" id=\"923\" class=\"line-highlighted\">923</a>\n<a href=\"#924\" id=\"924\" class=\"line-highlighted\">924</a>\n<a href=\"#925\" id=\"925\" class=\"line-highlighted\">925</a>\n<a href=\"#926\" id=\"926\" class=\"line-highlighted\">926</a>\n<a href=\"#927\" id=\"927\" class=\"line-highlighted\">927</a>\n<a href=\"#928\" id=\"928\" class=\"line-highlighted\">928</a>\n<a href=\"#929\" id=\"929\" class=\"line-highlighted\">929</a>\n<a href=\"#930\" id=\"930\" class=\"line-highlighted\">930</a>\n<a href=\"#931\" id=\"931\" class=\"line-highlighted\">931</a>\n<a href=\"#932\" id=\"932\" class=\"line-highlighted\">932</a>\n<a href=\"#933\" id=\"933\" class=\"line-highlighted\">933</a>\n<a href=\"#934\" id=\"934\" class=\"line-highlighted\">934</a>\n<a href=\"#935\" id=\"935\" class=\"line-highlighted\">935</a>\n<a href=\"#936\" id=\"936\" class=\"line-highlighted\">936</a>\n<a href=\"#937\" id=\"937\" class=\"line-highlighted\">937</a>\n<a href=\"#938\" id=\"938\" class=\"line-highlighted\">938</a>\n<a href=\"#939\" id=\"939\" class=\"line-highlighted\">939</a>\n<a href=\"#940\" id=\"940\" class=\"line-highlighted\">940</a>\n<a href=\"#941\" id=\"941\" class=\"line-highlighted\">941</a>\n<a href=\"#942\" id=\"942\" class=\"line-highlighted\">942</a>\n<a href=\"#943\" id=\"943\" class=\"line-highlighted\">943</a>\n<a href=\"#944\" id=\"944\" class=\"line-highlighted\">944</a>\n<a href=\"#945\" id=\"945\" class=\"line-highlighted\">945</a>\n<a href=\"#946\" id=\"946\" class=\"line-highlighted\">946</a>\n<a href=\"#947\" id=\"947\" class=\"line-highlighted\">947</a>\n<a href=\"#948\" id=\"948\" class=\"line-highlighted\">948</a>\n<a href=\"#949\" id=\"949\" class=\"line-highlighted\">949</a>\n<a href=\"#950\" id=\"950\" class=\"line-highlighted\">950</a>\n<a href=\"#951\" id=\"951\" class=\"line-highlighted\">951</a>\n<a href=\"#952\" id=\"952\" class=\"line-highlighted\">952</a>\n<a href=\"#953\" id=\"953\" class=\"line-highlighted\">953</a>\n<a href=\"#954\" id=\"954\" class=\"line-highlighted\">954</a>\n<a href=\"#955\" id=\"955\" class=\"line-highlighted\">955</a>\n<a href=\"#956\" id=\"956\" class=\"line-highlighted\">956</a>\n<a href=\"#957\" id=\"957\" class=\"line-highlighted\">957</a>\n<a href=\"#958\" id=\"958\" class=\"line-highlighted\">958</a>\n<a href=\"#959\" id=\"959\" class=\"line-highlighted\">959</a>\n<a href=\"#960\" id=\"960\" class=\"line-highlighted\">960</a>\n<a href=\"#961\" id=\"961\" class=\"line-highlighted\">961</a>\n<a href=\"#962\" id=\"962\" class=\"line-highlighted\">962</a>\n<a href=\"#963\" id=\"963\" class=\"line-highlighted\">963</a>\n<a href=\"#964\" id=\"964\" class=\"line-highlighted\">964</a>\n<a href=\"#965\" id=\"965\" class=\"line-highlighted\">965</a>\n<a href=\"#966\" id=\"966\" class=\"line-highlighted\">966</a>\n<a href=\"#967\" id=\"967\" class=\"line-highlighted\">967</a>\n<a href=\"#968\" id=\"968\" class=\"line-highlighted\">968</a>\n<a href=\"#969\" id=\"969\" class=\"line-highlighted\">969</a>\n<a href=\"#970\" id=\"970\" class=\"line-highlighted\">970</a>\n<a href=\"#971\" id=\"971\" class=\"line-highlighted\">971</a>\n<a href=\"#972\" id=\"972\" class=\"line-highlighted\">972</a>\n<a href=\"#973\" id=\"973\" class=\"line-highlighted\">973</a>\n<a href=\"#974\" id=\"974\" class=\"line-highlighted\">974</a>\n<a href=\"#975\" id=\"975\" class=\"line-highlighted\">975</a>\n<a href=\"#976\" id=\"976\" class=\"line-highlighted\">976</a>\n<a href=\"#977\" id=\"977\" class=\"line-highlighted\">977</a>\n<a href=\"#978\" id=\"978\" class=\"line-highlighted\">978</a>\n<a href=\"#979\" id=\"979\" class=\"line-highlighted\">979</a>\n<a href=\"#980\" id=\"980\" class=\"line-highlighted\">980</a>\n<a href=\"#981\" id=\"981\" class=\"line-highlighted\">981</a>\n<a href=\"#982\" id=\"982\" class=\"line-highlighted\">982</a>\n<a href=\"#983\" id=\"983\" class=\"line-highlighted\">983</a>\n<a href=\"#984\" id=\"984\" class=\"line-highlighted\">984</a>\n<a href=\"#985\" id=\"985\" class=\"line-highlighted\">985</a>\n<a href=\"#986\" id=\"986\" class=\"line-highlighted\">986</a>\n<a href=\"#987\" id=\"987\" class=\"line-highlighted\">987</a>\n<a href=\"#988\" id=\"988\" class=\"line-highlighted\">988</a>\n<a href=\"#989\" id=\"989\" class=\"line-highlighted\">989</a>\n<a href=\"#990\" id=\"990\" class=\"line-highlighted\">990</a>\n<a href=\"#991\" id=\"991\" class=\"line-highlighted\">991</a>\n<a href=\"#992\" id=\"992\" class=\"line-highlighted\">992</a>\n<a href=\"#993\" id=\"993\" class=\"line-highlighted\">993</a>\n<a href=\"#994\" id=\"994\" class=\"line-highlighted\">994</a>\n<a href=\"#995\" id=\"995\" class=\"line-highlighted\">995</a>\n<a href=\"#996\" id=\"996\" class=\"line-highlighted\">996</a>\n<a href=\"#997\" id=\"997\" class=\"line-highlighted\">997</a>\n<a href=\"#998\" id=\"998\" class=\"line-highlighted\">998</a>\n<a href=\"#999\" id=\"999\" class=\"line-highlighted\">999</a>\n<a href=\"#1000\" id=\"1000\" class=\"line-highlighted\">1000</a>\n<a href=\"#1001\" id=\"1001\" class=\"line-highlighted\">1001</a>\n<a href=\"#1002\" id=\"1002\" class=\"line-highlighted\">1002</a>\n<a href=\"#1003\" id=\"1003\" class=\"line-highlighted\">1003</a>\n<a href=\"#1004\" id=\"1004\" class=\"line-highlighted\">1004</a>\n<a href=\"#1005\" id=\"1005\" class=\"line-highlighted\">1005</a>\n<a href=\"#1006\" id=\"1006\" class=\"line-highlighted\">1006</a>\n<a href=\"#1007\" id=\"1007\" class=\"line-highlighted\">1007</a>\n<a href=\"#1008\" id=\"1008\" class=\"line-highlighted\">1008</a>\n<a href=\"#1009\" id=\"1009\" class=\"line-highlighted\">1009</a>\n<a href=\"#1010\" id=\"1010\" class=\"line-highlighted\">1010</a>\n<a href=\"#1011\" id=\"1011\" class=\"line-highlighted\">1011</a>\n<a href=\"#1012\" id=\"1012\" class=\"line-highlighted\">1012</a>\n<a href=\"#1013\" id=\"1013\" class=\"line-highlighted\">1013</a>\n<a href=\"#1014\" id=\"1014\" class=\"line-highlighted\">1014</a>\n<a href=\"#1015\" id=\"1015\" class=\"line-highlighted\">1015</a>\n<a href=\"#1016\" id=\"1016\" class=\"line-highlighted\">1016</a>\n<a href=\"#1017\" id=\"1017\" class=\"line-highlighted\">1017</a>\n<a href=\"#1018\" id=\"1018\" class=\"line-highlighted\">1018</a>\n<a href=\"#1019\" id=\"1019\" class=\"line-highlighted\">1019</a>\n<a href=\"#1020\" id=\"1020\" class=\"line-highlighted\">1020</a>\n<a href=\"#1021\" id=\"1021\" class=\"line-highlighted\">1021</a>\n<a href=\"#1022\" id=\"1022\" class=\"line-highlighted\">1022</a>\n<a href=\"#1023\" id=\"1023\" class=\"line-highlighted\">1023</a>\n<a href=\"#1024\" id=\"1024\" class=\"line-highlighted\">1024</a>\n<a href=\"#1025\" id=\"1025\" class=\"line-highlighted\">1025</a>\n<a href=\"#1026\" id=\"1026\" class=\"line-highlighted\">1026</a>\n<a href=\"#1027\" id=\"1027\" class=\"line-highlighted\">1027</a>\n<a href=\"#1028\" id=\"1028\" class=\"line-highlighted\">1028</a>\n<a href=\"#1029\" id=\"1029\" class=\"line-highlighted\">1029</a>\n<a href=\"#1030\" id=\"1030\" class=\"line-highlighted\">1030</a>\n<a href=\"#1031\" id=\"1031\" class=\"line-highlighted\">1031</a>\n<a href=\"#1032\" id=\"1032\" class=\"line-highlighted\">1032</a>\n<a href=\"#1033\" id=\"1033\" class=\"line-highlighted\">1033</a>\n<a href=\"#1034\" id=\"1034\" class=\"line-highlighted\">1034</a>\n<a href=\"#1035\" id=\"1035\" class=\"line-highlighted\">1035</a>\n<a href=\"#1036\" id=\"1036\" class=\"line-highlighted\">1036</a>\n<a href=\"#1037\" id=\"1037\" class=\"line-highlighted\">1037</a>\n<a href=\"#1038\" id=\"1038\" class=\"line-highlighted\">1038</a>\n<a href=\"#1039\" id=\"1039\" class=\"line-highlighted\">1039</a>\n<a href=\"#1040\" id=\"1040\" class=\"line-highlighted\">1040</a>\n<a href=\"#1041\" id=\"1041\" class=\"line-highlighted\">1041</a>\n<a href=\"#1042\" id=\"1042\" class=\"line-highlighted\">1042</a>\n<a href=\"#1043\" id=\"1043\" class=\"line-highlighted\">1043</a>\n<a href=\"#1044\" id=\"1044\" class=\"line-highlighted\">1044</a>\n<a href=\"#1045\" id=\"1045\" class=\"line-highlighted\">1045</a>\n<a href=\"#1046\" id=\"1046\" class=\"line-highlighted\">1046</a>\n<a href=\"#1047\" id=\"1047\" class=\"line-highlighted\">1047</a>\n<a href=\"#1048\" id=\"1048\" class=\"line-highlighted\">1048</a>\n<a href=\"#1049\" id=\"1049\" class=\"line-highlighted\">1049</a>\n<a href=\"#1050\" id=\"1050\" class=\"line-highlighted\">1050</a>\n<a href=\"#1051\" id=\"1051\" class=\"line-highlighted\">1051</a>\n<a href=\"#1052\" id=\"1052\" class=\"line-highlighted\">1052</a>\n<a href=\"#1053\" id=\"1053\" class=\"line-highlighted\">1053</a>\n<a href=\"#1054\" id=\"1054\" class=\"line-highlighted\">1054</a>\n<a href=\"#1055\" id=\"1055\" class=\"line-highlighted\">1055</a>\n<a href=\"#1056\" id=\"1056\" class=\"line-highlighted\">1056</a>\n<a href=\"#1057\" id=\"1057\" class=\"line-highlighted\">1057</a>\n<a href=\"#1058\" id=\"1058\" class=\"line-highlighted\">1058</a>\n<a href=\"#1059\" id=\"1059\" class=\"line-highlighted\">1059</a>\n<a href=\"#1060\" id=\"1060\" class=\"line-highlighted\">1060</a>\n<a href=\"#1061\" id=\"1061\" class=\"line-highlighted\">1061</a>\n<a href=\"#1062\" id=\"1062\" class=\"line-highlighted\">1062</a>\n<a href=\"#1063\" id=\"1063\" class=\"line-highlighted\">1063</a>\n<a href=\"#1064\" id=\"1064\" class=\"line-highlighted\">1064</a>\n<a href=\"#1065\" id=\"1065\" class=\"line-highlighted\">1065</a>\n<a href=\"#1066\" id=\"1066\" class=\"line-highlighted\">1066</a>\n<a href=\"#1067\" id=\"1067\" class=\"line-highlighted\">1067</a>\n<a href=\"#1068\" id=\"1068\" class=\"line-highlighted\">1068</a>\n<a href=\"#1069\" id=\"1069\" class=\"line-highlighted\">1069</a>\n<a href=\"#1070\" id=\"1070\" class=\"line-highlighted\">1070</a>\n<a href=\"#1071\" id=\"1071\" class=\"line-highlighted\">1071</a>\n<a href=\"#1072\" id=\"1072\" class=\"line-highlighted\">1072</a>\n<a href=\"#1073\" id=\"1073\" class=\"line-highlighted\">1073</a>\n<a href=\"#1074\" id=\"1074\" class=\"line-highlighted\">1074</a>\n<a href=\"#1075\" id=\"1075\" class=\"line-highlighted\">1075</a>\n<a href=\"#1076\" id=\"1076\" class=\"line-highlighted\">1076</a>\n<a href=\"#1077\" id=\"1077\" class=\"line-highlighted\">1077</a>\n<a href=\"#1078\" id=\"1078\" class=\"line-highlighted\">1078</a>\n<a href=\"#1079\" id=\"1079\" class=\"line-highlighted\">1079</a>\n<a href=\"#1080\" id=\"1080\" class=\"line-highlighted\">1080</a>\n<a href=\"#1081\" id=\"1081\" class=\"line-highlighted\">1081</a>\n<a href=\"#1082\" id=\"1082\" class=\"line-highlighted\">1082</a>\n<a href=\"#1083\" id=\"1083\" class=\"line-highlighted\">1083</a>\n<a href=\"#1084\" id=\"1084\" class=\"line-highlighted\">1084</a>\n<a href=\"#1085\" id=\"1085\" class=\"line-highlighted\">1085</a>\n<a href=\"#1086\" id=\"1086\" class=\"line-highlighted\">1086</a>\n<a href=\"#1087\" id=\"1087\" class=\"line-highlighted\">1087</a>\n<a href=\"#1088\" id=\"1088\" class=\"line-highlighted\">1088</a>\n<a href=\"#1089\" id=\"1089\" class=\"line-highlighted\">1089</a>\n<a href=\"#1090\" id=\"1090\" class=\"line-highlighted\">1090</a>\n<a href=\"#1091\" id=\"1091\" class=\"line-highlighted\">1091</a>\n<a href=\"#1092\" id=\"1092\" class=\"line-highlighted\">1092</a>\n<a href=\"#1093\" id=\"1093\" class=\"line-highlighted\">1093</a>\n<a href=\"#1094\" id=\"1094\" class=\"line-highlighted\">1094</a>\n<a href=\"#1095\" id=\"1095\" class=\"line-highlighted\">1095</a>\n<a href=\"#1096\" id=\"1096\" class=\"line-highlighted\">1096</a>\n<a href=\"#1097\" id=\"1097\" class=\"line-highlighted\">1097</a>\n<a href=\"#1098\" id=\"1098\" class=\"line-highlighted\">1098</a>\n<a href=\"#1099\" id=\"1099\" class=\"line-highlighted\">1099</a>\n<a href=\"#1100\" id=\"1100\" class=\"line-highlighted\">1100</a>\n<a href=\"#1101\" id=\"1101\" class=\"line-highlighted\">1101</a>\n<a href=\"#1102\" id=\"1102\" class=\"line-highlighted\">1102</a>\n<a href=\"#1103\" id=\"1103\" class=\"line-highlighted\">1103</a>\n<a href=\"#1104\" id=\"1104\" class=\"line-highlighted\">1104</a>\n<a href=\"#1105\" id=\"1105\" class=\"line-highlighted\">1105</a>\n<a href=\"#1106\" id=\"1106\" class=\"line-highlighted\">1106</a>\n<a href=\"#1107\" id=\"1107\" class=\"line-highlighted\">1107</a>\n<a href=\"#1108\" id=\"1108\" class=\"line-highlighted\">1108</a>\n<a href=\"#1109\" id=\"1109\" class=\"line-highlighted\">1109</a>\n<a href=\"#1110\" id=\"1110\" class=\"line-highlighted\">1110</a>\n<a href=\"#1111\" id=\"1111\" class=\"line-highlighted\">1111</a>\n<a href=\"#1112\" id=\"1112\" class=\"line-highlighted\">1112</a>\n<a href=\"#1113\" id=\"1113\" class=\"line-highlighted\">1113</a>\n<a href=\"#1114\" id=\"1114\" class=\"line-highlighted\">1114</a>\n<a href=\"#1115\" id=\"1115\" class=\"line-highlighted\">1115</a>\n<a href=\"#1116\" id=\"1116\" class=\"line-highlighted\">1116</a>\n<a href=\"#1117\" id=\"1117\" class=\"line-highlighted\">1117</a>\n<a href=\"#1118\" id=\"1118\" class=\"line-highlighted\">1118</a>\n<a href=\"#1119\" id=\"1119\" class=\"line-highlighted\">1119</a>\n<a href=\"#1120\" id=\"1120\" class=\"line-highlighted\">1120</a>\n<a href=\"#1121\" id=\"1121\" class=\"line-highlighted\">1121</a>\n<a href=\"#1122\" id=\"1122\" class=\"line-highlighted\">1122</a>\n<a href=\"#1123\" id=\"1123\" class=\"line-highlighted\">1123</a>\n<a href=\"#1124\" id=\"1124\" class=\"line-highlighted\">1124</a>\n<a href=\"#1125\" id=\"1125\" class=\"line-highlighted\">1125</a>\n<a href=\"#1126\" id=\"1126\" class=\"line-highlighted\">1126</a>\n<a href=\"#1127\" id=\"1127\" class=\"line-highlighted\">1127</a>\n<a href=\"#1128\" id=\"1128\" class=\"line-highlighted\">1128</a>\n<a href=\"#1129\" id=\"1129\" class=\"line-highlighted\">1129</a>\n<a href=\"#1130\" id=\"1130\" class=\"line-highlighted\">1130</a>\n<a href=\"#1131\" id=\"1131\" class=\"line-highlighted\">1131</a>\n<a href=\"#1132\" id=\"1132\" class=\"line-highlighted\">1132</a>\n<a href=\"#1133\" id=\"1133\" class=\"line-highlighted\">1133</a>\n<a href=\"#1134\" id=\"1134\" class=\"line-highlighted\">1134</a>\n<a href=\"#1135\" id=\"1135\" class=\"line-highlighted\">1135</a>\n<a href=\"#1136\" id=\"1136\" class=\"line-highlighted\">1136</a>\n<a href=\"#1137\" id=\"1137\" class=\"line-highlighted\">1137</a>\n<a href=\"#1138\" id=\"1138\" class=\"line-highlighted\">1138</a>\n<a href=\"#1139\" id=\"1139\" class=\"line-highlighted\">1139</a>\n<a href=\"#1140\" id=\"1140\" class=\"line-highlighted\">1140</a>\n<a href=\"#1141\" id=\"1141\" class=\"line-highlighted\">1141</a>\n<a href=\"#1142\" id=\"1142\" class=\"line-highlighted\">1142</a>\n<a href=\"#1143\" id=\"1143\" class=\"line-highlighted\">1143</a>\n<a href=\"#1144\" id=\"1144\" class=\"line-highlighted\">1144</a>\n<a href=\"#1145\" id=\"1145\" class=\"line-highlighted\">1145</a>\n<a href=\"#1146\" id=\"1146\" class=\"line-highlighted\">1146</a>\n<a href=\"#1147\" id=\"1147\" class=\"line-highlighted\">1147</a>\n<a href=\"#1148\" id=\"1148\" class=\"line-highlighted\">1148</a>\n<a href=\"#1149\" id=\"1149\" class=\"line-highlighted\">1149</a>\n<a href=\"#1150\" id=\"1150\" class=\"line-highlighted\">1150</a>\n<a href=\"#1151\" id=\"1151\" class=\"line-highlighted\">1151</a>\n<a href=\"#1152\" id=\"1152\" class=\"line-highlighted\">1152</a>\n<a href=\"#1153\" id=\"1153\" class=\"line-highlighted\">1153</a>\n<a href=\"#1154\" id=\"1154\" class=\"line-highlighted\">1154</a>\n<a href=\"#1155\" id=\"1155\" class=\"line-highlighted\">1155</a>\n<a href=\"#1156\" id=\"1156\" class=\"line-highlighted\">1156</a>\n<a href=\"#1157\" id=\"1157\" class=\"line-highlighted\">1157</a>\n<a href=\"#1158\" id=\"1158\" class=\"line-highlighted\">1158</a>\n<a href=\"#1159\" id=\"1159\" class=\"line-highlighted\">1159</a>\n<a href=\"#1160\" id=\"1160\" class=\"line-highlighted\">1160</a>\n<a href=\"#1161\" id=\"1161\" class=\"line-highlighted\">1161</a>\n<a href=\"#1162\" id=\"1162\" class=\"line-highlighted\">1162</a>\n<a href=\"#1163\" id=\"1163\" class=\"line-highlighted\">1163</a>\n<a href=\"#1164\" id=\"1164\" class=\"line-highlighted\">1164</a>\n<a href=\"#1165\" id=\"1165\" class=\"line-highlighted\">1165</a>\n<a href=\"#1166\" id=\"1166\" class=\"line-highlighted\">1166</a>\n<a href=\"#1167\" id=\"1167\" class=\"line-highlighted\">1167</a>\n<a href=\"#1168\" id=\"1168\" class=\"line-highlighted\">1168</a>\n<a href=\"#1169\" id=\"1169\" class=\"line-highlighted\">1169</a>\n<a href=\"#1170\" id=\"1170\" class=\"line-highlighted\">1170</a>\n<a href=\"#1171\" id=\"1171\" class=\"line-highlighted\">1171</a>\n<a href=\"#1172\" id=\"1172\" class=\"line-highlighted\">1172</a>\n<a href=\"#1173\" id=\"1173\" class=\"line-highlighted\">1173</a>\n<a href=\"#1174\" id=\"1174\" class=\"line-highlighted\">1174</a>\n<a href=\"#1175\" id=\"1175\" class=\"line-highlighted\">1175</a>\n<a href=\"#1176\" id=\"1176\" class=\"line-highlighted\">1176</a>\n<a href=\"#1177\" id=\"1177\" class=\"line-highlighted\">1177</a>\n<a href=\"#1178\" id=\"1178\" class=\"line-highlighted\">1178</a>\n<a href=\"#1179\" id=\"1179\" class=\"line-highlighted\">1179</a>\n<a href=\"#1180\" id=\"1180\" class=\"line-highlighted\">1180</a>\n<a href=\"#1181\" id=\"1181\" class=\"line-highlighted\">1181</a>\n<a href=\"#1182\" id=\"1182\" class=\"line-highlighted\">1182</a>\n<a href=\"#1183\" id=\"1183\" class=\"line-highlighted\">1183</a>\n<a href=\"#1184\" id=\"1184\" class=\"line-highlighted\">1184</a>\n<a href=\"#1185\" id=\"1185\" class=\"line-highlighted\">1185</a>\n<a href=\"#1186\" id=\"1186\" class=\"line-highlighted\">1186</a>\n<a href=\"#1187\" id=\"1187\" class=\"line-highlighted\">1187</a>\n<a href=\"#1188\" id=\"1188\" class=\"line-highlighted\">1188</a>\n<a href=\"#1189\" id=\"1189\" class=\"line-highlighted\">1189</a>\n<a href=\"#1190\" id=\"1190\" class=\"line-highlighted\">1190</a>\n<a href=\"#1191\" id=\"1191\" class=\"line-highlighted\">1191</a>\n<a href=\"#1192\" id=\"1192\" class=\"line-highlighted\">1192</a>\n<a href=\"#1193\" id=\"1193\" class=\"line-highlighted\">1193</a>\n<a href=\"#1194\" id=\"1194\" class=\"line-highlighted\">1194</a>\n<a href=\"#1195\" id=\"1195\" class=\"line-highlighted\">1195</a>\n<a href=\"#1196\" id=\"1196\" class=\"line-highlighted\">1196</a>\n<a href=\"#1197\" id=\"1197\" class=\"line-highlighted\">1197</a>\n<a href=\"#1198\" id=\"1198\" class=\"line-highlighted\">1198</a>\n<a href=\"#1199\" id=\"1199\" class=\"line-highlighted\">1199</a>\n<a href=\"#1200\" id=\"1200\" class=\"line-highlighted\">1200</a>\n<a href=\"#1201\" id=\"1201\" class=\"line-highlighted\">1201</a>\n<a href=\"#1202\" id=\"1202\" class=\"line-highlighted\">1202</a>\n<a href=\"#1203\" id=\"1203\" class=\"line-highlighted\">1203</a>\n<a href=\"#1204\" id=\"1204\" class=\"line-highlighted\">1204</a>\n<a href=\"#1205\" id=\"1205\" class=\"line-highlighted\">1205</a>\n<a href=\"#1206\" id=\"1206\" class=\"line-highlighted\">1206</a>\n<a href=\"#1207\" id=\"1207\" class=\"line-highlighted\">1207</a>\n<a href=\"#1208\" id=\"1208\" class=\"line-highlighted\">1208</a>\n<a href=\"#1209\" id=\"1209\" class=\"line-highlighted\">1209</a>\n<a href=\"#1210\" id=\"1210\" class=\"line-highlighted\">1210</a>\n<a href=\"#1211\" id=\"1211\" class=\"line-highlighted\">1211</a>\n<a href=\"#1212\" id=\"1212\" class=\"line-highlighted\">1212</a>\n<a href=\"#1213\" id=\"1213\" class=\"line-highlighted\">1213</a>\n<a href=\"#1214\" id=\"1214\" class=\"line-highlighted\">1214</a>\n<a href=\"#1215\" id=\"1215\" class=\"line-highlighted\">1215</a>\n<a href=\"#1216\" id=\"1216\" class=\"line-highlighted\">1216</a>\n<a href=\"#1217\" id=\"1217\" class=\"line-highlighted\">1217</a>\n<a href=\"#1218\" id=\"1218\" class=\"line-highlighted\">1218</a>\n<a href=\"#1219\" id=\"1219\" class=\"line-highlighted\">1219</a>\n<a href=\"#1220\" id=\"1220\" class=\"line-highlighted\">1220</a>\n<a href=\"#1221\" id=\"1221\" class=\"line-highlighted\">1221</a>\n<a href=\"#1222\" id=\"1222\" class=\"line-highlighted\">1222</a>\n<a href=\"#1223\" id=\"1223\" class=\"line-highlighted\">1223</a>\n<a href=\"#1224\" id=\"1224\" class=\"line-highlighted\">1224</a>\n<a href=\"#1225\" id=\"1225\" class=\"line-highlighted\">1225</a>\n<a href=\"#1226\" id=\"1226\" class=\"line-highlighted\">1226</a>\n<a href=\"#1227\" id=\"1227\" class=\"line-highlighted\">1227</a>\n<a href=\"#1228\" id=\"1228\" class=\"line-highlighted\">1228</a>\n</pre></div><pre class=\"rust\"><code><span class=\"doccomment\">//! Constants for the `f32` single-precision floating point type.\n//!\n//! *[See also the `f32` primitive type](primitive@f32).*\n//!\n//! Mathematically significant numbers are provided in the `consts` sub-module.\n//!\n//! For the constants defined directly in this module\n//! (as distinct from those defined in the `consts` sub-module),\n//! new code should instead use the associated constants\n//! defined directly on the `f32` type.\n\n</span><span class=\"attr\">#![stable(feature = <span class=\"string\">\"rust1\"</span>, since = <span class=\"string\">\"1.0.0\"</span>)]\n#![allow(missing_docs)]\n\n#[cfg(test)]\n</span><span class=\"kw\">mod </span>tests;\n\n<span class=\"attr\">#[cfg(not(test))]\n</span><span class=\"kw\">use </span><span class=\"kw\">crate</span>::intrinsics;\n<span class=\"attr\">#[cfg(not(test))]\n</span><span class=\"kw\">use </span><span class=\"kw\">crate</span>::sys::cmath;\n\n<span class=\"attr\">#[stable(feature = <span class=\"string\">\"rust1\"</span>, since = <span class=\"string\">\"1.0.0\"</span>)]\n#[allow(deprecated, deprecated_in_future)]\n</span><span class=\"kw\">pub use </span>core::f32::{\n    consts, DIGITS, EPSILON, INFINITY, MANTISSA_DIGITS, MAX, MAX_10_EXP, MAX_EXP, MIN, MIN_10_EXP,\n    MIN_EXP, MIN_POSITIVE, NAN, NEG_INFINITY, RADIX,\n};\n\n<span class=\"attr\">#[cfg(not(test))]\n</span><span class=\"kw\">impl </span>f32 {\n    <span class=\"doccomment\">/// Returns the largest integer less than or equal to `self`.\n    ///\n    /// This function always returns the precise result.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let f = 3.7_f32;\n    /// let g = 3.0_f32;\n    /// let h = -3.7_f32;\n    ///\n    /// assert_eq!(f.floor(), 3.0);\n    /// assert_eq!(g.floor(), 3.0);\n    /// assert_eq!(h.floor(), -4.0);\n    /// ```\n    </span><span class=\"attr\">#[rustc_allow_incoherent_impl]\n    #[must_use = <span class=\"string\">\"method returns a new number and does not mutate the original value\"</span>]\n    #[stable(feature = <span class=\"string\">\"rust1\"</span>, since = <span class=\"string\">\"1.0.0\"</span>)]\n    #[inline]\n    </span><span class=\"kw\">pub fn </span>floor(<span class=\"self\">self</span>) -&gt; f32 {\n        <span class=\"kw\">unsafe </span>{ intrinsics::floorf32(<span class=\"self\">self</span>) }\n    }\n\n    <span class=\"doccomment\">/// Returns the smallest integer greater than or equal to `self`.\n    ///\n    /// This function always returns the precise result.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let f = 3.01_f32;\n    /// let g = 4.0_f32;\n    ///\n    /// assert_eq!(f.ceil(), 4.0);\n    /// assert_eq!(g.ceil(), 4.0);\n    /// ```\n    </span><span class=\"attr\">#[doc(alias = <span class=\"string\">\"ceiling\"</span>)]\n    #[rustc_allow_incoherent_impl]\n    #[must_use = <span class=\"string\">\"method returns a new number and does not mutate the original value\"</span>]\n    #[stable(feature = <span class=\"string\">\"rust1\"</span>, since = <span class=\"string\">\"1.0.0\"</span>)]\n    #[inline]\n    </span><span class=\"kw\">pub fn </span>ceil(<span class=\"self\">self</span>) -&gt; f32 {\n        <span class=\"kw\">unsafe </span>{ intrinsics::ceilf32(<span class=\"self\">self</span>) }\n    }\n\n    <span class=\"doccomment\">/// Returns the nearest integer to `self`. If a value is half-way between two\n    /// integers, round away from `0.0`.\n    ///\n    /// This function always returns the precise result.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let f = 3.3_f32;\n    /// let g = -3.3_f32;\n    /// let h = -3.7_f32;\n    /// let i = 3.5_f32;\n    /// let j = 4.5_f32;\n    ///\n    /// assert_eq!(f.round(), 3.0);\n    /// assert_eq!(g.round(), -3.0);\n    /// assert_eq!(h.round(), -4.0);\n    /// assert_eq!(i.round(), 4.0);\n    /// assert_eq!(j.round(), 5.0);\n    /// ```\n    </span><span class=\"attr\">#[rustc_allow_incoherent_impl]\n    #[must_use = <span class=\"string\">\"method returns a new number and does not mutate the original value\"</span>]\n    #[stable(feature = <span class=\"string\">\"rust1\"</span>, since = <span class=\"string\">\"1.0.0\"</span>)]\n    #[inline]\n    </span><span class=\"kw\">pub fn </span>round(<span class=\"self\">self</span>) -&gt; f32 {\n        <span class=\"kw\">unsafe </span>{ intrinsics::roundf32(<span class=\"self\">self</span>) }\n    }\n\n    <span class=\"doccomment\">/// Returns the nearest integer to a number. Rounds half-way cases to the number\n    /// with an even least significant digit.\n    ///\n    /// This function always returns the precise result.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let f = 3.3_f32;\n    /// let g = -3.3_f32;\n    /// let h = 3.5_f32;\n    /// let i = 4.5_f32;\n    ///\n    /// assert_eq!(f.round_ties_even(), 3.0);\n    /// assert_eq!(g.round_ties_even(), -3.0);\n    /// assert_eq!(h.round_ties_even(), 4.0);\n    /// assert_eq!(i.round_ties_even(), 4.0);\n    /// ```\n    </span><span class=\"attr\">#[rustc_allow_incoherent_impl]\n    #[must_use = <span class=\"string\">\"method returns a new number and does not mutate the original value\"</span>]\n    #[stable(feature = <span class=\"string\">\"round_ties_even\"</span>, since = <span class=\"string\">\"1.77.0\"</span>)]\n    #[inline]\n    </span><span class=\"kw\">pub fn </span>round_ties_even(<span class=\"self\">self</span>) -&gt; f32 {\n        <span class=\"kw\">unsafe </span>{ intrinsics::rintf32(<span class=\"self\">self</span>) }\n    }\n\n    <span class=\"doccomment\">/// Returns the integer part of `self`.\n    /// This means that non-integer numbers are always truncated towards zero.\n    ///\n    /// This function always returns the precise result.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let f = 3.7_f32;\n    /// let g = 3.0_f32;\n    /// let h = -3.7_f32;\n    ///\n    /// assert_eq!(f.trunc(), 3.0);\n    /// assert_eq!(g.trunc(), 3.0);\n    /// assert_eq!(h.trunc(), -3.0);\n    /// ```\n    </span><span class=\"attr\">#[doc(alias = <span class=\"string\">\"truncate\"</span>)]\n    #[rustc_allow_incoherent_impl]\n    #[must_use = <span class=\"string\">\"method returns a new number and does not mutate the original value\"</span>]\n    #[stable(feature = <span class=\"string\">\"rust1\"</span>, since = <span class=\"string\">\"1.0.0\"</span>)]\n    #[inline]\n    </span><span class=\"kw\">pub fn </span>trunc(<span class=\"self\">self</span>) -&gt; f32 {\n        <span class=\"kw\">unsafe </span>{ intrinsics::truncf32(<span class=\"self\">self</span>) }\n    }\n\n    <span class=\"doccomment\">/// Returns the fractional part of `self`.\n    ///\n    /// This function always returns the precise result.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let x = 3.6_f32;\n    /// let y = -3.6_f32;\n    /// let abs_difference_x = (x.fract() - 0.6).abs();\n    /// let abs_difference_y = (y.fract() - (-0.6)).abs();\n    ///\n    /// assert!(abs_difference_x &lt;= f32::EPSILON);\n    /// assert!(abs_difference_y &lt;= f32::EPSILON);\n    /// ```\n    </span><span class=\"attr\">#[rustc_allow_incoherent_impl]\n    #[must_use = <span class=\"string\">\"method returns a new number and does not mutate the original value\"</span>]\n    #[stable(feature = <span class=\"string\">\"rust1\"</span>, since = <span class=\"string\">\"1.0.0\"</span>)]\n    #[inline]\n    </span><span class=\"kw\">pub fn </span>fract(<span class=\"self\">self</span>) -&gt; f32 {\n        <span class=\"self\">self </span>- <span class=\"self\">self</span>.trunc()\n    }\n\n    <span class=\"doccomment\">/// Computes the absolute value of `self`.\n    ///\n    /// This function always returns the precise result.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let x = 3.5_f32;\n    /// let y = -3.5_f32;\n    ///\n    /// assert_eq!(x.abs(), x);\n    /// assert_eq!(y.abs(), -y);\n    ///\n    /// assert!(f32::NAN.abs().is_nan());\n    /// ```\n    </span><span class=\"attr\">#[rustc_allow_incoherent_impl]\n    #[must_use = <span class=\"string\">\"method returns a new number and does not mutate the original value\"</span>]\n    #[stable(feature = <span class=\"string\">\"rust1\"</span>, since = <span class=\"string\">\"1.0.0\"</span>)]\n    #[inline]\n    </span><span class=\"kw\">pub fn </span>abs(<span class=\"self\">self</span>) -&gt; f32 {\n        <span class=\"kw\">unsafe </span>{ intrinsics::fabsf32(<span class=\"self\">self</span>) }\n    }\n\n    <span class=\"doccomment\">/// Returns a number that represents the sign of `self`.\n    ///\n    /// - `1.0` if the number is positive, `+0.0` or `INFINITY`\n    /// - `-1.0` if the number is negative, `-0.0` or `NEG_INFINITY`\n    /// - NaN if the number is NaN\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let f = 3.5_f32;\n    ///\n    /// assert_eq!(f.signum(), 1.0);\n    /// assert_eq!(f32::NEG_INFINITY.signum(), -1.0);\n    ///\n    /// assert!(f32::NAN.signum().is_nan());\n    /// ```\n    </span><span class=\"attr\">#[rustc_allow_incoherent_impl]\n    #[must_use = <span class=\"string\">\"method returns a new number and does not mutate the original value\"</span>]\n    #[stable(feature = <span class=\"string\">\"rust1\"</span>, since = <span class=\"string\">\"1.0.0\"</span>)]\n    #[inline]\n    </span><span class=\"kw\">pub fn </span>signum(<span class=\"self\">self</span>) -&gt; f32 {\n        <span class=\"kw\">if </span><span class=\"self\">self</span>.is_nan() { <span class=\"self\">Self</span>::NAN } <span class=\"kw\">else </span>{ <span class=\"number\">1.0_f32</span>.copysign(<span class=\"self\">self</span>) }\n    }\n\n    <span class=\"doccomment\">/// Returns a number composed of the magnitude of `self` and the sign of\n    /// `sign`.\n    ///\n    /// Equal to `self` if the sign of `self` and `sign` are the same, otherwise\n    /// equal to `-self`. If `self` is a NaN, then a NaN with the sign bit of\n    /// `sign` is returned. Note, however, that conserving the sign bit on NaN\n    /// across arithmetical operations is not generally guaranteed.\n    /// See [explanation of NaN as a special value](primitive@f32) for more info.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let f = 3.5_f32;\n    ///\n    /// assert_eq!(f.copysign(0.42), 3.5_f32);\n    /// assert_eq!(f.copysign(-0.42), -3.5_f32);\n    /// assert_eq!((-f).copysign(0.42), 3.5_f32);\n    /// assert_eq!((-f).copysign(-0.42), -3.5_f32);\n    ///\n    /// assert!(f32::NAN.copysign(1.0).is_nan());\n    /// ```\n    </span><span class=\"attr\">#[rustc_allow_incoherent_impl]\n    #[must_use = <span class=\"string\">\"method returns a new number and does not mutate the original value\"</span>]\n    #[inline]\n    #[stable(feature = <span class=\"string\">\"copysign\"</span>, since = <span class=\"string\">\"1.35.0\"</span>)]\n    </span><span class=\"kw\">pub fn </span>copysign(<span class=\"self\">self</span>, sign: f32) -&gt; f32 {\n        <span class=\"kw\">unsafe </span>{ intrinsics::copysignf32(<span class=\"self\">self</span>, sign) }\n    }\n\n    <span class=\"doccomment\">/// Fused multiply-add. Computes `(self * a) + b` with only one rounding\n    /// error, yielding a more accurate result than an unfused multiply-add.\n    ///\n    /// Using `mul_add` *may* be more performant than an unfused multiply-add if\n    /// the target architecture has a dedicated `fma` CPU instruction. However,\n    /// this is not always true, and will be heavily dependant on designing\n    /// algorithms with specific target hardware in mind.\n    ///\n    /// # Precision\n    ///\n    /// The result of this operation is guaranteed to be the rounded\n    /// infinite-precision result. It is specified by IEEE 754 as\n    /// `fusedMultiplyAdd` and guaranteed not to change.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let m = 10.0_f32;\n    /// let x = 4.0_f32;\n    /// let b = 60.0_f32;\n    ///\n    /// assert_eq!(m.mul_add(x, b), 100.0);\n    /// assert_eq!(m * x + b, 100.0);\n    ///\n    /// let one_plus_eps = 1.0_f32 + f32::EPSILON;\n    /// let one_minus_eps = 1.0_f32 - f32::EPSILON;\n    /// let minus_one = -1.0_f32;\n    ///\n    /// // The exact result (1 + eps) * (1 - eps) = 1 - eps * eps.\n    /// assert_eq!(one_plus_eps.mul_add(one_minus_eps, minus_one), -f32::EPSILON * f32::EPSILON);\n    /// // Different rounding with the non-fused multiply and add.\n    /// assert_eq!(one_plus_eps * one_minus_eps + minus_one, 0.0);\n    /// ```\n    </span><span class=\"attr\">#[rustc_allow_incoherent_impl]\n    #[must_use = <span class=\"string\">\"method returns a new number and does not mutate the original value\"</span>]\n    #[stable(feature = <span class=\"string\">\"rust1\"</span>, since = <span class=\"string\">\"1.0.0\"</span>)]\n    #[inline]\n    </span><span class=\"kw\">pub fn </span>mul_add(<span class=\"self\">self</span>, a: f32, b: f32) -&gt; f32 {\n        <span class=\"kw\">unsafe </span>{ intrinsics::fmaf32(<span class=\"self\">self</span>, a, b) }\n    }\n\n    <span class=\"doccomment\">/// Calculates Euclidean division, the matching method for `rem_euclid`.\n    ///\n    /// This computes the integer `n` such that\n    /// `self = n * rhs + self.rem_euclid(rhs)`.\n    /// In other words, the result is `self / rhs` rounded to the integer `n`\n    /// such that `self &gt;= n * rhs`.\n    ///\n    /// # Precision\n    ///\n    /// The result of this operation is guaranteed to be the rounded\n    /// infinite-precision result.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let a: f32 = 7.0;\n    /// let b = 4.0;\n    /// assert_eq!(a.div_euclid(b), 1.0); // 7.0 &gt; 4.0 * 1.0\n    /// assert_eq!((-a).div_euclid(b), -2.0); // -7.0 &gt;= 4.0 * -2.0\n    /// assert_eq!(a.div_euclid(-b), -1.0); // 7.0 &gt;= -4.0 * -1.0\n    /// assert_eq!((-a).div_euclid(-b), 2.0); // -7.0 &gt;= -4.0 * 2.0\n    /// ```\n    </span><span class=\"attr\">#[rustc_allow_incoherent_impl]\n    #[must_use = <span class=\"string\">\"method returns a new number and does not mutate the original value\"</span>]\n    #[inline]\n    #[stable(feature = <span class=\"string\">\"euclidean_division\"</span>, since = <span class=\"string\">\"1.38.0\"</span>)]\n    </span><span class=\"kw\">pub fn </span>div_euclid(<span class=\"self\">self</span>, rhs: f32) -&gt; f32 {\n        <span class=\"kw\">let </span>q = (<span class=\"self\">self </span>/ rhs).trunc();\n        <span class=\"kw\">if </span><span class=\"self\">self </span>% rhs &lt; <span class=\"number\">0.0 </span>{\n            <span class=\"kw\">return if </span>rhs &gt; <span class=\"number\">0.0 </span>{ q - <span class=\"number\">1.0 </span>} <span class=\"kw\">else </span>{ q + <span class=\"number\">1.0 </span>};\n        }\n        q\n    }\n\n    <span class=\"doccomment\">/// Calculates the least nonnegative remainder of `self (mod rhs)`.\n    ///\n    /// In particular, the return value `r` satisfies `0.0 &lt;= r &lt; rhs.abs()` in\n    /// most cases. However, due to a floating point round-off error it can\n    /// result in `r == rhs.abs()`, violating the mathematical definition, if\n    /// `self` is much smaller than `rhs.abs()` in magnitude and `self &lt; 0.0`.\n    /// This result is not an element of the function's codomain, but it is the\n    /// closest floating point number in the real numbers and thus fulfills the\n    /// property `self == self.div_euclid(rhs) * rhs + self.rem_euclid(rhs)`\n    /// approximately.\n    ///\n    /// # Precision\n    ///\n    /// The result of this operation is guaranteed to be the rounded\n    /// infinite-precision result.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let a: f32 = 7.0;\n    /// let b = 4.0;\n    /// assert_eq!(a.rem_euclid(b), 3.0);\n    /// assert_eq!((-a).rem_euclid(b), 1.0);\n    /// assert_eq!(a.rem_euclid(-b), 3.0);\n    /// assert_eq!((-a).rem_euclid(-b), 1.0);\n    /// // limitation due to round-off error\n    /// assert!((-f32::EPSILON).rem_euclid(3.0) != 0.0);\n    /// ```\n    </span><span class=\"attr\">#[doc(alias = <span class=\"string\">\"modulo\"</span>, alias = <span class=\"string\">\"mod\"</span>)]\n    #[rustc_allow_incoherent_impl]\n    #[must_use = <span class=\"string\">\"method returns a new number and does not mutate the original value\"</span>]\n    #[inline]\n    #[stable(feature = <span class=\"string\">\"euclidean_division\"</span>, since = <span class=\"string\">\"1.38.0\"</span>)]\n    </span><span class=\"kw\">pub fn </span>rem_euclid(<span class=\"self\">self</span>, rhs: f32) -&gt; f32 {\n        <span class=\"kw\">let </span>r = <span class=\"self\">self </span>% rhs;\n        <span class=\"kw\">if </span>r &lt; <span class=\"number\">0.0 </span>{ r + rhs.abs() } <span class=\"kw\">else </span>{ r }\n    }\n\n    <span class=\"doccomment\">/// Raises a number to an integer power.\n    ///\n    /// Using this function is generally faster than using `powf`.\n    /// It might have a different sequence of rounding operations than `powf`,\n    /// so the results are not guaranteed to agree.\n    ///\n    /// # Unspecified precision\n    ///\n    /// The precision of this function is non-deterministic. This means it varies by platform, Rust version, and\n    /// can even differ within the same execution from one invocation to the next.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let x = 2.0_f32;\n    /// let abs_difference = (x.powi(2) - (x * x)).abs();\n    ///\n    /// assert!(abs_difference &lt;= f32::EPSILON);\n    /// ```\n    </span><span class=\"attr\">#[rustc_allow_incoherent_impl]\n    #[must_use = <span class=\"string\">\"method returns a new number and does not mutate the original value\"</span>]\n    #[stable(feature = <span class=\"string\">\"rust1\"</span>, since = <span class=\"string\">\"1.0.0\"</span>)]\n    #[inline]\n    </span><span class=\"kw\">pub fn </span>powi(<span class=\"self\">self</span>, n: i32) -&gt; f32 {\n        <span class=\"kw\">unsafe </span>{ intrinsics::powif32(<span class=\"self\">self</span>, n) }\n    }\n\n    <span class=\"doccomment\">/// Raises a number to a floating point power.\n    ///\n    /// # Unspecified precision\n    ///\n    /// The precision of this function is non-deterministic. This means it varies by platform, Rust version, and\n    /// can even differ within the same execution from one invocation to the next.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let x = 2.0_f32;\n    /// let abs_difference = (x.powf(2.0) - (x * x)).abs();\n    ///\n    /// assert!(abs_difference &lt;= f32::EPSILON);\n    /// ```\n    </span><span class=\"attr\">#[rustc_allow_incoherent_impl]\n    #[must_use = <span class=\"string\">\"method returns a new number and does not mutate the original value\"</span>]\n    #[stable(feature = <span class=\"string\">\"rust1\"</span>, since = <span class=\"string\">\"1.0.0\"</span>)]\n    #[inline]\n    </span><span class=\"kw\">pub fn </span>powf(<span class=\"self\">self</span>, n: f32) -&gt; f32 {\n        <span class=\"kw\">unsafe </span>{ intrinsics::powf32(<span class=\"self\">self</span>, n) }\n    }\n\n    <span class=\"doccomment\">/// Returns the square root of a number.\n    ///\n    /// Returns NaN if `self` is a negative number other than `-0.0`.\n    ///\n    /// # Precision\n    ///\n    /// The result of this operation is guaranteed to be the rounded\n    /// infinite-precision result. It is specified by IEEE 754 as `squareRoot`\n    /// and guaranteed not to change.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let positive = 4.0_f32;\n    /// let negative = -4.0_f32;\n    /// let negative_zero = -0.0_f32;\n    ///\n    /// assert_eq!(positive.sqrt(), 2.0);\n    /// assert!(negative.sqrt().is_nan());\n    /// assert!(negative_zero.sqrt() == negative_zero);\n    /// ```\n    </span><span class=\"attr\">#[rustc_allow_incoherent_impl]\n    #[must_use = <span class=\"string\">\"method returns a new number and does not mutate the original value\"</span>]\n    #[stable(feature = <span class=\"string\">\"rust1\"</span>, since = <span class=\"string\">\"1.0.0\"</span>)]\n    #[inline]\n    </span><span class=\"kw\">pub fn </span>sqrt(<span class=\"self\">self</span>) -&gt; f32 {\n        <span class=\"kw\">unsafe </span>{ intrinsics::sqrtf32(<span class=\"self\">self</span>) }\n    }\n\n    <span class=\"doccomment\">/// Returns `e^(self)`, (the exponential function).\n    ///\n    /// # Unspecified precision\n    ///\n    /// The precision of this function is non-deterministic. This means it varies by platform, Rust version, and\n    /// can even differ within the same execution from one invocation to the next.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let one = 1.0f32;\n    /// // e^1\n    /// let e = one.exp();\n    ///\n    /// // ln(e) - 1 == 0\n    /// let abs_difference = (e.ln() - 1.0).abs();\n    ///\n    /// assert!(abs_difference &lt;= f32::EPSILON);\n    /// ```\n    </span><span class=\"attr\">#[rustc_allow_incoherent_impl]\n    #[must_use = <span class=\"string\">\"method returns a new number and does not mutate the original value\"</span>]\n    #[stable(feature = <span class=\"string\">\"rust1\"</span>, since = <span class=\"string\">\"1.0.0\"</span>)]\n    #[inline]\n    </span><span class=\"kw\">pub fn </span>exp(<span class=\"self\">self</span>) -&gt; f32 {\n        <span class=\"kw\">unsafe </span>{ intrinsics::expf32(<span class=\"self\">self</span>) }\n    }\n\n    <span class=\"doccomment\">/// Returns `2^(self)`.\n    ///\n    /// # Unspecified precision\n    ///\n    /// The precision of this function is non-deterministic. This means it varies by platform, Rust version, and\n    /// can even differ within the same execution from one invocation to the next.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let f = 2.0f32;\n    ///\n    /// // 2^2 - 4 == 0\n    /// let abs_difference = (f.exp2() - 4.0).abs();\n    ///\n    /// assert!(abs_difference &lt;= f32::EPSILON);\n    /// ```\n    </span><span class=\"attr\">#[rustc_allow_incoherent_impl]\n    #[must_use = <span class=\"string\">\"method returns a new number and does not mutate the original value\"</span>]\n    #[stable(feature = <span class=\"string\">\"rust1\"</span>, since = <span class=\"string\">\"1.0.0\"</span>)]\n    #[inline]\n    </span><span class=\"kw\">pub fn </span>exp2(<span class=\"self\">self</span>) -&gt; f32 {\n        <span class=\"kw\">unsafe </span>{ intrinsics::exp2f32(<span class=\"self\">self</span>) }\n    }\n\n    <span class=\"doccomment\">/// Returns the natural logarithm of the number.\n    ///\n    /// # Unspecified precision\n    ///\n    /// The precision of this function is non-deterministic. This means it varies by platform, Rust version, and\n    /// can even differ within the same execution from one invocation to the next.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let one = 1.0f32;\n    /// // e^1\n    /// let e = one.exp();\n    ///\n    /// // ln(e) - 1 == 0\n    /// let abs_difference = (e.ln() - 1.0).abs();\n    ///\n    /// assert!(abs_difference &lt;= f32::EPSILON);\n    /// ```\n    </span><span class=\"attr\">#[rustc_allow_incoherent_impl]\n    #[must_use = <span class=\"string\">\"method returns a new number and does not mutate the original value\"</span>]\n    #[stable(feature = <span class=\"string\">\"rust1\"</span>, since = <span class=\"string\">\"1.0.0\"</span>)]\n    #[inline]\n    </span><span class=\"kw\">pub fn </span>ln(<span class=\"self\">self</span>) -&gt; f32 {\n        <span class=\"kw\">unsafe </span>{ intrinsics::logf32(<span class=\"self\">self</span>) }\n    }\n\n    <span class=\"doccomment\">/// Returns the logarithm of the number with respect to an arbitrary base.\n    ///\n    /// The result might not be correctly rounded owing to implementation details;\n    /// `self.log2()` can produce more accurate results for base 2, and\n    /// `self.log10()` can produce more accurate results for base 10.\n    ///\n    /// # Unspecified precision\n    ///\n    /// The precision of this function is non-deterministic. This means it varies by platform, Rust version, and\n    /// can even differ within the same execution from one invocation to the next.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let five = 5.0f32;\n    ///\n    /// // log5(5) - 1 == 0\n    /// let abs_difference = (five.log(5.0) - 1.0).abs();\n    ///\n    /// assert!(abs_difference &lt;= f32::EPSILON);\n    /// ```\n    </span><span class=\"attr\">#[rustc_allow_incoherent_impl]\n    #[must_use = <span class=\"string\">\"method returns a new number and does not mutate the original value\"</span>]\n    #[stable(feature = <span class=\"string\">\"rust1\"</span>, since = <span class=\"string\">\"1.0.0\"</span>)]\n    #[inline]\n    </span><span class=\"kw\">pub fn </span>log(<span class=\"self\">self</span>, base: f32) -&gt; f32 {\n        <span class=\"self\">self</span>.ln() / base.ln()\n    }\n\n    <span class=\"doccomment\">/// Returns the base 2 logarithm of the number.\n    ///\n    /// # Unspecified precision\n    ///\n    /// The precision of this function is non-deterministic. This means it varies by platform, Rust version, and\n    /// can even differ within the same execution from one invocation to the next.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let two = 2.0f32;\n    ///\n    /// // log2(2) - 1 == 0\n    /// let abs_difference = (two.log2() - 1.0).abs();\n    ///\n    /// assert!(abs_difference &lt;= f32::EPSILON);\n    /// ```\n    </span><span class=\"attr\">#[rustc_allow_incoherent_impl]\n    #[must_use = <span class=\"string\">\"method returns a new number and does not mutate the original value\"</span>]\n    #[stable(feature = <span class=\"string\">\"rust1\"</span>, since = <span class=\"string\">\"1.0.0\"</span>)]\n    #[inline]\n    </span><span class=\"kw\">pub fn </span>log2(<span class=\"self\">self</span>) -&gt; f32 {\n        <span class=\"kw\">crate</span>::sys::log2f32(<span class=\"self\">self</span>)\n    }\n\n    <span class=\"doccomment\">/// Returns the base 10 logarithm of the number.\n    ///\n    /// # Unspecified precision\n    ///\n    /// The precision of this function is non-deterministic. This means it varies by platform, Rust version, and\n    /// can even differ within the same execution from one invocation to the next.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let ten = 10.0f32;\n    ///\n    /// // log10(10) - 1 == 0\n    /// let abs_difference = (ten.log10() - 1.0).abs();\n    ///\n    /// assert!(abs_difference &lt;= f32::EPSILON);\n    /// ```\n    </span><span class=\"attr\">#[rustc_allow_incoherent_impl]\n    #[must_use = <span class=\"string\">\"method returns a new number and does not mutate the original value\"</span>]\n    #[stable(feature = <span class=\"string\">\"rust1\"</span>, since = <span class=\"string\">\"1.0.0\"</span>)]\n    #[inline]\n    </span><span class=\"kw\">pub fn </span>log10(<span class=\"self\">self</span>) -&gt; f32 {\n        <span class=\"kw\">unsafe </span>{ intrinsics::log10f32(<span class=\"self\">self</span>) }\n    }\n\n    <span class=\"doccomment\">/// The positive difference of two numbers.\n    ///\n    /// * If `self &lt;= other`: `0.0`\n    /// * Else: `self - other`\n    ///\n    /// # Unspecified precision\n    ///\n    /// The precision of this function is non-deterministic. This means it varies by platform, Rust version, and\n    /// can even differ within the same execution from one invocation to the next.\n    /// This function currently corresponds to the `fdimf` from libc on Unix\n    /// and Windows. Note that this might change in the future.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let x = 3.0f32;\n    /// let y = -3.0f32;\n    ///\n    /// let abs_difference_x = (x.abs_sub(1.0) - 2.0).abs();\n    /// let abs_difference_y = (y.abs_sub(1.0) - 0.0).abs();\n    ///\n    /// assert!(abs_difference_x &lt;= f32::EPSILON);\n    /// assert!(abs_difference_y &lt;= f32::EPSILON);\n    /// ```\n    </span><span class=\"attr\">#[rustc_allow_incoherent_impl]\n    #[must_use = <span class=\"string\">\"method returns a new number and does not mutate the original value\"</span>]\n    #[stable(feature = <span class=\"string\">\"rust1\"</span>, since = <span class=\"string\">\"1.0.0\"</span>)]\n    #[inline]\n    #[deprecated(\n        since = <span class=\"string\">\"1.10.0\"</span>,\n        note = <span class=\"string\">\"you probably meant `(self - other).abs()`: \\\n                this operation is `(self - other).max(0.0)` \\\n                except that `abs_sub` also propagates NaNs (also \\\n                known as `fdimf` in C). If you truly need the positive \\\n                difference, consider using that expression or the C function \\\n                `fdimf`, depending on how you wish to handle NaN (please consider \\\n                filing an issue describing your use-case too).\"\n    </span>)]\n    </span><span class=\"kw\">pub fn </span>abs_sub(<span class=\"self\">self</span>, other: f32) -&gt; f32 {\n        <span class=\"kw\">unsafe </span>{ cmath::fdimf(<span class=\"self\">self</span>, other) }\n    }\n\n    <span class=\"doccomment\">/// Returns the cube root of a number.\n    ///\n    /// # Unspecified precision\n    ///\n    /// The precision of this function is non-deterministic. This means it varies by platform, Rust version, and\n    /// can even differ within the same execution from one invocation to the next.\n    /// This function currently corresponds to the `cbrtf` from libc on Unix\n    /// and Windows. Note that this might change in the future.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let x = 8.0f32;\n    ///\n    /// // x^(1/3) - 2 == 0\n    /// let abs_difference = (x.cbrt() - 2.0).abs();\n    ///\n    /// assert!(abs_difference &lt;= f32::EPSILON);\n    /// ```\n    </span><span class=\"attr\">#[rustc_allow_incoherent_impl]\n    #[must_use = <span class=\"string\">\"method returns a new number and does not mutate the original value\"</span>]\n    #[stable(feature = <span class=\"string\">\"rust1\"</span>, since = <span class=\"string\">\"1.0.0\"</span>)]\n    #[inline]\n    </span><span class=\"kw\">pub fn </span>cbrt(<span class=\"self\">self</span>) -&gt; f32 {\n        <span class=\"kw\">unsafe </span>{ cmath::cbrtf(<span class=\"self\">self</span>) }\n    }\n\n    <span class=\"doccomment\">/// Compute the distance between the origin and a point (`x`, `y`) on the\n    /// Euclidean plane. Equivalently, compute the length of the hypotenuse of a\n    /// right-angle triangle with other sides having length `x.abs()` and\n    /// `y.abs()`.\n    ///\n    /// # Unspecified precision\n    ///\n    /// The precision of this function is non-deterministic. This means it varies by platform, Rust version, and\n    /// can even differ within the same execution from one invocation to the next.\n    /// This function currently corresponds to the `hypotf` from libc on Unix\n    /// and Windows. Note that this might change in the future.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let x = 2.0f32;\n    /// let y = 3.0f32;\n    ///\n    /// // sqrt(x^2 + y^2)\n    /// let abs_difference = (x.hypot(y) - (x.powi(2) + y.powi(2)).sqrt()).abs();\n    ///\n    /// assert!(abs_difference &lt;= f32::EPSILON);\n    /// ```\n    </span><span class=\"attr\">#[rustc_allow_incoherent_impl]\n    #[must_use = <span class=\"string\">\"method returns a new number and does not mutate the original value\"</span>]\n    #[stable(feature = <span class=\"string\">\"rust1\"</span>, since = <span class=\"string\">\"1.0.0\"</span>)]\n    #[inline]\n    </span><span class=\"kw\">pub fn </span>hypot(<span class=\"self\">self</span>, other: f32) -&gt; f32 {\n        <span class=\"kw\">unsafe </span>{ cmath::hypotf(<span class=\"self\">self</span>, other) }\n    }\n\n    <span class=\"doccomment\">/// Computes the sine of a number (in radians).\n    ///\n    /// # Unspecified precision\n    ///\n    /// The precision of this function is non-deterministic. This means it varies by platform, Rust version, and\n    /// can even differ within the same execution from one invocation to the next.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let x = std::f32::consts::FRAC_PI_2;\n    ///\n    /// let abs_difference = (x.sin() - 1.0).abs();\n    ///\n    /// assert!(abs_difference &lt;= f32::EPSILON);\n    /// ```\n    </span><span class=\"attr\">#[rustc_allow_incoherent_impl]\n    #[must_use = <span class=\"string\">\"method returns a new number and does not mutate the original value\"</span>]\n    #[stable(feature = <span class=\"string\">\"rust1\"</span>, since = <span class=\"string\">\"1.0.0\"</span>)]\n    #[inline]\n    </span><span class=\"kw\">pub fn </span>sin(<span class=\"self\">self</span>) -&gt; f32 {\n        <span class=\"kw\">unsafe </span>{ intrinsics::sinf32(<span class=\"self\">self</span>) }\n    }\n\n    <span class=\"doccomment\">/// Computes the cosine of a number (in radians).\n    ///\n    /// # Unspecified precision\n    ///\n    /// The precision of this function is non-deterministic. This means it varies by platform, Rust version, and\n    /// can even differ within the same execution from one invocation to the next.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let x = 2.0 * std::f32::consts::PI;\n    ///\n    /// let abs_difference = (x.cos() - 1.0).abs();\n    ///\n    /// assert!(abs_difference &lt;= f32::EPSILON);\n    /// ```\n    </span><span class=\"attr\">#[rustc_allow_incoherent_impl]\n    #[must_use = <span class=\"string\">\"method returns a new number and does not mutate the original value\"</span>]\n    #[stable(feature = <span class=\"string\">\"rust1\"</span>, since = <span class=\"string\">\"1.0.0\"</span>)]\n    #[inline]\n    </span><span class=\"kw\">pub fn </span>cos(<span class=\"self\">self</span>) -&gt; f32 {\n        <span class=\"kw\">unsafe </span>{ intrinsics::cosf32(<span class=\"self\">self</span>) }\n    }\n\n    <span class=\"doccomment\">/// Computes the tangent of a number (in radians).\n    ///\n    /// # Unspecified precision\n    ///\n    /// The precision of this function is non-deterministic. This means it varies by platform, Rust version, and\n    /// can even differ within the same execution from one invocation to the next.\n    /// This function currently corresponds to the `tanf` from libc on Unix and\n    /// Windows. Note that this might change in the future.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let x = std::f32::consts::FRAC_PI_4;\n    /// let abs_difference = (x.tan() - 1.0).abs();\n    ///\n    /// assert!(abs_difference &lt;= f32::EPSILON);\n    /// ```\n    </span><span class=\"attr\">#[rustc_allow_incoherent_impl]\n    #[must_use = <span class=\"string\">\"method returns a new number and does not mutate the original value\"</span>]\n    #[stable(feature = <span class=\"string\">\"rust1\"</span>, since = <span class=\"string\">\"1.0.0\"</span>)]\n    #[inline]\n    </span><span class=\"kw\">pub fn </span>tan(<span class=\"self\">self</span>) -&gt; f32 {\n        <span class=\"kw\">unsafe </span>{ cmath::tanf(<span class=\"self\">self</span>) }\n    }\n\n    <span class=\"doccomment\">/// Computes the arcsine of a number. Return value is in radians in\n    /// the range [-pi/2, pi/2] or NaN if the number is outside the range\n    /// [-1, 1].\n    ///\n    /// # Unspecified precision\n    ///\n    /// The precision of this function is non-deterministic. This means it varies by platform, Rust version, and\n    /// can even differ within the same execution from one invocation to the next.\n    /// This function currently corresponds to the `asinf` from libc on Unix\n    /// and Windows. Note that this might change in the future.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let f = std::f32::consts::FRAC_PI_2;\n    ///\n    /// // asin(sin(pi/2))\n    /// let abs_difference = (f.sin().asin() - std::f32::consts::FRAC_PI_2).abs();\n    ///\n    /// assert!(abs_difference &lt;= f32::EPSILON);\n    /// ```\n    </span><span class=\"attr\">#[doc(alias = <span class=\"string\">\"arcsin\"</span>)]\n    #[rustc_allow_incoherent_impl]\n    #[must_use = <span class=\"string\">\"method returns a new number and does not mutate the original value\"</span>]\n    #[stable(feature = <span class=\"string\">\"rust1\"</span>, since = <span class=\"string\">\"1.0.0\"</span>)]\n    #[inline]\n    </span><span class=\"kw\">pub fn </span>asin(<span class=\"self\">self</span>) -&gt; f32 {\n        <span class=\"kw\">unsafe </span>{ cmath::asinf(<span class=\"self\">self</span>) }\n    }\n\n    <span class=\"doccomment\">/// Computes the arccosine of a number. Return value is in radians in\n    /// the range [0, pi] or NaN if the number is outside the range\n    /// [-1, 1].\n    ///\n    /// # Unspecified precision\n    ///\n    /// The precision of this function is non-deterministic. This means it varies by platform, Rust version, and\n    /// can even differ within the same execution from one invocation to the next.\n    /// This function currently corresponds to the `acosf` from libc on Unix\n    /// and Windows. Note that this might change in the future.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let f = std::f32::consts::FRAC_PI_4;\n    ///\n    /// // acos(cos(pi/4))\n    /// let abs_difference = (f.cos().acos() - std::f32::consts::FRAC_PI_4).abs();\n    ///\n    /// assert!(abs_difference &lt;= f32::EPSILON);\n    /// ```\n    </span><span class=\"attr\">#[doc(alias = <span class=\"string\">\"arccos\"</span>)]\n    #[rustc_allow_incoherent_impl]\n    #[must_use = <span class=\"string\">\"method returns a new number and does not mutate the original value\"</span>]\n    #[stable(feature = <span class=\"string\">\"rust1\"</span>, since = <span class=\"string\">\"1.0.0\"</span>)]\n    #[inline]\n    </span><span class=\"kw\">pub fn </span>acos(<span class=\"self\">self</span>) -&gt; f32 {\n        <span class=\"kw\">unsafe </span>{ cmath::acosf(<span class=\"self\">self</span>) }\n    }\n\n    <span class=\"doccomment\">/// Computes the arctangent of a number. Return value is in radians in the\n    /// range [-pi/2, pi/2];\n    ///\n    /// # Unspecified precision\n    ///\n    /// The precision of this function is non-deterministic. This means it varies by platform, Rust version, and\n    /// can even differ within the same execution from one invocation to the next.\n    /// This function currently corresponds to the `atanf` from libc on Unix\n    /// and Windows. Note that this might change in the future.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let f = 1.0f32;\n    ///\n    /// // atan(tan(1))\n    /// let abs_difference = (f.tan().atan() - 1.0).abs();\n    ///\n    /// assert!(abs_difference &lt;= f32::EPSILON);\n    /// ```\n    </span><span class=\"attr\">#[doc(alias = <span class=\"string\">\"arctan\"</span>)]\n    #[rustc_allow_incoherent_impl]\n    #[must_use = <span class=\"string\">\"method returns a new number and does not mutate the original value\"</span>]\n    #[stable(feature = <span class=\"string\">\"rust1\"</span>, since = <span class=\"string\">\"1.0.0\"</span>)]\n    #[inline]\n    </span><span class=\"kw\">pub fn </span>atan(<span class=\"self\">self</span>) -&gt; f32 {\n        <span class=\"kw\">unsafe </span>{ cmath::atanf(<span class=\"self\">self</span>) }\n    }\n\n    <span class=\"doccomment\">/// Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`) in radians.\n    ///\n    /// * `x = 0`, `y = 0`: `0`\n    /// * `x &gt;= 0`: `arctan(y/x)` -&gt; `[-pi/2, pi/2]`\n    /// * `y &gt;= 0`: `arctan(y/x) + pi` -&gt; `(pi/2, pi]`\n    /// * `y &lt; 0`: `arctan(y/x) - pi` -&gt; `(-pi, -pi/2)`\n    ///\n    /// # Unspecified precision\n    ///\n    /// The precision of this function is non-deterministic. This means it varies by platform, Rust version, and\n    /// can even differ within the same execution from one invocation to the next.\n    /// This function currently corresponds to the `atan2f` from libc on Unix\n    /// and Windows. Note that this might change in the future.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// // Positive angles measured counter-clockwise\n    /// // from positive x axis\n    /// // -pi/4 radians (45 deg clockwise)\n    /// let x1 = 3.0f32;\n    /// let y1 = -3.0f32;\n    ///\n    /// // 3pi/4 radians (135 deg counter-clockwise)\n    /// let x2 = -3.0f32;\n    /// let y2 = 3.0f32;\n    ///\n    /// let abs_difference_1 = (y1.atan2(x1) - (-std::f32::consts::FRAC_PI_4)).abs();\n    /// let abs_difference_2 = (y2.atan2(x2) - (3.0 * std::f32::consts::FRAC_PI_4)).abs();\n    ///\n    /// assert!(abs_difference_1 &lt;= f32::EPSILON);\n    /// assert!(abs_difference_2 &lt;= f32::EPSILON);\n    /// ```\n    </span><span class=\"attr\">#[rustc_allow_incoherent_impl]\n    #[must_use = <span class=\"string\">\"method returns a new number and does not mutate the original value\"</span>]\n    #[stable(feature = <span class=\"string\">\"rust1\"</span>, since = <span class=\"string\">\"1.0.0\"</span>)]\n    #[inline]\n    </span><span class=\"kw\">pub fn </span>atan2(<span class=\"self\">self</span>, other: f32) -&gt; f32 {\n        <span class=\"kw\">unsafe </span>{ cmath::atan2f(<span class=\"self\">self</span>, other) }\n    }\n\n    <span class=\"doccomment\">/// Simultaneously computes the sine and cosine of the number, `x`. Returns\n    /// `(sin(x), cos(x))`.\n    ///\n    /// # Unspecified precision\n    ///\n    /// The precision of this function is non-deterministic. This means it varies by platform, Rust version, and\n    /// can even differ within the same execution from one invocation to the next.\n    /// This function currently corresponds to the `(f32::sin(x),\n    /// f32::cos(x))`. Note that this might change in the future.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let x = std::f32::consts::FRAC_PI_4;\n    /// let f = x.sin_cos();\n    ///\n    /// let abs_difference_0 = (f.0 - x.sin()).abs();\n    /// let abs_difference_1 = (f.1 - x.cos()).abs();\n    ///\n    /// assert!(abs_difference_0 &lt;= f32::EPSILON);\n    /// assert!(abs_difference_1 &lt;= f32::EPSILON);\n    /// ```\n    </span><span class=\"attr\">#[doc(alias = <span class=\"string\">\"sincos\"</span>)]\n    #[rustc_allow_incoherent_impl]\n    #[stable(feature = <span class=\"string\">\"rust1\"</span>, since = <span class=\"string\">\"1.0.0\"</span>)]\n    #[inline]\n    </span><span class=\"kw\">pub fn </span>sin_cos(<span class=\"self\">self</span>) -&gt; (f32, f32) {\n        (<span class=\"self\">self</span>.sin(), <span class=\"self\">self</span>.cos())\n    }\n\n    <span class=\"doccomment\">/// Returns `e^(self) - 1` in a way that is accurate even if the\n    /// number is close to zero.\n    ///\n    /// # Unspecified precision\n    ///\n    /// The precision of this function is non-deterministic. This means it varies by platform, Rust version, and\n    /// can even differ within the same execution from one invocation to the next.\n    /// This function currently corresponds to the `expm1f` from libc on Unix\n    /// and Windows. Note that this might change in the future.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let x = 1e-8_f32;\n    ///\n    /// // for very small x, e^x is approximately 1 + x + x^2 / 2\n    /// let approx = x + x * x / 2.0;\n    /// let abs_difference = (x.exp_m1() - approx).abs();\n    ///\n    /// assert!(abs_difference &lt; 1e-10);\n    /// ```\n    </span><span class=\"attr\">#[rustc_allow_incoherent_impl]\n    #[must_use = <span class=\"string\">\"method returns a new number and does not mutate the original value\"</span>]\n    #[stable(feature = <span class=\"string\">\"rust1\"</span>, since = <span class=\"string\">\"1.0.0\"</span>)]\n    #[inline]\n    </span><span class=\"kw\">pub fn </span>exp_m1(<span class=\"self\">self</span>) -&gt; f32 {\n        <span class=\"kw\">unsafe </span>{ cmath::expm1f(<span class=\"self\">self</span>) }\n    }\n\n    <span class=\"doccomment\">/// Returns `ln(1+n)` (natural logarithm) more accurately than if\n    /// the operations were performed separately.\n    ///\n    /// # Unspecified precision\n    ///\n    /// The precision of this function is non-deterministic. This means it varies by platform, Rust version, and\n    /// can even differ within the same execution from one invocation to the next.\n    /// This function currently corresponds to the `log1pf` from libc on Unix\n    /// and Windows. Note that this might change in the future.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let x = 1e-8_f32;\n    ///\n    /// // for very small x, ln(1 + x) is approximately x - x^2 / 2\n    /// let approx = x - x * x / 2.0;\n    /// let abs_difference = (x.ln_1p() - approx).abs();\n    ///\n    /// assert!(abs_difference &lt; 1e-10);\n    /// ```\n    </span><span class=\"attr\">#[doc(alias = <span class=\"string\">\"log1p\"</span>)]\n    #[rustc_allow_incoherent_impl]\n    #[must_use = <span class=\"string\">\"method returns a new number and does not mutate the original value\"</span>]\n    #[stable(feature = <span class=\"string\">\"rust1\"</span>, since = <span class=\"string\">\"1.0.0\"</span>)]\n    #[inline]\n    </span><span class=\"kw\">pub fn </span>ln_1p(<span class=\"self\">self</span>) -&gt; f32 {\n        <span class=\"kw\">unsafe </span>{ cmath::log1pf(<span class=\"self\">self</span>) }\n    }\n\n    <span class=\"doccomment\">/// Hyperbolic sine function.\n    ///\n    /// # Unspecified precision\n    ///\n    /// The precision of this function is non-deterministic. This means it varies by platform, Rust version, and\n    /// can even differ within the same execution from one invocation to the next.\n    /// This function currently corresponds to the `sinhf` from libc on Unix\n    /// and Windows. Note that this might change in the future.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let e = std::f32::consts::E;\n    /// let x = 1.0f32;\n    ///\n    /// let f = x.sinh();\n    /// // Solving sinh() at 1 gives `(e^2-1)/(2e)`\n    /// let g = ((e * e) - 1.0) / (2.0 * e);\n    /// let abs_difference = (f - g).abs();\n    ///\n    /// assert!(abs_difference &lt;= f32::EPSILON);\n    /// ```\n    </span><span class=\"attr\">#[rustc_allow_incoherent_impl]\n    #[must_use = <span class=\"string\">\"method returns a new number and does not mutate the original value\"</span>]\n    #[stable(feature = <span class=\"string\">\"rust1\"</span>, since = <span class=\"string\">\"1.0.0\"</span>)]\n    #[inline]\n    </span><span class=\"kw\">pub fn </span>sinh(<span class=\"self\">self</span>) -&gt; f32 {\n        <span class=\"kw\">unsafe </span>{ cmath::sinhf(<span class=\"self\">self</span>) }\n    }\n\n    <span class=\"doccomment\">/// Hyperbolic cosine function.\n    ///\n    /// # Unspecified precision\n    ///\n    /// The precision of this function is non-deterministic. This means it varies by platform, Rust version, and\n    /// can even differ within the same execution from one invocation to the next.\n    /// This function currently corresponds to the `coshf` from libc on Unix\n    /// and Windows. Note that this might change in the future.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let e = std::f32::consts::E;\n    /// let x = 1.0f32;\n    /// let f = x.cosh();\n    /// // Solving cosh() at 1 gives this result\n    /// let g = ((e * e) + 1.0) / (2.0 * e);\n    /// let abs_difference = (f - g).abs();\n    ///\n    /// // Same result\n    /// assert!(abs_difference &lt;= f32::EPSILON);\n    /// ```\n    </span><span class=\"attr\">#[rustc_allow_incoherent_impl]\n    #[must_use = <span class=\"string\">\"method returns a new number and does not mutate the original value\"</span>]\n    #[stable(feature = <span class=\"string\">\"rust1\"</span>, since = <span class=\"string\">\"1.0.0\"</span>)]\n    #[inline]\n    </span><span class=\"kw\">pub fn </span>cosh(<span class=\"self\">self</span>) -&gt; f32 {\n        <span class=\"kw\">unsafe </span>{ cmath::coshf(<span class=\"self\">self</span>) }\n    }\n\n    <span class=\"doccomment\">/// Hyperbolic tangent function.\n    ///\n    /// # Unspecified precision\n    ///\n    /// The precision of this function is non-deterministic. This means it varies by platform, Rust version, and\n    /// can even differ within the same execution from one invocation to the next.\n    /// This function currently corresponds to the `tanhf` from libc on Unix\n    /// and Windows. Note that this might change in the future.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let e = std::f32::consts::E;\n    /// let x = 1.0f32;\n    ///\n    /// let f = x.tanh();\n    /// // Solving tanh() at 1 gives `(1 - e^(-2))/(1 + e^(-2))`\n    /// let g = (1.0 - e.powi(-2)) / (1.0 + e.powi(-2));\n    /// let abs_difference = (f - g).abs();\n    ///\n    /// assert!(abs_difference &lt;= f32::EPSILON);\n    /// ```\n    </span><span class=\"attr\">#[rustc_allow_incoherent_impl]\n    #[must_use = <span class=\"string\">\"method returns a new number and does not mutate the original value\"</span>]\n    #[stable(feature = <span class=\"string\">\"rust1\"</span>, since = <span class=\"string\">\"1.0.0\"</span>)]\n    #[inline]\n    </span><span class=\"kw\">pub fn </span>tanh(<span class=\"self\">self</span>) -&gt; f32 {\n        <span class=\"kw\">unsafe </span>{ cmath::tanhf(<span class=\"self\">self</span>) }\n    }\n\n    <span class=\"doccomment\">/// Inverse hyperbolic sine function.\n    ///\n    /// # Unspecified precision\n    ///\n    /// The precision of this function is non-deterministic. This means it varies by platform, Rust version, and\n    /// can even differ within the same execution from one invocation to the next.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let x = 1.0f32;\n    /// let f = x.sinh().asinh();\n    ///\n    /// let abs_difference = (f - x).abs();\n    ///\n    /// assert!(abs_difference &lt;= f32::EPSILON);\n    /// ```\n    </span><span class=\"attr\">#[doc(alias = <span class=\"string\">\"arcsinh\"</span>)]\n    #[rustc_allow_incoherent_impl]\n    #[must_use = <span class=\"string\">\"method returns a new number and does not mutate the original value\"</span>]\n    #[stable(feature = <span class=\"string\">\"rust1\"</span>, since = <span class=\"string\">\"1.0.0\"</span>)]\n    #[inline]\n    </span><span class=\"kw\">pub fn </span>asinh(<span class=\"self\">self</span>) -&gt; f32 {\n        <span class=\"kw\">let </span>ax = <span class=\"self\">self</span>.abs();\n        <span class=\"kw\">let </span>ix = <span class=\"number\">1.0 </span>/ ax;\n        (ax + (ax / (<span class=\"self\">Self</span>::hypot(<span class=\"number\">1.0</span>, ix) + ix))).ln_1p().copysign(<span class=\"self\">self</span>)\n    }\n\n    <span class=\"doccomment\">/// Inverse hyperbolic cosine function.\n    ///\n    /// # Unspecified precision\n    ///\n    /// The precision of this function is non-deterministic. This means it varies by platform, Rust version, and\n    /// can even differ within the same execution from one invocation to the next.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let x = 1.0f32;\n    /// let f = x.cosh().acosh();\n    ///\n    /// let abs_difference = (f - x).abs();\n    ///\n    /// assert!(abs_difference &lt;= f32::EPSILON);\n    /// ```\n    </span><span class=\"attr\">#[doc(alias = <span class=\"string\">\"arccosh\"</span>)]\n    #[rustc_allow_incoherent_impl]\n    #[must_use = <span class=\"string\">\"method returns a new number and does not mutate the original value\"</span>]\n    #[stable(feature = <span class=\"string\">\"rust1\"</span>, since = <span class=\"string\">\"1.0.0\"</span>)]\n    #[inline]\n    </span><span class=\"kw\">pub fn </span>acosh(<span class=\"self\">self</span>) -&gt; f32 {\n        <span class=\"kw\">if </span><span class=\"self\">self </span>&lt; <span class=\"number\">1.0 </span>{\n            <span class=\"self\">Self</span>::NAN\n        } <span class=\"kw\">else </span>{\n            (<span class=\"self\">self </span>+ ((<span class=\"self\">self </span>- <span class=\"number\">1.0</span>).sqrt() * (<span class=\"self\">self </span>+ <span class=\"number\">1.0</span>).sqrt())).ln()\n        }\n    }\n\n    <span class=\"doccomment\">/// Inverse hyperbolic tangent function.\n    ///\n    /// # Unspecified precision\n    ///\n    /// The precision of this function is non-deterministic. This means it varies by platform, Rust version, and\n    /// can even differ within the same execution from one invocation to the next.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// let e = std::f32::consts::E;\n    /// let f = e.tanh().atanh();\n    ///\n    /// let abs_difference = (f - e).abs();\n    ///\n    /// assert!(abs_difference &lt;= 1e-5);\n    /// ```\n    </span><span class=\"attr\">#[doc(alias = <span class=\"string\">\"arctanh\"</span>)]\n    #[rustc_allow_incoherent_impl]\n    #[must_use = <span class=\"string\">\"method returns a new number and does not mutate the original value\"</span>]\n    #[stable(feature = <span class=\"string\">\"rust1\"</span>, since = <span class=\"string\">\"1.0.0\"</span>)]\n    #[inline]\n    </span><span class=\"kw\">pub fn </span>atanh(<span class=\"self\">self</span>) -&gt; f32 {\n        <span class=\"number\">0.5 </span>* ((<span class=\"number\">2.0 </span>* <span class=\"self\">self</span>) / (<span class=\"number\">1.0 </span>- <span class=\"self\">self</span>)).ln_1p()\n    }\n\n    <span class=\"doccomment\">/// Gamma function.\n    ///\n    /// # Unspecified precision\n    ///\n    /// The precision of this function is non-deterministic. This means it varies by platform, Rust version, and\n    /// can even differ within the same execution from one invocation to the next.\n    /// This function currently corresponds to the `tgammaf` from libc on Unix\n    /// and Windows. Note that this might change in the future.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// #![feature(float_gamma)]\n    /// let x = 5.0f32;\n    ///\n    /// let abs_difference = (x.gamma() - 24.0).abs();\n    ///\n    /// assert!(abs_difference &lt;= f32::EPSILON);\n    /// ```\n    </span><span class=\"attr\">#[rustc_allow_incoherent_impl]\n    #[must_use = <span class=\"string\">\"method returns a new number and does not mutate the original value\"</span>]\n    #[unstable(feature = <span class=\"string\">\"float_gamma\"</span>, issue = <span class=\"string\">\"99842\"</span>)]\n    #[inline]\n    </span><span class=\"kw\">pub fn </span>gamma(<span class=\"self\">self</span>) -&gt; f32 {\n        <span class=\"kw\">unsafe </span>{ cmath::tgammaf(<span class=\"self\">self</span>) }\n    }\n\n    <span class=\"doccomment\">/// Natural logarithm of the absolute value of the gamma function\n    ///\n    /// The integer part of the tuple indicates the sign of the gamma function.\n    ///\n    /// # Unspecified precision\n    ///\n    /// The precision of this function is non-deterministic. This means it varies by platform, Rust version, and\n    /// can even differ within the same execution from one invocation to the next.\n    /// This function currently corresponds to the `lgamma_r` from libc on Unix\n    /// and Windows. Note that this might change in the future.\n    ///\n    /// # Examples\n    ///\n    /// ```\n    /// #![feature(float_gamma)]\n    /// let x = 2.0f32;\n    ///\n    /// let abs_difference = (x.ln_gamma().0 - 0.0).abs();\n    ///\n    /// assert!(abs_difference &lt;= f32::EPSILON);\n    /// ```\n    </span><span class=\"attr\">#[rustc_allow_incoherent_impl]\n    #[must_use = <span class=\"string\">\"method returns a new number and does not mutate the original value\"</span>]\n    #[unstable(feature = <span class=\"string\">\"float_gamma\"</span>, issue = <span class=\"string\">\"99842\"</span>)]\n    #[inline]\n    </span><span class=\"kw\">pub fn </span>ln_gamma(<span class=\"self\">self</span>) -&gt; (f32, i32) {\n        <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>signgamp: i32 = <span class=\"number\">0</span>;\n        <span class=\"kw\">let </span>x = <span class=\"kw\">unsafe </span>{ cmath::lgammaf_r(<span class=\"self\">self</span>, <span class=\"kw-2\">&amp;mut </span>signgamp) };\n        (x, signgamp)\n    }\n}\n</code></pre></div></section></main></body></html>",
	"crawlDate": "2024-07-28T05:21:08.450Z"
}