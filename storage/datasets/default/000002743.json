{
	"title": "from_boxed_utf8_unchecked in std::str - Rust",
	"url": "https://doc.rust-lang.org/stable/std/str/fn.from_boxed_utf8_unchecked.html",
	"markdown": "# from\\_boxed\\_utf8\\_unchecked in std::str - Rust\n\n```\npub unsafe fn from_boxed_utf8_unchecked(v: Box<[u8]>) -> Box<str>\n```\n\nExpand description\n\nConverts a boxed slice of bytes to a boxed string slice without checking that the string contains valid UTF-8.\n\n## [§](#examples)Examples\n\n```\nlet smile_utf8 = Box::new([226, 152, 186]);\nlet smile = unsafe { std::str::from_boxed_utf8_unchecked(smile_utf8) };\n\nassert_eq!(\"☺\", &*smile);\n```\n\n[Run](https://play.rust-lang.org/?code=%23!%5Ballow(unused)%5D%0Afn+main()+%7B%0A++++let+smile_utf8+=+Box::new(%5B226,+152,+186%5D);%0A++++let+smile+=+unsafe+%7B+std::str::from_boxed_utf8_unchecked(smile_utf8)+%7D;%0A++++%0A++++assert_eq!(%22%E2%98%BA%22,+%26*smile);%0A%7D&edition=2021)",
	"html": "<!DOCTYPE html><html lang=\"en\" data-theme=\"light\"><head><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><meta name=\"generator\" content=\"rustdoc\"><meta name=\"description\" content=\"Converts a boxed slice of bytes to a boxed string slice without checking that the string contains valid UTF-8.\"><title>from_boxed_utf8_unchecked in std::str - Rust</title><script>if(window.location.protocol!==\"file:\")document.head.insertAdjacentHTML(\"beforeend\",\"SourceSerif4-Regular-46f98efaafac5295.ttf.woff2,FiraSans-Regular-018c141bf0843ffd.woff2,FiraSans-Medium-8f9a781e4970d388.woff2,SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2,SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\".split(\",\").map(f=>`<link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin href=\"../../static.files/${f}\">`).join(\"\"))</script><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceSerif4-Regular-46f98efaafac5295.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/FiraSans-Regular-018c141bf0843ffd.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/FiraSans-Medium-8f9a781e4970d388.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\"><link rel=\"stylesheet\" href=\"../../static.files/normalize-76eba96aa4d2e634.css\"><link rel=\"stylesheet\" href=\"../../static.files/rustdoc-dd39b87e5fcfba68.css\"><meta name=\"rustdoc-vars\" data-root-path=\"../../\" data-static-root-path=\"../../static.files/\" data-current-crate=\"std\" data-themes=\"\" data-resource-suffix=\"1.80.0\" data-rustdoc-version=\"1.80.0 (051478957 2024-07-21)\" data-channel=\"1.80.0\" data-search-js=\"search-d52510db62a78183.js\" data-settings-js=\"settings-4313503d2e1961c2.js\"><script src=\"../../static.files/storage-118b08c4c78b968e.js\"></script><script defer=\"\" src=\"sidebar-items1.80.0.js\"></script><script defer=\"\" src=\"../../static.files/main-20a3ad099b048cf2.js\"></script><noscript><link rel=\"stylesheet\" href=\"../../static.files/noscript-df360f571f6edeae.css\"></noscript><link rel=\"alternate icon\" type=\"image/png\" href=\"../../static.files/favicon-32x32-422f7d1d52889060.png\"><link rel=\"icon\" type=\"image/svg+xml\" href=\"../../static.files/favicon-2c020d218678b618.svg\"></head><body class=\"rustdoc fn\"><!--[if lte IE 11]><div class=\"warning\">This old browser is unsupported and will most likely display funky things.</div><![endif]--><nav class=\"mobile-topbar\"><button class=\"sidebar-menu-toggle\" title=\"show sidebar\"></button><a class=\"logo-container\" href=\"../../std/index.html\"><img class=\"rust-logo\" src=\"../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"\"></a><h2 class=\"location\"></h2></nav><nav class=\"sidebar\"><div class=\"sidebar-crate\"><a class=\"logo-container\" href=\"../../std/index.html\"><img class=\"rust-logo\" src=\"../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"logo\"></a><h2><a href=\"../../std/index.html\">std</a><span class=\"version\">1.80.0</span></h2></div><div class=\"version\">(051478957\t2024-07-21)</div><div class=\"sidebar-elems\"><h2><a href=\"index.html\">In std::str</a></h2><h3><a href=\"index.html#modules\">Modules</a></h3><ul class=\"block mod\"><li><a href=\"pattern/index.html\">pattern</a></li></ul><h3><a href=\"index.html#structs\">Structs</a></h3><ul class=\"block struct\"><li><a href=\"struct.Bytes.html\">Bytes</a></li><li><a href=\"struct.CharIndices.html\">CharIndices</a></li><li><a href=\"struct.Chars.html\">Chars</a></li><li><a href=\"struct.EncodeUtf16.html\">EncodeUtf16</a></li><li><a href=\"struct.EscapeDebug.html\">EscapeDebug</a></li><li><a href=\"struct.EscapeDefault.html\">EscapeDefault</a></li><li><a href=\"struct.EscapeUnicode.html\">EscapeUnicode</a></li><li><a href=\"struct.Lines.html\">Lines</a></li><li><a href=\"struct.LinesAny.html\">LinesAny</a></li><li><a href=\"struct.MatchIndices.html\">MatchIndices</a></li><li><a href=\"struct.Matches.html\">Matches</a></li><li><a href=\"struct.ParseBoolError.html\">ParseBoolError</a></li><li><a href=\"struct.RMatchIndices.html\">RMatchIndices</a></li><li><a href=\"struct.RMatches.html\">RMatches</a></li><li><a href=\"struct.RSplit.html\">RSplit</a></li><li><a href=\"struct.RSplitN.html\">RSplitN</a></li><li><a href=\"struct.RSplitTerminator.html\">RSplitTerminator</a></li><li><a href=\"struct.Split.html\">Split</a></li><li><a href=\"struct.SplitAsciiWhitespace.html\">SplitAsciiWhitespace</a></li><li><a href=\"struct.SplitInclusive.html\">SplitInclusive</a></li><li><a href=\"struct.SplitN.html\">SplitN</a></li><li><a href=\"struct.SplitTerminator.html\">SplitTerminator</a></li><li><a href=\"struct.SplitWhitespace.html\">SplitWhitespace</a></li><li><a href=\"struct.Utf8Chunk.html\">Utf8Chunk</a></li><li><a href=\"struct.Utf8Chunks.html\">Utf8Chunks</a></li><li><a href=\"struct.Utf8Error.html\">Utf8Error</a></li></ul><h3><a href=\"index.html#traits\">Traits</a></h3><ul class=\"block trait\"><li><a href=\"trait.FromStr.html\">FromStr</a></li></ul><h3><a href=\"index.html#functions\">Functions</a></h3><ul class=\"block fn\"><li><a href=\"fn.from_boxed_utf8_unchecked.html\">from_boxed_utf8_unchecked</a></li><li><a href=\"fn.from_raw_parts.html\">from_raw_parts</a></li><li><a href=\"fn.from_raw_parts_mut.html\">from_raw_parts_mut</a></li><li><a href=\"fn.from_utf8.html\">from_utf8</a></li><li><a href=\"fn.from_utf8_mut.html\">from_utf8_mut</a></li><li><a href=\"fn.from_utf8_unchecked.html\">from_utf8_unchecked</a></li><li><a href=\"fn.from_utf8_unchecked_mut.html\">from_utf8_unchecked_mut</a></li></ul></div></nav><div class=\"sidebar-resizer\"></div><main><div class=\"width-limiter\"><rustdoc-search><nav class=\"sub\">\n            <form class=\"search-form\">\n                <span></span> <!-- This empty span is a hacky fix for Safari - See #93184 -->\n                <div id=\"sidebar-button\" tabindex=\"-1\">\n                    <a href=\"../../std/all.html\" title=\"show sidebar\"></a>\n                </div>\n                <input class=\"search-input\" name=\"search\" aria-label=\"Run search in the documentation\" autocomplete=\"off\" spellcheck=\"false\" placeholder=\"Type ‘S’ or ‘/’ to search, ‘?’ for more options…\" type=\"search\">\n                <div id=\"help-button\" tabindex=\"-1\">\n                    <a href=\"../../help.html\" title=\"help\">?</a>\n                </div>\n                <div id=\"settings-menu\" tabindex=\"-1\">\n                    <a href=\"../../settings.html\" title=\"settings\">\n                        Settings\n                    </a>\n                </div>\n            </form>\n        </nav></rustdoc-search><section id=\"main-content\" class=\"content\"><div class=\"main-heading\"><h1>Function <a href=\"../index.html\">std</a>::<wbr><a href=\"index.html\">str</a>::<wbr><a class=\"fn\" href=\"#\">from_boxed_utf8_unchecked</a><button id=\"copy-path\" title=\"Copy item path to clipboard\">Copy item path</button></h1><span class=\"out-of-band\"><span class=\"since\" title=\"Stable since Rust version 1.20.0\">1.20.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/alloc/str.rs.html#614\">source</a> · <button id=\"toggle-all-docs\" title=\"collapse all docs\">[<span>−</span>]</button></span></div><pre class=\"rust item-decl\"><code>pub unsafe fn from_boxed_utf8_unchecked(v: <a class=\"struct\" href=\"../boxed/struct.Box.html\" title=\"struct std::boxed::Box\">Box</a>&lt;[<a class=\"primitive\" href=\"../primitive.u8.html\">u8</a>]&gt;) -&gt; <a class=\"struct\" href=\"../boxed/struct.Box.html\" title=\"struct std::boxed::Box\">Box</a>&lt;<a class=\"primitive\" href=\"../primitive.str.html\">str</a>&gt;</code></pre><details class=\"toggle top-doc\" open=\"\"><summary class=\"hideme\"><span>Expand description</span></summary><div class=\"docblock\"><p>Converts a boxed slice of bytes to a boxed string slice without checking\nthat the string contains valid UTF-8.</p>\n<h2 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h2>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>smile_utf8 = Box::new([<span class=\"number\">226</span>, <span class=\"number\">152</span>, <span class=\"number\">186</span>]);\n<span class=\"kw\">let </span>smile = <span class=\"kw\">unsafe </span>{ std::str::from_boxed_utf8_unchecked(smile_utf8) };\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"☺\"</span>, <span class=\"kw-2\">&amp;*</span>smile);</code></pre><a class=\"test-arrow\" target=\"_blank\" href=\"https://play.rust-lang.org/?code=%23!%5Ballow(unused)%5D%0Afn+main()+%7B%0A++++let+smile_utf8+=+Box::new(%5B226,+152,+186%5D);%0A++++let+smile+=+unsafe+%7B+std::str::from_boxed_utf8_unchecked(smile_utf8)+%7D;%0A++++%0A++++assert_eq!(%22%E2%98%BA%22,+%26*smile);%0A%7D&amp;edition=2021\">Run</a></div>\n</div></details></section></div></main></body></html>",
	"crawlDate": "2024-07-28T05:25:44.596Z"
}