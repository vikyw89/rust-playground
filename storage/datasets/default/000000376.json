{
	"title": "Empty in std::io - Rust",
	"url": "https://doc.rust-lang.org/stable/std/io/struct.Empty.html",
	"markdown": "# Empty in std::io - Rust\n\n## Struct [std](../index.html)::[io](index.html)::[Empty](#)\n\n1.0.0 · [source](about:blank/src/std/io/util.rs.html#19) ·\n\n```\n#[non_exhaustive]pub struct Empty;\n```\n\nExpand description\n\n`Empty` ignores any data written via [`Write`](trait.Write.html \"trait std::io::Write\"), and will always be empty (returning zero bytes) when read via [`Read`](trait.Read.html \"trait std::io::Read\").\n\nThis struct is generally created by calling [`empty()`](fn.empty.html \"fn std::io::empty\"). Please see the documentation of [`empty()`](fn.empty.html \"fn std::io::empty\") for more details.\n\n1.0.0 · [source](about:blank/src/std/io/util.rs.html#72-79)[§](#impl-BufRead-for-Empty)\n\n[source](about:blank/src/std/io/util.rs.html#74-76)[§](#method.fill_buf)\n\nReturns the contents of the internal buffer, filling it with more data from the inner reader if it is empty. [Read more](about:blank/trait.BufRead.html#tymethod.fill_buf)\n\n[source](about:blank/src/std/io/util.rs.html#78)[§](#method.consume)\n\nTells this buffer that `amt` bytes have been consumed from the buffer, so they should no longer be returned in calls to `read`. [Read more](about:blank/trait.BufRead.html#tymethod.consume)\n\n[source](about:blank/src/std/io/mod.rs.html#2285-2287)[§](#method.has_data_left)\n\n🔬This is a nightly-only experimental API. (`buf_read_has_data_left` [#86423](https://github.com/rust-lang/rust/issues/86423))\n\nCheck if the underlying `Read` has any data left to be read. [Read more](about:blank/trait.BufRead.html#method.has_data_left)\n\n1.0.0 · [source](about:blank/src/std/io/mod.rs.html#2344-2346)[§](#method.read_until)\n\nRead all bytes into `buf` until the delimiter `byte` or EOF is reached. [Read more](about:blank/trait.BufRead.html#method.read_until)\n\n[source](about:blank/src/std/io/mod.rs.html#2406-2408)[§](#method.skip_until)\n\n🔬This is a nightly-only experimental API. (`bufread_skip_until` [#111735](https://github.com/rust-lang/rust/issues/111735))\n\nSkip all bytes until the delimiter `byte` or EOF is reached. [Read more](about:blank/trait.BufRead.html#method.skip_until)\n\n1.0.0 · [source](about:blank/src/std/io/mod.rs.html#2474-2479)[§](#method.read_line)\n\nRead all bytes until a newline (the `0xA` byte) is reached, and append them to the provided `String` buffer. [Read more](about:blank/trait.BufRead.html#method.read_line)\n\n1.0.0 · [source](about:blank/src/std/io/mod.rs.html#2512-2517)[§](#method.split)\n\nReturns an iterator over the contents of this reader split on the byte `byte`. [Read more](about:blank/trait.BufRead.html#method.split)\n\n1.0.0 · [source](about:blank/src/std/io/mod.rs.html#2549-2554)[§](#method.lines)\n\nReturns an iterator over the lines of this reader. [Read more](about:blank/trait.BufRead.html#method.lines)\n\n1.0.0 · [source](about:blank/src/std/io/util.rs.html#18)[§](#impl-Clone-for-Empty)\n\n1.0.0 · [source](about:blank/src/std/io/util.rs.html#18)[§](#impl-Debug-for-Empty)\n\n1.0.0 · [source](about:blank/src/std/io/util.rs.html#18)[§](#impl-Default-for-Empty)\n\n1.0.0 · [source](about:blank/src/std/io/util.rs.html#60-70)[§](#impl-Read-for-Empty)\n\n[source](about:blank/src/std/io/util.rs.html#62-64)[§](#method.read)\n\nPull some bytes from this source into the specified buffer, returning how many bytes were read. [Read more](about:blank/trait.Read.html#tymethod.read)\n\n[source](about:blank/src/std/io/util.rs.html#67-69)[§](#method.read_buf)\n\n🔬This is a nightly-only experimental API. (`read_buf` [#78485](https://github.com/rust-lang/rust/issues/78485))\n\nPull some bytes from this source into the specified buffer. [Read more](about:blank/trait.Read.html#method.read_buf)\n\n1.36.0 · [source](about:blank/src/std/io/mod.rs.html#768-770)[§](#method.read_vectored)\n\nLike `read`, except that it reads into a slice of buffers. [Read more](about:blank/trait.Read.html#method.read_vectored)\n\n[source](about:blank/src/std/io/mod.rs.html#781-783)[§](#method.is_read_vectored)\n\n🔬This is a nightly-only experimental API. (`can_vector` [#69941](https://github.com/rust-lang/rust/issues/69941))\n\nDetermines if this `Read`er has an efficient `read_vectored` implementation. [Read more](about:blank/trait.Read.html#method.is_read_vectored)\n\n1.0.0 · [source](about:blank/src/std/io/mod.rs.html#865-867)[§](#method.read_to_end)\n\nRead all bytes until EOF in this source, placing them into `buf`. [Read more](about:blank/trait.Read.html#method.read_to_end)\n\n1.0.0 · [source](about:blank/src/std/io/mod.rs.html#908-910)[§](#method.read_to_string)\n\nRead all bytes until EOF in this source, appending them to `buf`. [Read more](about:blank/trait.Read.html#method.read_to_string)\n\n1.6.0 · [source](about:blank/src/std/io/mod.rs.html#961-963)[§](#method.read_exact)\n\nRead the exact number of bytes required to fill `buf`. [Read more](about:blank/trait.Read.html#method.read_exact)\n\n[source](about:blank/src/std/io/mod.rs.html#995-997)[§](#method.read_buf_exact)\n\n🔬This is a nightly-only experimental API. (`read_buf` [#78485](https://github.com/rust-lang/rust/issues/78485))\n\nRead the exact number of bytes required to fill `cursor`. [Read more](about:blank/trait.Read.html#method.read_buf_exact)\n\n1.0.0 · [source](about:blank/src/std/io/mod.rs.html#1034-1039)[§](#method.by_ref-1)\n\nCreates a “by reference” adaptor for this instance of `Read`. [Read more](about:blank/trait.Read.html#method.by_ref)\n\n1.0.0 · [source](about:blank/src/std/io/mod.rs.html#1077-1082)[§](#method.bytes)\n\nTransforms this `Read` instance to an [`Iterator`](../iter/trait.Iterator.html \"trait std::iter::Iterator\") over its bytes. [Read more](about:blank/trait.Read.html#method.bytes)\n\n1.0.0 · [source](about:blank/src/std/io/mod.rs.html#1115-1120)[§](#method.chain)\n\nCreates an adapter which will chain this stream with another. [Read more](about:blank/trait.Read.html#method.chain)\n\n1.0.0 · [source](about:blank/src/std/io/mod.rs.html#1154-1159)[§](#method.take)\n\nCreates an adapter which will read at most `limit` bytes from it. [Read more](about:blank/trait.Read.html#method.take)\n\n1.51.0 · [source](about:blank/src/std/io/util.rs.html#82-94)[§](#impl-Seek-for-Empty)\n\n1.73.0 · [source](about:blank/src/std/io/util.rs.html#128-149)[§](#impl-Write-for-%26Empty)\n\n[source](about:blank/src/std/io/util.rs.html#130-132)[§](#method.write-1)\n\nWrite a buffer into this writer, returning how many bytes were written. [Read more](about:blank/trait.Write.html#tymethod.write)\n\n[source](about:blank/src/std/io/util.rs.html#135-138)[§](#method.write_vectored-1)\n\nLike [`write`](about:blank/trait.Write.html#tymethod.write \"method std::io::Write::write\"), except that it writes from a slice of buffers. [Read more](about:blank/trait.Write.html#method.write_vectored)\n\n[source](about:blank/src/std/io/util.rs.html#141-143)[§](#method.is_write_vectored-1)\n\n🔬This is a nightly-only experimental API. (`can_vector` [#69941](https://github.com/rust-lang/rust/issues/69941))\n\n[source](about:blank/src/std/io/util.rs.html#146-148)[§](#method.flush-1)\n\nFlush this output stream, ensuring that all intermediately buffered contents reach their destination. [Read more](about:blank/trait.Write.html#tymethod.flush)\n\n1.0.0 · [source](about:blank/src/std/io/mod.rs.html#1699-1711)[§](#method.write_all-1)\n\nAttempts to write an entire buffer into this writer. [Read more](about:blank/trait.Write.html#method.write_all)\n\n[source](about:blank/src/std/io/mod.rs.html#1761-1776)[§](#method.write_all_vectored-1)\n\n🔬This is a nightly-only experimental API. (`write_all_vectored` [#70436](https://github.com/rust-lang/rust/issues/70436))\n\nAttempts to write multiple buffers into this writer. [Read more](about:blank/trait.Write.html#method.write_all_vectored)\n\n1.0.0 · [source](about:blank/src/std/io/mod.rs.html#1814-1850)[§](#method.write_fmt-1)\n\nWrites a formatted string into this writer, returning any error encountered. [Read more](about:blank/trait.Write.html#method.write_fmt)\n\n1.0.0 · [source](about:blank/src/std/io/mod.rs.html#1874-1879)[§](#method.by_ref-2)\n\nCreates a “by reference” adapter for this instance of `Write`. [Read more](about:blank/trait.Write.html#method.by_ref)\n\n1.73.0 · [source](about:blank/src/std/io/util.rs.html#104-125)[§](#impl-Write-for-Empty)\n\n[source](about:blank/src/std/io/util.rs.html#106-108)[§](#method.write)\n\nWrite a buffer into this writer, returning how many bytes were written. [Read more](about:blank/trait.Write.html#tymethod.write)\n\n[source](about:blank/src/std/io/util.rs.html#111-114)[§](#method.write_vectored)\n\nLike [`write`](about:blank/trait.Write.html#tymethod.write \"method std::io::Write::write\"), except that it writes from a slice of buffers. [Read more](about:blank/trait.Write.html#method.write_vectored)\n\n[source](about:blank/src/std/io/util.rs.html#117-119)[§](#method.is_write_vectored)\n\n🔬This is a nightly-only experimental API. (`can_vector` [#69941](https://github.com/rust-lang/rust/issues/69941))\n\n[source](about:blank/src/std/io/util.rs.html#122-124)[§](#method.flush)\n\nFlush this output stream, ensuring that all intermediately buffered contents reach their destination. [Read more](about:blank/trait.Write.html#tymethod.flush)\n\n1.0.0 · [source](about:blank/src/std/io/mod.rs.html#1699-1711)[§](#method.write_all)\n\nAttempts to write an entire buffer into this writer. [Read more](about:blank/trait.Write.html#method.write_all)\n\n[source](about:blank/src/std/io/mod.rs.html#1761-1776)[§](#method.write_all_vectored)\n\n🔬This is a nightly-only experimental API. (`write_all_vectored` [#70436](https://github.com/rust-lang/rust/issues/70436))\n\nAttempts to write multiple buffers into this writer. [Read more](about:blank/trait.Write.html#method.write_all_vectored)\n\n1.0.0 · [source](about:blank/src/std/io/mod.rs.html#1814-1850)[§](#method.write_fmt)\n\nWrites a formatted string into this writer, returning any error encountered. [Read more](about:blank/trait.Write.html#method.write_fmt)\n\n1.0.0 · [source](about:blank/src/std/io/mod.rs.html#1874-1879)[§](#method.by_ref)\n\nCreates a “by reference” adapter for this instance of `Write`. [Read more](about:blank/trait.Write.html#method.by_ref)\n\n1.0.0 · [source](about:blank/src/std/io/util.rs.html#18)[§](#impl-Copy-for-Empty)\n\n[§](#impl-Freeze-for-Empty)\n\n[§](#impl-RefUnwindSafe-for-Empty)\n\n[§](#impl-Send-for-Empty)\n\n[§](#impl-Sync-for-Empty)\n\n[§](#impl-Unpin-for-Empty)\n\n[§](#impl-UnwindSafe-for-Empty)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/any.rs.html#140)[§](#impl-Any-for-T)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/borrow.rs.html#208)[§](#impl-Borrow%3CT%3E-for-T)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/borrow.rs.html#216)[§](#impl-BorrowMut%3CT%3E-for-T)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#765)[§](#impl-From%3CT%3E-for-T)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#768)[§](#method.from)\n\nReturns the argument unchanged.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#748-750)[§](#impl-Into%3CU%3E-for-T)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#758)[§](#method.into)\n\nCalls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of `[From](../convert/trait.From.html \"trait std::convert::From\")<T> for U` chooses to do.\n\n[source](https://doc.rust-lang.org/1.80.0/src/alloc/borrow.rs.html#83-85)[§](#impl-ToOwned-for-T)\n\n[§](#associatedtype.Owned)\n\nThe resulting type after obtaining ownership.\n\n[source](https://doc.rust-lang.org/1.80.0/src/alloc/borrow.rs.html#88)[§](#method.to_owned)\n\nCreates owned data from borrowed data, usually by cloning. [Read more](about:blank/borrow/trait.ToOwned.html#tymethod.to_owned)\n\n[source](https://doc.rust-lang.org/1.80.0/src/alloc/borrow.rs.html#92)[§](#method.clone_into)\n\nUses borrowed data to replace owned data, usually by cloning. [Read more](about:blank/borrow/trait.ToOwned.html#method.clone_into)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#805-807)[§](#impl-TryFrom%3CU%3E-for-T)\n\n[§](#associatedtype.Error-1)\n\nThe type returned in the event of a conversion error.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#812)[§](#method.try_from)\n\nPerforms the conversion.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#790-792)[§](#impl-TryInto%3CU%3E-for-T)\n\n[§](#associatedtype.Error)\n\nThe type returned in the event of a conversion error.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#797)[§](#method.try_into)\n\nPerforms the conversion.",
	"html": "<!DOCTYPE html><html lang=\"en\" data-theme=\"light\"><head><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><meta name=\"generator\" content=\"rustdoc\"><meta name=\"description\" content=\"`Empty` ignores any data written via `Write`, and will always be empty (returning zero bytes) when read via `Read`.\"><title>Empty in std::io - Rust</title><script>if(window.location.protocol!==\"file:\")document.head.insertAdjacentHTML(\"beforeend\",\"SourceSerif4-Regular-46f98efaafac5295.ttf.woff2,FiraSans-Regular-018c141bf0843ffd.woff2,FiraSans-Medium-8f9a781e4970d388.woff2,SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2,SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\".split(\",\").map(f=>`<link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin href=\"../../static.files/${f}\">`).join(\"\"))</script><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceSerif4-Regular-46f98efaafac5295.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/FiraSans-Regular-018c141bf0843ffd.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/FiraSans-Medium-8f9a781e4970d388.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\"><link rel=\"stylesheet\" href=\"../../static.files/normalize-76eba96aa4d2e634.css\"><link rel=\"stylesheet\" href=\"../../static.files/rustdoc-dd39b87e5fcfba68.css\"><meta name=\"rustdoc-vars\" data-root-path=\"../../\" data-static-root-path=\"../../static.files/\" data-current-crate=\"std\" data-themes=\"\" data-resource-suffix=\"1.80.0\" data-rustdoc-version=\"1.80.0 (051478957 2024-07-21)\" data-channel=\"1.80.0\" data-search-js=\"search-d52510db62a78183.js\" data-settings-js=\"settings-4313503d2e1961c2.js\"><script src=\"../../static.files/storage-118b08c4c78b968e.js\"></script><script defer=\"\" src=\"sidebar-items1.80.0.js\"></script><script defer=\"\" src=\"../../static.files/main-20a3ad099b048cf2.js\"></script><noscript><link rel=\"stylesheet\" href=\"../../static.files/noscript-df360f571f6edeae.css\"></noscript><link rel=\"alternate icon\" type=\"image/png\" href=\"../../static.files/favicon-32x32-422f7d1d52889060.png\"><link rel=\"icon\" type=\"image/svg+xml\" href=\"../../static.files/favicon-2c020d218678b618.svg\"></head><body class=\"rustdoc struct\"><!--[if lte IE 11]><div class=\"warning\">This old browser is unsupported and will most likely display funky things.</div><![endif]--><nav class=\"mobile-topbar\"><button class=\"sidebar-menu-toggle\" title=\"show sidebar\"></button><a class=\"logo-container\" href=\"../../std/index.html\"><img class=\"rust-logo\" src=\"../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"\"></a><h2 class=\"location\"><a href=\"#\">Empty</a></h2></nav><nav class=\"sidebar\"><div class=\"sidebar-crate\"><a class=\"logo-container\" href=\"../../std/index.html\"><img class=\"rust-logo\" src=\"../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"logo\"></a><h2><a href=\"../../std/index.html\">std</a><span class=\"version\">1.80.0</span></h2></div><div class=\"version\">(051478957\t2024-07-21)</div><h2 class=\"location\"><a href=\"#\">Empty</a></h2><div class=\"sidebar-elems\"><section><h3><a href=\"#trait-implementations\">Trait Implementations</a></h3><ul class=\"block trait-implementation\"><li><a href=\"#impl-BufRead-for-Empty\">BufRead</a></li><li><a href=\"#impl-Clone-for-Empty\">Clone</a></li><li><a href=\"#impl-Copy-for-Empty\">Copy</a></li><li><a href=\"#impl-Debug-for-Empty\">Debug</a></li><li><a href=\"#impl-Default-for-Empty\">Default</a></li><li><a href=\"#impl-Read-for-Empty\">Read</a></li><li><a href=\"#impl-Seek-for-Empty\">Seek</a></li><li><a href=\"#impl-Write-for-%26Empty\">Write</a></li><li><a href=\"#impl-Write-for-Empty\">Write</a></li></ul><h3><a href=\"#synthetic-implementations\">Auto Trait Implementations</a></h3><ul class=\"block synthetic-implementation\"><li><a href=\"#impl-Freeze-for-Empty\">Freeze</a></li><li><a href=\"#impl-RefUnwindSafe-for-Empty\">RefUnwindSafe</a></li><li><a href=\"#impl-Send-for-Empty\">Send</a></li><li><a href=\"#impl-Sync-for-Empty\">Sync</a></li><li><a href=\"#impl-Unpin-for-Empty\">Unpin</a></li><li><a href=\"#impl-UnwindSafe-for-Empty\">UnwindSafe</a></li></ul><h3><a href=\"#blanket-implementations\">Blanket Implementations</a></h3><ul class=\"block blanket-implementation\"><li><a href=\"#impl-Any-for-T\">Any</a></li><li><a href=\"#impl-Borrow%3CT%3E-for-T\">Borrow&lt;T&gt;</a></li><li><a href=\"#impl-BorrowMut%3CT%3E-for-T\">BorrowMut&lt;T&gt;</a></li><li><a href=\"#impl-From%3CT%3E-for-T\">From&lt;T&gt;</a></li><li><a href=\"#impl-Into%3CU%3E-for-T\">Into&lt;U&gt;</a></li><li><a href=\"#impl-ToOwned-for-T\">ToOwned</a></li><li><a href=\"#impl-TryFrom%3CU%3E-for-T\">TryFrom&lt;U&gt;</a></li><li><a href=\"#impl-TryInto%3CU%3E-for-T\">TryInto&lt;U&gt;</a></li></ul></section><h2><a href=\"index.html\">In std::io</a></h2><h3><a href=\"index.html#modules\">Modules</a></h3><ul class=\"block mod\"><li><a href=\"prelude/index.html\">prelude</a></li></ul><h3><a href=\"index.html#structs\">Structs</a></h3><ul class=\"block struct\"><li><a href=\"struct.BorrowedBuf.html\">BorrowedBuf</a></li><li><a href=\"struct.BorrowedCursor.html\">BorrowedCursor</a></li><li><a href=\"struct.BufReader.html\">BufReader</a></li><li><a href=\"struct.BufWriter.html\">BufWriter</a></li><li><a href=\"struct.Bytes.html\">Bytes</a></li><li><a href=\"struct.Chain.html\">Chain</a></li><li><a href=\"struct.Cursor.html\">Cursor</a></li><li><a href=\"struct.Empty.html\">Empty</a></li><li><a href=\"struct.Error.html\">Error</a></li><li><a href=\"struct.IntoInnerError.html\">IntoInnerError</a></li><li><a href=\"struct.IoSlice.html\">IoSlice</a></li><li><a href=\"struct.IoSliceMut.html\">IoSliceMut</a></li><li><a href=\"struct.LineWriter.html\">LineWriter</a></li><li><a href=\"struct.Lines.html\">Lines</a></li><li><a href=\"struct.Repeat.html\">Repeat</a></li><li><a href=\"struct.Sink.html\">Sink</a></li><li><a href=\"struct.Split.html\">Split</a></li><li><a href=\"struct.Stderr.html\">Stderr</a></li><li><a href=\"struct.StderrLock.html\">StderrLock</a></li><li><a href=\"struct.Stdin.html\">Stdin</a></li><li><a href=\"struct.StdinLock.html\">StdinLock</a></li><li><a href=\"struct.Stdout.html\">Stdout</a></li><li><a href=\"struct.StdoutLock.html\">StdoutLock</a></li><li><a href=\"struct.Take.html\">Take</a></li><li><a href=\"struct.WriterPanicked.html\">WriterPanicked</a></li></ul><h3><a href=\"index.html#enums\">Enums</a></h3><ul class=\"block enum\"><li><a href=\"enum.ErrorKind.html\">ErrorKind</a></li><li><a href=\"enum.SeekFrom.html\">SeekFrom</a></li></ul><h3><a href=\"index.html#traits\">Traits</a></h3><ul class=\"block trait\"><li><a href=\"trait.BufRead.html\">BufRead</a></li><li><a href=\"trait.IsTerminal.html\">IsTerminal</a></li><li><a href=\"trait.Read.html\">Read</a></li><li><a href=\"trait.Seek.html\">Seek</a></li><li><a href=\"trait.Write.html\">Write</a></li></ul><h3><a href=\"index.html#functions\">Functions</a></h3><ul class=\"block fn\"><li><a href=\"fn.copy.html\">copy</a></li><li><a href=\"fn.empty.html\">empty</a></li><li><a href=\"fn.read_to_string.html\">read_to_string</a></li><li><a href=\"fn.repeat.html\">repeat</a></li><li><a href=\"fn.sink.html\">sink</a></li><li><a href=\"fn.stderr.html\">stderr</a></li><li><a href=\"fn.stdin.html\">stdin</a></li><li><a href=\"fn.stdout.html\">stdout</a></li></ul><h3><a href=\"index.html#types\">Type Aliases</a></h3><ul class=\"block type\"><li><a href=\"type.RawOsError.html\">RawOsError</a></li><li><a href=\"type.Result.html\">Result</a></li></ul></div></nav><div class=\"sidebar-resizer\"></div><main><div class=\"width-limiter\"><rustdoc-search><nav class=\"sub\">\n            <form class=\"search-form\">\n                <span></span> <!-- This empty span is a hacky fix for Safari - See #93184 -->\n                <div id=\"sidebar-button\" tabindex=\"-1\">\n                    <a href=\"../../std/all.html\" title=\"show sidebar\"></a>\n                </div>\n                <input class=\"search-input\" name=\"search\" aria-label=\"Run search in the documentation\" autocomplete=\"off\" spellcheck=\"false\" placeholder=\"Type ‘S’ or ‘/’ to search, ‘?’ for more options…\" type=\"search\">\n                <div id=\"help-button\" tabindex=\"-1\">\n                    <a href=\"../../help.html\" title=\"help\">?</a>\n                </div>\n                <div id=\"settings-menu\" tabindex=\"-1\">\n                    <a href=\"../../settings.html\" title=\"settings\">\n                        Settings\n                    </a>\n                </div>\n            </form>\n        </nav></rustdoc-search><section id=\"main-content\" class=\"content\"><div class=\"main-heading\"><h1>Struct <a href=\"../index.html\">std</a>::<wbr><a href=\"index.html\">io</a>::<wbr><a class=\"struct\" href=\"#\">Empty</a><button id=\"copy-path\" title=\"Copy item path to clipboard\">Copy item path</button></h1><span class=\"out-of-band\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"../../src/std/io/util.rs.html#19\">source</a> · <button id=\"toggle-all-docs\" title=\"collapse all docs\">[<span>−</span>]</button></span></div><pre class=\"rust item-decl\"><code><div class=\"code-attribute\">#[non_exhaustive]</div>pub struct Empty;</code></pre><details class=\"toggle top-doc\" open=\"\"><summary class=\"hideme\"><span>Expand description</span></summary><div class=\"docblock\"><p><code>Empty</code> ignores any data written via <a href=\"trait.Write.html\" title=\"trait std::io::Write\"><code>Write</code></a>, and will always be empty\n(returning zero bytes) when read via <a href=\"trait.Read.html\" title=\"trait std::io::Read\"><code>Read</code></a>.</p>\n<p>This struct is generally created by calling <a href=\"fn.empty.html\" title=\"fn std::io::empty\"><code>empty()</code></a>. Please\nsee the documentation of <a href=\"fn.empty.html\" title=\"fn std::io::empty\"><code>empty()</code></a> for more details.</p>\n</div></details><h2 id=\"trait-implementations\" class=\"section-header\">Trait Implementations<a href=\"#trait-implementations\" class=\"anchor\">§</a></h2><div id=\"trait-implementations-list\"><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-BufRead-for-Empty\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"../../src/std/io/util.rs.html#72-79\">source</a></span><a href=\"#impl-BufRead-for-Empty\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.BufRead.html\" title=\"trait std::io::BufRead\">BufRead</a> for <a class=\"struct\" href=\"struct.Empty.html\" title=\"struct std::io::Empty\">Empty</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.fill_buf\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"../../src/std/io/util.rs.html#74-76\">source</a><a href=\"#method.fill_buf\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"trait.BufRead.html#tymethod.fill_buf\" class=\"fn\">fill_buf</a>(&amp;mut self) -&gt; <a class=\"type\" href=\"type.Result.html\" title=\"type std::io::Result\">Result</a>&lt;&amp;[<a class=\"primitive\" href=\"../primitive.u8.html\">u8</a>]&gt;</h4></section></summary><div class=\"docblock\">Returns the contents of the internal buffer, filling it with more data\nfrom the inner reader if it is empty. <a href=\"trait.BufRead.html#tymethod.fill_buf\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.consume\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"../../src/std/io/util.rs.html#78\">source</a><a href=\"#method.consume\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"trait.BufRead.html#tymethod.consume\" class=\"fn\">consume</a>(&amp;mut self, _n: <a class=\"primitive\" href=\"../primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\">Tells this buffer that <code>amt</code> bytes have been consumed from the buffer,\nso they should no longer be returned in calls to <code>read</code>. <a href=\"trait.BufRead.html#tymethod.consume\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.has_data_left\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"../../src/std/io/mod.rs.html#2285-2287\">source</a><a href=\"#method.has_data_left\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"trait.BufRead.html#method.has_data_left\" class=\"fn\">has_data_left</a>(&amp;mut self) -&gt; <a class=\"type\" href=\"type.Result.html\" title=\"type std::io::Result\">Result</a>&lt;<a class=\"primitive\" href=\"../primitive.bool.html\">bool</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>buf_read_has_data_left</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/86423\">#86423</a>)</span></div></span><div class=\"docblock\">Check if the underlying <code>Read</code> has any data left to be read. <a href=\"trait.BufRead.html#method.has_data_left\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.read_until\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"../../src/std/io/mod.rs.html#2344-2346\">source</a></span><a href=\"#method.read_until\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"trait.BufRead.html#method.read_until\" class=\"fn\">read_until</a>(&amp;mut self, byte: <a class=\"primitive\" href=\"../primitive.u8.html\">u8</a>, buf: &amp;mut <a class=\"struct\" href=\"../vec/struct.Vec.html\" title=\"struct std::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"../primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"type\" href=\"type.Result.html\" title=\"type std::io::Result\">Result</a>&lt;<a class=\"primitive\" href=\"../primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class=\"docblock\">Read all bytes into <code>buf</code> until the delimiter <code>byte</code> or EOF is reached. <a href=\"trait.BufRead.html#method.read_until\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.skip_until\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"../../src/std/io/mod.rs.html#2406-2408\">source</a><a href=\"#method.skip_until\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"trait.BufRead.html#method.skip_until\" class=\"fn\">skip_until</a>(&amp;mut self, byte: <a class=\"primitive\" href=\"../primitive.u8.html\">u8</a>) -&gt; <a class=\"type\" href=\"type.Result.html\" title=\"type std::io::Result\">Result</a>&lt;<a class=\"primitive\" href=\"../primitive.usize.html\">usize</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>bufread_skip_until</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/111735\">#111735</a>)</span></div></span><div class=\"docblock\">Skip all bytes until the delimiter <code>byte</code> or EOF is reached. <a href=\"trait.BufRead.html#method.skip_until\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.read_line\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"../../src/std/io/mod.rs.html#2474-2479\">source</a></span><a href=\"#method.read_line\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"trait.BufRead.html#method.read_line\" class=\"fn\">read_line</a>(&amp;mut self, buf: &amp;mut <a class=\"struct\" href=\"../string/struct.String.html\" title=\"struct std::string::String\">String</a>) -&gt; <a class=\"type\" href=\"type.Result.html\" title=\"type std::io::Result\">Result</a>&lt;<a class=\"primitive\" href=\"../primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class=\"docblock\">Read all bytes until a newline (the <code>0xA</code> byte) is reached, and append\nthem to the provided <code>String</code> buffer. <a href=\"trait.BufRead.html#method.read_line\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.split\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"../../src/std/io/mod.rs.html#2512-2517\">source</a></span><a href=\"#method.split\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"trait.BufRead.html#method.split\" class=\"fn\">split</a>(self, byte: <a class=\"primitive\" href=\"../primitive.u8.html\">u8</a>) -&gt; <a class=\"struct\" href=\"struct.Split.html\" title=\"struct std::io::Split\">Split</a>&lt;Self&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Split<Self>\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\">Returns an iterator over the contents of this reader split on the byte\n<code>byte</code>. <a href=\"trait.BufRead.html#method.split\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.lines\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"../../src/std/io/mod.rs.html#2549-2554\">source</a></span><a href=\"#method.lines\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"trait.BufRead.html#method.lines\" class=\"fn\">lines</a>(self) -&gt; <a class=\"struct\" href=\"struct.Lines.html\" title=\"struct std::io::Lines\">Lines</a>&lt;Self&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Lines<Self>\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\">Returns an iterator over the lines of this reader. <a href=\"trait.BufRead.html#method.lines\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-Clone-for-Empty\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"../../src/std/io/util.rs.html#18\">source</a></span><a href=\"#impl-Clone-for-Empty\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"../clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"struct.Empty.html\" title=\"struct std::io::Empty\">Empty</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"../../src/std/io/util.rs.html#18\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"../clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"struct.Empty.html\" title=\"struct std::io::Empty\">Empty</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Empty\">ⓘ</a></h4></section></summary><div class=\"docblock\">Returns a copy of the value. <a href=\"../clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"../clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"../primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class=\"docblock\">Performs copy-assignment from <code>source</code>. <a href=\"../clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-Debug-for-Empty\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"../../src/std/io/util.rs.html#18\">source</a></span><a href=\"#impl-Debug-for-Empty\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"../fmt/trait.Debug.html\" title=\"trait std::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"struct.Empty.html\" title=\"struct std::io::Empty\">Empty</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"../../src/std/io/util.rs.html#18\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"../fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"../fmt/struct.Formatter.html\" title=\"struct std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"../fmt/type.Result.html\" title=\"type std::fmt::Result\">Result</a></h4></section></summary><div class=\"docblock\">Formats the value using the given formatter. <a href=\"../fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-Default-for-Empty\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"../../src/std/io/util.rs.html#18\">source</a></span><a href=\"#impl-Default-for-Empty\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"../default/trait.Default.html\" title=\"trait std::default::Default\">Default</a> for <a class=\"struct\" href=\"struct.Empty.html\" title=\"struct std::io::Empty\">Empty</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"../../src/std/io/util.rs.html#18\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"../default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"struct.Empty.html\" title=\"struct std::io::Empty\">Empty</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Empty\">ⓘ</a></h4></section></summary><div class=\"docblock\">Returns the “default value” for a type. <a href=\"../default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-Read-for-Empty\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"../../src/std/io/util.rs.html#60-70\">source</a></span><a href=\"#impl-Read-for-Empty\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.Read.html\" title=\"trait std::io::Read\">Read</a> for <a class=\"struct\" href=\"struct.Empty.html\" title=\"struct std::io::Empty\">Empty</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.read\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"../../src/std/io/util.rs.html#62-64\">source</a><a href=\"#method.read\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"trait.Read.html#tymethod.read\" class=\"fn\">read</a>(&amp;mut self, _buf: &amp;mut [<a class=\"primitive\" href=\"../primitive.u8.html\">u8</a>]) -&gt; <a class=\"type\" href=\"type.Result.html\" title=\"type std::io::Result\">Result</a>&lt;<a class=\"primitive\" href=\"../primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class=\"docblock\">Pull some bytes from this source into the specified buffer, returning\nhow many bytes were read. <a href=\"trait.Read.html#tymethod.read\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.read_buf\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"../../src/std/io/util.rs.html#67-69\">source</a><a href=\"#method.read_buf\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"trait.Read.html#method.read_buf\" class=\"fn\">read_buf</a>(&amp;mut self, _cursor: <a class=\"struct\" href=\"struct.BorrowedCursor.html\" title=\"struct std::io::BorrowedCursor\">BorrowedCursor</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"type.Result.html\" title=\"type std::io::Result\">Result</a>&lt;<a class=\"primitive\" href=\"../primitive.unit.html\">()</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>read_buf</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/78485\">#78485</a>)</span></div></span><div class=\"docblock\">Pull some bytes from this source into the specified buffer. <a href=\"trait.Read.html#method.read_buf\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.read_vectored\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.36.0\">1.36.0</span> · <a class=\"src\" href=\"../../src/std/io/mod.rs.html#768-770\">source</a></span><a href=\"#method.read_vectored\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"trait.Read.html#method.read_vectored\" class=\"fn\">read_vectored</a>(&amp;mut self, bufs: &amp;mut [<a class=\"struct\" href=\"struct.IoSliceMut.html\" title=\"struct std::io::IoSliceMut\">IoSliceMut</a>&lt;'_&gt;]) -&gt; <a class=\"type\" href=\"type.Result.html\" title=\"type std::io::Result\">Result</a>&lt;<a class=\"primitive\" href=\"../primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class=\"docblock\">Like <code>read</code>, except that it reads into a slice of buffers. <a href=\"trait.Read.html#method.read_vectored\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.is_read_vectored\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"../../src/std/io/mod.rs.html#781-783\">source</a><a href=\"#method.is_read_vectored\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"trait.Read.html#method.is_read_vectored\" class=\"fn\">is_read_vectored</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"../primitive.bool.html\">bool</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>can_vector</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/69941\">#69941</a>)</span></div></span><div class=\"docblock\">Determines if this <code>Read</code>er has an efficient <code>read_vectored</code>\nimplementation. <a href=\"trait.Read.html#method.is_read_vectored\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.read_to_end\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"../../src/std/io/mod.rs.html#865-867\">source</a></span><a href=\"#method.read_to_end\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"trait.Read.html#method.read_to_end\" class=\"fn\">read_to_end</a>(&amp;mut self, buf: &amp;mut <a class=\"struct\" href=\"../vec/struct.Vec.html\" title=\"struct std::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"../primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"type\" href=\"type.Result.html\" title=\"type std::io::Result\">Result</a>&lt;<a class=\"primitive\" href=\"../primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class=\"docblock\">Read all bytes until EOF in this source, placing them into <code>buf</code>. <a href=\"trait.Read.html#method.read_to_end\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.read_to_string\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"../../src/std/io/mod.rs.html#908-910\">source</a></span><a href=\"#method.read_to_string\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"trait.Read.html#method.read_to_string\" class=\"fn\">read_to_string</a>(&amp;mut self, buf: &amp;mut <a class=\"struct\" href=\"../string/struct.String.html\" title=\"struct std::string::String\">String</a>) -&gt; <a class=\"type\" href=\"type.Result.html\" title=\"type std::io::Result\">Result</a>&lt;<a class=\"primitive\" href=\"../primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class=\"docblock\">Read all bytes until EOF in this source, appending them to <code>buf</code>. <a href=\"trait.Read.html#method.read_to_string\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.read_exact\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.6.0\">1.6.0</span> · <a class=\"src\" href=\"../../src/std/io/mod.rs.html#961-963\">source</a></span><a href=\"#method.read_exact\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"trait.Read.html#method.read_exact\" class=\"fn\">read_exact</a>(&amp;mut self, buf: &amp;mut [<a class=\"primitive\" href=\"../primitive.u8.html\">u8</a>]) -&gt; <a class=\"type\" href=\"type.Result.html\" title=\"type std::io::Result\">Result</a>&lt;<a class=\"primitive\" href=\"../primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\">Read the exact number of bytes required to fill <code>buf</code>. <a href=\"trait.Read.html#method.read_exact\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.read_buf_exact\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"../../src/std/io/mod.rs.html#995-997\">source</a><a href=\"#method.read_buf_exact\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"trait.Read.html#method.read_buf_exact\" class=\"fn\">read_buf_exact</a>(&amp;mut self, cursor: <a class=\"struct\" href=\"struct.BorrowedCursor.html\" title=\"struct std::io::BorrowedCursor\">BorrowedCursor</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"type.Result.html\" title=\"type std::io::Result\">Result</a>&lt;<a class=\"primitive\" href=\"../primitive.unit.html\">()</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>read_buf</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/78485\">#78485</a>)</span></div></span><div class=\"docblock\">Read the exact number of bytes required to fill <code>cursor</code>. <a href=\"trait.Read.html#method.read_buf_exact\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.by_ref-1\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"../../src/std/io/mod.rs.html#1034-1039\">source</a></span><a href=\"#method.by_ref-1\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"trait.Read.html#method.by_ref\" class=\"fn\">by_ref</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"../primitive.reference.html\">&amp;mut Self</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\">Creates a “by reference” adaptor for this instance of <code>Read</code>. <a href=\"trait.Read.html#method.by_ref\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.bytes\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"../../src/std/io/mod.rs.html#1077-1082\">source</a></span><a href=\"#method.bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"trait.Read.html#method.bytes\" class=\"fn\">bytes</a>(self) -&gt; <a class=\"struct\" href=\"struct.Bytes.html\" title=\"struct std::io::Bytes\">Bytes</a>&lt;Self&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Bytes<Self>\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\">Transforms this <code>Read</code> instance to an <a href=\"../iter/trait.Iterator.html\" title=\"trait std::iter::Iterator\"><code>Iterator</code></a> over its bytes. <a href=\"trait.Read.html#method.bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.chain\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"../../src/std/io/mod.rs.html#1115-1120\">source</a></span><a href=\"#method.chain\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"trait.Read.html#method.chain\" class=\"fn\">chain</a>&lt;R: <a class=\"trait\" href=\"trait.Read.html\" title=\"trait std::io::Read\">Read</a>&gt;(self, next: R) -&gt; <a class=\"struct\" href=\"struct.Chain.html\" title=\"struct std::io::Chain\">Chain</a>&lt;Self, R&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Chain<Self, R>\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\">Creates an adapter which will chain this stream with another. <a href=\"trait.Read.html#method.chain\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.take\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"../../src/std/io/mod.rs.html#1154-1159\">source</a></span><a href=\"#method.take\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"trait.Read.html#method.take\" class=\"fn\">take</a>(self, limit: <a class=\"primitive\" href=\"../primitive.u64.html\">u64</a>) -&gt; <a class=\"struct\" href=\"struct.Take.html\" title=\"struct std::io::Take\">Take</a>&lt;Self&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Take<Self>\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\">Creates an adapter which will read at most <code>limit</code> bytes from it. <a href=\"trait.Read.html#method.take\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-Seek-for-Empty\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.51.0\">1.51.0</span> · <a class=\"src\" href=\"../../src/std/io/util.rs.html#82-94\">source</a></span><a href=\"#impl-Seek-for-Empty\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.Seek.html\" title=\"trait std::io::Seek\">Seek</a> for <a class=\"struct\" href=\"struct.Empty.html\" title=\"struct std::io::Empty\">Empty</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.seek\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"../../src/std/io/util.rs.html#83-85\">source</a><a href=\"#method.seek\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"trait.Seek.html#tymethod.seek\" class=\"fn\">seek</a>(&amp;mut self, _pos: <a class=\"enum\" href=\"enum.SeekFrom.html\" title=\"enum std::io::SeekFrom\">SeekFrom</a>) -&gt; <a class=\"type\" href=\"type.Result.html\" title=\"type std::io::Result\">Result</a>&lt;<a class=\"primitive\" href=\"../primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\">Seek to an offset, in bytes, in a stream. <a href=\"trait.Seek.html#tymethod.seek\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.stream_len\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"../../src/std/io/util.rs.html#87-89\">source</a><a href=\"#method.stream_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"trait.Seek.html#method.stream_len\" class=\"fn\">stream_len</a>(&amp;mut self) -&gt; <a class=\"type\" href=\"type.Result.html\" title=\"type std::io::Result\">Result</a>&lt;<a class=\"primitive\" href=\"../primitive.u64.html\">u64</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>seek_stream_len</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/59359\">#59359</a>)</span></div></span><div class=\"docblock\">Returns the length of this stream (in bytes). <a href=\"trait.Seek.html#method.stream_len\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.stream_position\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"../../src/std/io/util.rs.html#91-93\">source</a><a href=\"#method.stream_position\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"trait.Seek.html#method.stream_position\" class=\"fn\">stream_position</a>(&amp;mut self) -&gt; <a class=\"type\" href=\"type.Result.html\" title=\"type std::io::Result\">Result</a>&lt;<a class=\"primitive\" href=\"../primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\">Returns the current seek position from the start of the stream. <a href=\"trait.Seek.html#method.stream_position\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.rewind\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.55.0\">1.55.0</span> · <a class=\"src\" href=\"../../src/std/io/mod.rs.html#1957-1960\">source</a></span><a href=\"#method.rewind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"trait.Seek.html#method.rewind\" class=\"fn\">rewind</a>(&amp;mut self) -&gt; <a class=\"type\" href=\"type.Result.html\" title=\"type std::io::Result\">Result</a>&lt;<a class=\"primitive\" href=\"../primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\">Rewind to the beginning of a stream. <a href=\"trait.Seek.html#method.rewind\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.seek_relative\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.80.0\">1.80.0</span> · <a class=\"src\" href=\"../../src/std/io/mod.rs.html#2062-2065\">source</a></span><a href=\"#method.seek_relative\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"trait.Seek.html#method.seek_relative\" class=\"fn\">seek_relative</a>(&amp;mut self, offset: <a class=\"primitive\" href=\"../primitive.i64.html\">i64</a>) -&gt; <a class=\"type\" href=\"type.Result.html\" title=\"type std::io::Result\">Result</a>&lt;<a class=\"primitive\" href=\"../primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\">Seeks relative to the current position. <a href=\"trait.Seek.html#method.seek_relative\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-Write-for-%26Empty\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.73.0\">1.73.0</span> · <a class=\"src\" href=\"../../src/std/io/util.rs.html#128-149\">source</a></span><a href=\"#impl-Write-for-%26Empty\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.Write.html\" title=\"trait std::io::Write\">Write</a> for &amp;<a class=\"struct\" href=\"struct.Empty.html\" title=\"struct std::io::Empty\">Empty</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.write-1\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"../../src/std/io/util.rs.html#130-132\">source</a><a href=\"#method.write-1\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"trait.Write.html#tymethod.write\" class=\"fn\">write</a>(&amp;mut self, buf: &amp;[<a class=\"primitive\" href=\"../primitive.u8.html\">u8</a>]) -&gt; <a class=\"type\" href=\"type.Result.html\" title=\"type std::io::Result\">Result</a>&lt;<a class=\"primitive\" href=\"../primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class=\"docblock\">Write a buffer into this writer, returning how many bytes were written. <a href=\"trait.Write.html#tymethod.write\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.write_vectored-1\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"../../src/std/io/util.rs.html#135-138\">source</a><a href=\"#method.write_vectored-1\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"trait.Write.html#method.write_vectored\" class=\"fn\">write_vectored</a>(&amp;mut self, bufs: &amp;[<a class=\"struct\" href=\"struct.IoSlice.html\" title=\"struct std::io::IoSlice\">IoSlice</a>&lt;'_&gt;]) -&gt; <a class=\"type\" href=\"type.Result.html\" title=\"type std::io::Result\">Result</a>&lt;<a class=\"primitive\" href=\"../primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class=\"docblock\">Like <a href=\"trait.Write.html#tymethod.write\" title=\"method std::io::Write::write\"><code>write</code></a>, except that it writes from a slice of buffers. <a href=\"trait.Write.html#method.write_vectored\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.is_write_vectored-1\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"../../src/std/io/util.rs.html#141-143\">source</a><a href=\"#method.is_write_vectored-1\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"trait.Write.html#method.is_write_vectored\" class=\"fn\">is_write_vectored</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"../primitive.bool.html\">bool</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>can_vector</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/69941\">#69941</a>)</span></div></span><div class=\"docblock\">Determines if this <code>Write</code>r has an efficient <a href=\"trait.Write.html#method.write_vectored\" title=\"method std::io::Write::write_vectored\"><code>write_vectored</code></a>\nimplementation. <a href=\"trait.Write.html#method.is_write_vectored\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.flush-1\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"../../src/std/io/util.rs.html#146-148\">source</a><a href=\"#method.flush-1\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"trait.Write.html#tymethod.flush\" class=\"fn\">flush</a>(&amp;mut self) -&gt; <a class=\"type\" href=\"type.Result.html\" title=\"type std::io::Result\">Result</a>&lt;<a class=\"primitive\" href=\"../primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\">Flush this output stream, ensuring that all intermediately buffered\ncontents reach their destination. <a href=\"trait.Write.html#tymethod.flush\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.write_all-1\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"../../src/std/io/mod.rs.html#1699-1711\">source</a></span><a href=\"#method.write_all-1\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"trait.Write.html#method.write_all\" class=\"fn\">write_all</a>(&amp;mut self, buf: &amp;[<a class=\"primitive\" href=\"../primitive.u8.html\">u8</a>]) -&gt; <a class=\"type\" href=\"type.Result.html\" title=\"type std::io::Result\">Result</a>&lt;<a class=\"primitive\" href=\"../primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\">Attempts to write an entire buffer into this writer. <a href=\"trait.Write.html#method.write_all\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.write_all_vectored-1\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"../../src/std/io/mod.rs.html#1761-1776\">source</a><a href=\"#method.write_all_vectored-1\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"trait.Write.html#method.write_all_vectored\" class=\"fn\">write_all_vectored</a>(&amp;mut self, bufs: &amp;mut [<a class=\"struct\" href=\"struct.IoSlice.html\" title=\"struct std::io::IoSlice\">IoSlice</a>&lt;'_&gt;]) -&gt; <a class=\"type\" href=\"type.Result.html\" title=\"type std::io::Result\">Result</a>&lt;<a class=\"primitive\" href=\"../primitive.unit.html\">()</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>write_all_vectored</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/70436\">#70436</a>)</span></div></span><div class=\"docblock\">Attempts to write multiple buffers into this writer. <a href=\"trait.Write.html#method.write_all_vectored\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.write_fmt-1\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"../../src/std/io/mod.rs.html#1814-1850\">source</a></span><a href=\"#method.write_fmt-1\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"trait.Write.html#method.write_fmt\" class=\"fn\">write_fmt</a>(&amp;mut self, fmt: <a class=\"struct\" href=\"../fmt/struct.Arguments.html\" title=\"struct std::fmt::Arguments\">Arguments</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"type.Result.html\" title=\"type std::io::Result\">Result</a>&lt;<a class=\"primitive\" href=\"../primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\">Writes a formatted string into this writer, returning any error\nencountered. <a href=\"trait.Write.html#method.write_fmt\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.by_ref-2\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"../../src/std/io/mod.rs.html#1874-1879\">source</a></span><a href=\"#method.by_ref-2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"trait.Write.html#method.by_ref\" class=\"fn\">by_ref</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"../primitive.reference.html\">&amp;mut Self</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\">Creates a “by reference” adapter for this instance of <code>Write</code>. <a href=\"trait.Write.html#method.by_ref\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-Write-for-Empty\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.73.0\">1.73.0</span> · <a class=\"src\" href=\"../../src/std/io/util.rs.html#104-125\">source</a></span><a href=\"#impl-Write-for-Empty\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.Write.html\" title=\"trait std::io::Write\">Write</a> for <a class=\"struct\" href=\"struct.Empty.html\" title=\"struct std::io::Empty\">Empty</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.write\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"../../src/std/io/util.rs.html#106-108\">source</a><a href=\"#method.write\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"trait.Write.html#tymethod.write\" class=\"fn\">write</a>(&amp;mut self, buf: &amp;[<a class=\"primitive\" href=\"../primitive.u8.html\">u8</a>]) -&gt; <a class=\"type\" href=\"type.Result.html\" title=\"type std::io::Result\">Result</a>&lt;<a class=\"primitive\" href=\"../primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class=\"docblock\">Write a buffer into this writer, returning how many bytes were written. <a href=\"trait.Write.html#tymethod.write\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.write_vectored\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"../../src/std/io/util.rs.html#111-114\">source</a><a href=\"#method.write_vectored\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"trait.Write.html#method.write_vectored\" class=\"fn\">write_vectored</a>(&amp;mut self, bufs: &amp;[<a class=\"struct\" href=\"struct.IoSlice.html\" title=\"struct std::io::IoSlice\">IoSlice</a>&lt;'_&gt;]) -&gt; <a class=\"type\" href=\"type.Result.html\" title=\"type std::io::Result\">Result</a>&lt;<a class=\"primitive\" href=\"../primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class=\"docblock\">Like <a href=\"trait.Write.html#tymethod.write\" title=\"method std::io::Write::write\"><code>write</code></a>, except that it writes from a slice of buffers. <a href=\"trait.Write.html#method.write_vectored\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.is_write_vectored\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"../../src/std/io/util.rs.html#117-119\">source</a><a href=\"#method.is_write_vectored\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"trait.Write.html#method.is_write_vectored\" class=\"fn\">is_write_vectored</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"../primitive.bool.html\">bool</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>can_vector</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/69941\">#69941</a>)</span></div></span><div class=\"docblock\">Determines if this <code>Write</code>r has an efficient <a href=\"trait.Write.html#method.write_vectored\" title=\"method std::io::Write::write_vectored\"><code>write_vectored</code></a>\nimplementation. <a href=\"trait.Write.html#method.is_write_vectored\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.flush\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"../../src/std/io/util.rs.html#122-124\">source</a><a href=\"#method.flush\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"trait.Write.html#tymethod.flush\" class=\"fn\">flush</a>(&amp;mut self) -&gt; <a class=\"type\" href=\"type.Result.html\" title=\"type std::io::Result\">Result</a>&lt;<a class=\"primitive\" href=\"../primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\">Flush this output stream, ensuring that all intermediately buffered\ncontents reach their destination. <a href=\"trait.Write.html#tymethod.flush\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.write_all\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"../../src/std/io/mod.rs.html#1699-1711\">source</a></span><a href=\"#method.write_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"trait.Write.html#method.write_all\" class=\"fn\">write_all</a>(&amp;mut self, buf: &amp;[<a class=\"primitive\" href=\"../primitive.u8.html\">u8</a>]) -&gt; <a class=\"type\" href=\"type.Result.html\" title=\"type std::io::Result\">Result</a>&lt;<a class=\"primitive\" href=\"../primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\">Attempts to write an entire buffer into this writer. <a href=\"trait.Write.html#method.write_all\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.write_all_vectored\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"../../src/std/io/mod.rs.html#1761-1776\">source</a><a href=\"#method.write_all_vectored\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"trait.Write.html#method.write_all_vectored\" class=\"fn\">write_all_vectored</a>(&amp;mut self, bufs: &amp;mut [<a class=\"struct\" href=\"struct.IoSlice.html\" title=\"struct std::io::IoSlice\">IoSlice</a>&lt;'_&gt;]) -&gt; <a class=\"type\" href=\"type.Result.html\" title=\"type std::io::Result\">Result</a>&lt;<a class=\"primitive\" href=\"../primitive.unit.html\">()</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>write_all_vectored</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/70436\">#70436</a>)</span></div></span><div class=\"docblock\">Attempts to write multiple buffers into this writer. <a href=\"trait.Write.html#method.write_all_vectored\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.write_fmt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"../../src/std/io/mod.rs.html#1814-1850\">source</a></span><a href=\"#method.write_fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"trait.Write.html#method.write_fmt\" class=\"fn\">write_fmt</a>(&amp;mut self, fmt: <a class=\"struct\" href=\"../fmt/struct.Arguments.html\" title=\"struct std::fmt::Arguments\">Arguments</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"type.Result.html\" title=\"type std::io::Result\">Result</a>&lt;<a class=\"primitive\" href=\"../primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\">Writes a formatted string into this writer, returning any error\nencountered. <a href=\"trait.Write.html#method.write_fmt\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.by_ref\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"../../src/std/io/mod.rs.html#1874-1879\">source</a></span><a href=\"#method.by_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"trait.Write.html#method.by_ref\" class=\"fn\">by_ref</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"../primitive.reference.html\">&amp;mut Self</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\">Creates a “by reference” adapter for this instance of <code>Write</code>. <a href=\"trait.Write.html#method.by_ref\">Read more</a></div></details></div></details><section id=\"impl-Copy-for-Empty\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"../../src/std/io/util.rs.html#18\">source</a></span><a href=\"#impl-Copy-for-Empty\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"../marker/trait.Copy.html\" title=\"trait std::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"struct.Empty.html\" title=\"struct std::io::Empty\">Empty</a></h3></section></div><h2 id=\"synthetic-implementations\" class=\"section-header\">Auto Trait Implementations<a href=\"#synthetic-implementations\" class=\"anchor\">§</a></h2><div id=\"synthetic-implementations-list\"><section id=\"impl-Freeze-for-Empty\" class=\"impl\"><a href=\"#impl-Freeze-for-Empty\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"../marker/trait.Freeze.html\" title=\"trait std::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"struct.Empty.html\" title=\"struct std::io::Empty\">Empty</a></h3></section><section id=\"impl-RefUnwindSafe-for-Empty\" class=\"impl\"><a href=\"#impl-RefUnwindSafe-for-Empty\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"../panic/trait.RefUnwindSafe.html\" title=\"trait std::panic::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"struct\" href=\"struct.Empty.html\" title=\"struct std::io::Empty\">Empty</a></h3></section><section id=\"impl-Send-for-Empty\" class=\"impl\"><a href=\"#impl-Send-for-Empty\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"../marker/trait.Send.html\" title=\"trait std::marker::Send\">Send</a> for <a class=\"struct\" href=\"struct.Empty.html\" title=\"struct std::io::Empty\">Empty</a></h3></section><section id=\"impl-Sync-for-Empty\" class=\"impl\"><a href=\"#impl-Sync-for-Empty\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"../marker/trait.Sync.html\" title=\"trait std::marker::Sync\">Sync</a> for <a class=\"struct\" href=\"struct.Empty.html\" title=\"struct std::io::Empty\">Empty</a></h3></section><section id=\"impl-Unpin-for-Empty\" class=\"impl\"><a href=\"#impl-Unpin-for-Empty\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"../marker/trait.Unpin.html\" title=\"trait std::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"struct.Empty.html\" title=\"struct std::io::Empty\">Empty</a></h3></section><section id=\"impl-UnwindSafe-for-Empty\" class=\"impl\"><a href=\"#impl-UnwindSafe-for-Empty\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"../panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"struct.Empty.html\" title=\"struct std::io::Empty\">Empty</a></h3></section></div><h2 id=\"blanket-implementations\" class=\"section-header\">Blanket Implementations<a href=\"#blanket-implementations\" class=\"anchor\">§</a></h2><div id=\"blanket-implementations-list\"><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-Any-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/any.rs.html#140\">source</a><a href=\"#impl-Any-for-T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"../any/trait.Any.html\" title=\"trait std::any::Any\">Any</a> for T<div class=\"where\">where\n    T: 'static + ?<a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.type_id\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/any.rs.html#141\">source</a><a href=\"#method.type_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"../any/trait.Any.html#tymethod.type_id\" class=\"fn\">type_id</a>(&amp;self) -&gt; <a class=\"struct\" href=\"../any/struct.TypeId.html\" title=\"struct std::any::TypeId\">TypeId</a></h4></section></summary><div class=\"docblock\">Gets the <code>TypeId</code> of <code>self</code>. <a href=\"../any/trait.Any.html#tymethod.type_id\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-Borrow%3CT%3E-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/borrow.rs.html#208\">source</a><a href=\"#impl-Borrow%3CT%3E-for-T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"../borrow/trait.Borrow.html\" title=\"trait std::borrow::Borrow\">Borrow</a>&lt;T&gt; for T<div class=\"where\">where\n    T: ?<a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.borrow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/borrow.rs.html#210\">source</a><a href=\"#method.borrow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"../borrow/trait.Borrow.html#tymethod.borrow\" class=\"fn\">borrow</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"../primitive.reference.html\">&amp;T</a></h4></section></summary><div class=\"docblock\">Immutably borrows from an owned value. <a href=\"../borrow/trait.Borrow.html#tymethod.borrow\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-BorrowMut%3CT%3E-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/borrow.rs.html#216\">source</a><a href=\"#impl-BorrowMut%3CT%3E-for-T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"../borrow/trait.BorrowMut.html\" title=\"trait std::borrow::BorrowMut\">BorrowMut</a>&lt;T&gt; for T<div class=\"where\">where\n    T: ?<a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.borrow_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/borrow.rs.html#217\">source</a><a href=\"#method.borrow_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"../borrow/trait.BorrowMut.html#tymethod.borrow_mut\" class=\"fn\">borrow_mut</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"../primitive.reference.html\">&amp;mut T</a></h4></section></summary><div class=\"docblock\">Mutably borrows from an owned value. <a href=\"../borrow/trait.BorrowMut.html#tymethod.borrow_mut\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-From%3CT%3E-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#765\">source</a><a href=\"#impl-From%3CT%3E-for-T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"../convert/trait.From.html\" title=\"trait std::convert::From\">From</a>&lt;T&gt; for T</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#768\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"../convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(t: T) -&gt; T</h4></section></summary><div class=\"docblock\"><p>Returns the argument unchanged.</p>\n</div></details></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-Into%3CU%3E-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#748-750\">source</a><a href=\"#impl-Into%3CU%3E-for-T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"../convert/trait.Into.html\" title=\"trait std::convert::Into\">Into</a>&lt;U&gt; for T<div class=\"where\">where\n    U: <a class=\"trait\" href=\"../convert/trait.From.html\" title=\"trait std::convert::From\">From</a>&lt;T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#758\">source</a><a href=\"#method.into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"../convert/trait.Into.html#tymethod.into\" class=\"fn\">into</a>(self) -&gt; U</h4></section></summary><div class=\"docblock\"><p>Calls <code>U::from(self)</code>.</p>\n<p>That is, this conversion is whatever the implementation of\n<code><a href=\"../convert/trait.From.html\" title=\"trait std::convert::From\">From</a>&lt;T&gt; for U</code> chooses to do.</p>\n</div></details></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-ToOwned-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/alloc/borrow.rs.html#83-85\">source</a><a href=\"#impl-ToOwned-for-T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"../borrow/trait.ToOwned.html\" title=\"trait std::borrow::ToOwned\">ToOwned</a> for T<div class=\"where\">where\n    T: <a class=\"trait\" href=\"../clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open=\"\"><summary><section id=\"associatedtype.Owned\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Owned\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"../borrow/trait.ToOwned.html#associatedtype.Owned\" class=\"associatedtype\">Owned</a> = T</h4></section></summary><div class=\"docblock\">The resulting type after obtaining ownership.</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.to_owned\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/alloc/borrow.rs.html#88\">source</a><a href=\"#method.to_owned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"../borrow/trait.ToOwned.html#tymethod.to_owned\" class=\"fn\">to_owned</a>(&amp;self) -&gt; T</h4></section></summary><div class=\"docblock\">Creates owned data from borrowed data, usually by cloning. <a href=\"../borrow/trait.ToOwned.html#tymethod.to_owned\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.clone_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/alloc/borrow.rs.html#92\">source</a><a href=\"#method.clone_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"../borrow/trait.ToOwned.html#method.clone_into\" class=\"fn\">clone_into</a>(&amp;self, target: <a class=\"primitive\" href=\"../primitive.reference.html\">&amp;mut T</a>)</h4></section></summary><div class=\"docblock\">Uses borrowed data to replace owned data, usually by cloning. <a href=\"../borrow/trait.ToOwned.html#method.clone_into\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-TryFrom%3CU%3E-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#805-807\">source</a><a href=\"#impl-TryFrom%3CU%3E-for-T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"../convert/trait.TryFrom.html\" title=\"trait std::convert::TryFrom\">TryFrom</a>&lt;U&gt; for T<div class=\"where\">where\n    U: <a class=\"trait\" href=\"../convert/trait.Into.html\" title=\"trait std::convert::Into\">Into</a>&lt;T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open=\"\"><summary><section id=\"associatedtype.Error-1\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error-1\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"../convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"../convert/enum.Infallible.html\" title=\"enum std::convert::Infallible\">Infallible</a></h4></section></summary><div class=\"docblock\">The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#812\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"../convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(value: U) -&gt; <a class=\"enum\" href=\"../result/enum.Result.html\" title=\"enum std::result::Result\">Result</a>&lt;T, &lt;T as <a class=\"trait\" href=\"../convert/trait.TryFrom.html\" title=\"trait std::convert::TryFrom\">TryFrom</a>&lt;U&gt;&gt;::<a class=\"associatedtype\" href=\"../convert/trait.TryFrom.html#associatedtype.Error\" title=\"type std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\">Performs the conversion.</div></details></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-TryInto%3CU%3E-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#790-792\">source</a><a href=\"#impl-TryInto%3CU%3E-for-T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"../convert/trait.TryInto.html\" title=\"trait std::convert::TryInto\">TryInto</a>&lt;U&gt; for T<div class=\"where\">where\n    U: <a class=\"trait\" href=\"../convert/trait.TryFrom.html\" title=\"trait std::convert::TryFrom\">TryFrom</a>&lt;T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open=\"\"><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"../convert/trait.TryInto.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = &lt;U as <a class=\"trait\" href=\"../convert/trait.TryFrom.html\" title=\"trait std::convert::TryFrom\">TryFrom</a>&lt;T&gt;&gt;::<a class=\"associatedtype\" href=\"../convert/trait.TryFrom.html#associatedtype.Error\" title=\"type std::convert::TryFrom::Error\">Error</a></h4></section></summary><div class=\"docblock\">The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.try_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#797\">source</a><a href=\"#method.try_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"../convert/trait.TryInto.html#tymethod.try_into\" class=\"fn\">try_into</a>(self) -&gt; <a class=\"enum\" href=\"../result/enum.Result.html\" title=\"enum std::result::Result\">Result</a>&lt;U, &lt;U as <a class=\"trait\" href=\"../convert/trait.TryFrom.html\" title=\"trait std::convert::TryFrom\">TryFrom</a>&lt;T&gt;&gt;::<a class=\"associatedtype\" href=\"../convert/trait.TryFrom.html#associatedtype.Error\" title=\"type std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\">Performs the conversion.</div></details></div></details></div><script type=\"text/json\" id=\"notable-traits-data\">{\"Bytes<Self>\":\"<h3>Notable traits for <code><a class=\\\"struct\\\" href=\\\"struct.Bytes.html\\\" title=\\\"struct std::io::Bytes\\\">Bytes</a>&lt;R&gt;</code></h3><pre><code><div class=\\\"where\\\">impl&lt;R: <a class=\\\"trait\\\" href=\\\"trait.Read.html\\\" title=\\\"trait std::io::Read\\\">Read</a>&gt; <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a> for <a class=\\\"struct\\\" href=\\\"struct.Bytes.html\\\" title=\\\"struct std::io::Bytes\\\">Bytes</a>&lt;R&gt;</div><div class=\\\"where\\\">    type <a href=\\\"../iter/trait.Iterator.html#associatedtype.Item\\\" class=\\\"associatedtype\\\">Item</a> = <a class=\\\"type\\\" href=\\\"type.Result.html\\\" title=\\\"type std::io::Result\\\">Result</a>&lt;<a class=\\\"primitive\\\" href=\\\"../primitive.u8.html\\\">u8</a>&gt;;</div>\",\"Chain<Self, R>\":\"<h3>Notable traits for <code><a class=\\\"struct\\\" href=\\\"struct.Chain.html\\\" title=\\\"struct std::io::Chain\\\">Chain</a>&lt;T, U&gt;</code></h3><pre><code><div class=\\\"where\\\">impl&lt;T: <a class=\\\"trait\\\" href=\\\"trait.Read.html\\\" title=\\\"trait std::io::Read\\\">Read</a>, U: <a class=\\\"trait\\\" href=\\\"trait.Read.html\\\" title=\\\"trait std::io::Read\\\">Read</a>&gt; <a class=\\\"trait\\\" href=\\\"trait.Read.html\\\" title=\\\"trait std::io::Read\\\">Read</a> for <a class=\\\"struct\\\" href=\\\"struct.Chain.html\\\" title=\\\"struct std::io::Chain\\\">Chain</a>&lt;T, U&gt;</div>\",\"Empty\":\"<h3>Notable traits for <code><a class=\\\"struct\\\" href=\\\"struct.Empty.html\\\" title=\\\"struct std::io::Empty\\\">Empty</a></code></h3><pre><code><div class=\\\"where\\\">impl <a class=\\\"trait\\\" href=\\\"trait.Write.html\\\" title=\\\"trait std::io::Write\\\">Write</a> for <a class=\\\"struct\\\" href=\\\"struct.Empty.html\\\" title=\\\"struct std::io::Empty\\\">Empty</a></div><div class=\\\"where\\\">impl <a class=\\\"trait\\\" href=\\\"trait.Read.html\\\" title=\\\"trait std::io::Read\\\">Read</a> for <a class=\\\"struct\\\" href=\\\"struct.Empty.html\\\" title=\\\"struct std::io::Empty\\\">Empty</a></div><div class=\\\"where\\\">impl <a class=\\\"trait\\\" href=\\\"trait.Write.html\\\" title=\\\"trait std::io::Write\\\">Write</a> for &amp;<a class=\\\"struct\\\" href=\\\"struct.Empty.html\\\" title=\\\"struct std::io::Empty\\\">Empty</a></div>\",\"Lines<Self>\":\"<h3>Notable traits for <code><a class=\\\"struct\\\" href=\\\"struct.Lines.html\\\" title=\\\"struct std::io::Lines\\\">Lines</a>&lt;B&gt;</code></h3><pre><code><div class=\\\"where\\\">impl&lt;B: <a class=\\\"trait\\\" href=\\\"trait.BufRead.html\\\" title=\\\"trait std::io::BufRead\\\">BufRead</a>&gt; <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a> for <a class=\\\"struct\\\" href=\\\"struct.Lines.html\\\" title=\\\"struct std::io::Lines\\\">Lines</a>&lt;B&gt;</div><div class=\\\"where\\\">    type <a href=\\\"../iter/trait.Iterator.html#associatedtype.Item\\\" class=\\\"associatedtype\\\">Item</a> = <a class=\\\"type\\\" href=\\\"type.Result.html\\\" title=\\\"type std::io::Result\\\">Result</a>&lt;<a class=\\\"struct\\\" href=\\\"../string/struct.String.html\\\" title=\\\"struct std::string::String\\\">String</a>&gt;;</div>\",\"Split<Self>\":\"<h3>Notable traits for <code><a class=\\\"struct\\\" href=\\\"struct.Split.html\\\" title=\\\"struct std::io::Split\\\">Split</a>&lt;B&gt;</code></h3><pre><code><div class=\\\"where\\\">impl&lt;B: <a class=\\\"trait\\\" href=\\\"trait.BufRead.html\\\" title=\\\"trait std::io::BufRead\\\">BufRead</a>&gt; <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a> for <a class=\\\"struct\\\" href=\\\"struct.Split.html\\\" title=\\\"struct std::io::Split\\\">Split</a>&lt;B&gt;</div><div class=\\\"where\\\">    type <a href=\\\"../iter/trait.Iterator.html#associatedtype.Item\\\" class=\\\"associatedtype\\\">Item</a> = <a class=\\\"type\\\" href=\\\"type.Result.html\\\" title=\\\"type std::io::Result\\\">Result</a>&lt;<a class=\\\"struct\\\" href=\\\"../vec/struct.Vec.html\\\" title=\\\"struct std::vec::Vec\\\">Vec</a>&lt;<a class=\\\"primitive\\\" href=\\\"../primitive.u8.html\\\">u8</a>&gt;&gt;;</div>\",\"Take<Self>\":\"<h3>Notable traits for <code><a class=\\\"struct\\\" href=\\\"struct.Take.html\\\" title=\\\"struct std::io::Take\\\">Take</a>&lt;T&gt;</code></h3><pre><code><div class=\\\"where\\\">impl&lt;T: <a class=\\\"trait\\\" href=\\\"trait.Read.html\\\" title=\\\"trait std::io::Read\\\">Read</a>&gt; <a class=\\\"trait\\\" href=\\\"trait.Read.html\\\" title=\\\"trait std::io::Read\\\">Read</a> for <a class=\\\"struct\\\" href=\\\"struct.Take.html\\\" title=\\\"struct std::io::Take\\\">Take</a>&lt;T&gt;</div>\"}</script></section></div></main></body></html>",
	"crawlDate": "2024-07-28T05:11:22.125Z"
}