{
	"title": "cargo tree - The Cargo Book",
	"url": "https://doc.rust-lang.org/cargo/commands/cargo-tree.html",
	"markdown": "# cargo tree - The Cargo Book\n\n## [NAME](#name)\n\ncargo-tree — Display a tree visualization of a dependency graph\n\n## [SYNOPSIS](#synopsis)\n\n`cargo tree` \\[_options_\\]\n\n## [DESCRIPTION](#description)\n\nThis command will display a tree of dependencies to the terminal. An example of a simple project that depends on the “rand” package:\n\n```\nmyproject v0.1.0 (/myproject)\n└── rand v0.7.3\n    ├── getrandom v0.1.14\n    │   ├── cfg-if v0.1.10\n    │   └── libc v0.2.68\n    ├── libc v0.2.68 (*)\n    ├── rand_chacha v0.2.2\n    │   ├── ppv-lite86 v0.2.6\n    │   └── rand_core v0.5.1\n    │       └── getrandom v0.1.14 (*)\n    └── rand_core v0.5.1 (*)\n[build-dependencies]\n└── cc v1.0.50\n\n```\n\nPackages marked with `(*)` have been “de-duplicated”. The dependencies for the package have already been shown elsewhere in the graph, and so are not repeated. Use the `--no-dedupe` option to repeat the duplicates.\n\nThe `-e` flag can be used to select the dependency kinds to display. The “features” kind changes the output to display the features enabled by each dependency. For example, `cargo tree -e features`:\n\n```\nmyproject v0.1.0 (/myproject)\n└── log feature \"serde\"\n    └── log v0.4.8\n        ├── serde v1.0.106\n        └── cfg-if feature \"default\"\n            └── cfg-if v0.1.10\n\n```\n\nIn this tree, `myproject` depends on `log` with the `serde` feature. `log` in turn depends on `cfg-if` with “default” features. When using `-e features` it can be helpful to use `-i` flag to show how the features flow into a package. See the examples below for more detail.\n\n### [Feature Unification](#feature-unification)\n\nThis command shows a graph much closer to a feature-unified graph Cargo will build, rather than what you list in `Cargo.toml`. For instance, if you specify the same dependency in both `[dependencies]` and `[dev-dependencies]` but with different features on. This command may merge all features and show a `(*)` on one of the dependency to indicate the duplicate.\n\nAs a result, for a mostly equivalent overview of what `cargo build` does, `cargo tree -e normal,build` is pretty close; for a mostly equivalent overview of what `cargo test` does, `cargo tree` is pretty close. However, it doesn’t guarantee the exact equivalence to what Cargo is going to build, since a compilation is complex and depends on lots of different factors.\n\nTo learn more about feature unification, check out this [dedicated section](about:blank/reference/features.html#feature-unification).\n\n## [OPTIONS](#options)\n\n### [Tree Options](#tree-options)\n\n`-i` _spec_\n\n`--invert` _spec_\n\nShow the reverse dependencies for the given package. This flag will invert the tree and display the packages that depend on the given package.\n\nNote that in a workspace, by default it will only display the package’s reverse dependencies inside the tree of the workspace member in the current directory. The `--workspace` flag can be used to extend it so that it will show the package’s reverse dependencies across the entire workspace. The `-p` flag can be used to display the package’s reverse dependencies only with the subtree of the package given to `-p`.\n\n`--prune` _spec_\n\nPrune the given package from the display of the dependency tree.\n\n`--depth` _depth_\n\nMaximum display depth of the dependency tree. A depth of 1 displays the direct dependencies, for example.\n\n`--no-dedupe`\n\nDo not de-duplicate repeated dependencies. Usually, when a package has already displayed its dependencies, further occurrences will not re-display its dependencies, and will include a `(*)` to indicate it has already been shown. This flag will cause those duplicates to be repeated.\n\n`-d`\n\n`--duplicates`\n\nShow only dependencies which come in multiple versions (implies `--invert`). When used with the `-p` flag, only shows duplicates within the subtree of the given package.\n\nIt can be beneficial for build times and executable sizes to avoid building that same package multiple times. This flag can help identify the offending packages. You can then investigate if the package that depends on the duplicate with the older version can be updated to the newer version so that only one instance is built.\n\n`-e` _kinds_\n\n`--edges` _kinds_\n\nThe dependency kinds to display. Takes a comma separated list of values:\n\n-   `all` — Show all edge kinds.\n-   `normal` — Show normal dependencies.\n-   `build` — Show build dependencies.\n-   `dev` — Show development dependencies.\n-   `features` — Show features enabled by each dependency. If this is the only kind given, then it will automatically include the other dependency kinds.\n-   `no-normal` — Do not include normal dependencies.\n-   `no-build` — Do not include build dependencies.\n-   `no-dev` — Do not include development dependencies.\n-   `no-proc-macro` — Do not include procedural macro dependencies.\n\nThe `normal`, `build`, `dev`, and `all` dependency kinds cannot be mixed with `no-normal`, `no-build`, or `no-dev` dependency kinds.\n\nThe default is `normal,build,dev`.\n\n`--target` _triple_\n\nFilter dependencies matching the given [target triple](about:blank/appendix/glossary.html#target). The default is the host platform. Use the value `all` to include _all_ targets.\n\n### [Tree Formatting Options](#tree-formatting-options)\n\n`--charset` _charset_\n\nChooses the character set to use for the tree. Valid values are “utf8” or “ascii”. When unspecified, cargo will auto-select a value.\n\n`-f` _format_\n\n`--format` _format_\n\nSet the format string for each package. The default is “{p}”.\n\nThis is an arbitrary string which will be used to display each package. The following strings will be replaced with the corresponding value:\n\n-   `{p}` — The package name.\n-   `{l}` — The package license.\n-   `{r}` — The package repository URL.\n-   `{f}` — Comma-separated list of package features that are enabled.\n-   `{lib}` — The name, as used in a `use` statement, of the package’s library.\n\n`--prefix` _prefix_\n\nSets how each line is displayed. The _prefix_ value can be one of:\n\n-   `indent` (default) — Shows each line indented as a tree.\n-   `depth` — Show as a list, with the numeric depth printed before each entry.\n-   `none` — Show as a flat list.\n\n### [Package Selection](#package-selection)\n\nBy default, when no package selection options are given, the packages selected depend on the selected manifest file (based on the current working directory if `--manifest-path` is not given). If the manifest is the root of a workspace then the workspaces default members are selected, otherwise only the package defined by the manifest will be selected.\n\nThe default members of a workspace can be set explicitly with the `workspace.default-members` key in the root manifest. If this is not set, a virtual workspace will include all workspace members (equivalent to passing `--workspace`), and a non-virtual workspace will include only the root crate itself.\n\n`-p` _spec_…\n\n`--package` _spec_…\n\nDisplay only the specified packages. See [cargo-pkgid(1)](cargo-pkgid.html) for the SPEC format. This flag may be specified multiple times and supports common Unix glob patterns like `*`, `?` and `[]`. However, to avoid your shell accidentally expanding glob patterns before Cargo handles them, you must use single quotes or double quotes around each pattern.\n\n`--workspace`\n\nDisplay all members in the workspace.\n\n`--exclude` _SPEC_…\n\nExclude the specified packages. Must be used in conjunction with the `--workspace` flag. This flag may be specified multiple times and supports common Unix glob patterns like `*`, `?` and `[]`. However, to avoid your shell accidentally expanding glob patterns before Cargo handles them, you must use single quotes or double quotes around each pattern.\n\n### [Manifest Options](#manifest-options)\n\n`--manifest-path` _path_\n\nPath to the `Cargo.toml` file. By default, Cargo searches for the `Cargo.toml` file in the current directory or any parent directory.\n\n`--locked`\n\nAsserts that the exact same dependencies and versions are used as when the existing `Cargo.lock` file was originally generated. Cargo will exit with an error when either of the following scenarios arises:\n\n-   The lock file is missing.\n-   Cargo attempted to change the lock file due to a different dependency resolution.\n\nIt may be used in environments where deterministic builds are desired, such as in CI pipelines.\n\n`--offline`\n\nPrevents Cargo from accessing the network for any reason. Without this flag, Cargo will stop with an error if it needs to access the network and the network is not available. With this flag, Cargo will attempt to proceed without the network if possible.\n\nBeware that this may result in different dependency resolution than online mode. Cargo will restrict itself to crates that are downloaded locally, even if there might be a newer version as indicated in the local copy of the index. See the [cargo-fetch(1)](cargo-fetch.html) command to download dependencies before going offline.\n\nMay also be specified with the `net.offline` [config value](../reference/config.html).\n\n`--frozen`\n\nEquivalent to specifying both `--locked` and `--offline`.\n\n### [Feature Selection](#feature-selection)\n\nThe feature flags allow you to control which features are enabled. When no feature options are given, the `default` feature is activated for every selected package.\n\nSee [the features documentation](about:blank/reference/features.html#command-line-feature-options) for more details.\n\n`-F` _features_\n\n`--features` _features_\n\nSpace or comma separated list of features to activate. Features of workspace members may be enabled with `package-name/feature-name` syntax. This flag may be specified multiple times, which enables all specified features.\n\n`--all-features`\n\nActivate all available features of all selected packages.\n\n`--no-default-features`\n\nDo not activate the `default` feature of the selected packages.\n\n### [Display Options](#display-options)\n\n`-v`\n\n`--verbose`\n\nUse verbose output. May be specified twice for “very verbose” output which includes extra output such as dependency warnings and build script output. May also be specified with the `term.verbose` [config value](../reference/config.html).\n\n`-q`\n\n`--quiet`\n\nDo not print cargo log messages. May also be specified with the `term.quiet` [config value](../reference/config.html).\n\n`--color` _when_\n\nControl when colored output is used. Valid values:\n\n-   `auto` (default): Automatically detect if color support is available on the terminal.\n-   `always`: Always display colors.\n-   `never`: Never display colors.\n\nMay also be specified with the `term.color` [config value](../reference/config.html).\n\n### [Common Options](#common-options)\n\n`+`_toolchain_\n\nIf Cargo has been installed with rustup, and the first argument to `cargo` begins with `+`, it will be interpreted as a rustup toolchain name (such as `+stable` or `+nightly`). See the [rustup documentation](https://rust-lang.github.io/rustup/overrides.html) for more information about how toolchain overrides work.\n\n`--config` _KEY=VALUE_ or _PATH_\n\nOverrides a Cargo configuration value. The argument should be in TOML syntax of `KEY=VALUE`, or provided as a path to an extra configuration file. This flag may be specified multiple times. See the [command-line overrides section](about:blank/reference/config.html#command-line-overrides) for more information.\n\n`-C` _PATH_\n\nChanges the current working directory before executing any specified operations. This affects things like where cargo looks by default for the project manifest (`Cargo.toml`), as well as the directories searched for discovering `.cargo/config.toml`, for example. This option must appear before the command name, for example `cargo -C path/to/my-project build`.\n\nThis option is only available on the [nightly channel](https://doc.rust-lang.org/book/appendix-07-nightly-rust.html) and requires the `-Z unstable-options` flag to enable (see [#10098](https://github.com/rust-lang/cargo/issues/10098)).\n\n`-h`\n\n`--help`\n\nPrints help information.\n\n`-Z` _flag_\n\nUnstable (nightly-only) flags to Cargo. Run `cargo -Z help` for details.\n\n## [ENVIRONMENT](#environment)\n\nSee [the reference](../reference/environment-variables.html) for details on environment variables that Cargo reads.\n\n## [EXIT STATUS](#exit-status)\n\n-   `0`: Cargo succeeded.\n-   `101`: Cargo failed to complete.\n\n## [EXAMPLES](#examples)\n\n1.  Display the tree for the package in the current directory:\n    \n    ```\n    cargo tree\n    \n    ```\n    \n2.  Display all the packages that depend on the `syn` package:\n    \n    ```\n    cargo tree -i syn\n    \n    ```\n    \n3.  Show the features enabled on each package:\n    \n    ```\n    cargo tree --format \"{p} {f}\"\n    \n    ```\n    \n4.  Show all packages that are built multiple times. This can happen if multiple semver-incompatible versions appear in the tree (like 1.0.0 and 2.0.0).\n    \n    ```\n    cargo tree -d\n    \n    ```\n    \n5.  Explain why features are enabled for the `syn` package:\n    \n    ```\n    cargo tree -e features -i syn\n    \n    ```\n    \n    The `-e features` flag is used to show features. The `-i` flag is used to invert the graph so that it displays the packages that depend on `syn`. An example of what this would display:\n    \n    ```\n    syn v1.0.17\n    ├── syn feature \"clone-impls\"\n    │   └── syn feature \"default\"\n    │       └── rustversion v1.0.2\n    │           └── rustversion feature \"default\"\n    │               └── myproject v0.1.0 (/myproject)\n    │                   └── myproject feature \"default\" (command-line)\n    ├── syn feature \"default\" (*)\n    ├── syn feature \"derive\"\n    │   └── syn feature \"default\" (*)\n    ├── syn feature \"full\"\n    │   └── rustversion v1.0.2 (*)\n    ├── syn feature \"parsing\"\n    │   └── syn feature \"default\" (*)\n    ├── syn feature \"printing\"\n    │   └── syn feature \"default\" (*)\n    ├── syn feature \"proc-macro\"\n    │   └── syn feature \"default\" (*)\n    └── syn feature \"quote\"\n        ├── syn feature \"printing\" (*)\n        └── syn feature \"proc-macro\" (*)\n    \n    ```\n    \n    To read this graph, you can follow the chain for each feature from the root to see why it is included. For example, the “full” feature is added by the `rustversion` crate which is included from `myproject` (with the default features), and `myproject` is the package selected on the command-line. All of the other `syn` features are added by the “default” feature (“quote” is added by “printing” and “proc-macro”, both of which are default features).\n    \n    If you’re having difficulty cross-referencing the de-duplicated `(*)` entries, try with the `--no-dedupe` flag to get the full output.\n    \n\n## [SEE ALSO](#see-also)\n\n[cargo(1)](cargo.html), [cargo-metadata(1)](cargo-metadata.html)",
	"html": "<!DOCTYPE html><html lang=\"en\" class=\"light\" dir=\"ltr\"><head>\n        <!-- Book generated using mdBook -->\n        <meta charset=\"UTF-8\">\n        <title>cargo tree - The Cargo Book</title>\n\n\n        <!-- Custom HTML head -->\n        <style>\n            dd {\n                margin-bottom: 1em;\n            }\n        </style>\n\n        <meta name=\"description\" content=\"\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n        <meta name=\"theme-color\" content=\"rgb(255, 255, 255)\">\n\n        <link rel=\"shortcut icon\" href=\"../favicon.png\">\n        <link rel=\"stylesheet\" href=\"../css/variables.css\">\n        <link rel=\"stylesheet\" href=\"../css/general.css\">\n        <link rel=\"stylesheet\" href=\"../css/chrome.css\">\n        <link rel=\"stylesheet\" href=\"../css/print.css\" media=\"print\">\n\n        <!-- Fonts -->\n        <link rel=\"stylesheet\" href=\"../FontAwesome/css/font-awesome.css\">\n        <link rel=\"stylesheet\" href=\"../fonts/fonts.css\">\n\n        <!-- Highlight.js Stylesheets -->\n        <link rel=\"stylesheet\" href=\"../highlight.css\">\n        <link rel=\"stylesheet\" href=\"../tomorrow-night.css\" disabled=\"\">\n        <link rel=\"stylesheet\" href=\"../ayu-highlight.css\" disabled=\"\">\n\n        <!-- Custom theme stylesheets -->\n\n    </head>\n    <body class=\"js sidebar-visible\">\n    <div id=\"body-container\">\n        <!-- Provide site root to javascript -->\n        <script>\n            var path_to_root = \"../\";\n            var default_theme = window.matchMedia(\"(prefers-color-scheme: dark)\").matches ? \"navy\" : \"light\";\n        </script>\n\n        <!-- Work around some values being stored in localStorage wrapped in quotes -->\n        <script>\n            try {\n                var theme = localStorage.getItem('mdbook-theme');\n                var sidebar = localStorage.getItem('mdbook-sidebar');\n\n                if (theme.startsWith('\"') && theme.endsWith('\"')) {\n                    localStorage.setItem('mdbook-theme', theme.slice(1, theme.length - 1));\n                }\n\n                if (sidebar.startsWith('\"') && sidebar.endsWith('\"')) {\n                    localStorage.setItem('mdbook-sidebar', sidebar.slice(1, sidebar.length - 1));\n                }\n            } catch (e) { }\n        </script>\n\n        <!-- Set the theme before any content is loaded, prevents flash -->\n        <script>\n            var theme;\n            try { theme = localStorage.getItem('mdbook-theme'); } catch(e) { }\n            if (theme === null || theme === undefined) { theme = default_theme; }\n            var html = document.querySelector('html');\n            html.classList.remove('light')\n            html.classList.add(theme);\n            var body = document.querySelector('body');\n            body.classList.remove('no-js')\n            body.classList.add('js');\n        </script>\n\n        <input type=\"checkbox\" id=\"sidebar-toggle-anchor\" class=\"hidden\">\n\n        <!-- Hide / unhide sidebar before it is displayed -->\n        <script>\n            var body = document.querySelector('body');\n            var sidebar = null;\n            var sidebar_toggle = document.getElementById(\"sidebar-toggle-anchor\");\n            if (document.body.clientWidth >= 1080) {\n                try { sidebar = localStorage.getItem('mdbook-sidebar'); } catch(e) { }\n                sidebar = sidebar || 'visible';\n            } else {\n                sidebar = 'hidden';\n            }\n            sidebar_toggle.checked = sidebar === 'visible';\n            body.classList.remove('sidebar-visible');\n            body.classList.add(\"sidebar-\" + sidebar);\n        </script>\n\n        <nav id=\"sidebar\" class=\"sidebar\" aria-label=\"Table of contents\" aria-hidden=\"false\">\n            <div class=\"sidebar-scrollbox\">\n                <ol class=\"chapter\"><li class=\"chapter-item expanded affix \"><a href=\"../index.html\" tabindex=\"0\">Introduction</a></li><li class=\"chapter-item expanded \"><a href=\"../getting-started/index.html\" tabindex=\"0\"><strong aria-hidden=\"true\">1.</strong> Getting Started</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../getting-started/installation.html\" tabindex=\"0\"><strong aria-hidden=\"true\">1.1.</strong> Installation</a></li><li class=\"chapter-item expanded \"><a href=\"../getting-started/first-steps.html\" tabindex=\"0\"><strong aria-hidden=\"true\">1.2.</strong> First Steps with Cargo</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../guide/index.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.</strong> Cargo Guide</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../guide/why-cargo-exists.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.1.</strong> Why Cargo Exists</a></li><li class=\"chapter-item expanded \"><a href=\"../guide/creating-a-new-project.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.2.</strong> Creating a New Package</a></li><li class=\"chapter-item expanded \"><a href=\"../guide/working-on-an-existing-project.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.3.</strong> Working on an Existing Package</a></li><li class=\"chapter-item expanded \"><a href=\"../guide/dependencies.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.4.</strong> Dependencies</a></li><li class=\"chapter-item expanded \"><a href=\"../guide/project-layout.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.5.</strong> Package Layout</a></li><li class=\"chapter-item expanded \"><a href=\"../guide/cargo-toml-vs-cargo-lock.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.6.</strong> Cargo.toml vs Cargo.lock</a></li><li class=\"chapter-item expanded \"><a href=\"../guide/tests.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.7.</strong> Tests</a></li><li class=\"chapter-item expanded \"><a href=\"../guide/continuous-integration.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.8.</strong> Continuous Integration</a></li><li class=\"chapter-item expanded \"><a href=\"../guide/cargo-home.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.9.</strong> Cargo Home</a></li><li class=\"chapter-item expanded \"><a href=\"../guide/build-cache.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.10.</strong> Build Cache</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../reference/index.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.</strong> Cargo Reference</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../reference/specifying-dependencies.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.1.</strong> Specifying Dependencies</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../reference/overriding-dependencies.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.1.1.</strong> Overriding Dependencies</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../reference/manifest.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.2.</strong> The Manifest Format</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../reference/cargo-targets.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.2.1.</strong> Cargo Targets</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../reference/workspaces.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.3.</strong> Workspaces</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/features.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.4.</strong> Features</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../reference/features-examples.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.4.1.</strong> Features Examples</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../reference/profiles.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.5.</strong> Profiles</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/config.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.6.</strong> Configuration</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/environment-variables.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.7.</strong> Environment Variables</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/build-scripts.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.8.</strong> Build Scripts</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../reference/build-script-examples.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.8.1.</strong> Build Script Examples</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../reference/publishing.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.9.</strong> Publishing on crates.io</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/pkgid-spec.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.10.</strong> Package ID Specifications</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/source-replacement.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.11.</strong> Source Replacement</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/external-tools.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.12.</strong> External Tools</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/registries.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.13.</strong> Registries</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../reference/registry-authentication.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.13.1.</strong> Registry Authentication</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../reference/credential-provider-protocol.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.13.1.1.</strong> Credential Provider Protocol</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../reference/running-a-registry.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.13.2.</strong> Running a Registry</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../reference/registry-index.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.13.2.1.</strong> Registry Index</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/registry-web-api.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.13.2.2.</strong> Registry Web API</a></li></ol></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../reference/resolver.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.14.</strong> Dependency Resolution</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/semver.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.15.</strong> SemVer Compatibility</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/future-incompat-report.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.16.</strong> Future incompat report</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/timings.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.17.</strong> Reporting build timings</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/unstable.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.18.</strong> Unstable Features</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../commands/index.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.</strong> Cargo Commands</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../commands/general-commands.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.1.</strong> General Commands</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../commands/cargo.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.1.1.</strong> cargo</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-help.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.1.2.</strong> cargo help</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-version.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.1.3.</strong> cargo version</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../commands/build-commands.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.</strong> Build Commands</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-bench.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.1.</strong> cargo bench</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-build.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.2.</strong> cargo build</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-check.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.3.</strong> cargo check</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-clean.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.4.</strong> cargo clean</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-doc.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.5.</strong> cargo doc</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-fetch.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.6.</strong> cargo fetch</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-fix.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.7.</strong> cargo fix</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-run.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.8.</strong> cargo run</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-rustc.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.9.</strong> cargo rustc</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-rustdoc.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.10.</strong> cargo rustdoc</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-test.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.11.</strong> cargo test</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-report.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.12.</strong> cargo report</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../commands/manifest-commands.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.3.</strong> Manifest Commands</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-add.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.3.1.</strong> cargo add</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-generate-lockfile.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.3.2.</strong> cargo generate-lockfile</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-locate-project.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.3.3.</strong> cargo locate-project</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-metadata.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.3.4.</strong> cargo metadata</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-pkgid.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.3.5.</strong> cargo pkgid</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-remove.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.3.6.</strong> cargo remove</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-tree.html\" class=\"active\" tabindex=\"0\"><strong aria-hidden=\"true\">4.3.7.</strong> cargo tree</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-update.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.3.8.</strong> cargo update</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-vendor.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.3.9.</strong> cargo vendor</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-verify-project.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.3.10.</strong> cargo verify-project</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../commands/package-commands.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.4.</strong> Package Commands</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-init.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.4.1.</strong> cargo init</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-install.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.4.2.</strong> cargo install</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-new.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.4.3.</strong> cargo new</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-search.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.4.4.</strong> cargo search</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-uninstall.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.4.5.</strong> cargo uninstall</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../commands/publishing-commands.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.5.</strong> Publishing Commands</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-login.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.5.1.</strong> cargo login</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-logout.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.5.2.</strong> cargo logout</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-owner.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.5.3.</strong> cargo owner</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-package.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.5.4.</strong> cargo package</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-publish.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.5.5.</strong> cargo publish</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-yank.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.5.6.</strong> cargo yank</a></li></ol></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../faq.html\" tabindex=\"0\"><strong aria-hidden=\"true\">5.</strong> FAQ</a></li><li class=\"chapter-item expanded \"><a href=\"../appendix/glossary.html\" tabindex=\"0\"><strong aria-hidden=\"true\">6.</strong> Appendix: Glossary</a></li><li class=\"chapter-item expanded \"><a href=\"../appendix/git-authentication.html\" tabindex=\"0\"><strong aria-hidden=\"true\">7.</strong> Appendix: Git Authentication</a></li></ol>\n            </div>\n            <div id=\"sidebar-resize-handle\" class=\"sidebar-resize-handle\">\n                <div class=\"sidebar-resize-indicator\"></div>\n            </div>\n        </nav>\n\n        <!-- Track and set sidebar scroll position -->\n        <script>\n            var sidebarScrollbox = document.querySelector('#sidebar .sidebar-scrollbox');\n            sidebarScrollbox.addEventListener('click', function(e) {\n                if (e.target.tagName === 'A') {\n                    sessionStorage.setItem('sidebar-scroll', sidebarScrollbox.scrollTop);\n                }\n            }, { passive: true });\n            var sidebarScrollTop = sessionStorage.getItem('sidebar-scroll');\n            sessionStorage.removeItem('sidebar-scroll');\n            if (sidebarScrollTop) {\n                // preserve sidebar scroll position when navigating via links within sidebar\n                sidebarScrollbox.scrollTop = sidebarScrollTop;\n            } else {\n                // scroll sidebar to current active section when navigating via \"next/previous chapter\" buttons\n                var activeSection = document.querySelector('#sidebar .active');\n                if (activeSection) {\n                    activeSection.scrollIntoView({ block: 'center' });\n                }\n            }\n        </script>\n\n        <div id=\"page-wrapper\" class=\"page-wrapper\">\n\n            <div class=\"page\">\n                                <div id=\"menu-bar-hover-placeholder\"></div>\n                <div id=\"menu-bar\" class=\"menu-bar\" style=\"top: 0px;\">\n                    <div class=\"left-buttons\">\n                        <label id=\"sidebar-toggle\" class=\"icon-button\" for=\"sidebar-toggle-anchor\" title=\"Toggle Table of Contents\" aria-label=\"Toggle Table of Contents\" aria-controls=\"sidebar\" aria-expanded=\"true\">\n                            <i class=\"fa fa-bars\"></i>\n                        </label>\n                        <button id=\"theme-toggle\" class=\"icon-button\" type=\"button\" title=\"Change theme\" aria-label=\"Change theme\" aria-haspopup=\"true\" aria-expanded=\"false\" aria-controls=\"theme-list\">\n                            <i class=\"fa fa-paint-brush\"></i>\n                        </button>\n                        <ul id=\"theme-list\" class=\"theme-popup\" aria-label=\"Themes\" role=\"menu\">\n                            <li role=\"none\"><button role=\"menuitem\" class=\"theme theme-selected\" id=\"light\">Light</button></li>\n                            <li role=\"none\"><button role=\"menuitem\" class=\"theme\" id=\"rust\">Rust</button></li>\n                            <li role=\"none\"><button role=\"menuitem\" class=\"theme\" id=\"coal\">Coal</button></li>\n                            <li role=\"none\"><button role=\"menuitem\" class=\"theme\" id=\"navy\">Navy</button></li>\n                            <li role=\"none\"><button role=\"menuitem\" class=\"theme\" id=\"ayu\">Ayu</button></li>\n                        </ul>\n                        <button id=\"search-toggle\" class=\"icon-button\" type=\"button\" title=\"Search. (Shortkey: s)\" aria-label=\"Toggle Searchbar\" aria-expanded=\"false\" aria-keyshortcuts=\"S\" aria-controls=\"searchbar\">\n                            <i class=\"fa fa-search\"></i>\n                        </button>\n                    </div>\n\n                    <h1 class=\"menu-title\">The Cargo Book</h1>\n\n                    <div class=\"right-buttons\">\n                        <a href=\"../print.html\" title=\"Print this book\" aria-label=\"Print this book\">\n                            <i id=\"print-button\" class=\"fa fa-print\"></i>\n                        </a>\n                        <a href=\"https://github.com/rust-lang/cargo/tree/master/src/doc/src\" title=\"Git repository\" aria-label=\"Git repository\">\n                            <i id=\"git-repository-button\" class=\"fa fa-github\"></i>\n                        </a>\n                        <a href=\"https://github.com/rust-lang/cargo/edit/master/src/doc/src/commands/cargo-tree.md\" title=\"Suggest an edit\" aria-label=\"Suggest an edit\">\n                            <i id=\"git-edit-button\" class=\"fa fa-edit\"></i>\n                        </a>\n\n                    </div>\n                </div>\n\n                <div id=\"search-wrapper\" class=\"hidden\">\n                    <form id=\"searchbar-outer\" class=\"searchbar-outer\">\n                        <input type=\"search\" id=\"searchbar\" name=\"searchbar\" placeholder=\"Search this book ...\" aria-controls=\"searchresults-outer\" aria-describedby=\"searchresults-header\">\n                    </form>\n                    <div id=\"searchresults-outer\" class=\"searchresults-outer hidden\">\n                        <div id=\"searchresults-header\" class=\"searchresults-header\"></div>\n                        <ul id=\"searchresults\">\n                        </ul>\n                    </div>\n                </div>\n\n                <!-- Apply ARIA attributes after the sidebar and the sidebar toggle button are added to the DOM -->\n                <script>\n                    document.getElementById('sidebar-toggle').setAttribute('aria-expanded', sidebar === 'visible');\n                    document.getElementById('sidebar').setAttribute('aria-hidden', sidebar !== 'visible');\n                    Array.from(document.querySelectorAll('#sidebar a')).forEach(function(link) {\n                        link.setAttribute('tabIndex', sidebar === 'visible' ? 0 : -1);\n                    });\n                </script>\n\n                <div id=\"content\" class=\"content\">\n                    <main>\n                        <h1 id=\"cargo-tree1\"><a class=\"header\" href=\"#cargo-tree1\">cargo-tree(1)</a></h1>\n<h2 id=\"name\"><a class=\"header\" href=\"#name\">NAME</a></h2>\n<p>cargo-tree — Display a tree visualization of a dependency graph</p>\n<h2 id=\"synopsis\"><a class=\"header\" href=\"#synopsis\">SYNOPSIS</a></h2>\n<p><code class=\"hljs\">cargo tree</code> [<em>options</em>]</p>\n<h2 id=\"description\"><a class=\"header\" href=\"#description\">DESCRIPTION</a></h2>\n<p>This command will display a tree of dependencies to the terminal. An example\nof a simple project that depends on the “rand” package:</p>\n<pre><div class=\"buttons\"><button class=\"fa fa-copy clip-button\" title=\"Copy to clipboard\" aria-label=\"Copy to clipboard\"><i class=\"tooltiptext\"></i></button></div><code class=\"hljs\">myproject v0.1.0 (/myproject)\n└── rand v0.7.3\n    ├── getrandom v0.1.14\n    │   ├── cfg-if v0.1.10\n    │   └── libc v0.2.68\n    ├── libc v0.2.68 (*)\n    ├── rand_chacha v0.2.2\n    │   ├── ppv-lite86 v0.2.6\n    │   └── rand_core v0.5.1\n    │       └── getrandom v0.1.14 (*)\n    └── rand_core v0.5.1 (*)\n[build-dependencies]\n└── cc v1.0.50\n</code></pre>\n<p>Packages marked with <code class=\"hljs\">(*)</code> have been “de-duplicated”. The dependencies for the\npackage have already been shown elsewhere in the graph, and so are not\nrepeated. Use the <code class=\"hljs\">--no-dedupe</code> option to repeat the duplicates.</p>\n<p>The <code class=\"hljs\">-e</code> flag can be used to select the dependency kinds to display. The\n“features” kind changes the output to display the features enabled by\neach dependency. For example, <code class=\"hljs\">cargo tree -e features</code>:</p>\n<pre><div class=\"buttons\"><button class=\"fa fa-copy clip-button\" title=\"Copy to clipboard\" aria-label=\"Copy to clipboard\"><i class=\"tooltiptext\"></i></button></div><code class=\"hljs\">myproject v0.1.0 (/myproject)\n└── log feature \"serde\"\n    └── log v0.4.8\n        ├── serde v1.0.106\n        └── cfg-if feature \"default\"\n            └── cfg-if v0.1.10\n</code></pre>\n<p>In this tree, <code class=\"hljs\">myproject</code> depends on <code class=\"hljs\">log</code> with the <code class=\"hljs\">serde</code> feature. <code class=\"hljs\">log</code> in\nturn depends on <code class=\"hljs\">cfg-if</code> with “default” features. When using <code class=\"hljs\">-e features</code> it\ncan be helpful to use <code class=\"hljs\">-i</code> flag to show how the features flow into a package.\nSee the examples below for more detail.</p>\n<h3 id=\"feature-unification\"><a class=\"header\" href=\"#feature-unification\">Feature Unification</a></h3>\n<p>This command shows a graph much closer to a feature-unified graph Cargo will\nbuild, rather than what you list in <code class=\"hljs\">Cargo.toml</code>. For instance, if you specify\nthe same dependency in both <code class=\"hljs\">[dependencies]</code> and <code class=\"hljs\">[dev-dependencies]</code> but with\ndifferent features on. This command may merge all features and show a <code class=\"hljs\">(*)</code> on\none of the dependency to indicate the duplicate.</p>\n<p>As a result, for a mostly equivalent overview of what <code class=\"hljs\">cargo build</code> does,\n<code class=\"hljs\">cargo tree -e normal,build</code> is pretty close; for a mostly equivalent overview\nof what <code class=\"hljs\">cargo test</code> does, <code class=\"hljs\">cargo tree</code> is pretty close. However, it doesn’t\nguarantee the exact equivalence to what Cargo is going to build, since a\ncompilation is complex and depends on lots of different factors.</p>\n<p>To learn more about feature unification, check out this\n<a href=\"../reference/features.html#feature-unification\">dedicated section</a>.</p>\n<h2 id=\"options\"><a class=\"header\" href=\"#options\">OPTIONS</a></h2>\n<h3 id=\"tree-options\"><a class=\"header\" href=\"#tree-options\">Tree Options</a></h3>\n<dl>\n<dt class=\"option-term\" id=\"option-cargo-tree--i\"><a class=\"option-anchor\" href=\"#option-cargo-tree--i\"></a><code class=\"hljs\">-i</code> <em>spec</em></dt>\n<dt class=\"option-term\" id=\"option-cargo-tree---invert\"><a class=\"option-anchor\" href=\"#option-cargo-tree---invert\"></a><code class=\"hljs\">--invert</code> <em>spec</em></dt>\n<dd class=\"option-desc\">Show the reverse dependencies for the given package. This flag will invert\nthe tree and display the packages that depend on the given package.<p></p>\n<p>Note that in a workspace, by default it will only display the package’s\nreverse dependencies inside the tree of the workspace member in the current\ndirectory. The <code class=\"hljs\">--workspace</code> flag can be used to extend it so that it will\nshow the package’s reverse dependencies across the entire workspace. The <code class=\"hljs\">-p</code>\nflag can be used to display the package’s reverse dependencies only with the\nsubtree of the package given to <code class=\"hljs\">-p</code>.</p></dd>\n<dt class=\"option-term\" id=\"option-cargo-tree---prune\"><a class=\"option-anchor\" href=\"#option-cargo-tree---prune\"></a><code class=\"hljs\">--prune</code> <em>spec</em></dt>\n<dd class=\"option-desc\">Prune the given package from the display of the dependency tree.</dd>\n<dt class=\"option-term\" id=\"option-cargo-tree---depth\"><a class=\"option-anchor\" href=\"#option-cargo-tree---depth\"></a><code class=\"hljs\">--depth</code> <em>depth</em></dt>\n<dd class=\"option-desc\">Maximum display depth of the dependency tree. A depth of 1 displays the direct\ndependencies, for example.</dd>\n<dt class=\"option-term\" id=\"option-cargo-tree---no-dedupe\"><a class=\"option-anchor\" href=\"#option-cargo-tree---no-dedupe\"></a><code class=\"hljs\">--no-dedupe</code></dt>\n<dd class=\"option-desc\">Do not de-duplicate repeated dependencies. Usually, when a package has already\ndisplayed its dependencies, further occurrences will not re-display its\ndependencies, and will include a <code class=\"hljs\">(*)</code> to indicate it has already been shown.\nThis flag will cause those duplicates to be repeated.</dd>\n<dt class=\"option-term\" id=\"option-cargo-tree--d\"><a class=\"option-anchor\" href=\"#option-cargo-tree--d\"></a><code class=\"hljs\">-d</code></dt>\n<dt class=\"option-term\" id=\"option-cargo-tree---duplicates\"><a class=\"option-anchor\" href=\"#option-cargo-tree---duplicates\"></a><code class=\"hljs\">--duplicates</code></dt>\n<dd class=\"option-desc\">Show only dependencies which come in multiple versions (implies <code class=\"hljs\">--invert</code>).\nWhen used with the <code class=\"hljs\">-p</code> flag, only shows duplicates within the subtree of the\ngiven package.<p></p>\n<p>It can be beneficial for build times and executable sizes to avoid building\nthat same package multiple times. This flag can help identify the offending\npackages. You can then investigate if the package that depends on the\nduplicate with the older version can be updated to the newer version so that\nonly one instance is built.</p></dd>\n<dt class=\"option-term\" id=\"option-cargo-tree--e\"><a class=\"option-anchor\" href=\"#option-cargo-tree--e\"></a><code class=\"hljs\">-e</code> <em>kinds</em></dt>\n<dt class=\"option-term\" id=\"option-cargo-tree---edges\"><a class=\"option-anchor\" href=\"#option-cargo-tree---edges\"></a><code class=\"hljs\">--edges</code> <em>kinds</em></dt>\n<dd class=\"option-desc\">The dependency kinds to display. Takes a comma separated list of values:<p></p>\n<ul>\n<li><code class=\"hljs\">all</code> — Show all edge kinds.</li>\n<li><code class=\"hljs\">normal</code> — Show normal dependencies.</li>\n<li><code class=\"hljs\">build</code> — Show build dependencies.</li>\n<li><code class=\"hljs\">dev</code> — Show development dependencies.</li>\n<li><code class=\"hljs\">features</code> — Show features enabled by each dependency. If this is the only\nkind given, then it will automatically include the other dependency kinds.</li>\n<li><code class=\"hljs\">no-normal</code> — Do not include normal dependencies.</li>\n<li><code class=\"hljs\">no-build</code> — Do not include build dependencies.</li>\n<li><code class=\"hljs\">no-dev</code> — Do not include development dependencies.</li>\n<li><code class=\"hljs\">no-proc-macro</code> — Do not include procedural macro dependencies.</li>\n</ul>\n<p>The <code class=\"hljs\">normal</code>, <code class=\"hljs\">build</code>, <code class=\"hljs\">dev</code>, and <code class=\"hljs\">all</code> dependency kinds cannot be mixed with\n<code class=\"hljs\">no-normal</code>, <code class=\"hljs\">no-build</code>, or <code class=\"hljs\">no-dev</code> dependency kinds.</p>\n<p>The default is <code class=\"hljs\">normal,build,dev</code>.</p></dd>\n<dt class=\"option-term\" id=\"option-cargo-tree---target\"><a class=\"option-anchor\" href=\"#option-cargo-tree---target\"></a><code class=\"hljs\">--target</code> <em>triple</em></dt>\n<dd class=\"option-desc\">Filter dependencies matching the given <a href=\"../appendix/glossary.html#target\">target triple</a>.\nThe default is the host platform. Use the value <code class=\"hljs\">all</code> to include <em>all</em> targets.</dd>\n</dl>\n<h3 id=\"tree-formatting-options\"><a class=\"header\" href=\"#tree-formatting-options\">Tree Formatting Options</a></h3>\n<dl>\n<dt class=\"option-term\" id=\"option-cargo-tree---charset\"><a class=\"option-anchor\" href=\"#option-cargo-tree---charset\"></a><code class=\"hljs\">--charset</code> <em>charset</em></dt>\n<dd class=\"option-desc\">Chooses the character set to use for the tree. Valid values are “utf8” or\n“ascii”. When unspecified, cargo will auto-select a value.</dd>\n<dt class=\"option-term\" id=\"option-cargo-tree--f\"><a class=\"option-anchor\" href=\"#option-cargo-tree--f\"></a><code class=\"hljs\">-f</code> <em>format</em></dt>\n<dt class=\"option-term\" id=\"option-cargo-tree---format\"><a class=\"option-anchor\" href=\"#option-cargo-tree---format\"></a><code class=\"hljs\">--format</code> <em>format</em></dt>\n<dd class=\"option-desc\">Set the format string for each package. The default is “{p}”.<p></p>\n<p>This is an arbitrary string which will be used to display each package. The following\nstrings will be replaced with the corresponding value:</p>\n<ul>\n<li><code class=\"hljs\">{p}</code> — The package name.</li>\n<li><code class=\"hljs\">{l}</code> — The package license.</li>\n<li><code class=\"hljs\">{r}</code> — The package repository URL.</li>\n<li><code class=\"hljs\">{f}</code> — Comma-separated list of package features that are enabled.</li>\n<li><code class=\"hljs\">{lib}</code> — The name, as used in a <code class=\"hljs\">use</code> statement, of the package’s library.</li>\n</ul></dd>\n<dt class=\"option-term\" id=\"option-cargo-tree---prefix\"><a class=\"option-anchor\" href=\"#option-cargo-tree---prefix\"></a><code class=\"hljs\">--prefix</code> <em>prefix</em></dt>\n<dd class=\"option-desc\">Sets how each line is displayed. The <em>prefix</em> value can be one of:<p></p>\n<ul>\n<li><code class=\"hljs\">indent</code> (default) — Shows each line indented as a tree.</li>\n<li><code class=\"hljs\">depth</code> — Show as a list, with the numeric depth printed before each entry.</li>\n<li><code class=\"hljs\">none</code> — Show as a flat list.</li>\n</ul></dd>\n</dl>\n<h3 id=\"package-selection\"><a class=\"header\" href=\"#package-selection\">Package Selection</a></h3>\n<p>By default, when no package selection options are given, the packages selected\ndepend on the selected manifest file (based on the current working directory if\n<code class=\"hljs\">--manifest-path</code> is not given). If the manifest is the root of a workspace then\nthe workspaces default members are selected, otherwise only the package defined\nby the manifest will be selected.</p>\n<p>The default members of a workspace can be set explicitly with the\n<code class=\"hljs\">workspace.default-members</code> key in the root manifest. If this is not set, a\nvirtual workspace will include all workspace members (equivalent to passing\n<code class=\"hljs\">--workspace</code>), and a non-virtual workspace will include only the root crate itself.</p>\n<dl>\n<dt class=\"option-term\" id=\"option-cargo-tree--p\"><a class=\"option-anchor\" href=\"#option-cargo-tree--p\"></a><code class=\"hljs\">-p</code> <em>spec</em>…</dt>\n<dt class=\"option-term\" id=\"option-cargo-tree---package\"><a class=\"option-anchor\" href=\"#option-cargo-tree---package\"></a><code class=\"hljs\">--package</code> <em>spec</em>…</dt>\n<dd class=\"option-desc\">Display only the specified packages. See <a href=\"cargo-pkgid.html\">cargo-pkgid(1)</a> for the\nSPEC format. This flag may be specified multiple times and supports common Unix\nglob patterns like <code class=\"hljs\">*</code>, <code class=\"hljs\">?</code> and <code class=\"hljs\">[]</code>. However, to avoid your shell accidentally\nexpanding glob patterns before Cargo handles them, you must use single quotes or\ndouble quotes around each pattern.</dd>\n<dt class=\"option-term\" id=\"option-cargo-tree---workspace\"><a class=\"option-anchor\" href=\"#option-cargo-tree---workspace\"></a><code class=\"hljs\">--workspace</code></dt>\n<dd class=\"option-desc\">Display all members in the workspace.</dd>\n<dt class=\"option-term\" id=\"option-cargo-tree---exclude\"><a class=\"option-anchor\" href=\"#option-cargo-tree---exclude\"></a><code class=\"hljs\">--exclude</code> <em>SPEC</em>…</dt>\n<dd class=\"option-desc\">Exclude the specified packages. Must be used in conjunction with the\n<code class=\"hljs\">--workspace</code> flag. This flag may be specified multiple times and supports\ncommon Unix glob patterns like <code class=\"hljs\">*</code>, <code class=\"hljs\">?</code> and <code class=\"hljs\">[]</code>. However, to avoid your shell\naccidentally expanding glob patterns before Cargo handles them, you must use\nsingle quotes or double quotes around each pattern.</dd>\n</dl>\n<h3 id=\"manifest-options\"><a class=\"header\" href=\"#manifest-options\">Manifest Options</a></h3>\n<dl>\n<dt class=\"option-term\" id=\"option-cargo-tree---manifest-path\"><a class=\"option-anchor\" href=\"#option-cargo-tree---manifest-path\"></a><code class=\"hljs\">--manifest-path</code> <em>path</em></dt>\n<dd class=\"option-desc\">Path to the <code class=\"hljs\">Cargo.toml</code> file. By default, Cargo searches for the\n<code class=\"hljs\">Cargo.toml</code> file in the current directory or any parent directory.</dd>\n<dt class=\"option-term\" id=\"option-cargo-tree---locked\"><a class=\"option-anchor\" href=\"#option-cargo-tree---locked\"></a><code class=\"hljs\">--locked</code></dt>\n<dd class=\"option-desc\">Asserts that the exact same dependencies and versions are used as when the\nexisting <code class=\"hljs\">Cargo.lock</code> file was originally generated. Cargo will exit with an\nerror when either of the following scenarios arises:<p></p>\n<ul>\n<li>The lock file is missing.</li>\n<li>Cargo attempted to change the lock file due to a different dependency resolution.</li>\n</ul>\n<p>It may be used in environments where deterministic builds are desired,\nsuch as in CI pipelines.</p></dd>\n<dt class=\"option-term\" id=\"option-cargo-tree---offline\"><a class=\"option-anchor\" href=\"#option-cargo-tree---offline\"></a><code class=\"hljs\">--offline</code></dt>\n<dd class=\"option-desc\">Prevents Cargo from accessing the network for any reason. Without this\nflag, Cargo will stop with an error if it needs to access the network and\nthe network is not available. With this flag, Cargo will attempt to\nproceed without the network if possible.<p></p>\n<p>Beware that this may result in different dependency resolution than online\nmode. Cargo will restrict itself to crates that are downloaded locally, even\nif there might be a newer version as indicated in the local copy of the index.\nSee the <a href=\"cargo-fetch.html\">cargo-fetch(1)</a> command to download dependencies before going\noffline.</p>\n<p>May also be specified with the <code class=\"hljs\">net.offline</code> <a href=\"../reference/config.html\">config value</a>.</p></dd>\n<dt class=\"option-term\" id=\"option-cargo-tree---frozen\"><a class=\"option-anchor\" href=\"#option-cargo-tree---frozen\"></a><code class=\"hljs\">--frozen</code></dt>\n<dd class=\"option-desc\">Equivalent to specifying both <code class=\"hljs\">--locked</code> and <code class=\"hljs\">--offline</code>.</dd>\n</dl>\n<h3 id=\"feature-selection\"><a class=\"header\" href=\"#feature-selection\">Feature Selection</a></h3>\n<p>The feature flags allow you to control which features are enabled. When no\nfeature options are given, the <code class=\"hljs\">default</code> feature is activated for every\nselected package.</p>\n<p>See <a href=\"../reference/features.html#command-line-feature-options\">the features documentation</a>\nfor more details.</p>\n<dl>\n<dt class=\"option-term\" id=\"option-cargo-tree--F\"><a class=\"option-anchor\" href=\"#option-cargo-tree--F\"></a><code class=\"hljs\">-F</code> <em>features</em></dt>\n<dt class=\"option-term\" id=\"option-cargo-tree---features\"><a class=\"option-anchor\" href=\"#option-cargo-tree---features\"></a><code class=\"hljs\">--features</code> <em>features</em></dt>\n<dd class=\"option-desc\">Space or comma separated list of features to activate. Features of workspace\nmembers may be enabled with <code class=\"hljs\">package-name/feature-name</code> syntax. This flag may\nbe specified multiple times, which enables all specified features.</dd>\n<dt class=\"option-term\" id=\"option-cargo-tree---all-features\"><a class=\"option-anchor\" href=\"#option-cargo-tree---all-features\"></a><code class=\"hljs\">--all-features</code></dt>\n<dd class=\"option-desc\">Activate all available features of all selected packages.</dd>\n<dt class=\"option-term\" id=\"option-cargo-tree---no-default-features\"><a class=\"option-anchor\" href=\"#option-cargo-tree---no-default-features\"></a><code class=\"hljs\">--no-default-features</code></dt>\n<dd class=\"option-desc\">Do not activate the <code class=\"hljs\">default</code> feature of the selected packages.</dd>\n</dl>\n<h3 id=\"display-options\"><a class=\"header\" href=\"#display-options\">Display Options</a></h3>\n<dl>\n<dt class=\"option-term\" id=\"option-cargo-tree--v\"><a class=\"option-anchor\" href=\"#option-cargo-tree--v\"></a><code class=\"hljs\">-v</code></dt>\n<dt class=\"option-term\" id=\"option-cargo-tree---verbose\"><a class=\"option-anchor\" href=\"#option-cargo-tree---verbose\"></a><code class=\"hljs\">--verbose</code></dt>\n<dd class=\"option-desc\">Use verbose output. May be specified twice for “very verbose” output which\nincludes extra output such as dependency warnings and build script output.\nMay also be specified with the <code class=\"hljs\">term.verbose</code>\n<a href=\"../reference/config.html\">config value</a>.</dd>\n<dt class=\"option-term\" id=\"option-cargo-tree--q\"><a class=\"option-anchor\" href=\"#option-cargo-tree--q\"></a><code class=\"hljs\">-q</code></dt>\n<dt class=\"option-term\" id=\"option-cargo-tree---quiet\"><a class=\"option-anchor\" href=\"#option-cargo-tree---quiet\"></a><code class=\"hljs\">--quiet</code></dt>\n<dd class=\"option-desc\">Do not print cargo log messages.\nMay also be specified with the <code class=\"hljs\">term.quiet</code>\n<a href=\"../reference/config.html\">config value</a>.</dd>\n<dt class=\"option-term\" id=\"option-cargo-tree---color\"><a class=\"option-anchor\" href=\"#option-cargo-tree---color\"></a><code class=\"hljs\">--color</code> <em>when</em></dt>\n<dd class=\"option-desc\">Control when colored output is used. Valid values:<p></p>\n<ul>\n<li><code class=\"hljs\">auto</code> (default): Automatically detect if color support is available on the\nterminal.</li>\n<li><code class=\"hljs\">always</code>: Always display colors.</li>\n<li><code class=\"hljs\">never</code>: Never display colors.</li>\n</ul>\n<p>May also be specified with the <code class=\"hljs\">term.color</code>\n<a href=\"../reference/config.html\">config value</a>.</p></dd>\n</dl>\n<h3 id=\"common-options\"><a class=\"header\" href=\"#common-options\">Common Options</a></h3>\n<dl>\n<dt class=\"option-term\" id=\"option-cargo-tree-+toolchain\"><a class=\"option-anchor\" href=\"#option-cargo-tree-+toolchain\"></a><code class=\"hljs\">+</code><em>toolchain</em></dt>\n<dd class=\"option-desc\">If Cargo has been installed with rustup, and the first argument to <code class=\"hljs\">cargo</code>\nbegins with <code class=\"hljs\">+</code>, it will be interpreted as a rustup toolchain name (such\nas <code class=\"hljs\">+stable</code> or <code class=\"hljs\">+nightly</code>).\nSee the <a href=\"https://rust-lang.github.io/rustup/overrides.html\">rustup documentation</a>\nfor more information about how toolchain overrides work.</dd>\n<dt class=\"option-term\" id=\"option-cargo-tree---config\"><a class=\"option-anchor\" href=\"#option-cargo-tree---config\"></a><code class=\"hljs\">--config</code> <em>KEY=VALUE</em> or <em>PATH</em></dt>\n<dd class=\"option-desc\">Overrides a Cargo configuration value. The argument should be in TOML syntax of <code class=\"hljs\">KEY=VALUE</code>,\nor provided as a path to an extra configuration file. This flag may be specified multiple times.\nSee the <a href=\"../reference/config.html#command-line-overrides\">command-line overrides section</a> for more information.</dd>\n<dt class=\"option-term\" id=\"option-cargo-tree--C\"><a class=\"option-anchor\" href=\"#option-cargo-tree--C\"></a><code class=\"hljs\">-C</code> <em>PATH</em></dt>\n<dd class=\"option-desc\">Changes the current working directory before executing any specified operations. This affects\nthings like where cargo looks by default for the project manifest (<code class=\"hljs\">Cargo.toml</code>), as well as\nthe directories searched for discovering <code class=\"hljs\">.cargo/config.toml</code>, for example. This option must\nappear before the command name, for example <code class=\"hljs\">cargo -C path/to/my-project build</code>.<p></p>\n<p>This option is only available on the <a href=\"https://doc.rust-lang.org/book/appendix-07-nightly-rust.html\">nightly\nchannel</a> and\nrequires the <code class=\"hljs\">-Z unstable-options</code> flag to enable (see\n<a href=\"https://github.com/rust-lang/cargo/issues/10098\">#10098</a>).</p></dd>\n<dt class=\"option-term\" id=\"option-cargo-tree--h\"><a class=\"option-anchor\" href=\"#option-cargo-tree--h\"></a><code class=\"hljs\">-h</code></dt>\n<dt class=\"option-term\" id=\"option-cargo-tree---help\"><a class=\"option-anchor\" href=\"#option-cargo-tree---help\"></a><code class=\"hljs\">--help</code></dt>\n<dd class=\"option-desc\">Prints help information.</dd>\n<dt class=\"option-term\" id=\"option-cargo-tree--Z\"><a class=\"option-anchor\" href=\"#option-cargo-tree--Z\"></a><code class=\"hljs\">-Z</code> <em>flag</em></dt>\n<dd class=\"option-desc\">Unstable (nightly-only) flags to Cargo. Run <code class=\"hljs\">cargo -Z help</code> for details.</dd>\n</dl>\n<h2 id=\"environment\"><a class=\"header\" href=\"#environment\">ENVIRONMENT</a></h2>\n<p>See <a href=\"../reference/environment-variables.html\">the reference</a> for\ndetails on environment variables that Cargo reads.</p>\n<h2 id=\"exit-status\"><a class=\"header\" href=\"#exit-status\">EXIT STATUS</a></h2>\n<ul>\n<li><code class=\"hljs\">0</code>: Cargo succeeded.</li>\n<li><code class=\"hljs\">101</code>: Cargo failed to complete.</li>\n</ul>\n<h2 id=\"examples\"><a class=\"header\" href=\"#examples\">EXAMPLES</a></h2>\n<ol>\n<li>\n<p>Display the tree for the package in the current directory:</p>\n<pre><div class=\"buttons\"><button class=\"fa fa-copy clip-button\" title=\"Copy to clipboard\" aria-label=\"Copy to clipboard\"><i class=\"tooltiptext\"></i></button></div><code class=\"hljs\">cargo tree\n</code></pre>\n</li>\n<li>\n<p>Display all the packages that depend on the <code class=\"hljs\">syn</code> package:</p>\n<pre><div class=\"buttons\"><button class=\"fa fa-copy clip-button\" title=\"Copy to clipboard\" aria-label=\"Copy to clipboard\"><i class=\"tooltiptext\"></i></button></div><code class=\"hljs\">cargo tree -i syn\n</code></pre>\n</li>\n<li>\n<p>Show the features enabled on each package:</p>\n<pre><div class=\"buttons\"><button class=\"fa fa-copy clip-button\" title=\"Copy to clipboard\" aria-label=\"Copy to clipboard\"><i class=\"tooltiptext\"></i></button></div><code class=\"hljs\">cargo tree --format \"{p} {f}\"\n</code></pre>\n</li>\n<li>\n<p>Show all packages that are built multiple times. This can happen if multiple\nsemver-incompatible versions appear in the tree (like 1.0.0 and 2.0.0).</p>\n<pre><div class=\"buttons\"><button class=\"fa fa-copy clip-button\" title=\"Copy to clipboard\" aria-label=\"Copy to clipboard\"><i class=\"tooltiptext\"></i></button></div><code class=\"hljs\">cargo tree -d\n</code></pre>\n</li>\n<li>\n<p>Explain why features are enabled for the <code class=\"hljs\">syn</code> package:</p>\n<pre><div class=\"buttons\"><button class=\"fa fa-copy clip-button\" title=\"Copy to clipboard\" aria-label=\"Copy to clipboard\"><i class=\"tooltiptext\"></i></button></div><code class=\"hljs\">cargo tree -e features -i syn\n</code></pre>\n<p>The <code class=\"hljs\">-e features</code> flag is used to show features. The <code class=\"hljs\">-i</code> flag is used to\ninvert the graph so that it displays the packages that depend on <code class=\"hljs\">syn</code>. An\nexample of what this would display:</p>\n<pre><div class=\"buttons\"><button class=\"fa fa-copy clip-button\" title=\"Copy to clipboard\" aria-label=\"Copy to clipboard\"><i class=\"tooltiptext\"></i></button></div><code class=\"hljs\">syn v1.0.17\n├── syn feature \"clone-impls\"\n│   └── syn feature \"default\"\n│       └── rustversion v1.0.2\n│           └── rustversion feature \"default\"\n│               └── myproject v0.1.0 (/myproject)\n│                   └── myproject feature \"default\" (command-line)\n├── syn feature \"default\" (*)\n├── syn feature \"derive\"\n│   └── syn feature \"default\" (*)\n├── syn feature \"full\"\n│   └── rustversion v1.0.2 (*)\n├── syn feature \"parsing\"\n│   └── syn feature \"default\" (*)\n├── syn feature \"printing\"\n│   └── syn feature \"default\" (*)\n├── syn feature \"proc-macro\"\n│   └── syn feature \"default\" (*)\n└── syn feature \"quote\"\n    ├── syn feature \"printing\" (*)\n    └── syn feature \"proc-macro\" (*)\n</code></pre>\n<p>To read this graph, you can follow the chain for each feature from the root\nto see why it is included. For example, the “full” feature is added by the\n<code class=\"hljs\">rustversion</code> crate which is included from <code class=\"hljs\">myproject</code> (with the default\nfeatures), and <code class=\"hljs\">myproject</code> is the package selected on the command-line. All\nof the other <code class=\"hljs\">syn</code> features are added by the “default” feature (“quote” is\nadded by “printing” and “proc-macro”, both of which are default features).</p>\n<p>If you’re having difficulty cross-referencing the de-duplicated <code class=\"hljs\">(*)</code>\nentries, try with the <code class=\"hljs\">--no-dedupe</code> flag to get the full output.</p>\n</li>\n</ol>\n<h2 id=\"see-also\"><a class=\"header\" href=\"#see-also\">SEE ALSO</a></h2>\n<p><a href=\"cargo.html\">cargo(1)</a>, <a href=\"cargo-metadata.html\">cargo-metadata(1)</a></p>\n\n                    </main>\n\n                    <nav class=\"nav-wrapper\" aria-label=\"Page navigation\">\n                        <!-- Mobile navigation buttons -->\n                            <a rel=\"prev\" href=\"../commands/cargo-remove.html\" class=\"mobile-nav-chapters previous\" title=\"Previous chapter\" aria-label=\"Previous chapter\" aria-keyshortcuts=\"Left\">\n                                <i class=\"fa fa-angle-left\"></i>\n                            </a>\n\n                            <a rel=\"next prefetch\" href=\"../commands/cargo-update.html\" class=\"mobile-nav-chapters next\" title=\"Next chapter\" aria-label=\"Next chapter\" aria-keyshortcuts=\"Right\">\n                                <i class=\"fa fa-angle-right\"></i>\n                            </a>\n\n                        <div style=\"clear: both\"></div>\n                    </nav>\n                </div>\n            </div>\n\n            <nav class=\"nav-wide-wrapper\" aria-label=\"Page navigation\">\n                    <a rel=\"prev\" href=\"../commands/cargo-remove.html\" class=\"nav-chapters previous\" title=\"Previous chapter\" aria-label=\"Previous chapter\" aria-keyshortcuts=\"Left\">\n                        <i class=\"fa fa-angle-left\"></i>\n                    </a>\n\n                    <a rel=\"next prefetch\" href=\"../commands/cargo-update.html\" class=\"nav-chapters next\" title=\"Next chapter\" aria-label=\"Next chapter\" aria-keyshortcuts=\"Right\">\n                        <i class=\"fa fa-angle-right\"></i>\n                    </a>\n            </nav>\n\n        </div>\n\n\n\n\n        <script>\n            window.playground_copyable = true;\n        </script>\n\n\n        <script src=\"../elasticlunr.min.js\"></script>\n        <script src=\"../mark.min.js\"></script>\n        <script src=\"../searcher.js\"></script>\n\n        <script src=\"../clipboard.min.js\"></script>\n        <script src=\"../highlight.js\"></script>\n        <script src=\"../book.js\"></script>\n\n        <!-- Custom JS scripts -->\n\n\n    </div>\n    \n\n</body></html>",
	"crawlDate": "2024-07-28T05:09:30.035Z"
}