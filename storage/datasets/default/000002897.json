{
	"title": "SocketCred in std::os::unix::net - Rust",
	"url": "https://doc.rust-lang.org/stable/std/os/unix/net/struct.SocketCred.html",
	"markdown": "# SocketCred in std::os::unix::net - Rust\n\n```\npub struct SocketCred(/* private fields */);\n```\n\nðŸ”¬This is a nightly-only experimental API. (`unix_socket_ancillary_data`Â [#76915](https://github.com/rust-lang/rust/issues/76915))\n\nAvailable on **(Android or Linux) and Unix** only.\n\nExpand description\n\nUnix credential.\n\n[source](about:blank/src/std/os/unix/net/ancillary.rs.html#222-270)[Â§](#impl-SocketCred)\n\n[source](about:blank/src/std/os/unix/net/ancillary.rs.html#228-230)\n\nðŸ”¬This is a nightly-only experimental API. (`unix_socket_ancillary_data`Â [#76915](https://github.com/rust-lang/rust/issues/76915))\n\nCreate a Unix credential struct.\n\nPID, UID and GID is set to 0.\n\n[source](about:blank/src/std/os/unix/net/ancillary.rs.html#234-236)\n\nðŸ”¬This is a nightly-only experimental API. (`unix_socket_ancillary_data`Â [#76915](https://github.com/rust-lang/rust/issues/76915))\n\nSet the PID.\n\n[source](about:blank/src/std/os/unix/net/ancillary.rs.html#241-243)\n\nðŸ”¬This is a nightly-only experimental API. (`unix_socket_ancillary_data`Â [#76915](https://github.com/rust-lang/rust/issues/76915))\n\nGet the current PID.\n\n[source](about:blank/src/std/os/unix/net/ancillary.rs.html#247-249)\n\nðŸ”¬This is a nightly-only experimental API. (`unix_socket_ancillary_data`Â [#76915](https://github.com/rust-lang/rust/issues/76915))\n\nSet the UID.\n\n[source](about:blank/src/std/os/unix/net/ancillary.rs.html#254-256)\n\nðŸ”¬This is a nightly-only experimental API. (`unix_socket_ancillary_data`Â [#76915](https://github.com/rust-lang/rust/issues/76915))\n\nGet the current UID.\n\n[source](about:blank/src/std/os/unix/net/ancillary.rs.html#260-262)\n\nðŸ”¬This is a nightly-only experimental API. (`unix_socket_ancillary_data`Â [#76915](https://github.com/rust-lang/rust/issues/76915))\n\nSet the GID.\n\n[source](about:blank/src/std/os/unix/net/ancillary.rs.html#267-269)\n\nðŸ”¬This is a nightly-only experimental API. (`unix_socket_ancillary_data`Â [#76915](https://github.com/rust-lang/rust/issues/76915))\n\nGet the current GID.\n\n[Â§](#impl-Freeze-for-SocketCred)\n\n[Â§](#impl-RefUnwindSafe-for-SocketCred)\n\n[Â§](#impl-Send-for-SocketCred)\n\n[Â§](#impl-Sync-for-SocketCred)\n\n[Â§](#impl-Unpin-for-SocketCred)\n\n[Â§](#impl-UnwindSafe-for-SocketCred)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/any.rs.html#140)[Â§](#impl-Any-for-T)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/borrow.rs.html#208)[Â§](#impl-Borrow%3CT%3E-for-T)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/borrow.rs.html#216)[Â§](#impl-BorrowMut%3CT%3E-for-T)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#765)[Â§](#impl-From%3CT%3E-for-T)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#768)[Â§](#method.from)\n\nReturns the argument unchanged.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#748-750)[Â§](#impl-Into%3CU%3E-for-T)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#758)[Â§](#method.into)\n\nCalls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of `[From](../../../convert/trait.From.html \"trait std::convert::From\")<T> for U` chooses to do.\n\n[source](https://doc.rust-lang.org/1.80.0/src/alloc/borrow.rs.html#83-85)[Â§](#impl-ToOwned-for-T)\n\n[Â§](#associatedtype.Owned)\n\nThe resulting type after obtaining ownership.\n\n[source](https://doc.rust-lang.org/1.80.0/src/alloc/borrow.rs.html#88)[Â§](#method.to_owned)\n\nCreates owned data from borrowed data, usually by cloning. [Read more](about:blank/borrow/trait.ToOwned.html#tymethod.to_owned)\n\n[source](https://doc.rust-lang.org/1.80.0/src/alloc/borrow.rs.html#92)[Â§](#method.clone_into)\n\nUses borrowed data to replace owned data, usually by cloning. [Read more](about:blank/borrow/trait.ToOwned.html#method.clone_into)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#805-807)[Â§](#impl-TryFrom%3CU%3E-for-T)\n\n[Â§](#associatedtype.Error-1)\n\nThe type returned in the event of a conversion error.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#812)[Â§](#method.try_from)\n\nPerforms the conversion.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#790-792)[Â§](#impl-TryInto%3CU%3E-for-T)\n\n[Â§](#associatedtype.Error)\n\nThe type returned in the event of a conversion error.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#797)[Â§](#method.try_into)\n\nPerforms the conversion.",
	"html": "<!DOCTYPE html><html lang=\"en\" data-theme=\"light\"><head><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><meta name=\"generator\" content=\"rustdoc\"><meta name=\"description\" content=\"Unix credential.\"><title>SocketCred in std::os::unix::net - Rust</title><script>if(window.location.protocol!==\"file:\")document.head.insertAdjacentHTML(\"beforeend\",\"SourceSerif4-Regular-46f98efaafac5295.ttf.woff2,FiraSans-Regular-018c141bf0843ffd.woff2,FiraSans-Medium-8f9a781e4970d388.woff2,SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2,SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\".split(\",\").map(f=>`<link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin href=\"../../../../static.files/${f}\">`).join(\"\"))</script><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../../../static.files/SourceSerif4-Regular-46f98efaafac5295.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../../../static.files/FiraSans-Regular-018c141bf0843ffd.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../../../static.files/FiraSans-Medium-8f9a781e4970d388.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../../../static.files/SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../../../static.files/SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\"><link rel=\"stylesheet\" href=\"../../../../static.files/normalize-76eba96aa4d2e634.css\"><link rel=\"stylesheet\" href=\"../../../../static.files/rustdoc-dd39b87e5fcfba68.css\"><meta name=\"rustdoc-vars\" data-root-path=\"../../../../\" data-static-root-path=\"../../../../static.files/\" data-current-crate=\"std\" data-themes=\"\" data-resource-suffix=\"1.80.0\" data-rustdoc-version=\"1.80.0 (051478957 2024-07-21)\" data-channel=\"1.80.0\" data-search-js=\"search-d52510db62a78183.js\" data-settings-js=\"settings-4313503d2e1961c2.js\"><script src=\"../../../../static.files/storage-118b08c4c78b968e.js\"></script><script defer=\"\" src=\"sidebar-items1.80.0.js\"></script><script defer=\"\" src=\"../../../../static.files/main-20a3ad099b048cf2.js\"></script><noscript><link rel=\"stylesheet\" href=\"../../../../static.files/noscript-df360f571f6edeae.css\"></noscript><link rel=\"alternate icon\" type=\"image/png\" href=\"../../../../static.files/favicon-32x32-422f7d1d52889060.png\"><link rel=\"icon\" type=\"image/svg+xml\" href=\"../../../../static.files/favicon-2c020d218678b618.svg\"></head><body class=\"rustdoc struct\"><!--[if lte IE 11]><div class=\"warning\">This old browser is unsupported and will most likely display funky things.</div><![endif]--><nav class=\"mobile-topbar\"><button class=\"sidebar-menu-toggle\" title=\"show sidebar\"></button><a class=\"logo-container\" href=\"../../../../std/index.html\"><img class=\"rust-logo\" src=\"../../../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"\"></a><h2 class=\"location\"><a href=\"#\">SocketCred</a></h2></nav><nav class=\"sidebar\"><div class=\"sidebar-crate\"><a class=\"logo-container\" href=\"../../../../std/index.html\"><img class=\"rust-logo\" src=\"../../../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"logo\"></a><h2><a href=\"../../../../std/index.html\">std</a><span class=\"version\">1.80.0</span></h2></div><div class=\"version\">(051478957\t2024-07-21)</div><h2 class=\"location\"><a href=\"#\">SocketCred</a></h2><div class=\"sidebar-elems\"><section><h3><a href=\"#implementations\">Methods</a></h3><ul class=\"block method\"><li><a href=\"#method.get_gid\">get_gid</a></li><li><a href=\"#method.get_pid\">get_pid</a></li><li><a href=\"#method.get_uid\">get_uid</a></li><li><a href=\"#method.new\">new</a></li><li><a href=\"#method.set_gid\">set_gid</a></li><li><a href=\"#method.set_pid\">set_pid</a></li><li><a href=\"#method.set_uid\">set_uid</a></li></ul><h3><a href=\"#trait-implementations\">Trait Implementations</a></h3><ul class=\"block trait-implementation\"><li><a href=\"#impl-Clone-for-SocketCred\">Clone</a></li></ul><h3><a href=\"#synthetic-implementations\">Auto Trait Implementations</a></h3><ul class=\"block synthetic-implementation\"><li><a href=\"#impl-Freeze-for-SocketCred\">Freeze</a></li><li><a href=\"#impl-RefUnwindSafe-for-SocketCred\">RefUnwindSafe</a></li><li><a href=\"#impl-Send-for-SocketCred\">Send</a></li><li><a href=\"#impl-Sync-for-SocketCred\">Sync</a></li><li><a href=\"#impl-Unpin-for-SocketCred\">Unpin</a></li><li><a href=\"#impl-UnwindSafe-for-SocketCred\">UnwindSafe</a></li></ul><h3><a href=\"#blanket-implementations\">Blanket Implementations</a></h3><ul class=\"block blanket-implementation\"><li><a href=\"#impl-Any-for-T\">Any</a></li><li><a href=\"#impl-Borrow%3CT%3E-for-T\">Borrow&lt;T&gt;</a></li><li><a href=\"#impl-BorrowMut%3CT%3E-for-T\">BorrowMut&lt;T&gt;</a></li><li><a href=\"#impl-From%3CT%3E-for-T\">From&lt;T&gt;</a></li><li><a href=\"#impl-Into%3CU%3E-for-T\">Into&lt;U&gt;</a></li><li><a href=\"#impl-ToOwned-for-T\">ToOwned</a></li><li><a href=\"#impl-TryFrom%3CU%3E-for-T\">TryFrom&lt;U&gt;</a></li><li><a href=\"#impl-TryInto%3CU%3E-for-T\">TryInto&lt;U&gt;</a></li></ul></section><h2><a href=\"index.html\">In std::os::unix::net</a></h2><h3><a href=\"index.html#structs\">Structs</a></h3><ul class=\"block struct\"><li><a href=\"struct.Incoming.html\">Incoming</a></li><li><a href=\"struct.Messages.html\">Messages</a></li><li><a href=\"struct.ScmCredentials.html\">ScmCredentials</a></li><li><a href=\"struct.ScmRights.html\">ScmRights</a></li><li><a href=\"struct.SocketAddr.html\">SocketAddr</a></li><li><a href=\"struct.SocketAncillary.html\">SocketAncillary</a></li><li><a href=\"struct.SocketCred.html\">SocketCred</a></li><li><a href=\"struct.UCred.html\">UCred</a></li><li><a href=\"struct.UnixDatagram.html\">UnixDatagram</a></li><li><a href=\"struct.UnixListener.html\">UnixListener</a></li><li><a href=\"struct.UnixStream.html\">UnixStream</a></li></ul><h3><a href=\"index.html#enums\">Enums</a></h3><ul class=\"block enum\"><li><a href=\"enum.AncillaryData.html\">AncillaryData</a></li><li><a href=\"enum.AncillaryError.html\">AncillaryError</a></li></ul></div></nav><div class=\"sidebar-resizer\"></div><main><div class=\"width-limiter\"><rustdoc-search><nav class=\"sub\">\n            <form class=\"search-form\">\n                <span></span> <!-- This empty span is a hacky fix for Safari - See #93184 -->\n                <div id=\"sidebar-button\" tabindex=\"-1\">\n                    <a href=\"../../../../std/all.html\" title=\"show sidebar\"></a>\n                </div>\n                <input class=\"search-input\" name=\"search\" aria-label=\"Run search in the documentation\" autocomplete=\"off\" spellcheck=\"false\" placeholder=\"Type â€˜Sâ€™ or â€˜/â€™ to search, â€˜?â€™ for more optionsâ€¦\" type=\"search\">\n                <div id=\"help-button\" tabindex=\"-1\">\n                    <a href=\"../../../../help.html\" title=\"help\">?</a>\n                </div>\n                <div id=\"settings-menu\" tabindex=\"-1\">\n                    <a href=\"../../../../settings.html\" title=\"settings\">\n                        Settings\n                    </a>\n                </div>\n            </form>\n        </nav></rustdoc-search><section id=\"main-content\" class=\"content\"><div class=\"main-heading\"><h1>Struct <a href=\"../../../index.html\">std</a>::<wbr><a href=\"../../index.html\">os</a>::<wbr><a href=\"../index.html\">unix</a>::<wbr><a href=\"index.html\">net</a>::<wbr><a class=\"struct\" href=\"#\">SocketCred</a><button id=\"copy-path\" title=\"Copy item path to clipboard\">Copy item path</button></h1><span class=\"out-of-band\"><a class=\"src\" href=\"../../../../src/std/os/unix/net/ancillary.rs.html#208\">source</a> Â· <button id=\"toggle-all-docs\" title=\"collapse all docs\">[<span>âˆ’</span>]</button></span></div><pre class=\"rust item-decl\"><code>pub struct SocketCred(<span class=\"comment\">/* private fields */</span>);</code></pre><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>unix_socket_ancillary_data</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/76915\">#76915</a>)</span></div><div class=\"stab portability\">Available on <strong>(Android or Linux) and Unix</strong> only.</div></span><details class=\"toggle top-doc\" open=\"\"><summary class=\"hideme\"><span>Expand description</span></summary><div class=\"docblock\"><p>Unix credential.</p>\n</div></details><h2 id=\"implementations\" class=\"section-header\">Implementations<a href=\"#implementations\" class=\"anchor\">Â§</a></h2><div id=\"implementations-list\"><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-SocketCred\" class=\"impl\"><a class=\"src rightside\" href=\"../../../../src/std/os/unix/net/ancillary.rs.html#222-270\">source</a><a href=\"#impl-SocketCred\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"struct.SocketCred.html\" title=\"struct std::os::unix::net::SocketCred\">SocketCred</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"../../../../src/std/os/unix/net/ancillary.rs.html#228-230\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.new\" class=\"fn\">new</a>() -&gt; <a class=\"struct\" href=\"struct.SocketCred.html\" title=\"struct std::os::unix::net::SocketCred\">SocketCred</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>unix_socket_ancillary_data</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/76915\">#76915</a>)</span></div></span></summary><div class=\"docblock\"><p>Create a Unix credential struct.</p>\n<p>PID, UID and GID is set to 0.</p>\n</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.set_pid\" class=\"method\"><a class=\"src rightside\" href=\"../../../../src/std/os/unix/net/ancillary.rs.html#234-236\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.set_pid\" class=\"fn\">set_pid</a>(&amp;mut self, pid: <a class=\"type\" href=\"https://doc.rust-lang.org/1.80.0/libc/unix/type.pid_t.html\" title=\"type libc::unix::pid_t\">pid_t</a>)</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>unix_socket_ancillary_data</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/76915\">#76915</a>)</span></div></span></summary><div class=\"docblock\"><p>Set the PID.</p>\n</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.get_pid\" class=\"method\"><a class=\"src rightside\" href=\"../../../../src/std/os/unix/net/ancillary.rs.html#241-243\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.get_pid\" class=\"fn\">get_pid</a>(&amp;self) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.80.0/libc/unix/type.pid_t.html\" title=\"type libc::unix::pid_t\">pid_t</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>unix_socket_ancillary_data</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/76915\">#76915</a>)</span></div></span></summary><div class=\"docblock\"><p>Get the current PID.</p>\n</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.set_uid\" class=\"method\"><a class=\"src rightside\" href=\"../../../../src/std/os/unix/net/ancillary.rs.html#247-249\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.set_uid\" class=\"fn\">set_uid</a>(&amp;mut self, uid: <a class=\"type\" href=\"https://doc.rust-lang.org/1.80.0/libc/unix/type.uid_t.html\" title=\"type libc::unix::uid_t\">uid_t</a>)</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>unix_socket_ancillary_data</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/76915\">#76915</a>)</span></div></span></summary><div class=\"docblock\"><p>Set the UID.</p>\n</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.get_uid\" class=\"method\"><a class=\"src rightside\" href=\"../../../../src/std/os/unix/net/ancillary.rs.html#254-256\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.get_uid\" class=\"fn\">get_uid</a>(&amp;self) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.80.0/libc/unix/type.uid_t.html\" title=\"type libc::unix::uid_t\">uid_t</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>unix_socket_ancillary_data</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/76915\">#76915</a>)</span></div></span></summary><div class=\"docblock\"><p>Get the current UID.</p>\n</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.set_gid\" class=\"method\"><a class=\"src rightside\" href=\"../../../../src/std/os/unix/net/ancillary.rs.html#260-262\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.set_gid\" class=\"fn\">set_gid</a>(&amp;mut self, gid: <a class=\"type\" href=\"https://doc.rust-lang.org/1.80.0/libc/unix/type.gid_t.html\" title=\"type libc::unix::gid_t\">gid_t</a>)</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>unix_socket_ancillary_data</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/76915\">#76915</a>)</span></div></span></summary><div class=\"docblock\"><p>Set the GID.</p>\n</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.get_gid\" class=\"method\"><a class=\"src rightside\" href=\"../../../../src/std/os/unix/net/ancillary.rs.html#267-269\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.get_gid\" class=\"fn\">get_gid</a>(&amp;self) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.80.0/libc/unix/type.gid_t.html\" title=\"type libc::unix::gid_t\">gid_t</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>unix_socket_ancillary_data</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/76915\">#76915</a>)</span></div></span></summary><div class=\"docblock\"><p>Get the current GID.</p>\n</div></details></div></details></div><h2 id=\"trait-implementations\" class=\"section-header\">Trait Implementations<a href=\"#trait-implementations\" class=\"anchor\">Â§</a></h2><div id=\"trait-implementations-list\"><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-Clone-for-SocketCred\" class=\"impl\"><a class=\"src rightside\" href=\"../../../../src/std/os/unix/net/ancillary.rs.html#207\">source</a><a href=\"#impl-Clone-for-SocketCred\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"../../../clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"struct.SocketCred.html\" title=\"struct std::os::unix::net::SocketCred\">SocketCred</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"../../../../src/std/os/unix/net/ancillary.rs.html#207\">source</a><a href=\"#method.clone\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../../../clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"struct.SocketCred.html\" title=\"struct std::os::unix::net::SocketCred\">SocketCred</a></h4></section></summary><div class=\"docblock\">Returns a copy of the value. <a href=\"../../../clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../../../clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"../../../primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class=\"docblock\">Performs copy-assignment from <code>source</code>. <a href=\"../../../clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details></div><h2 id=\"synthetic-implementations\" class=\"section-header\">Auto Trait Implementations<a href=\"#synthetic-implementations\" class=\"anchor\">Â§</a></h2><div id=\"synthetic-implementations-list\"><section id=\"impl-Freeze-for-SocketCred\" class=\"impl\"><a href=\"#impl-Freeze-for-SocketCred\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"../../../marker/trait.Freeze.html\" title=\"trait std::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"struct.SocketCred.html\" title=\"struct std::os::unix::net::SocketCred\">SocketCred</a></h3></section><section id=\"impl-RefUnwindSafe-for-SocketCred\" class=\"impl\"><a href=\"#impl-RefUnwindSafe-for-SocketCred\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"../../../panic/trait.RefUnwindSafe.html\" title=\"trait std::panic::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"struct\" href=\"struct.SocketCred.html\" title=\"struct std::os::unix::net::SocketCred\">SocketCred</a></h3></section><section id=\"impl-Send-for-SocketCred\" class=\"impl\"><a href=\"#impl-Send-for-SocketCred\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"../../../marker/trait.Send.html\" title=\"trait std::marker::Send\">Send</a> for <a class=\"struct\" href=\"struct.SocketCred.html\" title=\"struct std::os::unix::net::SocketCred\">SocketCred</a></h3></section><section id=\"impl-Sync-for-SocketCred\" class=\"impl\"><a href=\"#impl-Sync-for-SocketCred\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"../../../marker/trait.Sync.html\" title=\"trait std::marker::Sync\">Sync</a> for <a class=\"struct\" href=\"struct.SocketCred.html\" title=\"struct std::os::unix::net::SocketCred\">SocketCred</a></h3></section><section id=\"impl-Unpin-for-SocketCred\" class=\"impl\"><a href=\"#impl-Unpin-for-SocketCred\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"../../../marker/trait.Unpin.html\" title=\"trait std::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"struct.SocketCred.html\" title=\"struct std::os::unix::net::SocketCred\">SocketCred</a></h3></section><section id=\"impl-UnwindSafe-for-SocketCred\" class=\"impl\"><a href=\"#impl-UnwindSafe-for-SocketCred\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"../../../panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"struct.SocketCred.html\" title=\"struct std::os::unix::net::SocketCred\">SocketCred</a></h3></section></div><h2 id=\"blanket-implementations\" class=\"section-header\">Blanket Implementations<a href=\"#blanket-implementations\" class=\"anchor\">Â§</a></h2><div id=\"blanket-implementations-list\"><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-Any-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/any.rs.html#140\">source</a><a href=\"#impl-Any-for-T\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"../../../any/trait.Any.html\" title=\"trait std::any::Any\">Any</a> for T<div class=\"where\">where\n    T: 'static + ?<a class=\"trait\" href=\"../../../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.type_id\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/any.rs.html#141\">source</a><a href=\"#method.type_id\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../../../any/trait.Any.html#tymethod.type_id\" class=\"fn\">type_id</a>(&amp;self) -&gt; <a class=\"struct\" href=\"../../../any/struct.TypeId.html\" title=\"struct std::any::TypeId\">TypeId</a></h4></section></summary><div class=\"docblock\">Gets the <code>TypeId</code> of <code>self</code>. <a href=\"../../../any/trait.Any.html#tymethod.type_id\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-Borrow%3CT%3E-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/borrow.rs.html#208\">source</a><a href=\"#impl-Borrow%3CT%3E-for-T\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"../../../borrow/trait.Borrow.html\" title=\"trait std::borrow::Borrow\">Borrow</a>&lt;T&gt; for T<div class=\"where\">where\n    T: ?<a class=\"trait\" href=\"../../../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.borrow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/borrow.rs.html#210\">source</a><a href=\"#method.borrow\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../../../borrow/trait.Borrow.html#tymethod.borrow\" class=\"fn\">borrow</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"../../../primitive.reference.html\">&amp;T</a></h4></section></summary><div class=\"docblock\">Immutably borrows from an owned value. <a href=\"../../../borrow/trait.Borrow.html#tymethod.borrow\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-BorrowMut%3CT%3E-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/borrow.rs.html#216\">source</a><a href=\"#impl-BorrowMut%3CT%3E-for-T\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"../../../borrow/trait.BorrowMut.html\" title=\"trait std::borrow::BorrowMut\">BorrowMut</a>&lt;T&gt; for T<div class=\"where\">where\n    T: ?<a class=\"trait\" href=\"../../../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.borrow_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/borrow.rs.html#217\">source</a><a href=\"#method.borrow_mut\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../../../borrow/trait.BorrowMut.html#tymethod.borrow_mut\" class=\"fn\">borrow_mut</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"../../../primitive.reference.html\">&amp;mut T</a></h4></section></summary><div class=\"docblock\">Mutably borrows from an owned value. <a href=\"../../../borrow/trait.BorrowMut.html#tymethod.borrow_mut\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-From%3CT%3E-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#765\">source</a><a href=\"#impl-From%3CT%3E-for-T\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"../../../convert/trait.From.html\" title=\"trait std::convert::From\">From</a>&lt;T&gt; for T</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#768\">source</a><a href=\"#method.from\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../../../convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(t: T) -&gt; T</h4></section></summary><div class=\"docblock\"><p>Returns the argument unchanged.</p>\n</div></details></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-Into%3CU%3E-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#748-750\">source</a><a href=\"#impl-Into%3CU%3E-for-T\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"../../../convert/trait.Into.html\" title=\"trait std::convert::Into\">Into</a>&lt;U&gt; for T<div class=\"where\">where\n    U: <a class=\"trait\" href=\"../../../convert/trait.From.html\" title=\"trait std::convert::From\">From</a>&lt;T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#758\">source</a><a href=\"#method.into\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../../../convert/trait.Into.html#tymethod.into\" class=\"fn\">into</a>(self) -&gt; U</h4></section></summary><div class=\"docblock\"><p>Calls <code>U::from(self)</code>.</p>\n<p>That is, this conversion is whatever the implementation of\n<code><a href=\"../../../convert/trait.From.html\" title=\"trait std::convert::From\">From</a>&lt;T&gt; for U</code> chooses to do.</p>\n</div></details></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-ToOwned-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/alloc/borrow.rs.html#83-85\">source</a><a href=\"#impl-ToOwned-for-T\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"../../../borrow/trait.ToOwned.html\" title=\"trait std::borrow::ToOwned\">ToOwned</a> for T<div class=\"where\">where\n    T: <a class=\"trait\" href=\"../../../clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open=\"\"><summary><section id=\"associatedtype.Owned\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Owned\" class=\"anchor\">Â§</a><h4 class=\"code-header\">type <a href=\"../../../borrow/trait.ToOwned.html#associatedtype.Owned\" class=\"associatedtype\">Owned</a> = T</h4></section></summary><div class=\"docblock\">The resulting type after obtaining ownership.</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.to_owned\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/alloc/borrow.rs.html#88\">source</a><a href=\"#method.to_owned\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../../../borrow/trait.ToOwned.html#tymethod.to_owned\" class=\"fn\">to_owned</a>(&amp;self) -&gt; T</h4></section></summary><div class=\"docblock\">Creates owned data from borrowed data, usually by cloning. <a href=\"../../../borrow/trait.ToOwned.html#tymethod.to_owned\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.clone_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/alloc/borrow.rs.html#92\">source</a><a href=\"#method.clone_into\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../../../borrow/trait.ToOwned.html#method.clone_into\" class=\"fn\">clone_into</a>(&amp;self, target: <a class=\"primitive\" href=\"../../../primitive.reference.html\">&amp;mut T</a>)</h4></section></summary><div class=\"docblock\">Uses borrowed data to replace owned data, usually by cloning. <a href=\"../../../borrow/trait.ToOwned.html#method.clone_into\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-TryFrom%3CU%3E-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#805-807\">source</a><a href=\"#impl-TryFrom%3CU%3E-for-T\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"../../../convert/trait.TryFrom.html\" title=\"trait std::convert::TryFrom\">TryFrom</a>&lt;U&gt; for T<div class=\"where\">where\n    U: <a class=\"trait\" href=\"../../../convert/trait.Into.html\" title=\"trait std::convert::Into\">Into</a>&lt;T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open=\"\"><summary><section id=\"associatedtype.Error-1\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error-1\" class=\"anchor\">Â§</a><h4 class=\"code-header\">type <a href=\"../../../convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"../../../convert/enum.Infallible.html\" title=\"enum std::convert::Infallible\">Infallible</a></h4></section></summary><div class=\"docblock\">The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#812\">source</a><a href=\"#method.try_from\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../../../convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(value: U) -&gt; <a class=\"enum\" href=\"../../../result/enum.Result.html\" title=\"enum std::result::Result\">Result</a>&lt;T, &lt;T as <a class=\"trait\" href=\"../../../convert/trait.TryFrom.html\" title=\"trait std::convert::TryFrom\">TryFrom</a>&lt;U&gt;&gt;::<a class=\"associatedtype\" href=\"../../../convert/trait.TryFrom.html#associatedtype.Error\" title=\"type std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\">Performs the conversion.</div></details></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-TryInto%3CU%3E-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#790-792\">source</a><a href=\"#impl-TryInto%3CU%3E-for-T\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"../../../convert/trait.TryInto.html\" title=\"trait std::convert::TryInto\">TryInto</a>&lt;U&gt; for T<div class=\"where\">where\n    U: <a class=\"trait\" href=\"../../../convert/trait.TryFrom.html\" title=\"trait std::convert::TryFrom\">TryFrom</a>&lt;T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open=\"\"><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">Â§</a><h4 class=\"code-header\">type <a href=\"../../../convert/trait.TryInto.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = &lt;U as <a class=\"trait\" href=\"../../../convert/trait.TryFrom.html\" title=\"trait std::convert::TryFrom\">TryFrom</a>&lt;T&gt;&gt;::<a class=\"associatedtype\" href=\"../../../convert/trait.TryFrom.html#associatedtype.Error\" title=\"type std::convert::TryFrom::Error\">Error</a></h4></section></summary><div class=\"docblock\">The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.try_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#797\">source</a><a href=\"#method.try_into\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../../../convert/trait.TryInto.html#tymethod.try_into\" class=\"fn\">try_into</a>(self) -&gt; <a class=\"enum\" href=\"../../../result/enum.Result.html\" title=\"enum std::result::Result\">Result</a>&lt;U, &lt;U as <a class=\"trait\" href=\"../../../convert/trait.TryFrom.html\" title=\"trait std::convert::TryFrom\">TryFrom</a>&lt;T&gt;&gt;::<a class=\"associatedtype\" href=\"../../../convert/trait.TryFrom.html#associatedtype.Error\" title=\"type std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\">Performs the conversion.</div></details></div></details></div></section></div></main></body></html>",
	"crawlDate": "2024-07-28T05:26:20.795Z"
}