{
	"title": "SlicePattern in core::slice - Rust",
	"url": "https://doc.rust-lang.org/1.80.0/core/slice/trait.SlicePattern.html",
	"markdown": "# SlicePattern in core::slice - Rust\n\n```\npub trait SlicePattern {\n    type Item;\n\n    // Required method\n    fn as_slice(&self) -> &[Self::Item];\n}\n```\n\nðŸ”¬This is a nightly-only experimental API. (`slice_pattern`Â [#56345](https://github.com/rust-lang/rust/issues/56345))\n\nExpand description\n\nPatterns in slices - currently, only used by `strip_prefix` and `strip_suffix`. At a future point, we hope to generalise `core::str::Pattern` (which at the time of writing is limited to `str`) to slices, and then this trait will be replaced or abolished.\n\n[source](about:blank/src/core/slice/mod.rs.html#4710)\n\nðŸ”¬This is a nightly-only experimental API. (`slice_pattern`Â [#56345](https://github.com/rust-lang/rust/issues/56345))\n\nThe element type of the slice being matched on.\n\n[source](about:blank/src/core/slice/mod.rs.html#4713)\n\nðŸ”¬This is a nightly-only experimental API. (`slice_pattern`Â [#56345](https://github.com/rust-lang/rust/issues/56345))\n\nCurrently, the consumers of `SlicePattern` need a slice.",
	"html": "<!DOCTYPE html><html lang=\"en\" data-theme=\"light\"><head><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><meta name=\"generator\" content=\"rustdoc\"><meta name=\"description\" content=\"Patterns in slices - currently, only used by `strip_prefix` and `strip_suffix`.  At a future point, we hope to generalise `core::str::Pattern` (which at the time of writing is limited to `str`) to slices, and then this trait will be replaced or abolished.\"><title>SlicePattern in core::slice - Rust</title><script>if(window.location.protocol!==\"file:\")document.head.insertAdjacentHTML(\"beforeend\",\"SourceSerif4-Regular-46f98efaafac5295.ttf.woff2,FiraSans-Regular-018c141bf0843ffd.woff2,FiraSans-Medium-8f9a781e4970d388.woff2,SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2,SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\".split(\",\").map(f=>`<link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin href=\"../../static.files/${f}\">`).join(\"\"))</script><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceSerif4-Regular-46f98efaafac5295.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/FiraSans-Regular-018c141bf0843ffd.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/FiraSans-Medium-8f9a781e4970d388.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\"><link rel=\"stylesheet\" href=\"../../static.files/normalize-76eba96aa4d2e634.css\"><link rel=\"stylesheet\" href=\"../../static.files/rustdoc-dd39b87e5fcfba68.css\"><meta name=\"rustdoc-vars\" data-root-path=\"../../\" data-static-root-path=\"../../static.files/\" data-current-crate=\"core\" data-themes=\"\" data-resource-suffix=\"1.80.0\" data-rustdoc-version=\"1.80.0 (051478957 2024-07-21)\" data-channel=\"1.80.0\" data-search-js=\"search-d52510db62a78183.js\" data-settings-js=\"settings-4313503d2e1961c2.js\"><script src=\"../../static.files/storage-118b08c4c78b968e.js\"></script><script defer=\"\" src=\"sidebar-items1.80.0.js\"></script><script defer=\"\" src=\"../../static.files/main-20a3ad099b048cf2.js\"></script><noscript><link rel=\"stylesheet\" href=\"../../static.files/noscript-df360f571f6edeae.css\"></noscript><link rel=\"alternate icon\" type=\"image/png\" href=\"../../static.files/favicon-32x32-422f7d1d52889060.png\"><link rel=\"icon\" type=\"image/svg+xml\" href=\"../../static.files/favicon-2c020d218678b618.svg\"></head><body class=\"rustdoc trait\"><!--[if lte IE 11]><div class=\"warning\">This old browser is unsupported and will most likely display funky things.</div><![endif]--><nav class=\"mobile-topbar\"><button class=\"sidebar-menu-toggle\" title=\"show sidebar\"></button><a class=\"logo-container\" href=\"../../core/index.html\"><img class=\"rust-logo\" src=\"../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"\"></a><h2 class=\"location\"><a href=\"#\">SlicePattern</a></h2></nav><nav class=\"sidebar\"><div class=\"sidebar-crate\"><a class=\"logo-container\" href=\"../../core/index.html\"><img class=\"rust-logo\" src=\"../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"logo\"></a><h2><a href=\"../../core/index.html\">core</a><span class=\"version\">1.80.0</span></h2></div><div class=\"version\">(051478957\t2024-07-21)</div><h2 class=\"location\"><a href=\"#\">SlicePattern</a></h2><div class=\"sidebar-elems\"><section><h3><a href=\"#required-associated-types\">Required Associated Types</a></h3><ul class=\"block\"><li><a href=\"#associatedtype.Item\">Item</a></li></ul><h3><a href=\"#required-methods\">Required Methods</a></h3><ul class=\"block\"><li><a href=\"#tymethod.as_slice\">as_slice</a></li></ul><h3><a href=\"#implementors\">Implementors</a></h3></section><h2><a href=\"index.html\">In core::slice</a></h2><h3><a href=\"index.html#modules\">Modules</a></h3><ul class=\"block mod\"><li><a href=\"memchr/index.html\">memchr</a></li><li><a href=\"sort/index.html\">sort</a></li></ul><h3><a href=\"index.html#structs\">Structs</a></h3><ul class=\"block struct\"><li><a href=\"struct.ArrayChunks.html\">ArrayChunks</a></li><li><a href=\"struct.ArrayChunksMut.html\">ArrayChunksMut</a></li><li><a href=\"struct.ArrayWindows.html\">ArrayWindows</a></li><li><a href=\"struct.ChunkBy.html\">ChunkBy</a></li><li><a href=\"struct.ChunkByMut.html\">ChunkByMut</a></li><li><a href=\"struct.Chunks.html\">Chunks</a></li><li><a href=\"struct.ChunksExact.html\">ChunksExact</a></li><li><a href=\"struct.ChunksExactMut.html\">ChunksExactMut</a></li><li><a href=\"struct.ChunksMut.html\">ChunksMut</a></li><li><a href=\"struct.EscapeAscii.html\">EscapeAscii</a></li><li><a href=\"struct.GetManyMutError.html\">GetManyMutError</a></li><li><a href=\"struct.Iter.html\">Iter</a></li><li><a href=\"struct.IterMut.html\">IterMut</a></li><li><a href=\"struct.RChunks.html\">RChunks</a></li><li><a href=\"struct.RChunksExact.html\">RChunksExact</a></li><li><a href=\"struct.RChunksExactMut.html\">RChunksExactMut</a></li><li><a href=\"struct.RChunksMut.html\">RChunksMut</a></li><li><a href=\"struct.RSplit.html\">RSplit</a></li><li><a href=\"struct.RSplitMut.html\">RSplitMut</a></li><li><a href=\"struct.RSplitN.html\">RSplitN</a></li><li><a href=\"struct.RSplitNMut.html\">RSplitNMut</a></li><li><a href=\"struct.Split.html\">Split</a></li><li><a href=\"struct.SplitInclusive.html\">SplitInclusive</a></li><li><a href=\"struct.SplitInclusiveMut.html\">SplitInclusiveMut</a></li><li><a href=\"struct.SplitMut.html\">SplitMut</a></li><li><a href=\"struct.SplitN.html\">SplitN</a></li><li><a href=\"struct.SplitNMut.html\">SplitNMut</a></li><li><a href=\"struct.Windows.html\">Windows</a></li></ul><h3><a href=\"index.html#traits\">Traits</a></h3><ul class=\"block trait\"><li><a href=\"trait.SliceIndex.html\">SliceIndex</a></li><li><a href=\"trait.SlicePattern.html\">SlicePattern</a></li></ul><h3><a href=\"index.html#functions\">Functions</a></h3><ul class=\"block fn\"><li><a href=\"fn.from_mut.html\">from_mut</a></li><li><a href=\"fn.from_mut_ptr_range.html\">from_mut_ptr_range</a></li><li><a href=\"fn.from_ptr_range.html\">from_ptr_range</a></li><li><a href=\"fn.from_raw_parts.html\">from_raw_parts</a></li><li><a href=\"fn.from_raw_parts_mut.html\">from_raw_parts_mut</a></li><li><a href=\"fn.from_ref.html\">from_ref</a></li><li><a href=\"fn.range.html\">range</a></li><li><a href=\"fn.try_range.html\">try_range</a></li></ul></div></nav><div class=\"sidebar-resizer\"></div><main><div class=\"width-limiter\"><rustdoc-search><nav class=\"sub\">\n            <form class=\"search-form\">\n                <span></span> <!-- This empty span is a hacky fix for Safari - See #93184 -->\n                <div id=\"sidebar-button\" tabindex=\"-1\">\n                    <a href=\"../../core/all.html\" title=\"show sidebar\"></a>\n                </div>\n                <input class=\"search-input\" name=\"search\" aria-label=\"Run search in the documentation\" autocomplete=\"off\" spellcheck=\"false\" placeholder=\"Type â€˜Sâ€™ or â€˜/â€™ to search, â€˜?â€™ for more optionsâ€¦\" type=\"search\">\n                <div id=\"help-button\" tabindex=\"-1\">\n                    <a href=\"../../help.html\" title=\"help\">?</a>\n                </div>\n                <div id=\"settings-menu\" tabindex=\"-1\">\n                    <a href=\"../../settings.html\" title=\"settings\">\n                        Settings\n                    </a>\n                </div>\n            </form>\n        </nav></rustdoc-search><section id=\"main-content\" class=\"content\"><div class=\"main-heading\"><h1>Trait <a href=\"../index.html\">core</a>::<wbr><a href=\"index.html\">slice</a>::<wbr><a class=\"trait\" href=\"#\">SlicePattern</a><button id=\"copy-path\" title=\"Copy item path to clipboard\">Copy item path</button></h1><span class=\"out-of-band\"><a class=\"src\" href=\"../../src/core/slice/mod.rs.html#4708-4714\">source</a> Â· <button id=\"toggle-all-docs\" title=\"collapse all docs\">[<span>âˆ’</span>]</button></span></div><pre class=\"rust item-decl\"><code>pub trait SlicePattern {\n    type <a href=\"#associatedtype.Item\" class=\"associatedtype\">Item</a>;\n\n    // Required method\n    fn <a href=\"#tymethod.as_slice\" class=\"fn\">as_slice</a>(&amp;self) -&gt; &amp;[Self::<a class=\"associatedtype\" href=\"trait.SlicePattern.html#associatedtype.Item\" title=\"type core::slice::SlicePattern::Item\">Item</a>];\n}</code></pre><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>slice_pattern</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/56345\">#56345</a>)</span></div></span><details class=\"toggle top-doc\" open=\"\"><summary class=\"hideme\"><span>Expand description</span></summary><div class=\"docblock\"><p>Patterns in slices - currently, only used by <code>strip_prefix</code> and <code>strip_suffix</code>.  At a future\npoint, we hope to generalise <code>core::str::Pattern</code> (which at the time of writing is limited to\n<code>str</code>) to slices, and then this trait will be replaced or abolished.</p>\n</div></details><h2 id=\"required-associated-types\" class=\"section-header\">Required Associated Types<a href=\"#required-associated-types\" class=\"anchor\">Â§</a></h2><div class=\"methods\"><details class=\"toggle\" open=\"\"><summary><section id=\"associatedtype.Item\" class=\"method\"><a class=\"src rightside\" href=\"../../src/core/slice/mod.rs.html#4710\">source</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Item\" class=\"associatedtype\">Item</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>slice_pattern</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/56345\">#56345</a>)</span></div></span></summary><div class=\"docblock\"><p>The element type of the slice being matched on.</p>\n</div></details></div><h2 id=\"required-methods\" class=\"section-header\">Required Methods<a href=\"#required-methods\" class=\"anchor\">Â§</a></h2><div class=\"methods\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"tymethod.as_slice\" class=\"method\"><a class=\"src rightside\" href=\"../../src/core/slice/mod.rs.html#4713\">source</a><h4 class=\"code-header\">fn <a href=\"#tymethod.as_slice\" class=\"fn\">as_slice</a>(&amp;self) -&gt; &amp;[Self::<a class=\"associatedtype\" href=\"trait.SlicePattern.html#associatedtype.Item\" title=\"type core::slice::SlicePattern::Item\">Item</a>]</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>slice_pattern</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/56345\">#56345</a>)</span></div></span></summary><div class=\"docblock\"><p>Currently, the consumers of <code>SlicePattern</code> need a slice.</p>\n</div></details></div><h2 id=\"implementors\" class=\"section-header\">Implementors<a href=\"#implementors\" class=\"anchor\">Â§</a></h2><div id=\"implementors-list\"><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-SlicePattern-for-%5BT%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.51.0\">1.51.0</span> Â· <a class=\"src\" href=\"../../src/core/slice/mod.rs.html#4717-4724\">source</a></span><a href=\"#impl-SlicePattern-for-%5BT%5D\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"trait.SlicePattern.html\" title=\"trait core::slice::SlicePattern\">SlicePattern</a> for <a class=\"primitive\" href=\"../primitive.slice.html\">[T]</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Item-1\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item-1\" class=\"anchor\">Â§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Item\" class=\"associatedtype\">Item</a> = T</h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-SlicePattern-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.51.0\">1.51.0</span> Â· <a class=\"src\" href=\"../../src/core/slice/mod.rs.html#4727-4734\">source</a></span><a href=\"#impl-SlicePattern-for-%5BT;+N%5D\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"../primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"trait.SlicePattern.html\" title=\"trait core::slice::SlicePattern\">SlicePattern</a> for <a class=\"primitive\" href=\"../primitive.array.html\">[T; N]</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Item-2\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item-2\" class=\"anchor\">Â§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Item\" class=\"associatedtype\">Item</a> = T</h4></section></div></details></div><script src=\"../../trait.impl/core/slice/trait.SlicePattern.js\" async=\"\"></script></section></div></main></body></html>",
	"crawlDate": "2024-07-28T05:14:28.949Z"
}