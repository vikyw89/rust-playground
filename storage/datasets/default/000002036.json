{
	"title": "is_riscv_feature_detected in std::arch - Rust",
	"url": "https://doc.rust-lang.org/stable/std/arch/macro.is_riscv_feature_detected.html",
	"markdown": "# is\\_riscv\\_feature\\_detected in std::arch - Rust\n\n```\nmacro_rules! is_riscv_feature_detected {\n    (\"rv32i\") => { ... };\n    (\"zifencei\") => { ... };\n    (\"zihintpause\") => { ... };\n    (\"rv64i\") => { ... };\n    (\"m\") => { ... };\n    (\"a\") => { ... };\n    (\"zicsr\") => { ... };\n    (\"zicntr\") => { ... };\n    (\"zihpm\") => { ... };\n    (\"f\") => { ... };\n    (\"d\") => { ... };\n    (\"q\") => { ... };\n    (\"c\") => { ... };\n    (\"zfinx\") => { ... };\n    (\"zdinx\") => { ... };\n    (\"zhinx\") => { ... };\n    (\"zhinxmin\") => { ... };\n    (\"ztso\") => { ... };\n    (\"rv32e\") => { ... };\n    (\"rv128i\") => { ... };\n    (\"zfh\") => { ... };\n    (\"zfhmin\") => { ... };\n    (\"j\") => { ... };\n    (\"p\") => { ... };\n    (\"v\") => { ... };\n    (\"zam\") => { ... };\n    (\"s\") => { ... };\n    (\"svnapot\") => { ... };\n    (\"svpbmt\") => { ... };\n    (\"svinval\") => { ... };\n    (\"h\") => { ... };\n    (\"zba\") => { ... };\n    (\"zbb\") => { ... };\n    (\"zbc\") => { ... };\n    (\"zbs\") => { ... };\n    (\"zbkb\") => { ... };\n    (\"zbkc\") => { ... };\n    (\"zbkx\") => { ... };\n    (\"zknd\") => { ... };\n    (\"zkne\") => { ... };\n    (\"zknh\") => { ... };\n    (\"zksed\") => { ... };\n    (\"zksh\") => { ... };\n    (\"zkr\") => { ... };\n    (\"zkn\") => { ... };\n    (\"zks\") => { ... };\n    (\"zk\") => { ... };\n    (\"zkt\") => { ... };\n    ($t:tt,) => { ... };\n    ($t:tt) => { ... };\n}\n```\n\nExpand description\n\nA macro to test at _runtime_ whether instruction sets are available on RISC-V platforms.\n\nRISC-V standard defined the base sets and the extension sets. The base sets are RV32I, RV64I, RV32E or RV128I. Any RISC-V platform must support one base set and/or multiple extension sets.\n\nAny RISC-V standard instruction sets can be in state of either ratified, frozen or draft. The version and status of current standard instruction sets can be checked out from preface section of the [ISA manual](https://github.com/riscv/riscv-isa-manual/).\n\nPlatform may define and support their own custom instruction sets with ISA prefix X. These sets are highly platform specific and should be detected with their own platform support crates.\n\n## [§](#unprivileged-specification)Unprivileged Specification\n\nThe supported ratified RISC-V instruction sets are as follows:\n\n-   RV32E: `\"rv32e\"`\n-   RV32I: `\"rv32i\"`\n-   RV64I: `\"rv64i\"`\n-   A: `\"a\"`\n-   B: `\"b\"`\n    -   Zba: `\"zba\"`\n    -   Zbb: `\"zbb\"`\n    -   Zbc: `\"zbc\"`\n    -   Zbs: `\"zbs\"`\n-   C: `\"c\"`\n-   D: `\"d\"`\n-   F: `\"f\"`\n-   M: `\"m\"`\n-   Q: `\"q\"`\n-   V: `\"v\"`\n-   Zicntr: `\"zicntr\"`\n-   Zicsr: `\"zicsr\"`\n-   Zifencei: `\"zifencei\"`\n-   Zihintpause: `\"zihintpause\"`\n-   Zihpm: `\"zihpm\"`\n-   Zk: `\"zk\"`\n    -   Zbkb: `\"zbkb\"`\n    -   Zbkc: `\"zbkc\"`\n    -   Zbkx: `\"zbkx\"`\n    -   Zkn: `\"zkn\"`\n        -   Zknd: `\"zknd\"`\n        -   Zkne: `\"zkne\"`\n        -   Zknh: `\"zknh\"`\n    -   Zkr: `\"zkr\"`\n    -   Zks: `\"zks\"`\n        -   Zksed: `\"zksed\"`\n        -   Zksh: `\"zksh\"`\n    -   Zkt: `\"zkt\"`\n\nThere’s also bases and extensions marked as standard instruction set, but they are in frozen or draft state. These instruction sets are also reserved by this macro and can be detected in the future platforms.\n\nFrozen RISC-V instruction sets:\n\n-   Zfh: `\"zfh\"`\n-   Zfhmin: `\"zfhmin\"`\n-   Zfinx: `\"zfinx\"`\n-   Zdinx: `\"zdinx\"`\n-   Zhinx: `\"zhinx\"`\n-   Zhinxmin: `\"zhinxmin\"`\n-   Ztso: `\"ztso\"`\n\nDraft RISC-V instruction sets:\n\n-   RV128I: `\"rv128i\"`\n-   J: `\"j\"`\n-   P: `\"p\"`\n-   Zam: `\"zam\"`\n\nDefined by Privileged Specification:\n\n-   Supervisor: `\"s\"`\n-   Svnapot: `\"svnapot\"`\n-   Svpbmt: `\"svpbmt\"`\n-   Svinval: `\"svinval\"`\n-   Hypervisor: `\"h\"`",
	"html": "<!DOCTYPE html><html lang=\"en\" data-theme=\"light\"><head><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><meta name=\"generator\" content=\"rustdoc\"><meta name=\"description\" content=\"A macro to test at runtime whether instruction sets are available on RISC-V platforms.\"><title>is_riscv_feature_detected in std::arch - Rust</title><script>if(window.location.protocol!==\"file:\")document.head.insertAdjacentHTML(\"beforeend\",\"SourceSerif4-Regular-46f98efaafac5295.ttf.woff2,FiraSans-Regular-018c141bf0843ffd.woff2,FiraSans-Medium-8f9a781e4970d388.woff2,SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2,SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\".split(\",\").map(f=>`<link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin href=\"../../static.files/${f}\">`).join(\"\"))</script><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceSerif4-Regular-46f98efaafac5295.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/FiraSans-Regular-018c141bf0843ffd.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/FiraSans-Medium-8f9a781e4970d388.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\"><link rel=\"stylesheet\" href=\"../../static.files/normalize-76eba96aa4d2e634.css\"><link rel=\"stylesheet\" href=\"../../static.files/rustdoc-dd39b87e5fcfba68.css\"><meta name=\"rustdoc-vars\" data-root-path=\"../../\" data-static-root-path=\"../../static.files/\" data-current-crate=\"std\" data-themes=\"\" data-resource-suffix=\"1.80.0\" data-rustdoc-version=\"1.80.0 (051478957 2024-07-21)\" data-channel=\"1.80.0\" data-search-js=\"search-d52510db62a78183.js\" data-settings-js=\"settings-4313503d2e1961c2.js\"><script src=\"../../static.files/storage-118b08c4c78b968e.js\"></script><script defer=\"\" src=\"sidebar-items1.80.0.js\"></script><script defer=\"\" src=\"../../static.files/main-20a3ad099b048cf2.js\"></script><noscript><link rel=\"stylesheet\" href=\"../../static.files/noscript-df360f571f6edeae.css\"></noscript><link rel=\"alternate icon\" type=\"image/png\" href=\"../../static.files/favicon-32x32-422f7d1d52889060.png\"><link rel=\"icon\" type=\"image/svg+xml\" href=\"../../static.files/favicon-2c020d218678b618.svg\"></head><body class=\"rustdoc macro\"><!--[if lte IE 11]><div class=\"warning\">This old browser is unsupported and will most likely display funky things.</div><![endif]--><nav class=\"mobile-topbar\"><button class=\"sidebar-menu-toggle\" title=\"show sidebar\"></button><a class=\"logo-container\" href=\"../../std/index.html\"><img class=\"rust-logo\" src=\"../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"\"></a><h2 class=\"location\"></h2></nav><nav class=\"sidebar\"><div class=\"sidebar-crate\"><a class=\"logo-container\" href=\"../../std/index.html\"><img class=\"rust-logo\" src=\"../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"logo\"></a><h2><a href=\"../../std/index.html\">std</a><span class=\"version\">1.80.0</span></h2></div><div class=\"version\">(051478957\t2024-07-21)</div><div class=\"sidebar-elems\"><h2><a href=\"index.html\">In std::arch</a></h2><h3><a href=\"index.html#macros\">Macros</a></h3><ul class=\"block macro\"><li><a href=\"macro.is_aarch64_feature_detected.html\">is_aarch64_feature_detected</a></li><li><a href=\"macro.is_arm_feature_detected.html\">is_arm_feature_detected</a></li><li><a href=\"macro.is_mips64_feature_detected.html\">is_mips64_feature_detected</a></li><li><a href=\"macro.is_mips_feature_detected.html\">is_mips_feature_detected</a></li><li><a href=\"macro.is_powerpc64_feature_detected.html\">is_powerpc64_feature_detected</a></li><li><a href=\"macro.is_powerpc_feature_detected.html\">is_powerpc_feature_detected</a></li><li><a href=\"macro.is_riscv_feature_detected.html\">is_riscv_feature_detected</a></li><li><a href=\"macro.is_x86_feature_detected.html\">is_x86_feature_detected</a></li></ul></div></nav><div class=\"sidebar-resizer\"></div><main><div class=\"width-limiter\"><rustdoc-search><nav class=\"sub\">\n            <form class=\"search-form\">\n                <span></span> <!-- This empty span is a hacky fix for Safari - See #93184 -->\n                <div id=\"sidebar-button\" tabindex=\"-1\">\n                    <a href=\"../../std/all.html\" title=\"show sidebar\"></a>\n                </div>\n                <input class=\"search-input\" name=\"search\" aria-label=\"Run search in the documentation\" autocomplete=\"off\" spellcheck=\"false\" placeholder=\"Type ‘S’ or ‘/’ to search, ‘?’ for more options…\" type=\"search\">\n                <div id=\"help-button\" tabindex=\"-1\">\n                    <a href=\"../../help.html\" title=\"help\">?</a>\n                </div>\n                <div id=\"settings-menu\" tabindex=\"-1\">\n                    <a href=\"../../settings.html\" title=\"settings\">\n                        Settings\n                    </a>\n                </div>\n            </form>\n        </nav></rustdoc-search><section id=\"main-content\" class=\"content\"><div class=\"main-heading\"><h1>Macro <a href=\"../index.html\">std</a>::<wbr><a href=\"index.html\">arch</a>::<wbr><a class=\"macro\" href=\"#\">is_riscv_feature_detected</a><button id=\"copy-path\" title=\"Copy item path to clipboard\">Copy item path</button></h1><span class=\"out-of-band\"><span class=\"since\" title=\"Stable since Rust version 1.76.0\">1.76.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/std_detect/detect/arch/riscv.rs.html#3-193\">source</a> · <button id=\"toggle-all-docs\" title=\"collapse all docs\">[<span>−</span>]</button></span></div><pre class=\"rust item-decl\"><span class=\"macro\">macro_rules!</span> is_riscv_feature_detected {\n    (<span class=\"string\">\"rv32i\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"zifencei\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"zihintpause\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"rv64i\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"m\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"a\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"zicsr\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"zicntr\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"zihpm\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"f\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"d\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"q\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"c\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"zfinx\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"zdinx\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"zhinx\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"zhinxmin\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"ztso\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"rv32e\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"rv128i\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"zfh\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"zfhmin\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"j\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"p\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"v\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"zam\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"s\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"svnapot\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"svpbmt\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"svinval\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"h\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"zba\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"zbb\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"zbc\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"zbs\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"zbkb\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"zbkc\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"zbkx\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"zknd\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"zkne\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"zknh\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"zksed\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"zksh\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"zkr\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"zkn\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"zks\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"zk\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"zkt\"</span>) =&gt; { ... };\n    (<span class=\"macro-nonterminal\">$t</span>:tt,) =&gt; { ... };\n    (<span class=\"macro-nonterminal\">$t</span>:tt) =&gt; { ... };\n}</pre><details class=\"toggle top-doc\" open=\"\"><summary class=\"hideme\"><span>Expand description</span></summary><div class=\"docblock\"><p>A macro to test at <em>runtime</em> whether instruction sets are available on\nRISC-V platforms.</p>\n<p>RISC-V standard defined the base sets and the extension sets.\nThe base sets are RV32I, RV64I, RV32E or RV128I. Any RISC-V platform\nmust support one base set and/or multiple extension sets.</p>\n<p>Any RISC-V standard instruction sets can be in state of either ratified,\nfrozen or draft. The version and status of current standard instruction\nsets can be checked out from preface section of the <a href=\"https://github.com/riscv/riscv-isa-manual/\">ISA manual</a>.</p>\n<p>Platform may define and support their own custom instruction sets with\nISA prefix X. These sets are highly platform specific and should be\ndetected with their own platform support crates.</p>\n<h2 id=\"unprivileged-specification\"><a class=\"doc-anchor\" href=\"#unprivileged-specification\">§</a>Unprivileged Specification</h2>\n<p>The supported ratified RISC-V instruction sets are as follows:</p>\n<ul>\n<li>RV32E: <code>\"rv32e\"</code></li>\n<li>RV32I: <code>\"rv32i\"</code></li>\n<li>RV64I: <code>\"rv64i\"</code></li>\n<li>A: <code>\"a\"</code></li>\n<li>B: <code>\"b\"</code>\n<ul>\n<li>Zba: <code>\"zba\"</code></li>\n<li>Zbb: <code>\"zbb\"</code></li>\n<li>Zbc: <code>\"zbc\"</code></li>\n<li>Zbs: <code>\"zbs\"</code></li>\n</ul>\n</li>\n<li>C: <code>\"c\"</code></li>\n<li>D: <code>\"d\"</code></li>\n<li>F: <code>\"f\"</code></li>\n<li>M: <code>\"m\"</code></li>\n<li>Q: <code>\"q\"</code></li>\n<li>V: <code>\"v\"</code></li>\n<li>Zicntr: <code>\"zicntr\"</code></li>\n<li>Zicsr: <code>\"zicsr\"</code></li>\n<li>Zifencei: <code>\"zifencei\"</code></li>\n<li>Zihintpause: <code>\"zihintpause\"</code></li>\n<li>Zihpm: <code>\"zihpm\"</code></li>\n<li>Zk: <code>\"zk\"</code>\n<ul>\n<li>Zbkb: <code>\"zbkb\"</code></li>\n<li>Zbkc: <code>\"zbkc\"</code></li>\n<li>Zbkx: <code>\"zbkx\"</code></li>\n<li>Zkn: <code>\"zkn\"</code>\n<ul>\n<li>Zknd: <code>\"zknd\"</code></li>\n<li>Zkne: <code>\"zkne\"</code></li>\n<li>Zknh: <code>\"zknh\"</code></li>\n</ul>\n</li>\n<li>Zkr: <code>\"zkr\"</code></li>\n<li>Zks: <code>\"zks\"</code>\n<ul>\n<li>Zksed: <code>\"zksed\"</code></li>\n<li>Zksh: <code>\"zksh\"</code></li>\n</ul>\n</li>\n<li>Zkt: <code>\"zkt\"</code></li>\n</ul>\n</li>\n</ul>\n<p>There’s also bases and extensions marked as standard instruction set,\nbut they are in frozen or draft state. These instruction sets are also\nreserved by this macro and can be detected in the future platforms.</p>\n<p>Frozen RISC-V instruction sets:</p>\n<ul>\n<li>Zfh: <code>\"zfh\"</code></li>\n<li>Zfhmin: <code>\"zfhmin\"</code></li>\n<li>Zfinx: <code>\"zfinx\"</code></li>\n<li>Zdinx: <code>\"zdinx\"</code></li>\n<li>Zhinx: <code>\"zhinx\"</code></li>\n<li>Zhinxmin: <code>\"zhinxmin\"</code></li>\n<li>Ztso: <code>\"ztso\"</code></li>\n</ul>\n<p>Draft RISC-V instruction sets:</p>\n<ul>\n<li>RV128I: <code>\"rv128i\"</code></li>\n<li>J: <code>\"j\"</code></li>\n<li>P: <code>\"p\"</code></li>\n<li>Zam: <code>\"zam\"</code></li>\n</ul>\n<p>Defined by Privileged Specification:</p>\n<ul>\n<li>Supervisor: <code>\"s\"</code></li>\n<li>Svnapot: <code>\"svnapot\"</code></li>\n<li>Svpbmt: <code>\"svpbmt\"</code></li>\n<li>Svinval: <code>\"svinval\"</code></li>\n<li>Hypervisor: <code>\"h\"</code></li>\n</ul>\n</div></details></section></div></main></body></html>",
	"crawlDate": "2024-07-28T05:22:45.331Z"
}