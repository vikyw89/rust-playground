{
	"title": "IntoAsyncIterator in std::async_iter - Rust",
	"url": "https://doc.rust-lang.org/stable/std/async_iter/trait.IntoAsyncIterator.html",
	"markdown": "# IntoAsyncIterator in std::async\\_iter - Rust\n\n```\npub trait IntoAsyncIterator {\n    type Item;\n    type IntoAsyncIter: AsyncIterator<Item = Self::Item>;\n\n    // Required method\n    fn into_async_iter(self) -> Self::IntoAsyncIter;\n}\n```\n\nðŸ”¬This is a nightly-only experimental API. (`async_iterator`Â [#79024](https://github.com/rust-lang/rust/issues/79024))\n\nExpand description\n\nConvert something into an async iterator\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/async_iter/async_iter.rs.html#146)\n\nðŸ”¬This is a nightly-only experimental API. (`async_iterator`Â [#79024](https://github.com/rust-lang/rust/issues/79024))\n\nThe type of the item yielded by the iterator\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/async_iter/async_iter.rs.html#148)\n\nðŸ”¬This is a nightly-only experimental API. (`async_iterator`Â [#79024](https://github.com/rust-lang/rust/issues/79024))\n\nThe type of the resulting iterator\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/async_iter/async_iter.rs.html#152)\n\nðŸ”¬This is a nightly-only experimental API. (`async_iterator`Â [#79024](https://github.com/rust-lang/rust/issues/79024))\n\nConverts `self` into an async iterator",
	"html": "<!DOCTYPE html><html lang=\"en\" data-theme=\"light\"><head><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><meta name=\"generator\" content=\"rustdoc\"><meta name=\"description\" content=\"Convert something into an async iterator\"><title>IntoAsyncIterator in std::async_iter - Rust</title><script>if(window.location.protocol!==\"file:\")document.head.insertAdjacentHTML(\"beforeend\",\"SourceSerif4-Regular-46f98efaafac5295.ttf.woff2,FiraSans-Regular-018c141bf0843ffd.woff2,FiraSans-Medium-8f9a781e4970d388.woff2,SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2,SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\".split(\",\").map(f=>`<link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin href=\"../../static.files/${f}\">`).join(\"\"))</script><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceSerif4-Regular-46f98efaafac5295.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/FiraSans-Regular-018c141bf0843ffd.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/FiraSans-Medium-8f9a781e4970d388.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\"><link rel=\"stylesheet\" href=\"../../static.files/normalize-76eba96aa4d2e634.css\"><link rel=\"stylesheet\" href=\"../../static.files/rustdoc-dd39b87e5fcfba68.css\"><meta name=\"rustdoc-vars\" data-root-path=\"../../\" data-static-root-path=\"../../static.files/\" data-current-crate=\"std\" data-themes=\"\" data-resource-suffix=\"1.80.0\" data-rustdoc-version=\"1.80.0 (051478957 2024-07-21)\" data-channel=\"1.80.0\" data-search-js=\"search-d52510db62a78183.js\" data-settings-js=\"settings-4313503d2e1961c2.js\"><script src=\"../../static.files/storage-118b08c4c78b968e.js\"></script><script defer=\"\" src=\"sidebar-items1.80.0.js\"></script><script defer=\"\" src=\"../../static.files/main-20a3ad099b048cf2.js\"></script><noscript><link rel=\"stylesheet\" href=\"../../static.files/noscript-df360f571f6edeae.css\"></noscript><link rel=\"alternate icon\" type=\"image/png\" href=\"../../static.files/favicon-32x32-422f7d1d52889060.png\"><link rel=\"icon\" type=\"image/svg+xml\" href=\"../../static.files/favicon-2c020d218678b618.svg\"></head><body class=\"rustdoc trait\"><!--[if lte IE 11]><div class=\"warning\">This old browser is unsupported and will most likely display funky things.</div><![endif]--><nav class=\"mobile-topbar\"><button class=\"sidebar-menu-toggle\" title=\"show sidebar\"></button><a class=\"logo-container\" href=\"../../std/index.html\"><img class=\"rust-logo\" src=\"../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"\"></a><h2 class=\"location\"><a href=\"#\">IntoAsyncIterator</a></h2></nav><nav class=\"sidebar\"><div class=\"sidebar-crate\"><a class=\"logo-container\" href=\"../../std/index.html\"><img class=\"rust-logo\" src=\"../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"logo\"></a><h2><a href=\"../../std/index.html\">std</a><span class=\"version\">1.80.0</span></h2></div><div class=\"version\">(051478957\t2024-07-21)</div><h2 class=\"location\"><a href=\"#\">IntoAsyncIterator</a></h2><div class=\"sidebar-elems\"><section><h3><a href=\"#required-associated-types\">Required Associated Types</a></h3><ul class=\"block\"><li><a href=\"#associatedtype.IntoAsyncIter\">IntoAsyncIter</a></li><li><a href=\"#associatedtype.Item\">Item</a></li></ul><h3><a href=\"#required-methods\">Required Methods</a></h3><ul class=\"block\"><li><a href=\"#tymethod.into_async_iter\">into_async_iter</a></li></ul><h3><a href=\"#implementors\">Implementors</a></h3></section><h2><a href=\"index.html\">In std::async_iter</a></h2><h3><a href=\"index.html#structs\">Structs</a></h3><ul class=\"block struct\"><li><a href=\"struct.FromIter.html\">FromIter</a></li></ul><h3><a href=\"index.html#traits\">Traits</a></h3><ul class=\"block trait\"><li><a href=\"trait.AsyncIterator.html\">AsyncIterator</a></li><li><a href=\"trait.IntoAsyncIterator.html\">IntoAsyncIterator</a></li></ul><h3><a href=\"index.html#functions\">Functions</a></h3><ul class=\"block fn\"><li><a href=\"fn.from_iter.html\">from_iter</a></li></ul></div></nav><div class=\"sidebar-resizer\"></div><main><div class=\"width-limiter\"><rustdoc-search><nav class=\"sub\">\n            <form class=\"search-form\">\n                <span></span> <!-- This empty span is a hacky fix for Safari - See #93184 -->\n                <div id=\"sidebar-button\" tabindex=\"-1\">\n                    <a href=\"../../std/all.html\" title=\"show sidebar\"></a>\n                </div>\n                <input class=\"search-input\" name=\"search\" aria-label=\"Run search in the documentation\" autocomplete=\"off\" spellcheck=\"false\" placeholder=\"Type â€˜Sâ€™ or â€˜/â€™ to search, â€˜?â€™ for more optionsâ€¦\" type=\"search\">\n                <div id=\"help-button\" tabindex=\"-1\">\n                    <a href=\"../../help.html\" title=\"help\">?</a>\n                </div>\n                <div id=\"settings-menu\" tabindex=\"-1\">\n                    <a href=\"../../settings.html\" title=\"settings\">\n                        Settings\n                    </a>\n                </div>\n            </form>\n        </nav></rustdoc-search><section id=\"main-content\" class=\"content\"><div class=\"main-heading\"><h1>Trait <a href=\"../index.html\">std</a>::<wbr><a href=\"index.html\">async_iter</a>::<wbr><a class=\"trait\" href=\"#\">IntoAsyncIterator</a><button id=\"copy-path\" title=\"Copy item path to clipboard\">Copy item path</button></h1><span class=\"out-of-band\"><a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/async_iter/async_iter.rs.html#144\">source</a> Â· <button id=\"toggle-all-docs\" title=\"collapse all docs\">[<span>âˆ’</span>]</button></span></div><pre class=\"rust item-decl\"><code>pub trait IntoAsyncIterator {\n    type <a href=\"#associatedtype.Item\" class=\"associatedtype\">Item</a>;\n    type <a href=\"#associatedtype.IntoAsyncIter\" class=\"associatedtype\">IntoAsyncIter</a>: <a class=\"trait\" href=\"trait.AsyncIterator.html\" title=\"trait std::async_iter::AsyncIterator\">AsyncIterator</a>&lt;Item = Self::<a class=\"associatedtype\" href=\"trait.IntoAsyncIterator.html#associatedtype.Item\" title=\"type std::async_iter::IntoAsyncIterator::Item\">Item</a>&gt;;\n\n    // Required method\n    fn <a href=\"#tymethod.into_async_iter\" class=\"fn\">into_async_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"trait.IntoAsyncIterator.html#associatedtype.IntoAsyncIter\" title=\"type std::async_iter::IntoAsyncIterator::IntoAsyncIter\">IntoAsyncIter</a>;\n}</code></pre><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>async_iterator</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/79024\">#79024</a>)</span></div></span><details class=\"toggle top-doc\" open=\"\"><summary class=\"hideme\"><span>Expand description</span></summary><div class=\"docblock\"><p>Convert something into an async iterator</p>\n</div></details><h2 id=\"required-associated-types\" class=\"section-header\">Required Associated Types<a href=\"#required-associated-types\" class=\"anchor\">Â§</a></h2><div class=\"methods\"><details class=\"toggle\" open=\"\"><summary><section id=\"associatedtype.Item\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/async_iter/async_iter.rs.html#146\">source</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Item\" class=\"associatedtype\">Item</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>async_iterator</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/79024\">#79024</a>)</span></div></span></summary><div class=\"docblock\"><p>The type of the item yielded by the iterator</p>\n</div></details><details class=\"toggle\" open=\"\"><summary><section id=\"associatedtype.IntoAsyncIter\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/async_iter/async_iter.rs.html#148\">source</a><h4 class=\"code-header\">type <a href=\"#associatedtype.IntoAsyncIter\" class=\"associatedtype\">IntoAsyncIter</a>: <a class=\"trait\" href=\"trait.AsyncIterator.html\" title=\"trait std::async_iter::AsyncIterator\">AsyncIterator</a>&lt;Item = Self::<a class=\"associatedtype\" href=\"trait.IntoAsyncIterator.html#associatedtype.Item\" title=\"type std::async_iter::IntoAsyncIterator::Item\">Item</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>async_iterator</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/79024\">#79024</a>)</span></div></span></summary><div class=\"docblock\"><p>The type of the resulting iterator</p>\n</div></details></div><h2 id=\"required-methods\" class=\"section-header\">Required Methods<a href=\"#required-methods\" class=\"anchor\">Â§</a></h2><div class=\"methods\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"tymethod.into_async_iter\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/async_iter/async_iter.rs.html#152\">source</a><h4 class=\"code-header\">fn <a href=\"#tymethod.into_async_iter\" class=\"fn\">into_async_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"trait.IntoAsyncIterator.html#associatedtype.IntoAsyncIter\" title=\"type std::async_iter::IntoAsyncIterator::IntoAsyncIter\">IntoAsyncIter</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>async_iterator</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/79024\">#79024</a>)</span></div></span></summary><div class=\"docblock\"><p>Converts <code>self</code> into an async iterator</p>\n</div></details></div><h2 id=\"implementors\" class=\"section-header\">Implementors<a href=\"#implementors\" class=\"anchor\">Â§</a></h2><div id=\"implementors-list\"><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-IntoAsyncIterator-for-I\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/async_iter/async_iter.rs.html#156\">source</a><a href=\"#impl-IntoAsyncIterator-for-I\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"trait.IntoAsyncIterator.html\" title=\"trait std::async_iter::IntoAsyncIterator\">IntoAsyncIterator</a> for I<div class=\"where\">where\n    I: <a class=\"trait\" href=\"trait.AsyncIterator.html\" title=\"trait std::async_iter::AsyncIterator\">AsyncIterator</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Item-1\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item-1\" class=\"anchor\">Â§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Item\" class=\"associatedtype\">Item</a> = &lt;I as <a class=\"trait\" href=\"trait.AsyncIterator.html\" title=\"trait std::async_iter::AsyncIterator\">AsyncIterator</a>&gt;::<a class=\"associatedtype\" href=\"trait.AsyncIterator.html#associatedtype.Item\" title=\"type std::async_iter::AsyncIterator::Item\">Item</a></h4></section><section id=\"associatedtype.IntoAsyncIter-1\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoAsyncIter-1\" class=\"anchor\">Â§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.IntoAsyncIter\" class=\"associatedtype\">IntoAsyncIter</a> = I</h4></section></div></details></div><script src=\"../../trait.impl/core/async_iter/async_iter/trait.IntoAsyncIterator.js\" async=\"\"></script></section></div></main></body></html>",
	"crawlDate": "2024-07-28T05:22:48.734Z"
}