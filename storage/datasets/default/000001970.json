{
	"title": "TrustedLen in std::iter - Rust",
	"url": "https://doc.rust-lang.org/stable/std/iter/trait.TrustedLen.html",
	"markdown": "# TrustedLen in std::iter - Rust\n\n```\npub unsafe trait TrustedLen: Iterator { }\n```\n\nðŸ”¬This is a nightly-only experimental API. (`trusted_len`Â [#37572](https://github.com/rust-lang/rust/issues/37572))\n\nExpand description\n\nAn iterator that reports an accurate length using size\\_hint.\n\nThe iterator reports a size hint where it is either exact (lower bound is equal to upper bound), or the upper bound is [`None`](about:blank/option/enum.Option.html#variant.None \"variant std::option::Option::None\"). The upper bound must only be [`None`](about:blank/option/enum.Option.html#variant.None \"variant std::option::Option::None\") if the actual iterator length is larger than [`usize::MAX`](about:blank/primitive.usize.html#associatedconstant.MAX \"associated constant usize::MAX\"). In that case, the lower bound must be [`usize::MAX`](about:blank/primitive.usize.html#associatedconstant.MAX \"associated constant usize::MAX\"), resulting in an [`Iterator::size_hint()`](about:blank/trait.Iterator.html#method.size_hint \"method std::iter::Iterator::size_hint\") of `(usize::MAX, None)`.\n\nThe iterator must produce exactly the number of elements it reported or diverge before reaching the end.\n\n## [Â§](#when-shouldnt-an-adapter-be-trustedlen)When _shouldnâ€™t_ an adapter be `TrustedLen`?\n\nIf an adapter makes an iterator _shorter_ by a given amount, then itâ€™s usually incorrect for that adapter to implement `TrustedLen`. The inner iterator might return more than `usize::MAX` items, but thereâ€™s no way to know what `k` elements less than that will be, since the `size_hint` from the inner iterator has already saturated and lost that information.\n\nThis is why [`Skip<I>`](struct.Skip.html \"struct std::iter::Skip\") isnâ€™t `TrustedLen`, even when `I` implements `TrustedLen`.\n\n## [Â§](#safety)Safety\n\nThis trait must only be implemented when the contract is upheld. Consumers of this trait must inspect [`Iterator::size_hint()`](about:blank/trait.Iterator.html#method.size_hint \"method std::iter::Iterator::size_hint\")â€™s upper bound.",
	"html": "<!DOCTYPE html><html lang=\"en\" data-theme=\"light\"><head><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><meta name=\"generator\" content=\"rustdoc\"><meta name=\"description\" content=\"An iterator that reports an accurate length using size_hint.\"><title>TrustedLen in std::iter - Rust</title><script>if(window.location.protocol!==\"file:\")document.head.insertAdjacentHTML(\"beforeend\",\"SourceSerif4-Regular-46f98efaafac5295.ttf.woff2,FiraSans-Regular-018c141bf0843ffd.woff2,FiraSans-Medium-8f9a781e4970d388.woff2,SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2,SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\".split(\",\").map(f=>`<link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin href=\"../../static.files/${f}\">`).join(\"\"))</script><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceSerif4-Regular-46f98efaafac5295.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/FiraSans-Regular-018c141bf0843ffd.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/FiraSans-Medium-8f9a781e4970d388.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\"><link rel=\"stylesheet\" href=\"../../static.files/normalize-76eba96aa4d2e634.css\"><link rel=\"stylesheet\" href=\"../../static.files/rustdoc-dd39b87e5fcfba68.css\"><meta name=\"rustdoc-vars\" data-root-path=\"../../\" data-static-root-path=\"../../static.files/\" data-current-crate=\"std\" data-themes=\"\" data-resource-suffix=\"1.80.0\" data-rustdoc-version=\"1.80.0 (051478957 2024-07-21)\" data-channel=\"1.80.0\" data-search-js=\"search-d52510db62a78183.js\" data-settings-js=\"settings-4313503d2e1961c2.js\"><script src=\"../../static.files/storage-118b08c4c78b968e.js\"></script><script defer=\"\" src=\"sidebar-items1.80.0.js\"></script><script defer=\"\" src=\"../../static.files/main-20a3ad099b048cf2.js\"></script><noscript><link rel=\"stylesheet\" href=\"../../static.files/noscript-df360f571f6edeae.css\"></noscript><link rel=\"alternate icon\" type=\"image/png\" href=\"../../static.files/favicon-32x32-422f7d1d52889060.png\"><link rel=\"icon\" type=\"image/svg+xml\" href=\"../../static.files/favicon-2c020d218678b618.svg\"></head><body class=\"rustdoc trait\"><!--[if lte IE 11]><div class=\"warning\">This old browser is unsupported and will most likely display funky things.</div><![endif]--><nav class=\"mobile-topbar\"><button class=\"sidebar-menu-toggle\" title=\"show sidebar\"></button><a class=\"logo-container\" href=\"../../std/index.html\"><img class=\"rust-logo\" src=\"../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"\"></a><h2 class=\"location\"><a href=\"#\">TrustedLen</a></h2></nav><nav class=\"sidebar\"><div class=\"sidebar-crate\"><a class=\"logo-container\" href=\"../../std/index.html\"><img class=\"rust-logo\" src=\"../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"logo\"></a><h2><a href=\"../../std/index.html\">std</a><span class=\"version\">1.80.0</span></h2></div><div class=\"version\">(051478957\t2024-07-21)</div><h2 class=\"location\"><a href=\"#\">TrustedLen</a></h2><div class=\"sidebar-elems\"><section><h3><a href=\"#implementors\">Implementors</a></h3></section><h2><a href=\"index.html\">In std::iter</a></h2><h3><a href=\"index.html#structs\">Structs</a></h3><ul class=\"block struct\"><li><a href=\"struct.ArrayChunks.html\">ArrayChunks</a></li><li><a href=\"struct.ByRefSized.html\">ByRefSized</a></li><li><a href=\"struct.Chain.html\">Chain</a></li><li><a href=\"struct.Cloned.html\">Cloned</a></li><li><a href=\"struct.Copied.html\">Copied</a></li><li><a href=\"struct.Cycle.html\">Cycle</a></li><li><a href=\"struct.Empty.html\">Empty</a></li><li><a href=\"struct.Enumerate.html\">Enumerate</a></li><li><a href=\"struct.Filter.html\">Filter</a></li><li><a href=\"struct.FilterMap.html\">FilterMap</a></li><li><a href=\"struct.FlatMap.html\">FlatMap</a></li><li><a href=\"struct.Flatten.html\">Flatten</a></li><li><a href=\"struct.FromFn.html\">FromFn</a></li><li><a href=\"struct.Fuse.html\">Fuse</a></li><li><a href=\"struct.Inspect.html\">Inspect</a></li><li><a href=\"struct.Intersperse.html\">Intersperse</a></li><li><a href=\"struct.IntersperseWith.html\">IntersperseWith</a></li><li><a href=\"struct.Map.html\">Map</a></li><li><a href=\"struct.MapWhile.html\">MapWhile</a></li><li><a href=\"struct.MapWindows.html\">MapWindows</a></li><li><a href=\"struct.Once.html\">Once</a></li><li><a href=\"struct.OnceWith.html\">OnceWith</a></li><li><a href=\"struct.Peekable.html\">Peekable</a></li><li><a href=\"struct.Repeat.html\">Repeat</a></li><li><a href=\"struct.RepeatN.html\">RepeatN</a></li><li><a href=\"struct.RepeatWith.html\">RepeatWith</a></li><li><a href=\"struct.Rev.html\">Rev</a></li><li><a href=\"struct.Scan.html\">Scan</a></li><li><a href=\"struct.Skip.html\">Skip</a></li><li><a href=\"struct.SkipWhile.html\">SkipWhile</a></li><li><a href=\"struct.StepBy.html\">StepBy</a></li><li><a href=\"struct.Successors.html\">Successors</a></li><li><a href=\"struct.Take.html\">Take</a></li><li><a href=\"struct.TakeWhile.html\">TakeWhile</a></li><li><a href=\"struct.Zip.html\">Zip</a></li></ul><h3><a href=\"index.html#traits\">Traits</a></h3><ul class=\"block trait\"><li><a href=\"trait.DoubleEndedIterator.html\">DoubleEndedIterator</a></li><li><a href=\"trait.ExactSizeIterator.html\">ExactSizeIterator</a></li><li><a href=\"trait.Extend.html\">Extend</a></li><li><a href=\"trait.FromIterator.html\">FromIterator</a></li><li><a href=\"trait.FusedIterator.html\">FusedIterator</a></li><li><a href=\"trait.IntoIterator.html\">IntoIterator</a></li><li><a href=\"trait.Iterator.html\">Iterator</a></li><li><a href=\"trait.Product.html\">Product</a></li><li><a href=\"trait.Step.html\">Step</a></li><li><a href=\"trait.Sum.html\">Sum</a></li><li><a href=\"trait.TrustedLen.html\">TrustedLen</a></li><li><a href=\"trait.TrustedStep.html\">TrustedStep</a></li></ul><h3><a href=\"index.html#functions\">Functions</a></h3><ul class=\"block fn\"><li><a href=\"fn.chain.html\">chain</a></li><li><a href=\"fn.empty.html\">empty</a></li><li><a href=\"fn.from_coroutine.html\">from_coroutine</a></li><li><a href=\"fn.from_fn.html\">from_fn</a></li><li><a href=\"fn.once.html\">once</a></li><li><a href=\"fn.once_with.html\">once_with</a></li><li><a href=\"fn.repeat.html\">repeat</a></li><li><a href=\"fn.repeat_n.html\">repeat_n</a></li><li><a href=\"fn.repeat_with.html\">repeat_with</a></li><li><a href=\"fn.successors.html\">successors</a></li><li><a href=\"fn.zip.html\">zip</a></li></ul></div></nav><div class=\"sidebar-resizer\"></div><main><div class=\"width-limiter\"><rustdoc-search><nav class=\"sub\">\n            <form class=\"search-form\">\n                <span></span> <!-- This empty span is a hacky fix for Safari - See #93184 -->\n                <div id=\"sidebar-button\" tabindex=\"-1\">\n                    <a href=\"../../std/all.html\" title=\"show sidebar\"></a>\n                </div>\n                <input class=\"search-input\" name=\"search\" aria-label=\"Run search in the documentation\" autocomplete=\"off\" spellcheck=\"false\" placeholder=\"Type â€˜Sâ€™ or â€˜/â€™ to search, â€˜?â€™ for more optionsâ€¦\" type=\"search\">\n                <div id=\"help-button\" tabindex=\"-1\">\n                    <a href=\"../../help.html\" title=\"help\">?</a>\n                </div>\n                <div id=\"settings-menu\" tabindex=\"-1\">\n                    <a href=\"../../settings.html\" title=\"settings\">\n                        Settings\n                    </a>\n                </div>\n            </form>\n        </nav></rustdoc-search><section id=\"main-content\" class=\"content\"><div class=\"main-heading\"><h1>Trait <a href=\"../index.html\">std</a>::<wbr><a href=\"index.html\">iter</a>::<wbr><a class=\"trait\" href=\"#\">TrustedLen</a><button id=\"copy-path\" title=\"Copy item path to clipboard\">Copy item path</button></h1><span class=\"out-of-band\"><a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/marker.rs.html#66\">source</a> Â· <button id=\"toggle-all-docs\" title=\"collapse all docs\">[<span>âˆ’</span>]</button></span></div><pre class=\"rust item-decl\"><code>pub unsafe trait TrustedLen: <a class=\"trait\" href=\"trait.Iterator.html\" title=\"trait std::iter::Iterator\">Iterator</a> { }</code></pre><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>trusted_len</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/37572\">#37572</a>)</span></div></span><details class=\"toggle top-doc\" open=\"\"><summary class=\"hideme\"><span>Expand description</span></summary><div class=\"docblock\"><p>An iterator that reports an accurate length using size_hint.</p>\n<p>The iterator reports a size hint where it is either exact\n(lower bound is equal to upper bound), or the upper bound is <a href=\"../option/enum.Option.html#variant.None\" title=\"variant std::option::Option::None\"><code>None</code></a>.\nThe upper bound must only be <a href=\"../option/enum.Option.html#variant.None\" title=\"variant std::option::Option::None\"><code>None</code></a> if the actual iterator length is\nlarger than <a href=\"../primitive.usize.html#associatedconstant.MAX\" title=\"associated constant usize::MAX\"><code>usize::MAX</code></a>. In that case, the lower bound must be\n<a href=\"../primitive.usize.html#associatedconstant.MAX\" title=\"associated constant usize::MAX\"><code>usize::MAX</code></a>, resulting in an <a href=\"trait.Iterator.html#method.size_hint\" title=\"method std::iter::Iterator::size_hint\"><code>Iterator::size_hint()</code></a> of\n<code>(usize::MAX, None)</code>.</p>\n<p>The iterator must produce exactly the number of elements it reported\nor diverge before reaching the end.</p>\n<h2 id=\"when-shouldnt-an-adapter-be-trustedlen\"><a class=\"doc-anchor\" href=\"#when-shouldnt-an-adapter-be-trustedlen\">Â§</a>When <em>shouldnâ€™t</em> an adapter be <code>TrustedLen</code>?</h2>\n<p>If an adapter makes an iterator <em>shorter</em> by a given amount, then itâ€™s\nusually incorrect for that adapter to implement <code>TrustedLen</code>.  The inner\niterator might return more than <code>usize::MAX</code> items, but thereâ€™s no way to\nknow what <code>k</code> elements less than that will be, since the <code>size_hint</code> from\nthe inner iterator has already saturated and lost that information.</p>\n<p>This is why <a href=\"struct.Skip.html\" title=\"struct std::iter::Skip\"><code>Skip&lt;I&gt;</code></a> isnâ€™t <code>TrustedLen</code>, even when\n<code>I</code> implements <code>TrustedLen</code>.</p>\n<h2 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">Â§</a>Safety</h2>\n<p>This trait must only be implemented when the contract is upheld. Consumers\nof this trait must inspect <a href=\"trait.Iterator.html#method.size_hint\" title=\"method std::iter::Iterator::size_hint\"><code>Iterator::size_hint()</code></a>â€™s upper bound.</p>\n</div></details><h2 id=\"implementors\" class=\"section-header\">Implementors<a href=\"#implementors\" class=\"anchor\">Â§</a></h2><div id=\"implementors-list\"><section id=\"impl-TrustedLen-for-ToLowercase\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/char/mod.rs.html#478-486\">source</a><a href=\"#impl-TrustedLen-for-ToLowercase\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a> for <a class=\"struct\" href=\"../char/struct.ToLowercase.html\" title=\"struct std::char::ToLowercase\">ToLowercase</a></h3></section><section id=\"impl-TrustedLen-for-ToUppercase\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/char/mod.rs.html#488-496\">source</a><a href=\"#impl-TrustedLen-for-ToUppercase\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a> for <a class=\"struct\" href=\"../char/struct.ToUppercase.html\" title=\"struct std::char::ToUppercase\">ToUppercase</a></h3></section><section id=\"impl-TrustedLen-for-Bytes%3C'_%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/str/iter.rs.html#396\">source</a><a href=\"#impl-TrustedLen-for-Bytes%3C'_%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a> for <a class=\"struct\" href=\"../str/struct.Bytes.html\" title=\"struct std::str::Bytes\">Bytes</a>&lt;'_&gt;</h3></section><section id=\"impl-TrustedLen-for-Cloned%3CI%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/adapters/cloned.rs.html#138-141\">source</a><a href=\"#impl-TrustedLen-for-Cloned%3CI%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;'a, I, T&gt; <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a> for <a class=\"struct\" href=\"struct.Cloned.html\" title=\"struct std::iter::Cloned\">Cloned</a>&lt;I&gt;<div class=\"where\">where\n    T: 'a + <a class=\"trait\" href=\"../clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a>,\n    I: <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a>&lt;Item = <a class=\"primitive\" href=\"../primitive.reference.html\">&amp;'a T</a>&gt;,</div></h3></section><section id=\"impl-TrustedLen-for-Copied%3CI%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.36.0\">1.36.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/adapters/copied.rs.html#176-179\">source</a></span><a href=\"#impl-TrustedLen-for-Copied%3CI%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;'a, I, T&gt; <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a> for <a class=\"struct\" href=\"struct.Copied.html\" title=\"struct std::iter::Copied\">Copied</a>&lt;I&gt;<div class=\"where\">where\n    T: 'a + <a class=\"trait\" href=\"../marker/trait.Copy.html\" title=\"trait std::marker::Copy\">Copy</a>,\n    I: <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a>&lt;Item = <a class=\"primitive\" href=\"../primitive.reference.html\">&amp;'a T</a>&gt;,</div></h3></section><section id=\"impl-TrustedLen-for-Range%3CA%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/range.rs.html#1001\">source</a><a href=\"#impl-TrustedLen-for-Range%3CA%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;A&gt; <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a> for <a class=\"struct\" href=\"../ops/struct.Range.html\" title=\"struct std::ops::Range\">Range</a>&lt;A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"trait.TrustedStep.html\" title=\"trait std::iter::TrustedStep\">TrustedStep</a>,</div></h3></section><section id=\"impl-TrustedLen-for-RangeFrom%3CA%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/range.rs.html#1031\">source</a><a href=\"#impl-TrustedLen-for-RangeFrom%3CA%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;A&gt; <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a> for <a class=\"struct\" href=\"../ops/struct.RangeFrom.html\" title=\"struct std::ops::RangeFrom\">RangeFrom</a>&lt;A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"trait.TrustedStep.html\" title=\"trait std::iter::TrustedStep\">TrustedStep</a>,</div></h3></section><section id=\"impl-TrustedLen-for-RangeInclusive%3CA%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/range.rs.html#1391\">source</a><a href=\"#impl-TrustedLen-for-RangeInclusive%3CA%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;A&gt; <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a> for <a class=\"struct\" href=\"../ops/struct.RangeInclusive.html\" title=\"struct std::ops::RangeInclusive\">RangeInclusive</a>&lt;A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"trait.TrustedStep.html\" title=\"trait std::iter::TrustedStep\">TrustedStep</a>,</div></h3></section><section id=\"impl-TrustedLen-for-IntoIter%3CA%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/option.rs.html#2366\">source</a><a href=\"#impl-TrustedLen-for-IntoIter%3CA%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;A&gt; <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a> for std::option::<a class=\"struct\" href=\"../option/struct.IntoIter.html\" title=\"struct std::option::IntoIter\">IntoIter</a>&lt;A&gt;</h3></section><section id=\"impl-TrustedLen-for-Iter%3C'_,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/option.rs.html#2275\">source</a><a href=\"#impl-TrustedLen-for-Iter%3C'_,+A%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;A&gt; <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a> for std::option::<a class=\"struct\" href=\"../option/struct.Iter.html\" title=\"struct std::option::Iter\">Iter</a>&lt;'_, A&gt;</h3></section><section id=\"impl-TrustedLen-for-IterMut%3C'_,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/option.rs.html#2324\">source</a><a href=\"#impl-TrustedLen-for-IterMut%3C'_,+A%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;A&gt; <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a> for std::option::<a class=\"struct\" href=\"../option/struct.IterMut.html\" title=\"struct std::option::IterMut\">IterMut</a>&lt;'_, A&gt;</h3></section><section id=\"impl-TrustedLen-for-IntoIter%3CA%3E-1\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/result.rs.html#1908\">source</a><a href=\"#impl-TrustedLen-for-IntoIter%3CA%3E-1\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;A&gt; <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a> for std::result::<a class=\"struct\" href=\"../result/struct.IntoIter.html\" title=\"struct std::result::IntoIter\">IntoIter</a>&lt;A&gt;</h3></section><section id=\"impl-TrustedLen-for-Iter%3C'_,+A%3E-1\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/result.rs.html#1813\">source</a><a href=\"#impl-TrustedLen-for-Iter%3C'_,+A%3E-1\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;A&gt; <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a> for std::result::<a class=\"struct\" href=\"../result/struct.Iter.html\" title=\"struct std::result::Iter\">Iter</a>&lt;'_, A&gt;</h3></section><section id=\"impl-TrustedLen-for-IterMut%3C'_,+A%3E-1\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/result.rs.html#1862\">source</a><a href=\"#impl-TrustedLen-for-IterMut%3C'_,+A%3E-1\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;A&gt; <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a> for std::result::<a class=\"struct\" href=\"../result/struct.IterMut.html\" title=\"struct std::result::IterMut\">IterMut</a>&lt;'_, A&gt;</h3></section><section id=\"impl-TrustedLen-for-Repeat%3CA%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/sources/repeat.rs.html#130\">source</a><a href=\"#impl-TrustedLen-for-Repeat%3CA%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;A&gt; <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a> for <a class=\"struct\" href=\"struct.Repeat.html\" title=\"struct std::iter::Repeat\">Repeat</a>&lt;A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"../clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a>,</div></h3></section><section id=\"impl-TrustedLen-for-RepeatN%3CA%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/sources/repeat_n.rs.html#195\">source</a><a href=\"#impl-TrustedLen-for-RepeatN%3CA%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;A&gt; <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a> for <a class=\"struct\" href=\"struct.RepeatN.html\" title=\"struct std::iter::RepeatN\">RepeatN</a>&lt;A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"../clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a>,</div></h3></section><section id=\"impl-TrustedLen-for-Chain%3CA,+B%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/adapters/chain.rs.html#302-305\">source</a><a href=\"#impl-TrustedLen-for-Chain%3CA,+B%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;A, B&gt; <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a> for <a class=\"struct\" href=\"struct.Chain.html\" title=\"struct std::iter::Chain\">Chain</a>&lt;A, B&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a>,\n    B: <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a>&lt;Item = &lt;A as <a class=\"trait\" href=\"trait.Iterator.html\" title=\"trait std::iter::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>&gt;,</div></h3></section><section id=\"impl-TrustedLen-for-Zip%3CA,+B%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/adapters/zip.rs.html#459-462\">source</a><a href=\"#impl-TrustedLen-for-Zip%3CA,+B%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;A, B&gt; <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a> for <a class=\"struct\" href=\"struct.Zip.html\" title=\"struct std::iter::Zip\">Zip</a>&lt;A, B&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a>,\n    B: <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a>,</div></h3></section><section id=\"impl-TrustedLen-for-OnceWith%3CF%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.43.0\">1.43.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/sources/once_with.rs.html#121\">source</a></span><a href=\"#impl-TrustedLen-for-OnceWith%3CF%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;A, F&gt; <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a> for <a class=\"struct\" href=\"struct.OnceWith.html\" title=\"struct std::iter::OnceWith\">OnceWith</a>&lt;F&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"../ops/trait.FnOnce.html\" title=\"trait std::ops::FnOnce\">FnOnce</a>() -&gt; A,</div></h3></section><section id=\"impl-TrustedLen-for-RepeatWith%3CF%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/sources/repeat_with.rs.html#122\">source</a><a href=\"#impl-TrustedLen-for-RepeatWith%3CF%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;A, F&gt; <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a> for <a class=\"struct\" href=\"struct.RepeatWith.html\" title=\"struct std::iter::RepeatWith\">RepeatWith</a>&lt;F&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"../ops/trait.FnMut.html\" title=\"trait std::ops::FnMut\">FnMut</a>() -&gt; A,</div></h3></section><section id=\"impl-TrustedLen-for-Map%3CI,+F%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/adapters/map.rs.html#191-194\">source</a><a href=\"#impl-TrustedLen-for-Map%3CI,+F%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;B, I, F&gt; <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a> for <a class=\"struct\" href=\"struct.Map.html\" title=\"struct std::iter::Map\">Map</a>&lt;I, F&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a>,\n    F: <a class=\"trait\" href=\"../ops/trait.FnMut.html\" title=\"trait std::ops::FnMut\">FnMut</a>(&lt;I as <a class=\"trait\" href=\"trait.Iterator.html\" title=\"trait std::iter::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>) -&gt; B,</div></h3></section><section id=\"impl-TrustedLen-for-%26mut+I\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/marker.rs.html#69\">source</a><a href=\"#impl-TrustedLen-for-%26mut+I\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a> for <a class=\"primitive\" href=\"../primitive.reference.html\">&amp;mut I</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a> + ?<a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,</div></h3></section><section id=\"impl-TrustedLen-for-Enumerate%3CI%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/adapters/enumerate.rs.html#251\">source</a><a href=\"#impl-TrustedLen-for-Enumerate%3CI%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a> for <a class=\"struct\" href=\"struct.Enumerate.html\" title=\"struct std::iter::Enumerate\">Enumerate</a>&lt;I&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a>,</div></h3></section><section id=\"impl-TrustedLen-for-Flatten%3CI%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/adapters/flatten.rs.html#384-387\">source</a><a href=\"#impl-TrustedLen-for-Flatten%3CI%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a> for <a class=\"struct\" href=\"struct.Flatten.html\" title=\"struct std::iter::Flatten\">Flatten</a>&lt;I&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"trait.Iterator.html\" title=\"trait std::iter::Iterator\">Iterator</a>,\n    &lt;I as <a class=\"trait\" href=\"trait.Iterator.html\" title=\"trait std::iter::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a>,\n    FlattenCompat&lt;I, &lt;&lt;I as <a class=\"trait\" href=\"trait.Iterator.html\" title=\"trait std::iter::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a> as <a class=\"trait\" href=\"trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type std::iter::IntoIterator::IntoIter\">IntoIter</a>&gt;: <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a>,</div></h3></section><section id=\"impl-TrustedLen-for-Fuse%3CI%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/adapters/fuse.rs.html#210\">source</a><a href=\"#impl-TrustedLen-for-Fuse%3CI%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a> for <a class=\"struct\" href=\"struct.Fuse.html\" title=\"struct std::iter::Fuse\">Fuse</a>&lt;I&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a>,</div></h3></section><section id=\"impl-TrustedLen-for-Peekable%3CI%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/adapters/peekable.rs.html#322\">source</a><a href=\"#impl-TrustedLen-for-Peekable%3CI%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a> for <a class=\"struct\" href=\"struct.Peekable.html\" title=\"struct std::iter::Peekable\">Peekable</a>&lt;I&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a>,</div></h3></section><section id=\"impl-TrustedLen-for-Rev%3CI%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/adapters/rev.rs.html#138\">source</a><a href=\"#impl-TrustedLen-for-Rev%3CI%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a> for <a class=\"struct\" href=\"struct.Rev.html\" title=\"struct std::iter::Rev\">Rev</a>&lt;I&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a> + <a class=\"trait\" href=\"trait.DoubleEndedIterator.html\" title=\"trait std::iter::DoubleEndedIterator\">DoubleEndedIterator</a>,</div></h3></section><section id=\"impl-TrustedLen-for-Skip%3CI%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/adapters/skip.rs.html#289\">source</a><a href=\"#impl-TrustedLen-for-Skip%3CI%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a> for <a class=\"struct\" href=\"struct.Skip.html\" title=\"struct std::iter::Skip\">Skip</a>&lt;I&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"trait.Iterator.html\" title=\"trait std::iter::Iterator\">Iterator</a> + TrustedRandomAccess,</div></h3></section><section id=\"impl-TrustedLen-for-StepBy%3CI%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/adapters/step_by.rs.html#146\">source</a><a href=\"#impl-TrustedLen-for-StepBy%3CI%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a> for <a class=\"struct\" href=\"struct.StepBy.html\" title=\"struct std::iter::StepBy\">StepBy</a>&lt;I&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"trait.Iterator.html\" title=\"trait std::iter::Iterator\">Iterator</a> + TrustedRandomAccess,</div></h3></section><section id=\"impl-TrustedLen-for-Take%3CI%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/adapters/take.rs.html#252\">source</a><a href=\"#impl-TrustedLen-for-Take%3CI%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a> for <a class=\"struct\" href=\"struct.Take.html\" title=\"struct std::iter::Take\">Take</a>&lt;I&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a>,</div></h3></section><section id=\"impl-TrustedLen-for-FlatMap%3CI,+U,+F%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/adapters/flatten.rs.html#153-158\">source</a><a href=\"#impl-TrustedLen-for-FlatMap%3CI,+U,+F%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;I, U, F&gt; <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a> for <a class=\"struct\" href=\"struct.FlatMap.html\" title=\"struct std::iter::FlatMap\">FlatMap</a>&lt;I, U, F&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"trait.Iterator.html\" title=\"trait std::iter::Iterator\">Iterator</a>,\n    U: <a class=\"trait\" href=\"trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a>,\n    F: <a class=\"trait\" href=\"../ops/trait.FnMut.html\" title=\"trait std::ops::FnMut\">FnMut</a>(&lt;I as <a class=\"trait\" href=\"trait.Iterator.html\" title=\"trait std::iter::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>) -&gt; U,\n    FlattenCompat&lt;<a class=\"struct\" href=\"struct.Map.html\" title=\"struct std::iter::Map\">Map</a>&lt;I, F&gt;, &lt;U as <a class=\"trait\" href=\"trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type std::iter::IntoIterator::IntoIter\">IntoIter</a>&gt;: <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a>,</div></h3></section><section id=\"impl-TrustedLen-for-Iter%3C'_,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/alloc/collections/vec_deque/iter.rs.html#174\">source</a><a href=\"#impl-TrustedLen-for-Iter%3C'_,+T%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a> for std::collections::vec_deque::<a class=\"struct\" href=\"../collections/vec_deque/struct.Iter.html\" title=\"struct std::collections::vec_deque::Iter\">Iter</a>&lt;'_, T&gt;</h3></section><section id=\"impl-TrustedLen-for-IterMut%3C'_,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/alloc/collections/vec_deque/iter_mut.rs.html#165\">source</a><a href=\"#impl-TrustedLen-for-IterMut%3C'_,+T%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a> for std::collections::vec_deque::<a class=\"struct\" href=\"../collections/vec_deque/struct.IterMut.html\" title=\"struct std::collections::vec_deque::IterMut\">IterMut</a>&lt;'_, T&gt;</h3></section><section id=\"impl-TrustedLen-for-Chunks%3C'_,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/slice/iter.rs.html#1607\">source</a><a href=\"#impl-TrustedLen-for-Chunks%3C'_,+T%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a> for <a class=\"struct\" href=\"../slice/struct.Chunks.html\" title=\"struct std::slice::Chunks\">Chunks</a>&lt;'_, T&gt;</h3></section><section id=\"impl-TrustedLen-for-ChunksExact%3C'_,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/slice/iter.rs.html#1967\">source</a><a href=\"#impl-TrustedLen-for-ChunksExact%3C'_,+T%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a> for <a class=\"struct\" href=\"../slice/struct.ChunksExact.html\" title=\"struct std::slice::ChunksExact\">ChunksExact</a>&lt;'_, T&gt;</h3></section><section id=\"impl-TrustedLen-for-ChunksExactMut%3C'_,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/slice/iter.rs.html#2134\">source</a><a href=\"#impl-TrustedLen-for-ChunksExactMut%3C'_,+T%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a> for <a class=\"struct\" href=\"../slice/struct.ChunksExactMut.html\" title=\"struct std::slice::ChunksExactMut\">ChunksExactMut</a>&lt;'_, T&gt;</h3></section><section id=\"impl-TrustedLen-for-ChunksMut%3C'_,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/slice/iter.rs.html#1788\">source</a><a href=\"#impl-TrustedLen-for-ChunksMut%3C'_,+T%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a> for <a class=\"struct\" href=\"../slice/struct.ChunksMut.html\" title=\"struct std::slice::ChunksMut\">ChunksMut</a>&lt;'_, T&gt;</h3></section><section id=\"impl-TrustedLen-for-Iter%3C'_,+T%3E-1\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/slice/iter.rs.html#136-144\">source</a><a href=\"#impl-TrustedLen-for-Iter%3C'_,+T%3E-1\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a> for std::slice::<a class=\"struct\" href=\"../slice/struct.Iter.html\" title=\"struct std::slice::Iter\">Iter</a>&lt;'_, T&gt;</h3></section><section id=\"impl-TrustedLen-for-IterMut%3C'_,+T%3E-1\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/slice/iter.rs.html#370\">source</a><a href=\"#impl-TrustedLen-for-IterMut%3C'_,+T%3E-1\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a> for std::slice::<a class=\"struct\" href=\"../slice/struct.IterMut.html\" title=\"struct std::slice::IterMut\">IterMut</a>&lt;'_, T&gt;</h3></section><section id=\"impl-TrustedLen-for-RChunks%3C'_,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/slice/iter.rs.html#2675\">source</a><a href=\"#impl-TrustedLen-for-RChunks%3C'_,+T%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a> for <a class=\"struct\" href=\"../slice/struct.RChunks.html\" title=\"struct std::slice::RChunks\">RChunks</a>&lt;'_, T&gt;</h3></section><section id=\"impl-TrustedLen-for-RChunksExact%3C'_,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/slice/iter.rs.html#3043\">source</a><a href=\"#impl-TrustedLen-for-RChunksExact%3C'_,+T%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a> for <a class=\"struct\" href=\"../slice/struct.RChunksExact.html\" title=\"struct std::slice::RChunksExact\">RChunksExact</a>&lt;'_, T&gt;</h3></section><section id=\"impl-TrustedLen-for-RChunksExactMut%3C'_,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/slice/iter.rs.html#3214\">source</a><a href=\"#impl-TrustedLen-for-RChunksExactMut%3C'_,+T%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a> for <a class=\"struct\" href=\"../slice/struct.RChunksExactMut.html\" title=\"struct std::slice::RChunksExactMut\">RChunksExactMut</a>&lt;'_, T&gt;</h3></section><section id=\"impl-TrustedLen-for-RChunksMut%3C'_,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/slice/iter.rs.html#2861\">source</a><a href=\"#impl-TrustedLen-for-RChunksMut%3C'_,+T%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a> for <a class=\"struct\" href=\"../slice/struct.RChunksMut.html\" title=\"struct std::slice::RChunksMut\">RChunksMut</a>&lt;'_, T&gt;</h3></section><section id=\"impl-TrustedLen-for-Windows%3C'_,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/slice/iter.rs.html#1424\">source</a><a href=\"#impl-TrustedLen-for-Windows%3C'_,+T%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a> for <a class=\"struct\" href=\"../slice/struct.Windows.html\" title=\"struct std::slice::Windows\">Windows</a>&lt;'_, T&gt;</h3></section><section id=\"impl-TrustedLen-for-Empty%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/sources/empty.rs.html#68\">source</a><a href=\"#impl-TrustedLen-for-Empty%3CT%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a> for <a class=\"struct\" href=\"struct.Empty.html\" title=\"struct std::iter::Empty\">Empty</a>&lt;T&gt;</h3></section><section id=\"impl-TrustedLen-for-Once%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/sources/once.rs.html#97\">source</a><a href=\"#impl-TrustedLen-for-Once%3CT%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a> for <a class=\"struct\" href=\"struct.Once.html\" title=\"struct std::iter::Once\">Once</a>&lt;T&gt;</h3></section><section id=\"impl-TrustedLen-for-DrainSorted%3C'_,+T,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/alloc/collections/binary_heap/mod.rs.html#1765\">source</a><a href=\"#impl-TrustedLen-for-DrainSorted%3C'_,+T,+A%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a> for <a class=\"struct\" href=\"../collections/binary_heap/struct.DrainSorted.html\" title=\"struct std::collections::binary_heap::DrainSorted\">DrainSorted</a>&lt;'_, T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"../cmp/trait.Ord.html\" title=\"trait std::cmp::Ord\">Ord</a>,\n    A: <a class=\"trait\" href=\"../alloc/trait.Allocator.html\" title=\"trait std::alloc::Allocator\">Allocator</a>,</div></h3></section><section id=\"impl-TrustedLen-for-IntoIterSorted%3CT,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/alloc/collections/binary_heap/mod.rs.html#1639\">source</a><a href=\"#impl-TrustedLen-for-IntoIterSorted%3CT,+A%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a> for <a class=\"struct\" href=\"../collections/binary_heap/struct.IntoIterSorted.html\" title=\"struct std::collections::binary_heap::IntoIterSorted\">IntoIterSorted</a>&lt;T, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"../cmp/trait.Ord.html\" title=\"trait std::cmp::Ord\">Ord</a>,\n    A: <a class=\"trait\" href=\"../alloc/trait.Allocator.html\" title=\"trait std::alloc::Allocator\">Allocator</a>,</div></h3></section><section id=\"impl-TrustedLen-for-IntoIter%3CT,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/alloc/collections/vec_deque/into_iter.rs.html#261\">source</a><a href=\"#impl-TrustedLen-for-IntoIter%3CT,+A%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a> for std::collections::vec_deque::<a class=\"struct\" href=\"../collections/vec_deque/struct.IntoIter.html\" title=\"struct std::collections::vec_deque::IntoIter\">IntoIter</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"../alloc/trait.Allocator.html\" title=\"trait std::alloc::Allocator\">Allocator</a>,</div></h3></section><section id=\"impl-TrustedLen-for-Drain%3C'_,+T,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/alloc/vec/drain.rs.html#250\">source</a><a href=\"#impl-TrustedLen-for-Drain%3C'_,+T,+A%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a> for <a class=\"struct\" href=\"../vec/struct.Drain.html\" title=\"struct std::vec::Drain\">Drain</a>&lt;'_, T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"../alloc/trait.Allocator.html\" title=\"trait std::alloc::Allocator\">Allocator</a>,</div></h3></section><section id=\"impl-TrustedLen-for-IntoIter%3CT,+A%3E-1\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/alloc/vec/into_iter.rs.html#425\">source</a><a href=\"#impl-TrustedLen-for-IntoIter%3CT,+A%3E-1\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a> for std::vec::<a class=\"struct\" href=\"../vec/struct.IntoIter.html\" title=\"struct std::vec::IntoIter\">IntoIter</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"../alloc/trait.Allocator.html\" title=\"trait std::alloc::Allocator\">Allocator</a>,</div></h3></section><section id=\"impl-TrustedLen-for-IntoIter%3CT,+N%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.40.0\">1.40.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/array/iter.rs.html#382\">source</a></span><a href=\"#impl-TrustedLen-for-IntoIter%3CT,+N%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"../primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a> for std::array::<a class=\"struct\" href=\"../array/struct.IntoIter.html\" title=\"struct std::array::IntoIter\">IntoIter</a>&lt;T, N&gt;</h3></section><section id=\"impl-TrustedLen-for-ArrayChunks%3C'_,+T,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/slice/iter.rs.html#2384\">source</a><a href=\"#impl-TrustedLen-for-ArrayChunks%3C'_,+T,+N%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"../primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a> for <a class=\"struct\" href=\"../slice/struct.ArrayChunks.html\" title=\"struct std::slice::ArrayChunks\">ArrayChunks</a>&lt;'_, T, N&gt;</h3></section><section id=\"impl-TrustedLen-for-ArrayChunksMut%3C'_,+T,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/slice/iter.rs.html#2502\">source</a><a href=\"#impl-TrustedLen-for-ArrayChunksMut%3C'_,+T,+N%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"../primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\">TrustedLen</a> for <a class=\"struct\" href=\"../slice/struct.ArrayChunksMut.html\" title=\"struct std::slice::ArrayChunksMut\">ArrayChunksMut</a>&lt;'_, T, N&gt;</h3></section></div><script src=\"../../trait.impl/core/iter/traits/marker/trait.TrustedLen.js\" data-ignore-extern-crates=\"alloc,core\" async=\"\"></script></section></div></main></body></html>",
	"crawlDate": "2024-07-28T05:21:41.090Z"
}