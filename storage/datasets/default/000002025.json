{
	"title": "core::arch::riscv64 - Rust",
	"url": "https://doc.rust-lang.org/stable/core/arch/riscv64/index.html",
	"markdown": "# core::arch::riscv64 - Rust\n\n-   Adds packed 8-bit signed numbers, discarding overflow bits\n    \n-   Adds packed 16-bit signed numbers, discarding overflow bits\n    \n-   AES final round decryption instruction for RV64.\n    \n-   AES middle round decryption instruction for RV64.\n    \n-   AES final round encryption instruction for RV64.\n    \n-   AES middle round encryption instruction for RV64.\n    \n-   [aes64im](fn.aes64im.html \"fn core::arch::riscv64::aes64im\")⚠Experimental`zkne` and `zknd`\n    \n    This instruction accelerates the inverse MixColumns step of the AES Block Cipher, and is used to aid creation of the decryption KeySchedule.\n    \n-   This instruction implements part of the KeySchedule operation for the AES Block cipher involving the SBox operation.\n    \n-   [aes64ks2](fn.aes64ks2.html \"fn core::arch::riscv64::aes64ks2\")⚠Experimental`zkne` and `zknd`\n    \n    This instruction implements part of the KeySchedule operation for the AES Block cipher.\n    \n-   [clmul](fn.clmul.html \"fn core::arch::riscv64::clmul\")⚠Experimental`zbc`\n    \n    Carry-less multiply (low-part)\n    \n-   Carry-less multiply (high-part)\n    \n-   Carry-less multiply (reversed)\n    \n-   Count the number of redundant sign bits of the packed 8-bit elements\n    \n-   Count the number of redundant sign bits of the packed 16-bit elements\n    \n-   Count the number of redundant sign bits of the packed 32-bit elements\n    \n-   Count the number of leading zero bits of the packed 8-bit elements\n    \n-   Count the number of leading zero bits of the packed 16-bit elements\n    \n-   Count the number of leading zero bits of the packed 32-bit elements\n    \n-   Compare equality for packed 8-bit elements\n    \n-   Compare equality for packed 16-bit elements\n    \n-   Cross adds and subtracts packed 16-bit signed numbers, discarding overflow bits\n    \n-   Cross subtracts and adds packed 16-bit signed numbers, discarding overflow bits\n    \n-   Generates the `FENCE.I` instruction\n    \n-   Reads the floating-point rounding mode register `frm`\n    \n-   Hypervisor memory management fence for guest physical address and virtual machine\n    \n-   Hypervisor memory management fence for all virtual machines and guest physical addresses\n    \n-   Hypervisor memory management fence for guest physical address\n    \n-   Hypervisor memory management fence for given virtual machine\n    \n-   Hypervisor memory management fence for given guest virtual address and guest address space\n    \n-   Hypervisor memory management fence for all guest address spaces and guest virtual addresses\n    \n-   Hypervisor memory management fence for given guest address space\n    \n-   Hypervisor memory management fence for given guest virtual address\n    \n-   Invalidate hypervisor translation cache for guest physical address and virtual machine\n    \n-   Invalidate hypervisor translation cache for all virtual machines and guest physical addresses\n    \n-   Invalidate hypervisor translation cache for guest physical address\n    \n-   Invalidate hypervisor translation cache for given virtual machine\n    \n-   Invalidate hypervisor translation cache for given guest virtual address and guest address space\n    \n-   Invalidate hypervisor translation cache for all guest address spaces and guest virtual addresses\n    \n-   Invalidate hypervisor translation cache for given guest address space\n    \n-   Invalidate hypervisor translation cache for given guest virtual address\n    \n-   Loads virtual machine memory by signed byte integer\n    \n-   Loads virtual machine memory by unsigned byte integer\n    \n-   Loads virtual machine memory by double integer\n    \n-   Loads virtual machine memory by signed half integer\n    \n-   Loads virtual machine memory by unsigned half integer\n    \n-   Loads virtual machine memory by signed word integer\n    \n-   Loads virtual machine memory by unsigned word integer\n    \n-   Accesses virtual machine instruction by unsigned half integer\n    \n-   Accesses virtual machine instruction by unsigned word integer\n    \n-   Stores virtual machine memory by byte integer\n    \n-   Stores virtual machine memory by double integer\n    \n-   Stores virtual machine memory by half integer\n    \n-   Stores virtual machine memory by word integer\n    \n-   Compute the absolute value of packed 8-bit signed integers\n    \n-   Compute the absolute value of packed 16-bit signed integers\n    \n-   Adds packed 8-bit signed numbers, saturating at the numeric bounds\n    \n-   Adds packed 16-bit signed numbers, saturating at the numeric bounds\n    \n-   Adds signed lower 16-bit content of two registers with Q15 saturation\n    \n-   Cross adds and subtracts packed 16-bit signed numbers, saturating at the numeric bounds\n    \n-   Cross subtracts and adds packed 16-bit signed numbers, saturating at the numeric bounds\n    \n-   Logical left shift packed 8-bit elements, saturating at the numeric bounds\n    \n-   Logical left shift packed 16-bit elements, saturating at the numeric bounds\n    \n-   Logical saturating left then arithmetic right shift packed 8-bit elements\n    \n-   Logical saturating left then arithmetic right shift packed 8-bit elements\n    \n-   Logical saturating left then arithmetic right shift packed 16-bit elements\n    \n-   Logical saturating left then arithmetic right shift packed 16-bit elements\n    \n-   Straight adds and subtracts packed 16-bit signed numbers, saturating at the numeric bounds\n    \n-   Straight subtracts and adds packed 16-bit signed numbers, saturating at the numeric bounds\n    \n-   Subtracts packed 8-bit signed numbers, saturating at the numeric bounds\n    \n-   Subtracts packed 16-bit signed numbers, saturating at the numeric bounds\n    \n-   Subtracts signed lower 16-bit content of two registers with Q15 saturation\n    \n-   [nop](fn.nop.html \"fn core::arch::riscv64::nop\")Experimental\n    \n    Generates the `NOP` instruction\n    \n-   [orc\\_b](fn.orc_b.html \"fn core::arch::riscv64::orc_b\")⚠Experimental`zbb`\n    \n    Bitwise OR-Combine, byte granule\n    \n-   Generates the `PAUSE` instruction\n    \n-   Calculate the sum of absolute difference of unsigned 8-bit data elements\n    \n-   Calculate and accumulate the sum of absolute difference of unsigned 8-bit data elements\n    \n-   Pack two 16-bit data from bottom and top half from 32-bit chunks\n    \n-   Pack two 16-bit data from top and bottom half from 32-bit chunks\n    \n-   Halves the sum of packed 8-bit signed numbers, dropping least bits\n    \n-   Halves the sum of packed 16-bit signed numbers, dropping least bits\n    \n-   Cross halves of adds and subtracts packed 16-bit signed numbers, dropping least bits\n    \n-   Cross halves of subtracts and adds packed 16-bit signed numbers, dropping least bits\n    \n-   Straight halves of adds and subtracts packed 16-bit signed numbers, dropping least bits\n    \n-   Straight halves of subtracts and adds packed 16-bit signed numbers, dropping least bits\n    \n-   Halves the subtraction result of packed 8-bit signed numbers, dropping least bits\n    \n-   Halves the subtraction result of packed 16-bit signed numbers, dropping least bits\n    \n-   Compare whether 8-bit packed signed integers are less than or equal to the others\n    \n-   Compare whether 16-bit packed signed integers are less than or equal to the others\n    \n-   Compare whether 8-bit packed signed integers are less than the others\n    \n-   Compare whether 16-bit packed signed integers are less than the others\n    \n-   Generates the `SFENCE.INVAL.IR` instruction\n    \n-   Supervisor memory management fence for given virtual address and address space\n    \n-   Supervisor memory management fence for all address spaces and virtual addresses\n    \n-   Supervisor memory management fence for given address space\n    \n-   Supervisor memory management fence for given virtual address\n    \n-   Generates the `SFENCE.W.INVAL` instruction\n    \n-   Implements the Sigma0 transformation function as used in the SHA2-256 hash function \\[49\\] (Section 4.1.2).\n    \n-   Implements the Sigma1 transformation function as used in the SHA2-256 hash function \\[49\\] (Section 4.1.2).\n    \n-   Implements the Sum0 transformation function as used in the SHA2-256 hash function \\[49\\] (Section 4.1.2).\n    \n-   Implements the Sum1 transformation function as used in the SHA2-256 hash function \\[49\\] (Section 4.1.2).\n    \n-   Implements the Sigma0 transformation function as used in the SHA2-512 hash function \\[49\\] (Section 4.1.3).\n    \n-   Implements the Sigma1 transformation function as used in the SHA2-512 hash function \\[49\\] (Section 4.1.3).\n    \n-   Implements the Sum0 transformation function as used in the SHA2-512 hash function \\[49\\] (Section 4.1.3).\n    \n-   Implements the Sum1 transformation function as used in the SHA2-512 hash function \\[49\\] (Section 4.1.3).\n    \n-   Invalidate supervisor translation cache for given virtual address and address space\n    \n-   Invalidate supervisor translation cache for all address spaces and virtual addresses\n    \n-   Invalidate supervisor translation cache for given address space\n    \n-   Invalidate supervisor translation cache for given virtual address\n    \n-   Logical left shift packed 8-bit elements, discarding overflow bits\n    \n-   Logical left shift packed 16-bit elements, discarding overflow bits\n    \n-   [sm3p0](fn.sm3p0.html \"fn core::arch::riscv64::sm3p0\")⚠Experimental`zksh`\n    \n    Implements the P0 transformation function as used in the SM3 hash function \\[4, 30\\].\n    \n-   [sm3p1](fn.sm3p1.html \"fn core::arch::riscv64::sm3p1\")⚠Experimental`zksh`\n    \n    Implements the P1 transformation function as used in the SM3 hash function \\[4, 30\\].\n    \n-   [sm4ed](fn.sm4ed.html \"fn core::arch::riscv64::sm4ed\")⚠Experimental`zksed`\n    \n    Accelerates the block encrypt/decrypt operation of the SM4 block cipher \\[5, 31\\].\n    \n-   [sm4ks](fn.sm4ks.html \"fn core::arch::riscv64::sm4ks\")⚠Experimental`zksed`\n    \n    Accelerates the Key Schedule operation of the SM4 block cipher \\[5, 31\\] with `bs=0`.\n    \n-   Multiply signed 8-bit elements and add 16-bit elements on results for packed 32-bit chunks\n    \n-   Multiply signed to unsigned 8-bit and add 16-bit elements on results for packed 32-bit chunks\n    \n-   Get maximum values from 8-bit packed signed integers\n    \n-   Get maximum values from 16-bit packed signed integers\n    \n-   Get minimum values from 8-bit packed signed integers\n    \n-   Get minimum values from 16-bit packed signed integers\n    \n-   Arithmetic right shift packed 8-bit elements without rounding up\n    \n-   Arithmetic right shift packed 8-bit elements with rounding up\n    \n-   Arithmetic right shift packed 16-bit elements without rounding up\n    \n-   Arithmetic right shift packed 16-bit elements with rounding up\n    \n-   Logical right shift packed 8-bit elements without rounding up\n    \n-   Logical right shift packed 8-bit elements with rounding up\n    \n-   Logical right shift packed 16-bit elements without rounding up\n    \n-   Logical right shift packed 16-bit elements with rounding up\n    \n-   Straight adds and subtracts packed 16-bit signed numbers, discarding overflow bits\n    \n-   Straight subtracts and adds packed 16-bit signed numbers, discarding overflow bits\n    \n-   Subtracts packed 8-bit signed numbers, discarding overflow bits\n    \n-   Subtracts packed 16-bit signed numbers, discarding overflow bits\n    \n-   Unpack first and zeroth into two 16-bit signed halfwords in each 32-bit chunk\n    \n-   Unpack second and zeroth into two 16-bit signed halfwords in each 32-bit chunk\n    \n-   Unpack third and zeroth into two 16-bit signed halfwords in each 32-bit chunk\n    \n-   Unpack third and first into two 16-bit signed halfwords in each 32-bit chunk\n    \n-   Unpack third and second into two 16-bit signed halfwords in each 32-bit chunk\n    \n-   Swap the 8-bit bytes within each 16-bit halfword of a register.\n    \n-   Swap the 16-bit halfwords within each 32-bit word of a register\n    \n-   Compare whether 8-bit packed unsigned integers are less than or equal to the others\n    \n-   Compare whether 16-bit packed unsigned integers are less than or equal to the others\n    \n-   Compare whether 8-bit packed unsigned integers are less than the others\n    \n-   Compare whether 16-bit packed unsigned integers are less than the others\n    \n-   Adds packed 8-bit unsigned numbers, saturating at the numeric bounds\n    \n-   Adds packed 16-bit unsigned numbers, saturating at the numeric bounds\n    \n-   Adds signed lower 16-bit content of two registers with U16 saturation\n    \n-   Cross adds and subtracts packed 16-bit unsigned numbers, saturating at the numeric bounds\n    \n-   Cross subtracts and adds packed 16-bit unsigned numbers, saturating at the numeric bounds\n    \n-   Straight adds and subtracts packed 16-bit unsigned numbers, saturating at the numeric bounds\n    \n-   Straight subtracts and adds packed 16-bit unsigned numbers, saturating at the numeric bounds\n    \n-   Subtracts packed 8-bit unsigned numbers, saturating at the numeric bounds\n    \n-   Subtracts packed 16-bit unsigned numbers, saturating at the numeric bounds\n    \n-   Subtracts signed lower 16-bit content of two registers with U16 saturation\n    \n-   Multiply unsigned 8-bit elements and add 16-bit elements on results for packed 32-bit chunks\n    \n-   Get maximum values from 8-bit packed unsigned integers\n    \n-   Get maximum values from 16-bit packed unsigned integers\n    \n-   Get minimum values from 8-bit packed unsigned integers\n    \n-   Get minimum values from 16-bit packed unsigned integers\n    \n-   Halves the sum of packed 8-bit unsigned numbers, dropping least bits\n    \n-   Halves the sum of packed 16-bit unsigned numbers, dropping least bits\n    \n-   Cross halves of adds and subtracts packed 16-bit unsigned numbers, dropping least bits\n    \n-   Cross halves of subtracts and adds packed 16-bit unsigned numbers, dropping least bits\n    \n-   Straight halves of adds and subtracts packed 16-bit unsigned numbers, dropping least bits\n    \n-   Straight halves of subtracts and adds packed 16-bit unsigned numbers, dropping least bits\n    \n-   Halves the subtraction result of packed 8-bit unsigned numbers, dropping least bits\n    \n-   Halves the subtraction result of packed 16-bit unsigned numbers, dropping least bits\n    \n-   [wfi](fn.wfi.html \"fn core::arch::riscv64::wfi\")⚠Experimental\n    \n    Generates the `WFI` instruction\n    \n-   Nibble-wise lookup of indicies into a vector.\n    \n-   Byte-wise lookup of indicies into a vector in registers.\n    \n-   Unpack first and zeroth into two 16-bit unsigned halfwords in each 32-bit chunk\n    \n-   Unpack second and zeroth into two 16-bit unsigned halfwords in each 32-bit chunk\n    \n-   Unpack third and zeroth into two 16-bit unsigned halfwords in each 32-bit chunk\n    \n-   Unpack third and first into two 16-bit unsigned halfwords in each 32-bit chunk\n    \n-   Unpack third and second into two 16-bit unsigned halfwords in each 32-bit chunk",
	"html": "<!DOCTYPE html><html lang=\"en\" data-theme=\"light\"><head><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><meta name=\"generator\" content=\"rustdoc\"><meta name=\"description\" content=\"Platform-specific intrinsics for the `riscv64` platform.\"><title>core::arch::riscv64 - Rust</title><script>if(window.location.protocol!==\"file:\")document.head.insertAdjacentHTML(\"beforeend\",\"SourceSerif4-Regular-46f98efaafac5295.ttf.woff2,FiraSans-Regular-018c141bf0843ffd.woff2,FiraSans-Medium-8f9a781e4970d388.woff2,SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2,SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\".split(\",\").map(f=>`<link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin href=\"../../../static.files/${f}\">`).join(\"\"))</script><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../../static.files/SourceSerif4-Regular-46f98efaafac5295.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../../static.files/FiraSans-Regular-018c141bf0843ffd.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../../static.files/FiraSans-Medium-8f9a781e4970d388.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../../static.files/SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../../static.files/SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\"><link rel=\"stylesheet\" href=\"../../../static.files/normalize-76eba96aa4d2e634.css\"><link rel=\"stylesheet\" href=\"../../../static.files/rustdoc-dd39b87e5fcfba68.css\"><meta name=\"rustdoc-vars\" data-root-path=\"../../../\" data-static-root-path=\"../../../static.files/\" data-current-crate=\"core\" data-themes=\"\" data-resource-suffix=\"1.80.0\" data-rustdoc-version=\"1.80.0 (051478957 2024-07-21)\" data-channel=\"1.80.0\" data-search-js=\"search-d52510db62a78183.js\" data-settings-js=\"settings-4313503d2e1961c2.js\"><script src=\"../../../static.files/storage-118b08c4c78b968e.js\"></script><script defer=\"\" src=\"../sidebar-items1.80.0.js\"></script><script defer=\"\" src=\"../../../static.files/main-20a3ad099b048cf2.js\"></script><noscript><link rel=\"stylesheet\" href=\"../../../static.files/noscript-df360f571f6edeae.css\"></noscript><link rel=\"alternate icon\" type=\"image/png\" href=\"../../../static.files/favicon-32x32-422f7d1d52889060.png\"><link rel=\"icon\" type=\"image/svg+xml\" href=\"../../../static.files/favicon-2c020d218678b618.svg\"></head><body class=\"rustdoc mod\"><!--[if lte IE 11]><div class=\"warning\">This old browser is unsupported and will most likely display funky things.</div><![endif]--><nav class=\"mobile-topbar\"><button class=\"sidebar-menu-toggle\" title=\"show sidebar\"></button><a class=\"logo-container\" href=\"../../../core/index.html\"><img class=\"rust-logo\" src=\"../../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"\"></a><h2 class=\"location\"><a href=\"#\">Module riscv64</a></h2></nav><nav class=\"sidebar\"><div class=\"sidebar-crate\"><a class=\"logo-container\" href=\"../../../core/index.html\"><img class=\"rust-logo\" src=\"../../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"logo\"></a><h2><a href=\"../../../core/index.html\">core</a><span class=\"version\">1.80.0</span></h2></div><div class=\"version\">(051478957\t2024-07-21)</div><h2 class=\"location\"><a href=\"#\">Module riscv64</a></h2><div class=\"sidebar-elems\"><section><ul class=\"block\"><li><a href=\"#functions\">Functions</a></li></ul></section><h2><a href=\"../index.html\">In core::arch</a></h2><h3><a href=\"../index.html#modules\">Modules</a></h3><ul class=\"block mod\"><li><a href=\"../aarch64/index.html\">aarch64</a></li><li><a href=\"../arm/index.html\">arm</a></li><li><a href=\"../loongarch64/index.html\">loongarch64</a></li><li><a href=\"../mips/index.html\">mips</a></li><li><a href=\"../mips64/index.html\">mips64</a></li><li><a href=\"../nvptx/index.html\">nvptx</a></li><li><a href=\"../powerpc/index.html\">powerpc</a></li><li><a href=\"../powerpc64/index.html\">powerpc64</a></li><li><a href=\"../riscv32/index.html\">riscv32</a></li><li><a href=\"../riscv64/index.html\">riscv64</a></li><li><a href=\"../wasm/index.html\">wasm</a></li><li><a href=\"../wasm32/index.html\">wasm32</a></li><li><a href=\"../wasm64/index.html\">wasm64</a></li><li><a href=\"../x86/index.html\">x86</a></li><li><a href=\"../x86_64/index.html\">x86_64</a></li></ul><h3><a href=\"../index.html#macros\">Macros</a></h3><ul class=\"block macro\"><li><a href=\"../macro.asm.html\">asm</a></li><li><a href=\"../macro.global_asm.html\">global_asm</a></li></ul></div></nav><div class=\"sidebar-resizer\"></div><main><div class=\"width-limiter\"><rustdoc-search><nav class=\"sub\">\n            <form class=\"search-form\">\n                <span></span> <!-- This empty span is a hacky fix for Safari - See #93184 -->\n                <div id=\"sidebar-button\" tabindex=\"-1\">\n                    <a href=\"../../../core/all.html\" title=\"show sidebar\"></a>\n                </div>\n                <input class=\"search-input\" name=\"search\" aria-label=\"Run search in the documentation\" autocomplete=\"off\" spellcheck=\"false\" placeholder=\"Type ‘S’ or ‘/’ to search, ‘?’ for more options…\" type=\"search\">\n                <div id=\"help-button\" tabindex=\"-1\">\n                    <a href=\"../../../help.html\" title=\"help\">?</a>\n                </div>\n                <div id=\"settings-menu\" tabindex=\"-1\">\n                    <a href=\"../../../settings.html\" title=\"settings\">\n                        Settings\n                    </a>\n                </div>\n            </form>\n        </nav></rustdoc-search><section id=\"main-content\" class=\"content\"><div class=\"main-heading\"><h1>Module <a href=\"../../index.html\">core</a>::<wbr><a href=\"../index.html\">arch</a>::<wbr><a class=\"mod\" href=\"#\">riscv64</a><button id=\"copy-path\" title=\"Copy item path to clipboard\">Copy item path</button></h1><span class=\"out-of-band\"><a class=\"src\" href=\"../../../src/core/stdarch/crates/core_arch/src/mod.rs.html#85\">source</a> · <button id=\"toggle-all-docs\" title=\"collapse all docs\">[<span>−</span>]</button></span></div><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>riscv_ext_intrinsics</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/114544\">#114544</a>)</span></div><div class=\"stab portability\">Available on <strong>RISC-V RV64</strong> only.</div></span><details class=\"toggle top-doc\" open=\"\"><summary class=\"hideme\"><span>Expand description</span></summary><div class=\"docblock\"><p>Platform-specific intrinsics for the <code>riscv64</code> platform.</p>\n<p>See the <a href=\"../index.html\">module documentation</a> for more details.</p>\n</div></details><h2 id=\"functions\" class=\"section-header\">Functions<a href=\"#functions\" class=\"anchor\">§</a></h2><ul class=\"item-table\"><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.add8.html\" title=\"fn core::arch::riscv64::add8\">add8</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Adds packed 8-bit signed numbers, discarding overflow bits</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.add16.html\" title=\"fn core::arch::riscv64::add16\">add16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Adds packed 16-bit signed numbers, discarding overflow bits</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.aes64ds.html\" title=\"fn core::arch::riscv64::aes64ds\">aes64ds</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span><span class=\"stab portability\" title=\"Available with target feature `zknd` only\"><code>zknd</code></span></div><div class=\"desc docblock-short\">AES final round decryption instruction for RV64.</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.aes64dsm.html\" title=\"fn core::arch::riscv64::aes64dsm\">aes64dsm</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span><span class=\"stab portability\" title=\"Available with target feature `zknd` only\"><code>zknd</code></span></div><div class=\"desc docblock-short\">AES middle round decryption instruction for RV64.</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.aes64es.html\" title=\"fn core::arch::riscv64::aes64es\">aes64es</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span><span class=\"stab portability\" title=\"Available with target feature `zkne` only\"><code>zkne</code></span></div><div class=\"desc docblock-short\">AES final round encryption instruction for RV64.</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.aes64esm.html\" title=\"fn core::arch::riscv64::aes64esm\">aes64esm</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span><span class=\"stab portability\" title=\"Available with target feature `zkne` only\"><code>zkne</code></span></div><div class=\"desc docblock-short\">AES middle round encryption instruction for RV64.</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.aes64im.html\" title=\"fn core::arch::riscv64::aes64im\">aes64im</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span><span class=\"stab portability\" title=\"Available on target features `zkne` and `zknd` only\"><code>zkne</code> and <code>zknd</code></span></div><div class=\"desc docblock-short\">This instruction accelerates the inverse MixColumns step of the AES Block Cipher, and is used to aid creation of\nthe decryption KeySchedule.</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.aes64ks1i.html\" title=\"fn core::arch::riscv64::aes64ks1i\">aes64ks1i</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span><span class=\"stab portability\" title=\"Available on target features `zkne` and `zknd` only\"><code>zkne</code> and <code>zknd</code></span></div><div class=\"desc docblock-short\">This instruction implements part of the KeySchedule operation for the AES Block cipher\ninvolving the SBox operation.</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.aes64ks2.html\" title=\"fn core::arch::riscv64::aes64ks2\">aes64ks2</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span><span class=\"stab portability\" title=\"Available on target features `zkne` and `zknd` only\"><code>zkne</code> and <code>zknd</code></span></div><div class=\"desc docblock-short\">This instruction implements part of the KeySchedule operation for the AES Block cipher.</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.clmul.html\" title=\"fn core::arch::riscv64::clmul\">clmul</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span><span class=\"stab portability\" title=\"Available with target feature `zbc` only\"><code>zbc</code></span></div><div class=\"desc docblock-short\">Carry-less multiply (low-part)</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.clmulh.html\" title=\"fn core::arch::riscv64::clmulh\">clmulh</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span><span class=\"stab portability\" title=\"Available with target feature `zbc` only\"><code>zbc</code></span></div><div class=\"desc docblock-short\">Carry-less multiply (high-part)</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.clmulr.html\" title=\"fn core::arch::riscv64::clmulr\">clmulr</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span><span class=\"stab portability\" title=\"Available with target feature `zbc` only\"><code>zbc</code></span></div><div class=\"desc docblock-short\">Carry-less multiply (reversed)</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.clrs8.html\" title=\"fn core::arch::riscv64::clrs8\">clrs8</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Count the number of redundant sign bits of the packed 8-bit elements</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.clrs16.html\" title=\"fn core::arch::riscv64::clrs16\">clrs16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Count the number of redundant sign bits of the packed 16-bit elements</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.clrs32.html\" title=\"fn core::arch::riscv64::clrs32\">clrs32</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Count the number of redundant sign bits of the packed 32-bit elements</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.clz8.html\" title=\"fn core::arch::riscv64::clz8\">clz8</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Count the number of leading zero bits of the packed 8-bit elements</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.clz16.html\" title=\"fn core::arch::riscv64::clz16\">clz16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Count the number of leading zero bits of the packed 16-bit elements</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.clz32.html\" title=\"fn core::arch::riscv64::clz32\">clz32</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Count the number of leading zero bits of the packed 32-bit elements</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.cmpeq8.html\" title=\"fn core::arch::riscv64::cmpeq8\">cmpeq8</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Compare equality for packed 8-bit elements</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.cmpeq16.html\" title=\"fn core::arch::riscv64::cmpeq16\">cmpeq16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Compare equality for packed 16-bit elements</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.cras16.html\" title=\"fn core::arch::riscv64::cras16\">cras16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Cross adds and subtracts packed 16-bit signed numbers, discarding overflow bits</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.crsa16.html\" title=\"fn core::arch::riscv64::crsa16\">crsa16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Cross subtracts and adds packed 16-bit signed numbers, discarding overflow bits</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.fence_i.html\" title=\"fn core::arch::riscv64::fence_i\">fence_i</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Generates the <code>FENCE.I</code> instruction</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.frrm.html\" title=\"fn core::arch::riscv64::frrm\">frrm</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Reads the floating-point rounding mode register <code>frm</code></div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.hfence_gvma.html\" title=\"fn core::arch::riscv64::hfence_gvma\">hfence_gvma</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Hypervisor memory management fence for guest physical address and virtual machine</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.hfence_gvma_all.html\" title=\"fn core::arch::riscv64::hfence_gvma_all\">hfence_gvma_all</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Hypervisor memory management fence for all virtual machines and guest physical addresses</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.hfence_gvma_gaddr.html\" title=\"fn core::arch::riscv64::hfence_gvma_gaddr\">hfence_gvma_gaddr</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Hypervisor memory management fence for guest physical address</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.hfence_gvma_vmid.html\" title=\"fn core::arch::riscv64::hfence_gvma_vmid\">hfence_gvma_vmid</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Hypervisor memory management fence for given virtual machine</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.hfence_vvma.html\" title=\"fn core::arch::riscv64::hfence_vvma\">hfence_vvma</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Hypervisor memory management fence for given guest virtual address and guest address space</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.hfence_vvma_all.html\" title=\"fn core::arch::riscv64::hfence_vvma_all\">hfence_vvma_all</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Hypervisor memory management fence for all guest address spaces and guest virtual addresses</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.hfence_vvma_asid.html\" title=\"fn core::arch::riscv64::hfence_vvma_asid\">hfence_vvma_asid</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Hypervisor memory management fence for given guest address space</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.hfence_vvma_vaddr.html\" title=\"fn core::arch::riscv64::hfence_vvma_vaddr\">hfence_vvma_vaddr</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Hypervisor memory management fence for given guest virtual address</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.hinval_gvma.html\" title=\"fn core::arch::riscv64::hinval_gvma\">hinval_gvma</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Invalidate hypervisor translation cache for guest physical address and virtual machine</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.hinval_gvma_all.html\" title=\"fn core::arch::riscv64::hinval_gvma_all\">hinval_gvma_all</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Invalidate hypervisor translation cache for all virtual machines and guest physical addresses</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.hinval_gvma_gaddr.html\" title=\"fn core::arch::riscv64::hinval_gvma_gaddr\">hinval_gvma_gaddr</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Invalidate hypervisor translation cache for guest physical address</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.hinval_gvma_vmid.html\" title=\"fn core::arch::riscv64::hinval_gvma_vmid\">hinval_gvma_vmid</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Invalidate hypervisor translation cache for given virtual machine</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.hinval_vvma.html\" title=\"fn core::arch::riscv64::hinval_vvma\">hinval_vvma</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Invalidate hypervisor translation cache for given guest virtual address and guest address space</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.hinval_vvma_all.html\" title=\"fn core::arch::riscv64::hinval_vvma_all\">hinval_vvma_all</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Invalidate hypervisor translation cache for all guest address spaces and guest virtual addresses</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.hinval_vvma_asid.html\" title=\"fn core::arch::riscv64::hinval_vvma_asid\">hinval_vvma_asid</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Invalidate hypervisor translation cache for given guest address space</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.hinval_vvma_vaddr.html\" title=\"fn core::arch::riscv64::hinval_vvma_vaddr\">hinval_vvma_vaddr</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Invalidate hypervisor translation cache for given guest virtual address</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.hlv_b.html\" title=\"fn core::arch::riscv64::hlv_b\">hlv_b</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Loads virtual machine memory by signed byte integer</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.hlv_bu.html\" title=\"fn core::arch::riscv64::hlv_bu\">hlv_bu</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Loads virtual machine memory by unsigned byte integer</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.hlv_d.html\" title=\"fn core::arch::riscv64::hlv_d\">hlv_d</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Loads virtual machine memory by double integer</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.hlv_h.html\" title=\"fn core::arch::riscv64::hlv_h\">hlv_h</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Loads virtual machine memory by signed half integer</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.hlv_hu.html\" title=\"fn core::arch::riscv64::hlv_hu\">hlv_hu</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Loads virtual machine memory by unsigned half integer</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.hlv_w.html\" title=\"fn core::arch::riscv64::hlv_w\">hlv_w</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Loads virtual machine memory by signed word integer</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.hlv_wu.html\" title=\"fn core::arch::riscv64::hlv_wu\">hlv_wu</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Loads virtual machine memory by unsigned word integer</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.hlvx_hu.html\" title=\"fn core::arch::riscv64::hlvx_hu\">hlvx_hu</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Accesses virtual machine instruction by unsigned half integer</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.hlvx_wu.html\" title=\"fn core::arch::riscv64::hlvx_wu\">hlvx_wu</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Accesses virtual machine instruction by unsigned word integer</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.hsv_b.html\" title=\"fn core::arch::riscv64::hsv_b\">hsv_b</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Stores virtual machine memory by byte integer</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.hsv_d.html\" title=\"fn core::arch::riscv64::hsv_d\">hsv_d</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Stores virtual machine memory by double integer</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.hsv_h.html\" title=\"fn core::arch::riscv64::hsv_h\">hsv_h</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Stores virtual machine memory by half integer</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.hsv_w.html\" title=\"fn core::arch::riscv64::hsv_w\">hsv_w</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Stores virtual machine memory by word integer</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.kabs8.html\" title=\"fn core::arch::riscv64::kabs8\">kabs8</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Compute the absolute value of packed 8-bit signed integers</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.kabs16.html\" title=\"fn core::arch::riscv64::kabs16\">kabs16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Compute the absolute value of packed 16-bit signed integers</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.kadd8.html\" title=\"fn core::arch::riscv64::kadd8\">kadd8</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Adds packed 8-bit signed numbers, saturating at the numeric bounds</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.kadd16.html\" title=\"fn core::arch::riscv64::kadd16\">kadd16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Adds packed 16-bit signed numbers, saturating at the numeric bounds</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.kaddh.html\" title=\"fn core::arch::riscv64::kaddh\">kaddh</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Adds signed lower 16-bit content of two registers with Q15 saturation</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.kcras16.html\" title=\"fn core::arch::riscv64::kcras16\">kcras16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Cross adds and subtracts packed 16-bit signed numbers, saturating at the numeric bounds</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.kcrsa16.html\" title=\"fn core::arch::riscv64::kcrsa16\">kcrsa16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Cross subtracts and adds packed 16-bit signed numbers, saturating at the numeric bounds</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.ksll8.html\" title=\"fn core::arch::riscv64::ksll8\">ksll8</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Logical left shift packed 8-bit elements, saturating at the numeric bounds</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.ksll16.html\" title=\"fn core::arch::riscv64::ksll16\">ksll16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Logical left shift packed 16-bit elements, saturating at the numeric bounds</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.kslra8.html\" title=\"fn core::arch::riscv64::kslra8\">kslra8</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Logical saturating left then arithmetic right shift packed 8-bit elements</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.kslra8u.html\" title=\"fn core::arch::riscv64::kslra8u\">kslra8u</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Logical saturating left then arithmetic right shift packed 8-bit elements</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.kslra16.html\" title=\"fn core::arch::riscv64::kslra16\">kslra16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Logical saturating left then arithmetic right shift packed 16-bit elements</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.kslra16u.html\" title=\"fn core::arch::riscv64::kslra16u\">kslra16u</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Logical saturating left then arithmetic right shift packed 16-bit elements</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.kstas16.html\" title=\"fn core::arch::riscv64::kstas16\">kstas16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Straight adds and subtracts packed 16-bit signed numbers, saturating at the numeric bounds</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.kstsa16.html\" title=\"fn core::arch::riscv64::kstsa16\">kstsa16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Straight subtracts and adds packed 16-bit signed numbers, saturating at the numeric bounds</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.ksub8.html\" title=\"fn core::arch::riscv64::ksub8\">ksub8</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Subtracts packed 8-bit signed numbers, saturating at the numeric bounds</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.ksub16.html\" title=\"fn core::arch::riscv64::ksub16\">ksub16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Subtracts packed 16-bit signed numbers, saturating at the numeric bounds</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.ksubh.html\" title=\"fn core::arch::riscv64::ksubh\">ksubh</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Subtracts signed lower 16-bit content of two registers with Q15 saturation</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.nop.html\" title=\"fn core::arch::riscv64::nop\">nop</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Generates the <code>NOP</code> instruction</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.orc_b.html\" title=\"fn core::arch::riscv64::orc_b\">orc_b</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span><span class=\"stab portability\" title=\"Available with target feature `zbb` only\"><code>zbb</code></span></div><div class=\"desc docblock-short\">Bitwise OR-Combine, byte granule</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.pause.html\" title=\"fn core::arch::riscv64::pause\">pause</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Generates the <code>PAUSE</code> instruction</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.pbsad.html\" title=\"fn core::arch::riscv64::pbsad\">pbsad</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Calculate the sum of absolute difference of unsigned 8-bit data elements</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.pbsada.html\" title=\"fn core::arch::riscv64::pbsada\">pbsada</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Calculate and accumulate the sum of absolute difference of unsigned 8-bit data elements</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.pkbt16.html\" title=\"fn core::arch::riscv64::pkbt16\">pkbt16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Pack two 16-bit data from bottom and top half from 32-bit chunks</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.pktb16.html\" title=\"fn core::arch::riscv64::pktb16\">pktb16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Pack two 16-bit data from top and bottom half from 32-bit chunks</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.radd8.html\" title=\"fn core::arch::riscv64::radd8\">radd8</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Halves the sum of packed 8-bit signed numbers, dropping least bits</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.radd16.html\" title=\"fn core::arch::riscv64::radd16\">radd16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Halves the sum of packed 16-bit signed numbers, dropping least bits</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.rcras16.html\" title=\"fn core::arch::riscv64::rcras16\">rcras16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Cross halves of adds and subtracts packed 16-bit signed numbers, dropping least bits</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.rcrsa16.html\" title=\"fn core::arch::riscv64::rcrsa16\">rcrsa16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Cross halves of subtracts and adds packed 16-bit signed numbers, dropping least bits</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.rstas16.html\" title=\"fn core::arch::riscv64::rstas16\">rstas16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Straight halves of adds and subtracts packed 16-bit signed numbers, dropping least bits</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.rstsa16.html\" title=\"fn core::arch::riscv64::rstsa16\">rstsa16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Straight halves of subtracts and adds packed 16-bit signed numbers, dropping least bits</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.rsub8.html\" title=\"fn core::arch::riscv64::rsub8\">rsub8</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Halves the subtraction result of packed 8-bit signed numbers, dropping least bits</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.rsub16.html\" title=\"fn core::arch::riscv64::rsub16\">rsub16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Halves the subtraction result of packed 16-bit signed numbers, dropping least bits</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.scmple8.html\" title=\"fn core::arch::riscv64::scmple8\">scmple8</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Compare whether 8-bit packed signed integers are less than or equal to the others</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.scmple16.html\" title=\"fn core::arch::riscv64::scmple16\">scmple16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Compare whether 16-bit packed signed integers are less than or equal to the others</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.scmplt8.html\" title=\"fn core::arch::riscv64::scmplt8\">scmplt8</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Compare whether 8-bit packed signed integers are less than the others</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.scmplt16.html\" title=\"fn core::arch::riscv64::scmplt16\">scmplt16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Compare whether 16-bit packed signed integers are less than the others</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.sfence_inval_ir.html\" title=\"fn core::arch::riscv64::sfence_inval_ir\">sfence_inval_ir</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Generates the <code>SFENCE.INVAL.IR</code> instruction</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.sfence_vma.html\" title=\"fn core::arch::riscv64::sfence_vma\">sfence_vma</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Supervisor memory management fence for given virtual address and address space</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.sfence_vma_all.html\" title=\"fn core::arch::riscv64::sfence_vma_all\">sfence_vma_all</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Supervisor memory management fence for all address spaces and virtual addresses</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.sfence_vma_asid.html\" title=\"fn core::arch::riscv64::sfence_vma_asid\">sfence_vma_asid</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Supervisor memory management fence for given address space</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.sfence_vma_vaddr.html\" title=\"fn core::arch::riscv64::sfence_vma_vaddr\">sfence_vma_vaddr</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Supervisor memory management fence for given virtual address</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.sfence_w_inval.html\" title=\"fn core::arch::riscv64::sfence_w_inval\">sfence_w_inval</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Generates the <code>SFENCE.W.INVAL</code> instruction</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.sha256sig0.html\" title=\"fn core::arch::riscv64::sha256sig0\">sha256sig0</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span><span class=\"stab portability\" title=\"Available with target feature `zknh` only\"><code>zknh</code></span></div><div class=\"desc docblock-short\">Implements the Sigma0 transformation function as used in the SHA2-256 hash function [49]\n(Section 4.1.2).</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.sha256sig1.html\" title=\"fn core::arch::riscv64::sha256sig1\">sha256sig1</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span><span class=\"stab portability\" title=\"Available with target feature `zknh` only\"><code>zknh</code></span></div><div class=\"desc docblock-short\">Implements the Sigma1 transformation function as used in the SHA2-256 hash function [49]\n(Section 4.1.2).</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.sha256sum0.html\" title=\"fn core::arch::riscv64::sha256sum0\">sha256sum0</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span><span class=\"stab portability\" title=\"Available with target feature `zknh` only\"><code>zknh</code></span></div><div class=\"desc docblock-short\">Implements the Sum0 transformation function as used in the SHA2-256 hash function [49]\n(Section 4.1.2).</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.sha256sum1.html\" title=\"fn core::arch::riscv64::sha256sum1\">sha256sum1</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span><span class=\"stab portability\" title=\"Available with target feature `zknh` only\"><code>zknh</code></span></div><div class=\"desc docblock-short\">Implements the Sum1 transformation function as used in the SHA2-256 hash function [49]\n(Section 4.1.2).</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.sha512sig0.html\" title=\"fn core::arch::riscv64::sha512sig0\">sha512sig0</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span><span class=\"stab portability\" title=\"Available with target feature `zknh` only\"><code>zknh</code></span></div><div class=\"desc docblock-short\">Implements the Sigma0 transformation function as used in the SHA2-512 hash function [49]\n(Section 4.1.3).</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.sha512sig1.html\" title=\"fn core::arch::riscv64::sha512sig1\">sha512sig1</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span><span class=\"stab portability\" title=\"Available with target feature `zknh` only\"><code>zknh</code></span></div><div class=\"desc docblock-short\">Implements the Sigma1 transformation function as used in the SHA2-512 hash function [49]\n(Section 4.1.3).</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.sha512sum0.html\" title=\"fn core::arch::riscv64::sha512sum0\">sha512sum0</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span><span class=\"stab portability\" title=\"Available with target feature `zknh` only\"><code>zknh</code></span></div><div class=\"desc docblock-short\">Implements the Sum0 transformation function as used in the SHA2-512 hash function [49]\n(Section 4.1.3).</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.sha512sum1.html\" title=\"fn core::arch::riscv64::sha512sum1\">sha512sum1</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span><span class=\"stab portability\" title=\"Available with target feature `zknh` only\"><code>zknh</code></span></div><div class=\"desc docblock-short\">Implements the Sum1 transformation function as used in the SHA2-512 hash function [49]\n(Section 4.1.3).</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.sinval_vma.html\" title=\"fn core::arch::riscv64::sinval_vma\">sinval_vma</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Invalidate supervisor translation cache for given virtual address and address space</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.sinval_vma_all.html\" title=\"fn core::arch::riscv64::sinval_vma_all\">sinval_vma_all</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Invalidate supervisor translation cache for all address spaces and virtual addresses</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.sinval_vma_asid.html\" title=\"fn core::arch::riscv64::sinval_vma_asid\">sinval_vma_asid</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Invalidate supervisor translation cache for given address space</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.sinval_vma_vaddr.html\" title=\"fn core::arch::riscv64::sinval_vma_vaddr\">sinval_vma_vaddr</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Invalidate supervisor translation cache for given virtual address</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.sll8.html\" title=\"fn core::arch::riscv64::sll8\">sll8</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Logical left shift packed 8-bit elements, discarding overflow bits</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.sll16.html\" title=\"fn core::arch::riscv64::sll16\">sll16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Logical left shift packed 16-bit elements, discarding overflow bits</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.sm3p0.html\" title=\"fn core::arch::riscv64::sm3p0\">sm3p0</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span><span class=\"stab portability\" title=\"Available with target feature `zksh` only\"><code>zksh</code></span></div><div class=\"desc docblock-short\">Implements the P0 transformation function as used in the SM3 hash function [4, 30].</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.sm3p1.html\" title=\"fn core::arch::riscv64::sm3p1\">sm3p1</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span><span class=\"stab portability\" title=\"Available with target feature `zksh` only\"><code>zksh</code></span></div><div class=\"desc docblock-short\">Implements the P1 transformation function as used in the SM3 hash function [4, 30].</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.sm4ed.html\" title=\"fn core::arch::riscv64::sm4ed\">sm4ed</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span><span class=\"stab portability\" title=\"Available with target feature `zksed` only\"><code>zksed</code></span></div><div class=\"desc docblock-short\">Accelerates the block encrypt/decrypt operation of the SM4 block cipher [5, 31].</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.sm4ks.html\" title=\"fn core::arch::riscv64::sm4ks\">sm4ks</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span><span class=\"stab portability\" title=\"Available with target feature `zksed` only\"><code>zksed</code></span></div><div class=\"desc docblock-short\">Accelerates the Key Schedule operation of the SM4 block cipher [5, 31] with <code>bs=0</code>.</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.smaqa.html\" title=\"fn core::arch::riscv64::smaqa\">smaqa</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Multiply signed 8-bit elements and add 16-bit elements on results for packed 32-bit chunks</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.smaqasu.html\" title=\"fn core::arch::riscv64::smaqasu\">smaqasu</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Multiply signed to unsigned 8-bit and add 16-bit elements on results for packed 32-bit chunks</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.smax8.html\" title=\"fn core::arch::riscv64::smax8\">smax8</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Get maximum values from 8-bit packed signed integers</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.smax16.html\" title=\"fn core::arch::riscv64::smax16\">smax16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Get maximum values from 16-bit packed signed integers</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.smin8.html\" title=\"fn core::arch::riscv64::smin8\">smin8</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Get minimum values from 8-bit packed signed integers</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.smin16.html\" title=\"fn core::arch::riscv64::smin16\">smin16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Get minimum values from 16-bit packed signed integers</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.sra8.html\" title=\"fn core::arch::riscv64::sra8\">sra8</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Arithmetic right shift packed 8-bit elements without rounding up</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.sra8u.html\" title=\"fn core::arch::riscv64::sra8u\">sra8u</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Arithmetic right shift packed 8-bit elements with rounding up</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.sra16.html\" title=\"fn core::arch::riscv64::sra16\">sra16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Arithmetic right shift packed 16-bit elements without rounding up</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.sra16u.html\" title=\"fn core::arch::riscv64::sra16u\">sra16u</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Arithmetic right shift packed 16-bit elements with rounding up</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.srl8.html\" title=\"fn core::arch::riscv64::srl8\">srl8</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Logical right shift packed 8-bit elements without rounding up</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.srl8u.html\" title=\"fn core::arch::riscv64::srl8u\">srl8u</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Logical right shift packed 8-bit elements with rounding up</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.srl16.html\" title=\"fn core::arch::riscv64::srl16\">srl16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Logical right shift packed 16-bit elements without rounding up</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.srl16u.html\" title=\"fn core::arch::riscv64::srl16u\">srl16u</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Logical right shift packed 16-bit elements with rounding up</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.stas16.html\" title=\"fn core::arch::riscv64::stas16\">stas16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Straight adds and subtracts packed 16-bit signed numbers, discarding overflow bits</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.stsa16.html\" title=\"fn core::arch::riscv64::stsa16\">stsa16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Straight subtracts and adds packed 16-bit signed numbers, discarding overflow bits</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.sub8.html\" title=\"fn core::arch::riscv64::sub8\">sub8</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Subtracts packed 8-bit signed numbers, discarding overflow bits</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.sub16.html\" title=\"fn core::arch::riscv64::sub16\">sub16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Subtracts packed 16-bit signed numbers, discarding overflow bits</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.sunpkd810.html\" title=\"fn core::arch::riscv64::sunpkd810\">sunpkd810</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Unpack first and zeroth into two 16-bit signed halfwords in each 32-bit chunk</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.sunpkd820.html\" title=\"fn core::arch::riscv64::sunpkd820\">sunpkd820</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Unpack second and zeroth into two 16-bit signed halfwords in each 32-bit chunk</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.sunpkd830.html\" title=\"fn core::arch::riscv64::sunpkd830\">sunpkd830</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Unpack third and zeroth into two 16-bit signed halfwords in each 32-bit chunk</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.sunpkd831.html\" title=\"fn core::arch::riscv64::sunpkd831\">sunpkd831</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Unpack third and first into two 16-bit signed halfwords in each 32-bit chunk</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.sunpkd832.html\" title=\"fn core::arch::riscv64::sunpkd832\">sunpkd832</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Unpack third and second into two 16-bit signed halfwords in each 32-bit chunk</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.swap8.html\" title=\"fn core::arch::riscv64::swap8\">swap8</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Swap the 8-bit bytes within each 16-bit halfword of a register.</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.swap16.html\" title=\"fn core::arch::riscv64::swap16\">swap16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Swap the 16-bit halfwords within each 32-bit word of a register</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.ucmple8.html\" title=\"fn core::arch::riscv64::ucmple8\">ucmple8</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Compare whether 8-bit packed unsigned integers are less than or equal to the others</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.ucmple16.html\" title=\"fn core::arch::riscv64::ucmple16\">ucmple16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Compare whether 16-bit packed unsigned integers are less than or equal to the others</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.ucmplt8.html\" title=\"fn core::arch::riscv64::ucmplt8\">ucmplt8</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Compare whether 8-bit packed unsigned integers are less than the others</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.ucmplt16.html\" title=\"fn core::arch::riscv64::ucmplt16\">ucmplt16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Compare whether 16-bit packed unsigned integers are less than the others</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.ukadd8.html\" title=\"fn core::arch::riscv64::ukadd8\">ukadd8</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Adds packed 8-bit unsigned numbers, saturating at the numeric bounds</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.ukadd16.html\" title=\"fn core::arch::riscv64::ukadd16\">ukadd16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Adds packed 16-bit unsigned numbers, saturating at the numeric bounds</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.ukaddh.html\" title=\"fn core::arch::riscv64::ukaddh\">ukaddh</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Adds signed lower 16-bit content of two registers with U16 saturation</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.ukcras16.html\" title=\"fn core::arch::riscv64::ukcras16\">ukcras16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Cross adds and subtracts packed 16-bit unsigned numbers, saturating at the numeric bounds</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.ukcrsa16.html\" title=\"fn core::arch::riscv64::ukcrsa16\">ukcrsa16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Cross subtracts and adds packed 16-bit unsigned numbers, saturating at the numeric bounds</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.ukstas16.html\" title=\"fn core::arch::riscv64::ukstas16\">ukstas16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Straight adds and subtracts packed 16-bit unsigned numbers, saturating at the numeric bounds</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.ukstsa16.html\" title=\"fn core::arch::riscv64::ukstsa16\">ukstsa16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Straight subtracts and adds packed 16-bit unsigned numbers, saturating at the numeric bounds</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.uksub8.html\" title=\"fn core::arch::riscv64::uksub8\">uksub8</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Subtracts packed 8-bit unsigned numbers, saturating at the numeric bounds</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.uksub16.html\" title=\"fn core::arch::riscv64::uksub16\">uksub16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Subtracts packed 16-bit unsigned numbers, saturating at the numeric bounds</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.uksubh.html\" title=\"fn core::arch::riscv64::uksubh\">uksubh</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Subtracts signed lower 16-bit content of two registers with U16 saturation</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.umaqa.html\" title=\"fn core::arch::riscv64::umaqa\">umaqa</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Multiply unsigned 8-bit elements and add 16-bit elements on results for packed 32-bit chunks</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.umax8.html\" title=\"fn core::arch::riscv64::umax8\">umax8</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Get maximum values from 8-bit packed unsigned integers</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.umax16.html\" title=\"fn core::arch::riscv64::umax16\">umax16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Get maximum values from 16-bit packed unsigned integers</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.umin8.html\" title=\"fn core::arch::riscv64::umin8\">umin8</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Get minimum values from 8-bit packed unsigned integers</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.umin16.html\" title=\"fn core::arch::riscv64::umin16\">umin16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Get minimum values from 16-bit packed unsigned integers</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.uradd8.html\" title=\"fn core::arch::riscv64::uradd8\">uradd8</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Halves the sum of packed 8-bit unsigned numbers, dropping least bits</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.uradd16.html\" title=\"fn core::arch::riscv64::uradd16\">uradd16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Halves the sum of packed 16-bit unsigned numbers, dropping least bits</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.urcras16.html\" title=\"fn core::arch::riscv64::urcras16\">urcras16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Cross halves of adds and subtracts packed 16-bit unsigned numbers, dropping least bits</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.urcrsa16.html\" title=\"fn core::arch::riscv64::urcrsa16\">urcrsa16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Cross halves of subtracts and adds packed 16-bit unsigned numbers, dropping least bits</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.urstas16.html\" title=\"fn core::arch::riscv64::urstas16\">urstas16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Straight halves of adds and subtracts packed 16-bit unsigned numbers, dropping least bits</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.urstsa16.html\" title=\"fn core::arch::riscv64::urstsa16\">urstsa16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Straight halves of subtracts and adds packed 16-bit unsigned numbers, dropping least bits</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.ursub8.html\" title=\"fn core::arch::riscv64::ursub8\">ursub8</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Halves the subtraction result of packed 8-bit unsigned numbers, dropping least bits</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.ursub16.html\" title=\"fn core::arch::riscv64::ursub16\">ursub16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Halves the subtraction result of packed 16-bit unsigned numbers, dropping least bits</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.wfi.html\" title=\"fn core::arch::riscv64::wfi\">wfi</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Generates the <code>WFI</code> instruction</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.xperm4.html\" title=\"fn core::arch::riscv64::xperm4\">xperm4</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span><span class=\"stab portability\" title=\"Available with target feature `zbkx` only\"><code>zbkx</code></span></div><div class=\"desc docblock-short\">Nibble-wise lookup of indicies into a vector.</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.xperm8.html\" title=\"fn core::arch::riscv64::xperm8\">xperm8</a><sup title=\"unsafe function\">⚠</sup><span class=\"stab unstable\" title=\"\">Experimental</span><span class=\"stab portability\" title=\"Available with target feature `zbkx` only\"><code>zbkx</code></span></div><div class=\"desc docblock-short\">Byte-wise lookup of indicies into a vector in registers.</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.zunpkd810.html\" title=\"fn core::arch::riscv64::zunpkd810\">zunpkd810</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Unpack first and zeroth into two 16-bit unsigned halfwords in each 32-bit chunk</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.zunpkd820.html\" title=\"fn core::arch::riscv64::zunpkd820\">zunpkd820</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Unpack second and zeroth into two 16-bit unsigned halfwords in each 32-bit chunk</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.zunpkd830.html\" title=\"fn core::arch::riscv64::zunpkd830\">zunpkd830</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Unpack third and zeroth into two 16-bit unsigned halfwords in each 32-bit chunk</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.zunpkd831.html\" title=\"fn core::arch::riscv64::zunpkd831\">zunpkd831</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Unpack third and first into two 16-bit unsigned halfwords in each 32-bit chunk</div></li><li><div class=\"item-name\"><a class=\"fn\" href=\"fn.zunpkd832.html\" title=\"fn core::arch::riscv64::zunpkd832\">zunpkd832</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Unpack third and second into two 16-bit unsigned halfwords in each 32-bit chunk</div></li></ul></section></div></main></body></html>",
	"crawlDate": "2024-07-28T05:22:00.140Z"
}