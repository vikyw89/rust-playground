{
	"title": "Unsize in std::marker - Rust",
	"url": "https://doc.rust-lang.org/std/marker/trait.Unsize.html",
	"markdown": "# Unsize in std::marker - Rust\n\n```\npub trait Unsize<T>where\n    T: ?Sized,{ }\n```\n\nüî¨This is a nightly-only experimental API. (`unsize`¬†[#18598](https://github.com/rust-lang/rust/issues/18598))\n\nExpand description\n\nTypes that can be ‚Äúunsized‚Äù to a dynamically-sized type.\n\nFor example, the sized array type `[i8; 2]` implements `Unsize<[i8]>` and `Unsize<dyn fmt::Debug>`.\n\nAll implementations of `Unsize` are provided automatically by the compiler. Those implementations are:\n\n-   Arrays `[T; N]` implement `Unsize<[T]>`.\n-   A type implements `Unsize<dyn Trait + 'a>` if all of these conditions are met:\n    -   The type implements `Trait`.\n    -   `Trait` is object safe.\n    -   The type is sized.\n    -   The type outlives `'a`.\n-   Structs `Foo<..., T1, ..., Tn, ...>` implement `Unsize<Foo<..., U1, ..., Un, ...>>` where any number of (type and const) parameters may be changed if all of these conditions are met:\n    -   Only the last field of `Foo` has a type involving the parameters `T1`, ‚Ä¶, `Tn`.\n    -   All other parameters of the struct are equal.\n    -   `Field<T1, ..., Tn>: Unsize<Field<U1, ..., Un>>`, where `Field<...>` stands for the actual type of the struct‚Äôs last field.\n\n`Unsize` is used along with [`ops::CoerceUnsized`](../ops/trait.CoerceUnsized.html \"trait std::ops::CoerceUnsized\") to allow ‚Äúuser-defined‚Äù containers such as [`Rc`](../../std/rc/struct.Rc.html) to contain dynamically-sized types. See the [DST coercion RFC](https://github.com/rust-lang/rfcs/blob/master/text/0982-dst-coercion.md) and [the nomicon entry on coercion](../../nomicon/coercions.html) for more details.",
	"html": "<!DOCTYPE html><html lang=\"en\" data-theme=\"light\"><head><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><meta name=\"generator\" content=\"rustdoc\"><meta name=\"description\" content=\"Types that can be ‚Äúunsized‚Äù to a dynamically-sized type.\"><title>Unsize in std::marker - Rust</title><script>if(window.location.protocol!==\"file:\")document.head.insertAdjacentHTML(\"beforeend\",\"SourceSerif4-Regular-46f98efaafac5295.ttf.woff2,FiraSans-Regular-018c141bf0843ffd.woff2,FiraSans-Medium-8f9a781e4970d388.woff2,SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2,SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\".split(\",\").map(f=>`<link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin href=\"../../static.files/${f}\">`).join(\"\"))</script><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceSerif4-Regular-46f98efaafac5295.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/FiraSans-Regular-018c141bf0843ffd.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/FiraSans-Medium-8f9a781e4970d388.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\"><link rel=\"stylesheet\" href=\"../../static.files/normalize-76eba96aa4d2e634.css\"><link rel=\"stylesheet\" href=\"../../static.files/rustdoc-dd39b87e5fcfba68.css\"><meta name=\"rustdoc-vars\" data-root-path=\"../../\" data-static-root-path=\"../../static.files/\" data-current-crate=\"std\" data-themes=\"\" data-resource-suffix=\"1.80.0\" data-rustdoc-version=\"1.80.0 (051478957 2024-07-21)\" data-channel=\"1.80.0\" data-search-js=\"search-d52510db62a78183.js\" data-settings-js=\"settings-4313503d2e1961c2.js\"><script src=\"../../static.files/storage-118b08c4c78b968e.js\"></script><script defer=\"\" src=\"sidebar-items1.80.0.js\"></script><script defer=\"\" src=\"../../static.files/main-20a3ad099b048cf2.js\"></script><noscript><link rel=\"stylesheet\" href=\"../../static.files/noscript-df360f571f6edeae.css\"></noscript><link rel=\"alternate icon\" type=\"image/png\" href=\"../../static.files/favicon-32x32-422f7d1d52889060.png\"><link rel=\"icon\" type=\"image/svg+xml\" href=\"../../static.files/favicon-2c020d218678b618.svg\"></head><body class=\"rustdoc trait\"><!--[if lte IE 11]><div class=\"warning\">This old browser is unsupported and will most likely display funky things.</div><![endif]--><nav class=\"mobile-topbar\"><button class=\"sidebar-menu-toggle\" title=\"show sidebar\"></button><a class=\"logo-container\" href=\"../../std/index.html\"><img class=\"rust-logo\" src=\"../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"\"></a><h2 class=\"location\"><a href=\"#\">Unsize</a></h2></nav><nav class=\"sidebar\"><div class=\"sidebar-crate\"><a class=\"logo-container\" href=\"../../std/index.html\"><img class=\"rust-logo\" src=\"../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"logo\"></a><h2><a href=\"../../std/index.html\">std</a><span class=\"version\">1.80.0</span></h2></div><div class=\"version\">(051478957\t2024-07-21)</div><h2 class=\"location\"><a href=\"#\">Unsize</a></h2><div class=\"sidebar-elems\"><section><h3><a href=\"#implementors\">Implementors</a></h3></section><h2><a href=\"index.html\">In std::marker</a></h2><h3><a href=\"index.html#structs\">Structs</a></h3><ul class=\"block struct\"><li><a href=\"struct.PhantomData.html\">PhantomData</a></li><li><a href=\"struct.PhantomPinned.html\">PhantomPinned</a></li></ul><h3><a href=\"index.html#traits\">Traits</a></h3><ul class=\"block trait\"><li><a href=\"trait.ConstParamTy.html\">ConstParamTy</a></li><li><a href=\"trait.Copy.html\">Copy</a></li><li><a href=\"trait.Destruct.html\">Destruct</a></li><li><a href=\"trait.DiscriminantKind.html\">DiscriminantKind</a></li><li><a href=\"trait.FnPtr.html\">FnPtr</a></li><li><a href=\"trait.Freeze.html\">Freeze</a></li><li><a href=\"trait.PointerLike.html\">PointerLike</a></li><li><a href=\"trait.Send.html\">Send</a></li><li><a href=\"trait.Sized.html\">Sized</a></li><li><a href=\"trait.StructuralPartialEq.html\">StructuralPartialEq</a></li><li><a href=\"trait.Sync.html\">Sync</a></li><li><a href=\"trait.Tuple.html\">Tuple</a></li><li><a href=\"trait.Unpin.html\">Unpin</a></li><li><a href=\"trait.Unsize.html\">Unsize</a></li></ul><h3><a href=\"index.html#derives\">Derive Macros</a></h3><ul class=\"block derive\"><li><a href=\"derive.ConstParamTy.html\">ConstParamTy</a></li><li><a href=\"derive.Copy.html\">Copy</a></li></ul></div></nav><div class=\"sidebar-resizer\"></div><main><div class=\"width-limiter\"><rustdoc-search><nav class=\"sub\">\n            <form class=\"search-form\">\n                <span></span> <!-- This empty span is a hacky fix for Safari - See #93184 -->\n                <div id=\"sidebar-button\" tabindex=\"-1\">\n                    <a href=\"../../std/all.html\" title=\"show sidebar\"></a>\n                </div>\n                <input class=\"search-input\" name=\"search\" aria-label=\"Run search in the documentation\" autocomplete=\"off\" spellcheck=\"false\" placeholder=\"Type ‚ÄòS‚Äô or ‚Äò/‚Äô to search, ‚Äò?‚Äô for more options‚Ä¶\" type=\"search\">\n                <div id=\"help-button\" tabindex=\"-1\">\n                    <a href=\"../../help.html\" title=\"help\">?</a>\n                </div>\n                <div id=\"settings-menu\" tabindex=\"-1\">\n                    <a href=\"../../settings.html\" title=\"settings\">\n                        Settings\n                    </a>\n                </div>\n            </form>\n        </nav></rustdoc-search><section id=\"main-content\" class=\"content\"><div class=\"main-heading\"><h1>Trait <a href=\"../index.html\">std</a>::<wbr><a href=\"index.html\">marker</a>::<wbr><a class=\"trait\" href=\"#\">Unsize</a><button id=\"copy-path\" title=\"Copy item path to clipboard\">Copy item path</button></h1><span class=\"out-of-band\"><a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/marker.rs.html#183\">source</a> ¬∑ <button id=\"toggle-all-docs\" title=\"collapse all docs\">[<span>‚àí</span>]</button></span></div><pre class=\"rust item-decl\"><code>pub trait Unsize&lt;T&gt;<div class=\"where\">where\n    T: ?<a class=\"trait\" href=\"trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,</div>{ }</code></pre><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">üî¨</span><span>This is a nightly-only experimental API. (<code>unsize</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/18598\">#18598</a>)</span></div></span><details class=\"toggle top-doc\" open=\"\"><summary class=\"hideme\"><span>Expand description</span></summary><div class=\"docblock\"><p>Types that can be ‚Äúunsized‚Äù to a dynamically-sized type.</p>\n<p>For example, the sized array type <code>[i8; 2]</code> implements <code>Unsize&lt;[i8]&gt;</code> and\n<code>Unsize&lt;dyn fmt::Debug&gt;</code>.</p>\n<p>All implementations of <code>Unsize</code> are provided automatically by the compiler.\nThose implementations are:</p>\n<ul>\n<li>Arrays <code>[T; N]</code> implement <code>Unsize&lt;[T]&gt;</code>.</li>\n<li>A type implements <code>Unsize&lt;dyn Trait + 'a&gt;</code> if all of these conditions are met:\n<ul>\n<li>The type implements <code>Trait</code>.</li>\n<li><code>Trait</code> is object safe.</li>\n<li>The type is sized.</li>\n<li>The type outlives <code>'a</code>.</li>\n</ul>\n</li>\n<li>Structs <code>Foo&lt;..., T1, ..., Tn, ...&gt;</code> implement <code>Unsize&lt;Foo&lt;..., U1, ..., Un, ...&gt;&gt;</code>\nwhere any number of (type and const) parameters may be changed if all of these conditions\nare met:\n<ul>\n<li>Only the last field of <code>Foo</code> has a type involving the parameters <code>T1</code>, ‚Ä¶, <code>Tn</code>.</li>\n<li>All other parameters of the struct are equal.</li>\n<li><code>Field&lt;T1, ..., Tn&gt;: Unsize&lt;Field&lt;U1, ..., Un&gt;&gt;</code>, where <code>Field&lt;...&gt;</code> stands for the actual\ntype of the struct‚Äôs last field.</li>\n</ul>\n</li>\n</ul>\n<p><code>Unsize</code> is used along with <a href=\"../ops/trait.CoerceUnsized.html\" title=\"trait std::ops::CoerceUnsized\"><code>ops::CoerceUnsized</code></a> to allow\n‚Äúuser-defined‚Äù containers such as <a href=\"../../std/rc/struct.Rc.html\"><code>Rc</code></a> to contain dynamically-sized\ntypes. See the <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/0982-dst-coercion.md\">DST coercion RFC</a> and <a href=\"../../nomicon/coercions.html\">the nomicon entry on coercion</a>\nfor more details.</p>\n</div></details><h2 id=\"implementors\" class=\"section-header\">Implementors<a href=\"#implementors\" class=\"anchor\">¬ß</a></h2><div id=\"implementors-list\"></div><script src=\"../../trait.impl/core/marker/trait.Unsize.js\" async=\"\"></script></section></div></main></body></html>",
	"crawlDate": "2024-07-28T05:20:38.456Z"
}