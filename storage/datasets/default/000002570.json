{
	"title": "core::ffi - Rust",
	"url": "https://doc.rust-lang.org/1.80.0/core/ffi/index.html",
	"markdown": "# core::ffi - Rust\n\n## Module [core](../index.html)::[ffi](#)\n\n1.30.0 · [source](about:blank/src/core/ffi/mod.rs.html#1-613) ·\n\nExpand description\n\nPlatform-specific types, as defined by C.\n\nCode that interacts via FFI will almost certainly be using the base types provided by C, which aren’t nearly as nicely defined as Rust’s primitive types. This module provides types which will match those defined by C, so that code that interacts with C will refer to the correct types.\n\n-   [`CStr`](struct.CStr.html \"struct core::ffi::CStr\") and its related types.\n    \n\n-   Representation of a borrowed C string.\n    \n-   A wrapper for a `va_list`\n    \n-   x86\\_64 ABI implementation of a `va_list`.\n    \n\n-   Equivalent to C’s `void` type when used as a [pointer](../primitive.pointer.html \"primitive pointer\").\n    \n\n-   Equivalent to C’s `char` type.\n    \n-   Equivalent to C’s `double` type.\n    \n-   Equivalent to C’s `float` type.\n    \n-   Equivalent to C’s `signed int` (`int`) type.\n    \n-   Equivalent to C’s `signed long` (`long`) type.\n    \n-   Equivalent to C’s `signed long long` (`long long`) type.\n    \n-   Equivalent to C’s `signed char` type.\n    \n-   Equivalent to C’s `signed short` (`short`) type.\n    \n-   Equivalent to C’s `unsigned char` type.\n    \n-   Equivalent to C’s `unsigned int` type.\n    \n-   Equivalent to C’s `unsigned long` type.\n    \n-   Equivalent to C’s `unsigned long long` type.\n    \n-   Equivalent to C’s `unsigned short` type.\n    \n-   Equivalent to C’s `ptrdiff_t` type, from `stddef.h` (or `cstddef` for C++).\n    \n-   Equivalent to C’s `size_t` type, from `stddef.h` (or `cstddef` for C++).\n    \n-   Equivalent to C’s `ssize_t` (on POSIX) or `SSIZE_T` (on Windows) type.",
	"html": "<!DOCTYPE html><html lang=\"en\" data-theme=\"light\"><head><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><meta name=\"generator\" content=\"rustdoc\"><meta name=\"description\" content=\"Platform-specific types, as defined by C.\"><title>core::ffi - Rust</title><script>if(window.location.protocol!==\"file:\")document.head.insertAdjacentHTML(\"beforeend\",\"SourceSerif4-Regular-46f98efaafac5295.ttf.woff2,FiraSans-Regular-018c141bf0843ffd.woff2,FiraSans-Medium-8f9a781e4970d388.woff2,SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2,SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\".split(\",\").map(f=>`<link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin href=\"../../static.files/${f}\">`).join(\"\"))</script><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceSerif4-Regular-46f98efaafac5295.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/FiraSans-Regular-018c141bf0843ffd.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/FiraSans-Medium-8f9a781e4970d388.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\"><link rel=\"stylesheet\" href=\"../../static.files/normalize-76eba96aa4d2e634.css\"><link rel=\"stylesheet\" href=\"../../static.files/rustdoc-dd39b87e5fcfba68.css\"><meta name=\"rustdoc-vars\" data-root-path=\"../../\" data-static-root-path=\"../../static.files/\" data-current-crate=\"core\" data-themes=\"\" data-resource-suffix=\"1.80.0\" data-rustdoc-version=\"1.80.0 (051478957 2024-07-21)\" data-channel=\"1.80.0\" data-search-js=\"search-d52510db62a78183.js\" data-settings-js=\"settings-4313503d2e1961c2.js\"><script src=\"../../static.files/storage-118b08c4c78b968e.js\"></script><script defer=\"\" src=\"../sidebar-items1.80.0.js\"></script><script defer=\"\" src=\"../../static.files/main-20a3ad099b048cf2.js\"></script><noscript><link rel=\"stylesheet\" href=\"../../static.files/noscript-df360f571f6edeae.css\"></noscript><link rel=\"alternate icon\" type=\"image/png\" href=\"../../static.files/favicon-32x32-422f7d1d52889060.png\"><link rel=\"icon\" type=\"image/svg+xml\" href=\"../../static.files/favicon-2c020d218678b618.svg\"></head><body class=\"rustdoc mod\"><!--[if lte IE 11]><div class=\"warning\">This old browser is unsupported and will most likely display funky things.</div><![endif]--><nav class=\"mobile-topbar\"><button class=\"sidebar-menu-toggle\" title=\"show sidebar\"></button><a class=\"logo-container\" href=\"../../core/index.html\"><img class=\"rust-logo\" src=\"../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"\"></a><h2 class=\"location\"><a href=\"#\">Module ffi</a></h2></nav><nav class=\"sidebar\"><div class=\"sidebar-crate\"><a class=\"logo-container\" href=\"../../core/index.html\"><img class=\"rust-logo\" src=\"../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"logo\"></a><h2><a href=\"../../core/index.html\">core</a><span class=\"version\">1.80.0</span></h2></div><div class=\"version\">(051478957\t2024-07-21)</div><h2 class=\"location\"><a href=\"#\">Module ffi</a></h2><div class=\"sidebar-elems\"><section><ul class=\"block\"><li><a href=\"#reexports\">Re-exports</a></li><li><a href=\"#modules\">Modules</a></li><li><a href=\"#structs\">Structs</a></li><li><a href=\"#enums\">Enums</a></li><li><a href=\"#types\">Type Aliases</a></li></ul></section><h2><a href=\"../index.html\">In crate core</a></h2><h3><a href=\"../index.html#primitives\">Primitive Types</a></h3><ul class=\"block primitive\"><li><a href=\"../primitive.array.html\">array</a></li><li><a href=\"../primitive.bool.html\">bool</a></li><li><a href=\"../primitive.char.html\">char</a></li><li><a href=\"../primitive.f128.html\">f128</a></li><li><a href=\"../primitive.f16.html\">f16</a></li><li><a href=\"../primitive.f32.html\">f32</a></li><li><a href=\"../primitive.f64.html\">f64</a></li><li><a href=\"../primitive.fn.html\">fn</a></li><li><a href=\"../primitive.i128.html\">i128</a></li><li><a href=\"../primitive.i16.html\">i16</a></li><li><a href=\"../primitive.i32.html\">i32</a></li><li><a href=\"../primitive.i64.html\">i64</a></li><li><a href=\"../primitive.i8.html\">i8</a></li><li><a href=\"../primitive.isize.html\">isize</a></li><li><a href=\"../primitive.never.html\">never</a></li><li><a href=\"../primitive.pointer.html\">pointer</a></li><li><a href=\"../primitive.reference.html\">reference</a></li><li><a href=\"../primitive.slice.html\">slice</a></li><li><a href=\"../primitive.str.html\">str</a></li><li><a href=\"../primitive.tuple.html\">tuple</a></li><li><a href=\"../primitive.u128.html\">u128</a></li><li><a href=\"../primitive.u16.html\">u16</a></li><li><a href=\"../primitive.u32.html\">u32</a></li><li><a href=\"../primitive.u64.html\">u64</a></li><li><a href=\"../primitive.u8.html\">u8</a></li><li><a href=\"../primitive.unit.html\">unit</a></li><li><a href=\"../primitive.usize.html\">usize</a></li></ul><h3><a href=\"../index.html#modules\">Modules</a></h3><ul class=\"block mod\"><li><a href=\"../alloc/index.html\">alloc</a></li><li><a href=\"../any/index.html\">any</a></li><li><a href=\"../arch/index.html\">arch</a></li><li><a href=\"../array/index.html\">array</a></li><li><a href=\"../ascii/index.html\">ascii</a></li><li><a href=\"../assert_matches/index.html\">assert_matches</a></li><li><a href=\"../async_iter/index.html\">async_iter</a></li><li><a href=\"../borrow/index.html\">borrow</a></li><li><a href=\"../cell/index.html\">cell</a></li><li><a href=\"../char/index.html\">char</a></li><li><a href=\"../clone/index.html\">clone</a></li><li><a href=\"../cmp/index.html\">cmp</a></li><li><a href=\"../convert/index.html\">convert</a></li><li><a href=\"../default/index.html\">default</a></li><li><a href=\"../error/index.html\">error</a></li><li><a href=\"../f128/index.html\">f128</a></li><li><a href=\"../f16/index.html\">f16</a></li><li><a href=\"../f32/index.html\">f32</a></li><li><a href=\"../f64/index.html\">f64</a></li><li><a href=\"../ffi/index.html\">ffi</a></li><li><a href=\"../fmt/index.html\">fmt</a></li><li><a href=\"../future/index.html\">future</a></li><li><a href=\"../hash/index.html\">hash</a></li><li><a href=\"../hint/index.html\">hint</a></li><li><a href=\"../i128/index.html\">i128</a></li><li><a href=\"../i16/index.html\">i16</a></li><li><a href=\"../i32/index.html\">i32</a></li><li><a href=\"../i64/index.html\">i64</a></li><li><a href=\"../i8/index.html\">i8</a></li><li><a href=\"../intrinsics/index.html\">intrinsics</a></li><li><a href=\"../io/index.html\">io</a></li><li><a href=\"../isize/index.html\">isize</a></li><li><a href=\"../iter/index.html\">iter</a></li><li><a href=\"../marker/index.html\">marker</a></li><li><a href=\"../mem/index.html\">mem</a></li><li><a href=\"../net/index.html\">net</a></li><li><a href=\"../num/index.html\">num</a></li><li><a href=\"../ops/index.html\">ops</a></li><li><a href=\"../option/index.html\">option</a></li><li><a href=\"../panic/index.html\">panic</a></li><li><a href=\"../panicking/index.html\">panicking</a></li><li><a href=\"../pat/index.html\">pat</a></li><li><a href=\"../pin/index.html\">pin</a></li><li><a href=\"../prelude/index.html\">prelude</a></li><li><a href=\"../primitive/index.html\">primitive</a></li><li><a href=\"../ptr/index.html\">ptr</a></li><li><a href=\"../result/index.html\">result</a></li><li><a href=\"../simd/index.html\">simd</a></li><li><a href=\"../slice/index.html\">slice</a></li><li><a href=\"../str/index.html\">str</a></li><li><a href=\"../sync/index.html\">sync</a></li><li><a href=\"../task/index.html\">task</a></li><li><a href=\"../time/index.html\">time</a></li><li><a href=\"../u128/index.html\">u128</a></li><li><a href=\"../u16/index.html\">u16</a></li><li><a href=\"../u32/index.html\">u32</a></li><li><a href=\"../u64/index.html\">u64</a></li><li><a href=\"../u8/index.html\">u8</a></li><li><a href=\"../ub_checks/index.html\">ub_checks</a></li><li><a href=\"../unicode/index.html\">unicode</a></li><li><a href=\"../usize/index.html\">usize</a></li></ul><h3><a href=\"../index.html#macros\">Macros</a></h3><ul class=\"block macro\"><li><a href=\"../macro.assert.html\">assert</a></li><li><a href=\"../macro.assert_eq.html\">assert_eq</a></li><li><a href=\"../macro.assert_ne.html\">assert_ne</a></li><li><a href=\"../macro.assert_unsafe_precondition.html\">assert_unsafe_precondition</a></li><li><a href=\"../macro.cfg.html\">cfg</a></li><li><a href=\"../macro.cfg_match.html\">cfg_match</a></li><li><a href=\"../macro.column.html\">column</a></li><li><a href=\"../macro.compile_error.html\">compile_error</a></li><li><a href=\"../macro.concat.html\">concat</a></li><li><a href=\"../macro.concat_bytes.html\">concat_bytes</a></li><li><a href=\"../macro.concat_idents.html\">concat_idents</a></li><li><a href=\"../macro.const_format_args.html\">const_format_args</a></li><li><a href=\"../macro.debug_assert.html\">debug_assert</a></li><li><a href=\"../macro.debug_assert_eq.html\">debug_assert_eq</a></li><li><a href=\"../macro.debug_assert_ne.html\">debug_assert_ne</a></li><li><a href=\"../macro.env.html\">env</a></li><li><a href=\"../macro.file.html\">file</a></li><li><a href=\"../macro.format_args.html\">format_args</a></li><li><a href=\"../macro.format_args_nl.html\">format_args_nl</a></li><li><a href=\"../macro.include.html\">include</a></li><li><a href=\"../macro.include_bytes.html\">include_bytes</a></li><li><a href=\"../macro.include_str.html\">include_str</a></li><li><a href=\"../macro.line.html\">line</a></li><li><a href=\"../macro.log_syntax.html\">log_syntax</a></li><li><a href=\"../macro.matches.html\">matches</a></li><li><a href=\"../macro.module_path.html\">module_path</a></li><li><a href=\"../macro.option_env.html\">option_env</a></li><li><a href=\"../macro.panic.html\">panic</a></li><li><a href=\"../macro.pattern_type.html\">pattern_type</a></li><li><a href=\"../macro.stringify.html\">stringify</a></li><li><a href=\"../macro.todo.html\">todo</a></li><li><a href=\"../macro.trace_macros.html\">trace_macros</a></li><li><a href=\"../macro.try.html\">try</a></li><li><a href=\"../macro.unimplemented.html\">unimplemented</a></li><li><a href=\"../macro.unreachable.html\">unreachable</a></li><li><a href=\"../macro.write.html\">write</a></li><li><a href=\"../macro.writeln.html\">writeln</a></li></ul></div></nav><div class=\"sidebar-resizer\"></div><main><div class=\"width-limiter\"><rustdoc-search><nav class=\"sub\">\n            <form class=\"search-form\">\n                <span></span> <!-- This empty span is a hacky fix for Safari - See #93184 -->\n                <div id=\"sidebar-button\" tabindex=\"-1\">\n                    <a href=\"../../core/all.html\" title=\"show sidebar\"></a>\n                </div>\n                <input class=\"search-input\" name=\"search\" aria-label=\"Run search in the documentation\" autocomplete=\"off\" spellcheck=\"false\" placeholder=\"Type ‘S’ or ‘/’ to search, ‘?’ for more options…\" type=\"search\">\n                <div id=\"help-button\" tabindex=\"-1\">\n                    <a href=\"../../help.html\" title=\"help\">?</a>\n                </div>\n                <div id=\"settings-menu\" tabindex=\"-1\">\n                    <a href=\"../../settings.html\" title=\"settings\">\n                        Settings\n                    </a>\n                </div>\n            </form>\n        </nav></rustdoc-search><section id=\"main-content\" class=\"content\"><div class=\"main-heading\"><h1>Module <a href=\"../index.html\">core</a>::<wbr><a class=\"mod\" href=\"#\">ffi</a><button id=\"copy-path\" title=\"Copy item path to clipboard\">Copy item path</button></h1><span class=\"out-of-band\"><span class=\"since\" title=\"Stable since Rust version 1.30.0\">1.30.0</span> · <a class=\"src\" href=\"../../src/core/ffi/mod.rs.html#1-613\">source</a> · <button id=\"toggle-all-docs\" title=\"collapse all docs\">[<span>−</span>]</button></span></div><details class=\"toggle top-doc\" open=\"\"><summary class=\"hideme\"><span>Expand description</span></summary><div class=\"docblock\"><p>Platform-specific types, as defined by C.</p>\n<p>Code that interacts via FFI will almost certainly be using the\nbase types provided by C, which aren’t nearly as nicely defined\nas Rust’s primitive types. This module provides types which will\nmatch those defined by C, so that code that interacts with C will\nrefer to the correct types.</p>\n</div></details><h2 id=\"reexports\" class=\"section-header\">Re-exports<a href=\"#reexports\" class=\"anchor\">§</a></h2><ul class=\"item-table\"><li><div class=\"item-name\" id=\"reexport.FromBytesWithNulError\"><code>pub use self::c_str::<a class=\"struct\" href=\"c_str/struct.FromBytesWithNulError.html\" title=\"struct core::ffi::c_str::FromBytesWithNulError\">FromBytesWithNulError</a>;</code></div></li><li><div class=\"item-name\" id=\"reexport.FromBytesUntilNulError\"><code>pub use self::c_str::<a class=\"struct\" href=\"c_str/struct.FromBytesUntilNulError.html\" title=\"struct core::ffi::c_str::FromBytesUntilNulError\">FromBytesUntilNulError</a>;</code></div></li></ul><h2 id=\"modules\" class=\"section-header\">Modules<a href=\"#modules\" class=\"anchor\">§</a></h2><ul class=\"item-table\"><li><div class=\"item-name\"><a class=\"mod\" href=\"c_str/index.html\" title=\"mod core::ffi::c_str\">c_str</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\"><a href=\"struct.CStr.html\" title=\"struct core::ffi::CStr\"><code>CStr</code></a> and its related types.</div></li></ul><h2 id=\"structs\" class=\"section-header\">Structs<a href=\"#structs\" class=\"anchor\">§</a></h2><ul class=\"item-table\"><li><div class=\"item-name\"><a class=\"struct\" href=\"struct.CStr.html\" title=\"struct core::ffi::CStr\">CStr</a></div><div class=\"desc docblock-short\">Representation of a borrowed C string.</div></li><li><div class=\"item-name\"><a class=\"struct\" href=\"struct.VaList.html\" title=\"struct core::ffi::VaList\">VaList</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A wrapper for a <code>va_list</code></div></li><li><div class=\"item-name\"><a class=\"struct\" href=\"struct.VaListImpl.html\" title=\"struct core::ffi::VaListImpl\">VaListImpl</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">x86_64 ABI implementation of a <code>va_list</code>.</div></li></ul><h2 id=\"enums\" class=\"section-header\">Enums<a href=\"#enums\" class=\"anchor\">§</a></h2><ul class=\"item-table\"><li><div class=\"item-name\"><a class=\"enum\" href=\"enum.c_void.html\" title=\"enum core::ffi::c_void\">c_void</a></div><div class=\"desc docblock-short\">Equivalent to C’s <code>void</code> type when used as a <a href=\"../primitive.pointer.html\" title=\"primitive pointer\">pointer</a>.</div></li></ul><h2 id=\"types\" class=\"section-header\">Type Aliases<a href=\"#types\" class=\"anchor\">§</a></h2><ul class=\"item-table\"><li><div class=\"item-name\"><a class=\"type\" href=\"type.c_char.html\" title=\"type core::ffi::c_char\">c_char</a></div><div class=\"desc docblock-short\">Equivalent to C’s <code>char</code> type.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.c_double.html\" title=\"type core::ffi::c_double\">c_double</a></div><div class=\"desc docblock-short\">Equivalent to C’s <code>double</code> type.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.c_float.html\" title=\"type core::ffi::c_float\">c_float</a></div><div class=\"desc docblock-short\">Equivalent to C’s <code>float</code> type.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.c_int.html\" title=\"type core::ffi::c_int\">c_int</a></div><div class=\"desc docblock-short\">Equivalent to C’s <code>signed int</code> (<code>int</code>) type.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.c_long.html\" title=\"type core::ffi::c_long\">c_long</a></div><div class=\"desc docblock-short\">Equivalent to C’s <code>signed long</code> (<code>long</code>) type.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.c_longlong.html\" title=\"type core::ffi::c_longlong\">c_longlong</a></div><div class=\"desc docblock-short\">Equivalent to C’s <code>signed long long</code> (<code>long long</code>) type.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.c_schar.html\" title=\"type core::ffi::c_schar\">c_schar</a></div><div class=\"desc docblock-short\">Equivalent to C’s <code>signed char</code> type.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.c_short.html\" title=\"type core::ffi::c_short\">c_short</a></div><div class=\"desc docblock-short\">Equivalent to C’s <code>signed short</code> (<code>short</code>) type.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.c_uchar.html\" title=\"type core::ffi::c_uchar\">c_uchar</a></div><div class=\"desc docblock-short\">Equivalent to C’s <code>unsigned char</code> type.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.c_uint.html\" title=\"type core::ffi::c_uint\">c_uint</a></div><div class=\"desc docblock-short\">Equivalent to C’s <code>unsigned int</code> type.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.c_ulong.html\" title=\"type core::ffi::c_ulong\">c_ulong</a></div><div class=\"desc docblock-short\">Equivalent to C’s <code>unsigned long</code> type.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.c_ulonglong.html\" title=\"type core::ffi::c_ulonglong\">c_ulonglong</a></div><div class=\"desc docblock-short\">Equivalent to C’s <code>unsigned long long</code> type.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.c_ushort.html\" title=\"type core::ffi::c_ushort\">c_ushort</a></div><div class=\"desc docblock-short\">Equivalent to C’s <code>unsigned short</code> type.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.c_ptrdiff_t.html\" title=\"type core::ffi::c_ptrdiff_t\">c_ptrdiff_t</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Equivalent to C’s <code>ptrdiff_t</code> type, from <code>stddef.h</code> (or <code>cstddef</code> for C++).</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.c_size_t.html\" title=\"type core::ffi::c_size_t\">c_size_t</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Equivalent to C’s <code>size_t</code> type, from <code>stddef.h</code> (or <code>cstddef</code> for C++).</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.c_ssize_t.html\" title=\"type core::ffi::c_ssize_t\">c_ssize_t</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Equivalent to C’s <code>ssize_t</code> (on POSIX) or <code>SSIZE_T</code> (on Windows) type.</div></li></ul></section></div></main></body></html>",
	"crawlDate": "2024-07-28T05:24:07.695Z"
}