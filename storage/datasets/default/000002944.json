{
	"title": "FileTypeExt in std::os::wasi::fs - Rust",
	"url": "https://doc.rust-lang.org/stable/std/os/wasi/fs/trait.FileTypeExt.html",
	"markdown": "# FileTypeExt in std::os::wasi::fs - Rust\n\n```\npub trait FileTypeExt {\n    // Required methods\n    fn is_block_device(&self) -> bool;\n    fn is_char_device(&self) -> bool;\n    fn is_socket_dgram(&self) -> bool;\n    fn is_socket_stream(&self) -> bool;\n\n    // Provided method\n    fn is_socket(&self) -> bool { ... }\n}\n```\n\nðŸ”¬This is a nightly-only experimental API. (`wasi_ext`Â [#71213](https://github.com/rust-lang/rust/issues/71213))\n\nAvailable on **WASI** only.\n\nExpand description\n\nWASI-specific extensions for [`fs::FileType`](../../../fs/struct.FileType.html \"struct std::fs::FileType\").\n\nAdds support for special WASI file types such as block/character devices, pipes, and sockets.\n\n[source](about:blank/src/std/os/wasi/fs.rs.html#464)\n\nðŸ”¬This is a nightly-only experimental API. (`wasi_ext`Â [#71213](https://github.com/rust-lang/rust/issues/71213))\n\nReturns `true` if this file type is a block device.\n\n[source](about:blank/src/std/os/wasi/fs.rs.html#466)\n\nðŸ”¬This is a nightly-only experimental API. (`wasi_ext`Â [#71213](https://github.com/rust-lang/rust/issues/71213))\n\nReturns `true` if this file type is a character device.\n\n[source](about:blank/src/std/os/wasi/fs.rs.html#468)\n\nðŸ”¬This is a nightly-only experimental API. (`wasi_ext`Â [#71213](https://github.com/rust-lang/rust/issues/71213))\n\nReturns `true` if this file type is a socket datagram.\n\n[source](about:blank/src/std/os/wasi/fs.rs.html#470)\n\nðŸ”¬This is a nightly-only experimental API. (`wasi_ext`Â [#71213](https://github.com/rust-lang/rust/issues/71213))\n\nReturns `true` if this file type is a socket stream.\n\n[source](about:blank/src/std/os/wasi/fs.rs.html#472-474)\n\nðŸ”¬This is a nightly-only experimental API. (`wasi_ext`Â [#71213](https://github.com/rust-lang/rust/issues/71213))\n\nReturns `true` if this file type is any type of socket.\n\n[source](about:blank/src/std/os/wasi/fs.rs.html#477-490)[Â§](#impl-FileTypeExt-for-FileType)",
	"html": "<!DOCTYPE html><html lang=\"en\" data-theme=\"light\"><head><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><meta name=\"generator\" content=\"rustdoc\"><meta name=\"description\" content=\"WASI-specific extensions for `fs::FileType`.\"><title>FileTypeExt in std::os::wasi::fs - Rust</title><script>if(window.location.protocol!==\"file:\")document.head.insertAdjacentHTML(\"beforeend\",\"SourceSerif4-Regular-46f98efaafac5295.ttf.woff2,FiraSans-Regular-018c141bf0843ffd.woff2,FiraSans-Medium-8f9a781e4970d388.woff2,SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2,SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\".split(\",\").map(f=>`<link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin href=\"../../../../static.files/${f}\">`).join(\"\"))</script><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../../../static.files/SourceSerif4-Regular-46f98efaafac5295.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../../../static.files/FiraSans-Regular-018c141bf0843ffd.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../../../static.files/FiraSans-Medium-8f9a781e4970d388.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../../../static.files/SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../../../static.files/SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\"><link rel=\"stylesheet\" href=\"../../../../static.files/normalize-76eba96aa4d2e634.css\"><link rel=\"stylesheet\" href=\"../../../../static.files/rustdoc-dd39b87e5fcfba68.css\"><meta name=\"rustdoc-vars\" data-root-path=\"../../../../\" data-static-root-path=\"../../../../static.files/\" data-current-crate=\"std\" data-themes=\"\" data-resource-suffix=\"1.80.0\" data-rustdoc-version=\"1.80.0 (051478957 2024-07-21)\" data-channel=\"1.80.0\" data-search-js=\"search-d52510db62a78183.js\" data-settings-js=\"settings-4313503d2e1961c2.js\"><script src=\"../../../../static.files/storage-118b08c4c78b968e.js\"></script><script defer=\"\" src=\"sidebar-items1.80.0.js\"></script><script defer=\"\" src=\"../../../../static.files/main-20a3ad099b048cf2.js\"></script><noscript><link rel=\"stylesheet\" href=\"../../../../static.files/noscript-df360f571f6edeae.css\"></noscript><link rel=\"alternate icon\" type=\"image/png\" href=\"../../../../static.files/favicon-32x32-422f7d1d52889060.png\"><link rel=\"icon\" type=\"image/svg+xml\" href=\"../../../../static.files/favicon-2c020d218678b618.svg\"></head><body class=\"rustdoc trait\"><!--[if lte IE 11]><div class=\"warning\">This old browser is unsupported and will most likely display funky things.</div><![endif]--><nav class=\"mobile-topbar\"><button class=\"sidebar-menu-toggle\" title=\"show sidebar\"></button><a class=\"logo-container\" href=\"../../../../std/index.html\"><img class=\"rust-logo\" src=\"../../../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"\"></a><h2 class=\"location\"><a href=\"#\">FileTypeExt</a></h2></nav><nav class=\"sidebar\"><div class=\"sidebar-crate\"><a class=\"logo-container\" href=\"../../../../std/index.html\"><img class=\"rust-logo\" src=\"../../../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"logo\"></a><h2><a href=\"../../../../std/index.html\">std</a><span class=\"version\">1.80.0</span></h2></div><div class=\"version\">(051478957\t2024-07-21)</div><h2 class=\"location\"><a href=\"#\">FileTypeExt</a></h2><div class=\"sidebar-elems\"><section><h3><a href=\"#required-methods\">Required Methods</a></h3><ul class=\"block\"><li><a href=\"#tymethod.is_block_device\">is_block_device</a></li><li><a href=\"#tymethod.is_char_device\">is_char_device</a></li><li><a href=\"#tymethod.is_socket_dgram\">is_socket_dgram</a></li><li><a href=\"#tymethod.is_socket_stream\">is_socket_stream</a></li></ul><h3><a href=\"#provided-methods\">Provided Methods</a></h3><ul class=\"block\"><li><a href=\"#method.is_socket\">is_socket</a></li></ul><h3><a href=\"#implementors\">Implementors</a></h3></section><h2><a href=\"index.html\">In std::os::wasi::fs</a></h2><h3><a href=\"index.html#traits\">Traits</a></h3><ul class=\"block trait\"><li><a href=\"trait.DirEntryExt.html\">DirEntryExt</a></li><li><a href=\"trait.FileExt.html\">FileExt</a></li><li><a href=\"trait.FileTypeExt.html\">FileTypeExt</a></li><li><a href=\"trait.MetadataExt.html\">MetadataExt</a></li><li><a href=\"trait.OpenOptionsExt.html\">OpenOptionsExt</a></li></ul><h3><a href=\"index.html#functions\">Functions</a></h3><ul class=\"block fn\"><li><a href=\"fn.link.html\">link</a></li><li><a href=\"fn.rename.html\">rename</a></li><li><a href=\"fn.symlink.html\">symlink</a></li><li><a href=\"fn.symlink_path.html\">symlink_path</a></li></ul></div></nav><div class=\"sidebar-resizer\"></div><main><div class=\"width-limiter\"><rustdoc-search><nav class=\"sub\">\n            <form class=\"search-form\">\n                <span></span> <!-- This empty span is a hacky fix for Safari - See #93184 -->\n                <div id=\"sidebar-button\" tabindex=\"-1\">\n                    <a href=\"../../../../std/all.html\" title=\"show sidebar\"></a>\n                </div>\n                <input class=\"search-input\" name=\"search\" aria-label=\"Run search in the documentation\" autocomplete=\"off\" spellcheck=\"false\" placeholder=\"Type â€˜Sâ€™ or â€˜/â€™ to search, â€˜?â€™ for more optionsâ€¦\" type=\"search\">\n                <div id=\"help-button\" tabindex=\"-1\">\n                    <a href=\"../../../../help.html\" title=\"help\">?</a>\n                </div>\n                <div id=\"settings-menu\" tabindex=\"-1\">\n                    <a href=\"../../../../settings.html\" title=\"settings\">\n                        Settings\n                    </a>\n                </div>\n            </form>\n        </nav></rustdoc-search><section id=\"main-content\" class=\"content\"><div class=\"main-heading\"><h1>Trait <a href=\"../../../index.html\">std</a>::<wbr><a href=\"../../index.html\">os</a>::<wbr><a href=\"../index.html\">wasi</a>::<wbr><a href=\"index.html\">fs</a>::<wbr><a class=\"trait\" href=\"#\">FileTypeExt</a><button id=\"copy-path\" title=\"Copy item path to clipboard\">Copy item path</button></h1><span class=\"out-of-band\"><a class=\"src\" href=\"../../../../src/std/os/wasi/fs.rs.html#462-475\">source</a> Â· <button id=\"toggle-all-docs\" title=\"collapse all docs\">[<span>âˆ’</span>]</button></span></div><pre class=\"rust item-decl\"><code>pub trait FileTypeExt {\n    // Required methods\n    fn <a href=\"#tymethod.is_block_device\" class=\"fn\">is_block_device</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"../../../primitive.bool.html\">bool</a>;\n<span class=\"item-spacer\"></span>    fn <a href=\"#tymethod.is_char_device\" class=\"fn\">is_char_device</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"../../../primitive.bool.html\">bool</a>;\n<span class=\"item-spacer\"></span>    fn <a href=\"#tymethod.is_socket_dgram\" class=\"fn\">is_socket_dgram</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"../../../primitive.bool.html\">bool</a>;\n<span class=\"item-spacer\"></span>    fn <a href=\"#tymethod.is_socket_stream\" class=\"fn\">is_socket_stream</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"../../../primitive.bool.html\">bool</a>;\n\n    // Provided method\n    fn <a href=\"#method.is_socket\" class=\"fn\">is_socket</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"../../../primitive.bool.html\">bool</a> { ... }\n}</code></pre><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>wasi_ext</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/71213\">#71213</a>)</span></div><div class=\"stab portability\">Available on <strong>WASI</strong> only.</div></span><details class=\"toggle top-doc\" open=\"\"><summary class=\"hideme\"><span>Expand description</span></summary><div class=\"docblock\"><p>WASI-specific extensions for <a href=\"../../../fs/struct.FileType.html\" title=\"struct std::fs::FileType\"><code>fs::FileType</code></a>.</p>\n<p>Adds support for special WASI file types such as block/character devices,\npipes, and sockets.</p>\n</div></details><h2 id=\"required-methods\" class=\"section-header\">Required Methods<a href=\"#required-methods\" class=\"anchor\">Â§</a></h2><div class=\"methods\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"tymethod.is_block_device\" class=\"method\"><a class=\"src rightside\" href=\"../../../../src/std/os/wasi/fs.rs.html#464\">source</a><h4 class=\"code-header\">fn <a href=\"#tymethod.is_block_device\" class=\"fn\">is_block_device</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"../../../primitive.bool.html\">bool</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>wasi_ext</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/71213\">#71213</a>)</span></div></span></summary><div class=\"docblock\"><p>Returns <code>true</code> if this file type is a block device.</p>\n</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"tymethod.is_char_device\" class=\"method\"><a class=\"src rightside\" href=\"../../../../src/std/os/wasi/fs.rs.html#466\">source</a><h4 class=\"code-header\">fn <a href=\"#tymethod.is_char_device\" class=\"fn\">is_char_device</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"../../../primitive.bool.html\">bool</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>wasi_ext</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/71213\">#71213</a>)</span></div></span></summary><div class=\"docblock\"><p>Returns <code>true</code> if this file type is a character device.</p>\n</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"tymethod.is_socket_dgram\" class=\"method\"><a class=\"src rightside\" href=\"../../../../src/std/os/wasi/fs.rs.html#468\">source</a><h4 class=\"code-header\">fn <a href=\"#tymethod.is_socket_dgram\" class=\"fn\">is_socket_dgram</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"../../../primitive.bool.html\">bool</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>wasi_ext</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/71213\">#71213</a>)</span></div></span></summary><div class=\"docblock\"><p>Returns <code>true</code> if this file type is a socket datagram.</p>\n</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"tymethod.is_socket_stream\" class=\"method\"><a class=\"src rightside\" href=\"../../../../src/std/os/wasi/fs.rs.html#470\">source</a><h4 class=\"code-header\">fn <a href=\"#tymethod.is_socket_stream\" class=\"fn\">is_socket_stream</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"../../../primitive.bool.html\">bool</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>wasi_ext</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/71213\">#71213</a>)</span></div></span></summary><div class=\"docblock\"><p>Returns <code>true</code> if this file type is a socket stream.</p>\n</div></details></div><h2 id=\"provided-methods\" class=\"section-header\">Provided Methods<a href=\"#provided-methods\" class=\"anchor\">Â§</a></h2><div class=\"methods\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.is_socket\" class=\"method\"><a class=\"src rightside\" href=\"../../../../src/std/os/wasi/fs.rs.html#472-474\">source</a><h4 class=\"code-header\">fn <a href=\"#method.is_socket\" class=\"fn\">is_socket</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"../../../primitive.bool.html\">bool</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>wasi_ext</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/71213\">#71213</a>)</span></div></span></summary><div class=\"docblock\"><p>Returns <code>true</code> if this file type is any type of socket.</p>\n</div></details></div><h2 id=\"implementors\" class=\"section-header\">Implementors<a href=\"#implementors\" class=\"anchor\">Â§</a></h2><div id=\"implementors-list\"><section id=\"impl-FileTypeExt-for-FileType\" class=\"impl\"><a class=\"src rightside\" href=\"../../../../src/std/os/wasi/fs.rs.html#477-490\">source</a><a href=\"#impl-FileTypeExt-for-FileType\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.FileTypeExt.html\" title=\"trait std::os::wasi::fs::FileTypeExt\">FileTypeExt</a> for <a class=\"struct\" href=\"../../../fs/struct.FileType.html\" title=\"struct std::fs::FileType\">FileType</a></h3></section></div><script src=\"../../../../trait.impl/std/os/wasi/fs/trait.FileTypeExt.js\" async=\"\"></script></section></div></main></body></html>",
	"crawlDate": "2024-07-28T05:26:27.860Z"
}