{
	"title": "TrustedStep in std::iter - Rust",
	"url": "https://doc.rust-lang.org/stable/std/iter/trait.TrustedStep.html",
	"markdown": "# TrustedStep in std::iter - Rust\n\n```\npub unsafe trait TrustedStep: Step + Copy { }\n```\n\nðŸ”¬This is a nightly-only experimental API. (`trusted_step`Â [#85731](https://github.com/rust-lang/rust/issues/85731))\n\nExpand description\n\nA type that upholds all invariants of [`Step`](trait.Step.html \"trait std::iter::Step\").\n\nThe invariants of [`Step::steps_between()`](about:blank/trait.Step.html#tymethod.steps_between \"associated function std::iter::Step::steps_between\") are a superset of the invariants of [`TrustedLen`](trait.TrustedLen.html \"trait std::iter::TrustedLen\"). As such, [`TrustedLen`](trait.TrustedLen.html \"trait std::iter::TrustedLen\") is implemented for all range types with the same generic type argument.\n\n## [Â§](#safety)Safety\n\nThe implementation of [`Step`](trait.Step.html \"trait std::iter::Step\") for the given type must guarantee all invariants of all methods are upheld. See the [`Step`](trait.Step.html \"trait std::iter::Step\") traitâ€™s documentation for details. Consumers are free to rely on the invariants in unsafe code.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/iter/range.rs.html#18)[Â§](#impl-TrustedStep-for-Char)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/iter/range.rs.html#18)[Â§](#impl-TrustedStep-for-char)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/iter/range.rs.html#18)[Â§](#impl-TrustedStep-for-i8)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/iter/range.rs.html#18)[Â§](#impl-TrustedStep-for-i16)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/iter/range.rs.html#18)[Â§](#impl-TrustedStep-for-i32)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/iter/range.rs.html#18)[Â§](#impl-TrustedStep-for-i64)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/iter/range.rs.html#18)[Â§](#impl-TrustedStep-for-i128)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/iter/range.rs.html#18)[Â§](#impl-TrustedStep-for-isize)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/iter/range.rs.html#18)[Â§](#impl-TrustedStep-for-u8)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/iter/range.rs.html#18)[Â§](#impl-TrustedStep-for-u16)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/iter/range.rs.html#18)[Â§](#impl-TrustedStep-for-u32)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/iter/range.rs.html#18)[Â§](#impl-TrustedStep-for-u64)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/iter/range.rs.html#18)[Â§](#impl-TrustedStep-for-u128)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/iter/range.rs.html#18)[Â§](#impl-TrustedStep-for-usize)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/iter/range.rs.html#18)[Â§](#impl-TrustedStep-for-Ipv4Addr)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/iter/range.rs.html#18)[Â§](#impl-TrustedStep-for-Ipv6Addr)",
	"html": "<!DOCTYPE html><html lang=\"en\" data-theme=\"light\"><head><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><meta name=\"generator\" content=\"rustdoc\"><meta name=\"description\" content=\"A type that upholds all invariants of `Step`.\"><title>TrustedStep in std::iter - Rust</title><script>if(window.location.protocol!==\"file:\")document.head.insertAdjacentHTML(\"beforeend\",\"SourceSerif4-Regular-46f98efaafac5295.ttf.woff2,FiraSans-Regular-018c141bf0843ffd.woff2,FiraSans-Medium-8f9a781e4970d388.woff2,SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2,SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\".split(\",\").map(f=>`<link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin href=\"../../static.files/${f}\">`).join(\"\"))</script><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceSerif4-Regular-46f98efaafac5295.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/FiraSans-Regular-018c141bf0843ffd.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/FiraSans-Medium-8f9a781e4970d388.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\"><link rel=\"stylesheet\" href=\"../../static.files/normalize-76eba96aa4d2e634.css\"><link rel=\"stylesheet\" href=\"../../static.files/rustdoc-dd39b87e5fcfba68.css\"><meta name=\"rustdoc-vars\" data-root-path=\"../../\" data-static-root-path=\"../../static.files/\" data-current-crate=\"std\" data-themes=\"\" data-resource-suffix=\"1.80.0\" data-rustdoc-version=\"1.80.0 (051478957 2024-07-21)\" data-channel=\"1.80.0\" data-search-js=\"search-d52510db62a78183.js\" data-settings-js=\"settings-4313503d2e1961c2.js\"><script src=\"../../static.files/storage-118b08c4c78b968e.js\"></script><script defer=\"\" src=\"sidebar-items1.80.0.js\"></script><script defer=\"\" src=\"../../static.files/main-20a3ad099b048cf2.js\"></script><noscript><link rel=\"stylesheet\" href=\"../../static.files/noscript-df360f571f6edeae.css\"></noscript><link rel=\"alternate icon\" type=\"image/png\" href=\"../../static.files/favicon-32x32-422f7d1d52889060.png\"><link rel=\"icon\" type=\"image/svg+xml\" href=\"../../static.files/favicon-2c020d218678b618.svg\"></head><body class=\"rustdoc trait\"><!--[if lte IE 11]><div class=\"warning\">This old browser is unsupported and will most likely display funky things.</div><![endif]--><nav class=\"mobile-topbar\"><button class=\"sidebar-menu-toggle\" title=\"show sidebar\"></button><a class=\"logo-container\" href=\"../../std/index.html\"><img class=\"rust-logo\" src=\"../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"\"></a><h2 class=\"location\"><a href=\"#\">TrustedStep</a></h2></nav><nav class=\"sidebar\"><div class=\"sidebar-crate\"><a class=\"logo-container\" href=\"../../std/index.html\"><img class=\"rust-logo\" src=\"../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"logo\"></a><h2><a href=\"../../std/index.html\">std</a><span class=\"version\">1.80.0</span></h2></div><div class=\"version\">(051478957\t2024-07-21)</div><h2 class=\"location\"><a href=\"#\">TrustedStep</a></h2><div class=\"sidebar-elems\"><section><h3><a href=\"#object-safety\">Object Safety</a></h3><h3><a href=\"#implementors\">Implementors</a></h3></section><h2><a href=\"index.html\">In std::iter</a></h2><h3><a href=\"index.html#structs\">Structs</a></h3><ul class=\"block struct\"><li><a href=\"struct.ArrayChunks.html\">ArrayChunks</a></li><li><a href=\"struct.ByRefSized.html\">ByRefSized</a></li><li><a href=\"struct.Chain.html\">Chain</a></li><li><a href=\"struct.Cloned.html\">Cloned</a></li><li><a href=\"struct.Copied.html\">Copied</a></li><li><a href=\"struct.Cycle.html\">Cycle</a></li><li><a href=\"struct.Empty.html\">Empty</a></li><li><a href=\"struct.Enumerate.html\">Enumerate</a></li><li><a href=\"struct.Filter.html\">Filter</a></li><li><a href=\"struct.FilterMap.html\">FilterMap</a></li><li><a href=\"struct.FlatMap.html\">FlatMap</a></li><li><a href=\"struct.Flatten.html\">Flatten</a></li><li><a href=\"struct.FromFn.html\">FromFn</a></li><li><a href=\"struct.Fuse.html\">Fuse</a></li><li><a href=\"struct.Inspect.html\">Inspect</a></li><li><a href=\"struct.Intersperse.html\">Intersperse</a></li><li><a href=\"struct.IntersperseWith.html\">IntersperseWith</a></li><li><a href=\"struct.Map.html\">Map</a></li><li><a href=\"struct.MapWhile.html\">MapWhile</a></li><li><a href=\"struct.MapWindows.html\">MapWindows</a></li><li><a href=\"struct.Once.html\">Once</a></li><li><a href=\"struct.OnceWith.html\">OnceWith</a></li><li><a href=\"struct.Peekable.html\">Peekable</a></li><li><a href=\"struct.Repeat.html\">Repeat</a></li><li><a href=\"struct.RepeatN.html\">RepeatN</a></li><li><a href=\"struct.RepeatWith.html\">RepeatWith</a></li><li><a href=\"struct.Rev.html\">Rev</a></li><li><a href=\"struct.Scan.html\">Scan</a></li><li><a href=\"struct.Skip.html\">Skip</a></li><li><a href=\"struct.SkipWhile.html\">SkipWhile</a></li><li><a href=\"struct.StepBy.html\">StepBy</a></li><li><a href=\"struct.Successors.html\">Successors</a></li><li><a href=\"struct.Take.html\">Take</a></li><li><a href=\"struct.TakeWhile.html\">TakeWhile</a></li><li><a href=\"struct.Zip.html\">Zip</a></li></ul><h3><a href=\"index.html#traits\">Traits</a></h3><ul class=\"block trait\"><li><a href=\"trait.DoubleEndedIterator.html\">DoubleEndedIterator</a></li><li><a href=\"trait.ExactSizeIterator.html\">ExactSizeIterator</a></li><li><a href=\"trait.Extend.html\">Extend</a></li><li><a href=\"trait.FromIterator.html\">FromIterator</a></li><li><a href=\"trait.FusedIterator.html\">FusedIterator</a></li><li><a href=\"trait.IntoIterator.html\">IntoIterator</a></li><li><a href=\"trait.Iterator.html\">Iterator</a></li><li><a href=\"trait.Product.html\">Product</a></li><li><a href=\"trait.Step.html\">Step</a></li><li><a href=\"trait.Sum.html\">Sum</a></li><li><a href=\"trait.TrustedLen.html\">TrustedLen</a></li><li><a href=\"trait.TrustedStep.html\">TrustedStep</a></li></ul><h3><a href=\"index.html#functions\">Functions</a></h3><ul class=\"block fn\"><li><a href=\"fn.chain.html\">chain</a></li><li><a href=\"fn.empty.html\">empty</a></li><li><a href=\"fn.from_coroutine.html\">from_coroutine</a></li><li><a href=\"fn.from_fn.html\">from_fn</a></li><li><a href=\"fn.once.html\">once</a></li><li><a href=\"fn.once_with.html\">once_with</a></li><li><a href=\"fn.repeat.html\">repeat</a></li><li><a href=\"fn.repeat_n.html\">repeat_n</a></li><li><a href=\"fn.repeat_with.html\">repeat_with</a></li><li><a href=\"fn.successors.html\">successors</a></li><li><a href=\"fn.zip.html\">zip</a></li></ul></div></nav><div class=\"sidebar-resizer\"></div><main><div class=\"width-limiter\"><rustdoc-search><nav class=\"sub\">\n            <form class=\"search-form\">\n                <span></span> <!-- This empty span is a hacky fix for Safari - See #93184 -->\n                <div id=\"sidebar-button\" tabindex=\"-1\">\n                    <a href=\"../../std/all.html\" title=\"show sidebar\"></a>\n                </div>\n                <input class=\"search-input\" name=\"search\" aria-label=\"Run search in the documentation\" autocomplete=\"off\" spellcheck=\"false\" placeholder=\"Type â€˜Sâ€™ or â€˜/â€™ to search, â€˜?â€™ for more optionsâ€¦\" type=\"search\">\n                <div id=\"help-button\" tabindex=\"-1\">\n                    <a href=\"../../help.html\" title=\"help\">?</a>\n                </div>\n                <div id=\"settings-menu\" tabindex=\"-1\">\n                    <a href=\"../../settings.html\" title=\"settings\">\n                        Settings\n                    </a>\n                </div>\n            </form>\n        </nav></rustdoc-search><section id=\"main-content\" class=\"content\"><div class=\"main-heading\"><h1>Trait <a href=\"../index.html\">std</a>::<wbr><a href=\"index.html\">iter</a>::<wbr><a class=\"trait\" href=\"#\">TrustedStep</a><button id=\"copy-path\" title=\"Copy item path to clipboard\">Copy item path</button></h1><span class=\"out-of-band\"><a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/marker.rs.html#116\">source</a> Â· <button id=\"toggle-all-docs\" title=\"collapse all docs\">[<span>âˆ’</span>]</button></span></div><pre class=\"rust item-decl\"><code>pub unsafe trait TrustedStep: <a class=\"trait\" href=\"trait.Step.html\" title=\"trait std::iter::Step\">Step</a> + <a class=\"trait\" href=\"../marker/trait.Copy.html\" title=\"trait std::marker::Copy\">Copy</a> { }</code></pre><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>trusted_step</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/85731\">#85731</a>)</span></div></span><details class=\"toggle top-doc\" open=\"\"><summary class=\"hideme\"><span>Expand description</span></summary><div class=\"docblock\"><p>A type that upholds all invariants of <a href=\"trait.Step.html\" title=\"trait std::iter::Step\"><code>Step</code></a>.</p>\n<p>The invariants of <a href=\"trait.Step.html#tymethod.steps_between\" title=\"associated function std::iter::Step::steps_between\"><code>Step::steps_between()</code></a> are a superset of the invariants\nof <a href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\"><code>TrustedLen</code></a>. As such, <a href=\"trait.TrustedLen.html\" title=\"trait std::iter::TrustedLen\"><code>TrustedLen</code></a> is implemented for all range\ntypes with the same generic type argument.</p>\n<h2 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">Â§</a>Safety</h2>\n<p>The implementation of <a href=\"trait.Step.html\" title=\"trait std::iter::Step\"><code>Step</code></a> for the given type must guarantee all\ninvariants of all methods are upheld. See the <a href=\"trait.Step.html\" title=\"trait std::iter::Step\"><code>Step</code></a> traitâ€™s documentation\nfor details. Consumers are free to rely on the invariants in unsafe code.</p>\n</div></details><h2 id=\"object-safety\" class=\"section-header\">Object Safety<a href=\"#object-safety\" class=\"anchor\">Â§</a></h2><div class=\"object-safety-info\">This trait is <b>not</b> <a href=\"https://doc.rust-lang.org/1.80.0/reference/items/traits.html#object-safety\">object safe</a>.</div><h2 id=\"implementors\" class=\"section-header\">Implementors<a href=\"#implementors\" class=\"anchor\">Â§</a></h2><div id=\"implementors-list\"><section id=\"impl-TrustedStep-for-Char\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/range.rs.html#18\">source</a><a href=\"#impl-TrustedStep-for-Char\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.TrustedStep.html\" title=\"trait std::iter::TrustedStep\">TrustedStep</a> for <a class=\"enum\" href=\"../ascii/enum.Char.html\" title=\"enum std::ascii::Char\">AsciiChar</a></h3></section><section id=\"impl-TrustedStep-for-char\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/range.rs.html#18\">source</a><a href=\"#impl-TrustedStep-for-char\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.TrustedStep.html\" title=\"trait std::iter::TrustedStep\">TrustedStep</a> for <a class=\"primitive\" href=\"../primitive.char.html\">char</a></h3></section><section id=\"impl-TrustedStep-for-i8\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/range.rs.html#18\">source</a><a href=\"#impl-TrustedStep-for-i8\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.TrustedStep.html\" title=\"trait std::iter::TrustedStep\">TrustedStep</a> for <a class=\"primitive\" href=\"../primitive.i8.html\">i8</a></h3></section><section id=\"impl-TrustedStep-for-i16\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/range.rs.html#18\">source</a><a href=\"#impl-TrustedStep-for-i16\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.TrustedStep.html\" title=\"trait std::iter::TrustedStep\">TrustedStep</a> for <a class=\"primitive\" href=\"../primitive.i16.html\">i16</a></h3></section><section id=\"impl-TrustedStep-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/range.rs.html#18\">source</a><a href=\"#impl-TrustedStep-for-i32\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.TrustedStep.html\" title=\"trait std::iter::TrustedStep\">TrustedStep</a> for <a class=\"primitive\" href=\"../primitive.i32.html\">i32</a></h3></section><section id=\"impl-TrustedStep-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/range.rs.html#18\">source</a><a href=\"#impl-TrustedStep-for-i64\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.TrustedStep.html\" title=\"trait std::iter::TrustedStep\">TrustedStep</a> for <a class=\"primitive\" href=\"../primitive.i64.html\">i64</a></h3></section><section id=\"impl-TrustedStep-for-i128\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/range.rs.html#18\">source</a><a href=\"#impl-TrustedStep-for-i128\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.TrustedStep.html\" title=\"trait std::iter::TrustedStep\">TrustedStep</a> for <a class=\"primitive\" href=\"../primitive.i128.html\">i128</a></h3></section><section id=\"impl-TrustedStep-for-isize\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/range.rs.html#18\">source</a><a href=\"#impl-TrustedStep-for-isize\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.TrustedStep.html\" title=\"trait std::iter::TrustedStep\">TrustedStep</a> for <a class=\"primitive\" href=\"../primitive.isize.html\">isize</a></h3></section><section id=\"impl-TrustedStep-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/range.rs.html#18\">source</a><a href=\"#impl-TrustedStep-for-u8\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.TrustedStep.html\" title=\"trait std::iter::TrustedStep\">TrustedStep</a> for <a class=\"primitive\" href=\"../primitive.u8.html\">u8</a></h3></section><section id=\"impl-TrustedStep-for-u16\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/range.rs.html#18\">source</a><a href=\"#impl-TrustedStep-for-u16\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.TrustedStep.html\" title=\"trait std::iter::TrustedStep\">TrustedStep</a> for <a class=\"primitive\" href=\"../primitive.u16.html\">u16</a></h3></section><section id=\"impl-TrustedStep-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/range.rs.html#18\">source</a><a href=\"#impl-TrustedStep-for-u32\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.TrustedStep.html\" title=\"trait std::iter::TrustedStep\">TrustedStep</a> for <a class=\"primitive\" href=\"../primitive.u32.html\">u32</a></h3></section><section id=\"impl-TrustedStep-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/range.rs.html#18\">source</a><a href=\"#impl-TrustedStep-for-u64\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.TrustedStep.html\" title=\"trait std::iter::TrustedStep\">TrustedStep</a> for <a class=\"primitive\" href=\"../primitive.u64.html\">u64</a></h3></section><section id=\"impl-TrustedStep-for-u128\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/range.rs.html#18\">source</a><a href=\"#impl-TrustedStep-for-u128\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.TrustedStep.html\" title=\"trait std::iter::TrustedStep\">TrustedStep</a> for <a class=\"primitive\" href=\"../primitive.u128.html\">u128</a></h3></section><section id=\"impl-TrustedStep-for-usize\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/range.rs.html#18\">source</a><a href=\"#impl-TrustedStep-for-usize\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.TrustedStep.html\" title=\"trait std::iter::TrustedStep\">TrustedStep</a> for <a class=\"primitive\" href=\"../primitive.usize.html\">usize</a></h3></section><section id=\"impl-TrustedStep-for-Ipv4Addr\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/range.rs.html#18\">source</a><a href=\"#impl-TrustedStep-for-Ipv4Addr\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.TrustedStep.html\" title=\"trait std::iter::TrustedStep\">TrustedStep</a> for <a class=\"struct\" href=\"../net/struct.Ipv4Addr.html\" title=\"struct std::net::Ipv4Addr\">Ipv4Addr</a></h3></section><section id=\"impl-TrustedStep-for-Ipv6Addr\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/range.rs.html#18\">source</a><a href=\"#impl-TrustedStep-for-Ipv6Addr\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.TrustedStep.html\" title=\"trait std::iter::TrustedStep\">TrustedStep</a> for <a class=\"struct\" href=\"../net/struct.Ipv6Addr.html\" title=\"struct std::net::Ipv6Addr\">Ipv6Addr</a></h3></section></div><script src=\"../../trait.impl/core/iter/traits/marker/trait.TrustedStep.js\" data-ignore-extern-crates=\"core\" async=\"\"></script></section></div></main></body></html>",
	"crawlDate": "2024-07-28T05:21:04.777Z"
}