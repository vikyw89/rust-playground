{
	"title": "FromStr in std::str - Rust",
	"url": "https://doc.rust-lang.org/stable/std/str/trait.FromStr.html",
	"markdown": "# FromStr in std::str - Rust\n\n## Trait [std](../index.html)::[str](index.html)::[FromStr](#)\n\n1.0.0 · [source](https://doc.rust-lang.org/1.80.0/src/core/str/traits.rs.html#612) ·\n\n```\npub trait FromStr: Sized {\n    type Err;\n\n    // Required method\n    fn from_str(s: &str) -> Result<Self, Self::Err>;\n}\n```\n\nExpand description\n\nParse a value from a string\n\n`FromStr`’s [`from_str`](about:blank/trait.FromStr.html#tymethod.from_str \"associated function std::str::FromStr::from_str\") method is often used implicitly, through [`str`](../primitive.str.html \"primitive str\")’s [`parse`](about:blank/primitive.str.html#method.parse \"method str::parse\") method. See [`parse`](about:blank/primitive.str.html#method.parse \"method str::parse\")’s documentation for examples.\n\n`FromStr` does not have a lifetime parameter, and so you can only parse types that do not contain a lifetime parameter themselves. In other words, you can parse an `i32` with `FromStr`, but not a `&i32`. You can parse a struct that contains an `i32`, but not one that contains an `&i32`.\n\n## [§](#examples)Examples\n\nBasic implementation of `FromStr` on an example `Point` type:\n\n```\nuse std::str::FromStr;\n\n#[derive(Debug, PartialEq)]\nstruct Point {\n    x: i32,\n    y: i32\n}\n\n#[derive(Debug, PartialEq, Eq)]\nstruct ParsePointError;\n\nimpl FromStr for Point {\n    type Err = ParsePointError;\n\n    fn from_str(s: &str) -> Result<Self, Self::Err> {\n        let (x, y) = s\n            .strip_prefix('(')\n            .and_then(|s| s.strip_suffix(')'))\n            .and_then(|s| s.split_once(','))\n            .ok_or(ParsePointError)?;\n\n        let x_fromstr = x.parse::<i32>().map_err(|_| ParsePointError)?;\n        let y_fromstr = y.parse::<i32>().map_err(|_| ParsePointError)?;\n\n        Ok(Point { x: x_fromstr, y: y_fromstr })\n    }\n}\n\nlet expected = Ok(Point { x: 1, y: 2 });\n// Explicit call\nassert_eq!(Point::from_str(\"(1,2)\"), expected);\n// Implicit calls, through parse\nassert_eq!(\"(1,2)\".parse(), expected);\nassert_eq!(\"(1,2)\".parse::<Point>(), expected);\n// Invalid input string\nassert!(Point::from_str(\"(1 2)\").is_err());\n```\n\n[Run](https://play.rust-lang.org/?code=%23!%5Ballow(unused)%5D%0Afn+main()+%7B%0A++++use+std::str::FromStr;%0A++++%0A++++%23%5Bderive(Debug,+PartialEq)%5D%0A++++struct+Point+%7B%0A++++++++x:+i32,%0A++++++++y:+i32%0A++++%7D%0A++++%0A++++%23%5Bderive(Debug,+PartialEq,+Eq)%5D%0A++++struct+ParsePointError;%0A++++%0A++++impl+FromStr+for+Point+%7B%0A++++++++type+Err+=+ParsePointError;%0A++++%0A++++++++fn+from_str(s:+%26str)+-%3E+Result%3CSelf,+Self::Err%3E+%7B%0A++++++++++++let+(x,+y)+=+s%0A++++++++++++++++.strip_prefix(%27(%27)%0A++++++++++++++++.and_then(%7Cs%7C+s.strip_suffix(%27)%27))%0A++++++++++++++++.and_then(%7Cs%7C+s.split_once(%27,%27))%0A++++++++++++++++.ok_or(ParsePointError)?;%0A++++%0A++++++++++++let+x_fromstr+=+x.parse::%3Ci32%3E().map_err(%7C_%7C+ParsePointError)?;%0A++++++++++++let+y_fromstr+=+y.parse::%3Ci32%3E().map_err(%7C_%7C+ParsePointError)?;%0A++++%0A++++++++++++Ok(Point+%7B+x:+x_fromstr,+y:+y_fromstr+%7D)%0A++++++++%7D%0A++++%7D%0A++++%0A++++let+expected+=+Ok(Point+%7B+x:+1,+y:+2+%7D);%0A++++//+Explicit+call%0A++++assert_eq!(Point::from_str(%22(1,2)%22),+expected);%0A++++//+Implicit+calls,+through+parse%0A++++assert_eq!(%22(1,2)%22.parse(),+expected);%0A++++assert_eq!(%22(1,2)%22.parse::%3CPoint%3E(),+expected);%0A++++//+Invalid+input+string%0A++++assert!(Point::from_str(%22(1+2)%22).is_err());%0A%7D&edition=2021)\n\n1.0.0 · [source](https://doc.rust-lang.org/1.80.0/src/core/str/traits.rs.html#615)\n\nThe associated error which can be returned from parsing.\n\n1.0.0 · [source](https://doc.rust-lang.org/1.80.0/src/core/str/traits.rs.html#637)\n\nParses a string `s` to return a value of this type.\n\nIf parsing succeeds, return the value inside [`Ok`](about:blank/result/enum.Result.html#variant.Ok \"variant std::result::Result::Ok\"), otherwise when the string is ill-formatted return an error specific to the inside [`Err`](about:blank/result/enum.Result.html#variant.Err \"variant std::result::Result::Err\"). The error type is specific to the implementation of the trait.\n\n##### [§](#examples-1)Examples\n\nBasic usage with [`i32`](../primitive.i32.html \"primitive i32\"), a type that implements `FromStr`:\n\n```\nuse std::str::FromStr;\n\nlet s = \"5\";\nlet x = i32::from_str(s).unwrap();\n\nassert_eq!(5, x);\n```\n\n[Run](https://play.rust-lang.org/?code=%23!%5Ballow(unused)%5D%0Afn+main()+%7B%0A++++use+std::str::FromStr;%0A++++%0A++++let+s+=+%225%22;%0A++++let+x+=+i32::from_str(s).unwrap();%0A++++%0A++++assert_eq!(5,+x);%0A%7D&edition=2021)",
	"html": "<!DOCTYPE html><html lang=\"en\" data-theme=\"light\"><head><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><meta name=\"generator\" content=\"rustdoc\"><meta name=\"description\" content=\"Parse a value from a string\"><title>FromStr in std::str - Rust</title><script>if(window.location.protocol!==\"file:\")document.head.insertAdjacentHTML(\"beforeend\",\"SourceSerif4-Regular-46f98efaafac5295.ttf.woff2,FiraSans-Regular-018c141bf0843ffd.woff2,FiraSans-Medium-8f9a781e4970d388.woff2,SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2,SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\".split(\",\").map(f=>`<link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin href=\"../../static.files/${f}\">`).join(\"\"))</script><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceSerif4-Regular-46f98efaafac5295.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/FiraSans-Regular-018c141bf0843ffd.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/FiraSans-Medium-8f9a781e4970d388.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\"><link rel=\"stylesheet\" href=\"../../static.files/normalize-76eba96aa4d2e634.css\"><link rel=\"stylesheet\" href=\"../../static.files/rustdoc-dd39b87e5fcfba68.css\"><meta name=\"rustdoc-vars\" data-root-path=\"../../\" data-static-root-path=\"../../static.files/\" data-current-crate=\"std\" data-themes=\"\" data-resource-suffix=\"1.80.0\" data-rustdoc-version=\"1.80.0 (051478957 2024-07-21)\" data-channel=\"1.80.0\" data-search-js=\"search-d52510db62a78183.js\" data-settings-js=\"settings-4313503d2e1961c2.js\"><script src=\"../../static.files/storage-118b08c4c78b968e.js\"></script><script defer=\"\" src=\"sidebar-items1.80.0.js\"></script><script defer=\"\" src=\"../../static.files/main-20a3ad099b048cf2.js\"></script><noscript><link rel=\"stylesheet\" href=\"../../static.files/noscript-df360f571f6edeae.css\"></noscript><link rel=\"alternate icon\" type=\"image/png\" href=\"../../static.files/favicon-32x32-422f7d1d52889060.png\"><link rel=\"icon\" type=\"image/svg+xml\" href=\"../../static.files/favicon-2c020d218678b618.svg\"></head><body class=\"rustdoc trait\"><!--[if lte IE 11]><div class=\"warning\">This old browser is unsupported and will most likely display funky things.</div><![endif]--><nav class=\"mobile-topbar\"><button class=\"sidebar-menu-toggle\" title=\"show sidebar\"></button><a class=\"logo-container\" href=\"../../std/index.html\"><img class=\"rust-logo\" src=\"../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"\"></a><h2 class=\"location\"><a href=\"#\">FromStr</a></h2></nav><nav class=\"sidebar\"><div class=\"sidebar-crate\"><a class=\"logo-container\" href=\"../../std/index.html\"><img class=\"rust-logo\" src=\"../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"logo\"></a><h2><a href=\"../../std/index.html\">std</a><span class=\"version\">1.80.0</span></h2></div><div class=\"version\">(051478957\t2024-07-21)</div><h2 class=\"location\"><a href=\"#\">FromStr</a></h2><div class=\"sidebar-elems\"><section><h3><a href=\"#required-associated-types\">Required Associated Types</a></h3><ul class=\"block\"><li><a href=\"#associatedtype.Err\">Err</a></li></ul><h3><a href=\"#required-methods\">Required Methods</a></h3><ul class=\"block\"><li><a href=\"#tymethod.from_str\">from_str</a></li></ul><h3><a href=\"#object-safety\">Object Safety</a></h3><h3><a href=\"#implementors\">Implementors</a></h3></section><h2><a href=\"index.html\">In std::str</a></h2><h3><a href=\"index.html#modules\">Modules</a></h3><ul class=\"block mod\"><li><a href=\"pattern/index.html\">pattern</a></li></ul><h3><a href=\"index.html#structs\">Structs</a></h3><ul class=\"block struct\"><li><a href=\"struct.Bytes.html\">Bytes</a></li><li><a href=\"struct.CharIndices.html\">CharIndices</a></li><li><a href=\"struct.Chars.html\">Chars</a></li><li><a href=\"struct.EncodeUtf16.html\">EncodeUtf16</a></li><li><a href=\"struct.EscapeDebug.html\">EscapeDebug</a></li><li><a href=\"struct.EscapeDefault.html\">EscapeDefault</a></li><li><a href=\"struct.EscapeUnicode.html\">EscapeUnicode</a></li><li><a href=\"struct.Lines.html\">Lines</a></li><li><a href=\"struct.LinesAny.html\">LinesAny</a></li><li><a href=\"struct.MatchIndices.html\">MatchIndices</a></li><li><a href=\"struct.Matches.html\">Matches</a></li><li><a href=\"struct.ParseBoolError.html\">ParseBoolError</a></li><li><a href=\"struct.RMatchIndices.html\">RMatchIndices</a></li><li><a href=\"struct.RMatches.html\">RMatches</a></li><li><a href=\"struct.RSplit.html\">RSplit</a></li><li><a href=\"struct.RSplitN.html\">RSplitN</a></li><li><a href=\"struct.RSplitTerminator.html\">RSplitTerminator</a></li><li><a href=\"struct.Split.html\">Split</a></li><li><a href=\"struct.SplitAsciiWhitespace.html\">SplitAsciiWhitespace</a></li><li><a href=\"struct.SplitInclusive.html\">SplitInclusive</a></li><li><a href=\"struct.SplitN.html\">SplitN</a></li><li><a href=\"struct.SplitTerminator.html\">SplitTerminator</a></li><li><a href=\"struct.SplitWhitespace.html\">SplitWhitespace</a></li><li><a href=\"struct.Utf8Chunk.html\">Utf8Chunk</a></li><li><a href=\"struct.Utf8Chunks.html\">Utf8Chunks</a></li><li><a href=\"struct.Utf8Error.html\">Utf8Error</a></li></ul><h3><a href=\"index.html#traits\">Traits</a></h3><ul class=\"block trait\"><li><a href=\"trait.FromStr.html\">FromStr</a></li></ul><h3><a href=\"index.html#functions\">Functions</a></h3><ul class=\"block fn\"><li><a href=\"fn.from_boxed_utf8_unchecked.html\">from_boxed_utf8_unchecked</a></li><li><a href=\"fn.from_raw_parts.html\">from_raw_parts</a></li><li><a href=\"fn.from_raw_parts_mut.html\">from_raw_parts_mut</a></li><li><a href=\"fn.from_utf8.html\">from_utf8</a></li><li><a href=\"fn.from_utf8_mut.html\">from_utf8_mut</a></li><li><a href=\"fn.from_utf8_unchecked.html\">from_utf8_unchecked</a></li><li><a href=\"fn.from_utf8_unchecked_mut.html\">from_utf8_unchecked_mut</a></li></ul></div></nav><div class=\"sidebar-resizer\"></div><main><div class=\"width-limiter\"><rustdoc-search><nav class=\"sub\">\n            <form class=\"search-form\">\n                <span></span> <!-- This empty span is a hacky fix for Safari - See #93184 -->\n                <div id=\"sidebar-button\" tabindex=\"-1\">\n                    <a href=\"../../std/all.html\" title=\"show sidebar\"></a>\n                </div>\n                <input class=\"search-input\" name=\"search\" aria-label=\"Run search in the documentation\" autocomplete=\"off\" spellcheck=\"false\" placeholder=\"Type ‘S’ or ‘/’ to search, ‘?’ for more options…\" type=\"search\">\n                <div id=\"help-button\" tabindex=\"-1\">\n                    <a href=\"../../help.html\" title=\"help\">?</a>\n                </div>\n                <div id=\"settings-menu\" tabindex=\"-1\">\n                    <a href=\"../../settings.html\" title=\"settings\">\n                        Settings\n                    </a>\n                </div>\n            </form>\n        </nav></rustdoc-search><section id=\"main-content\" class=\"content\"><div class=\"main-heading\"><h1>Trait <a href=\"../index.html\">std</a>::<wbr><a href=\"index.html\">str</a>::<wbr><a class=\"trait\" href=\"#\">FromStr</a><button id=\"copy-path\" title=\"Copy item path to clipboard\">Copy item path</button></h1><span class=\"out-of-band\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/str/traits.rs.html#612\">source</a> · <button id=\"toggle-all-docs\" title=\"collapse all docs\">[<span>−</span>]</button></span></div><pre class=\"rust item-decl\"><code>pub trait FromStr: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a> {\n    type <a href=\"#associatedtype.Err\" class=\"associatedtype\">Err</a>;\n\n    // Required method\n    fn <a href=\"#tymethod.from_str\" class=\"fn\">from_str</a>(s: &amp;<a class=\"primitive\" href=\"../primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"../result/enum.Result.html\" title=\"enum std::result::Result\">Result</a>&lt;Self, Self::<a class=\"associatedtype\" href=\"trait.FromStr.html#associatedtype.Err\" title=\"type std::str::FromStr::Err\">Err</a>&gt;;\n}</code></pre><details class=\"toggle top-doc\" open=\"\"><summary class=\"hideme\"><span>Expand description</span></summary><div class=\"docblock\"><p>Parse a value from a string</p>\n<p><code>FromStr</code>’s <a href=\"trait.FromStr.html#tymethod.from_str\" title=\"associated function std::str::FromStr::from_str\"><code>from_str</code></a> method is often used implicitly, through\n<a href=\"../primitive.str.html\" title=\"primitive str\"><code>str</code></a>’s <a href=\"../primitive.str.html#method.parse\" title=\"method str::parse\"><code>parse</code></a> method. See <a href=\"../primitive.str.html#method.parse\" title=\"method str::parse\"><code>parse</code></a>’s documentation for examples.</p>\n<p><code>FromStr</code> does not have a lifetime parameter, and so you can only parse types\nthat do not contain a lifetime parameter themselves. In other words, you can\nparse an <code>i32</code> with <code>FromStr</code>, but not a <code>&amp;i32</code>. You can parse a struct that\ncontains an <code>i32</code>, but not one that contains an <code>&amp;i32</code>.</p>\n<h2 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h2>\n<p>Basic implementation of <code>FromStr</code> on an example <code>Point</code> type:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::str::FromStr;\n\n<span class=\"attr\">#[derive(Debug, PartialEq)]\n</span><span class=\"kw\">struct </span>Point {\n    x: i32,\n    y: i32\n}\n\n<span class=\"attr\">#[derive(Debug, PartialEq, Eq)]\n</span><span class=\"kw\">struct </span>ParsePointError;\n\n<span class=\"kw\">impl </span>FromStr <span class=\"kw\">for </span>Point {\n    <span class=\"kw\">type </span><span class=\"prelude-val\">Err </span>= ParsePointError;\n\n    <span class=\"kw\">fn </span>from_str(s: <span class=\"kw-2\">&amp;</span>str) -&gt; <span class=\"prelude-ty\">Result</span>&lt;<span class=\"self\">Self</span>, <span class=\"self\">Self</span>::Err&gt; {\n        <span class=\"kw\">let </span>(x, y) = s\n            .strip_prefix(<span class=\"string\">'('</span>)\n            .and_then(|s| s.strip_suffix(<span class=\"string\">')'</span>))\n            .and_then(|s| s.split_once(<span class=\"string\">','</span>))\n            .ok_or(ParsePointError)<span class=\"question-mark\">?</span>;\n\n        <span class=\"kw\">let </span>x_fromstr = x.parse::&lt;i32&gt;().map_err(|<span class=\"kw\">_</span>| ParsePointError)<span class=\"question-mark\">?</span>;\n        <span class=\"kw\">let </span>y_fromstr = y.parse::&lt;i32&gt;().map_err(|<span class=\"kw\">_</span>| ParsePointError)<span class=\"question-mark\">?</span>;\n\n        <span class=\"prelude-val\">Ok</span>(Point { x: x_fromstr, y: y_fromstr })\n    }\n}\n\n<span class=\"kw\">let </span>expected = <span class=\"prelude-val\">Ok</span>(Point { x: <span class=\"number\">1</span>, y: <span class=\"number\">2 </span>});\n<span class=\"comment\">// Explicit call\n</span><span class=\"macro\">assert_eq!</span>(Point::from_str(<span class=\"string\">\"(1,2)\"</span>), expected);\n<span class=\"comment\">// Implicit calls, through parse\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"(1,2)\"</span>.parse(), expected);\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"(1,2)\"</span>.parse::&lt;Point&gt;(), expected);\n<span class=\"comment\">// Invalid input string\n</span><span class=\"macro\">assert!</span>(Point::from_str(<span class=\"string\">\"(1 2)\"</span>).is_err());</code></pre><a class=\"test-arrow\" target=\"_blank\" href=\"https://play.rust-lang.org/?code=%23!%5Ballow(unused)%5D%0Afn+main()+%7B%0A++++use+std::str::FromStr;%0A++++%0A++++%23%5Bderive(Debug,+PartialEq)%5D%0A++++struct+Point+%7B%0A++++++++x:+i32,%0A++++++++y:+i32%0A++++%7D%0A++++%0A++++%23%5Bderive(Debug,+PartialEq,+Eq)%5D%0A++++struct+ParsePointError;%0A++++%0A++++impl+FromStr+for+Point+%7B%0A++++++++type+Err+=+ParsePointError;%0A++++%0A++++++++fn+from_str(s:+%26str)+-%3E+Result%3CSelf,+Self::Err%3E+%7B%0A++++++++++++let+(x,+y)+=+s%0A++++++++++++++++.strip_prefix('(')%0A++++++++++++++++.and_then(%7Cs%7C+s.strip_suffix(')'))%0A++++++++++++++++.and_then(%7Cs%7C+s.split_once(','))%0A++++++++++++++++.ok_or(ParsePointError)?;%0A++++%0A++++++++++++let+x_fromstr+=+x.parse::%3Ci32%3E().map_err(%7C_%7C+ParsePointError)?;%0A++++++++++++let+y_fromstr+=+y.parse::%3Ci32%3E().map_err(%7C_%7C+ParsePointError)?;%0A++++%0A++++++++++++Ok(Point+%7B+x:+x_fromstr,+y:+y_fromstr+%7D)%0A++++++++%7D%0A++++%7D%0A++++%0A++++let+expected+=+Ok(Point+%7B+x:+1,+y:+2+%7D);%0A++++//+Explicit+call%0A++++assert_eq!(Point::from_str(%22(1,2)%22),+expected);%0A++++//+Implicit+calls,+through+parse%0A++++assert_eq!(%22(1,2)%22.parse(),+expected);%0A++++assert_eq!(%22(1,2)%22.parse::%3CPoint%3E(),+expected);%0A++++//+Invalid+input+string%0A++++assert!(Point::from_str(%22(1+2)%22).is_err());%0A%7D&amp;edition=2021\">Run</a></div>\n</div></details><h2 id=\"required-associated-types\" class=\"section-header\">Required Associated Types<a href=\"#required-associated-types\" class=\"anchor\">§</a></h2><div class=\"methods\"><details class=\"toggle\" open=\"\"><summary><section id=\"associatedtype.Err\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/str/traits.rs.html#615\">source</a></span><h4 class=\"code-header\">type <a href=\"#associatedtype.Err\" class=\"associatedtype\">Err</a></h4></section></summary><div class=\"docblock\"><p>The associated error which can be returned from parsing.</p>\n</div></details></div><h2 id=\"required-methods\" class=\"section-header\">Required Methods<a href=\"#required-methods\" class=\"anchor\">§</a></h2><div class=\"methods\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"tymethod.from_str\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/str/traits.rs.html#637\">source</a></span><h4 class=\"code-header\">fn <a href=\"#tymethod.from_str\" class=\"fn\">from_str</a>(s: &amp;<a class=\"primitive\" href=\"../primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"../result/enum.Result.html\" title=\"enum std::result::Result\">Result</a>&lt;Self, Self::<a class=\"associatedtype\" href=\"trait.FromStr.html#associatedtype.Err\" title=\"type std::str::FromStr::Err\">Err</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Parses a string <code>s</code> to return a value of this type.</p>\n<p>If parsing succeeds, return the value inside <a href=\"../result/enum.Result.html#variant.Ok\" title=\"variant std::result::Result::Ok\"><code>Ok</code></a>, otherwise\nwhen the string is ill-formatted return an error specific to the\ninside <a href=\"../result/enum.Result.html#variant.Err\" title=\"variant std::result::Result::Err\"><code>Err</code></a>. The error type is specific to the implementation of the trait.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<p>Basic usage with <a href=\"../primitive.i32.html\" title=\"primitive i32\"><code>i32</code></a>, a type that implements <code>FromStr</code>:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::str::FromStr;\n\n<span class=\"kw\">let </span>s = <span class=\"string\">\"5\"</span>;\n<span class=\"kw\">let </span>x = i32::from_str(s).unwrap();\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"number\">5</span>, x);</code></pre><a class=\"test-arrow\" target=\"_blank\" href=\"https://play.rust-lang.org/?code=%23!%5Ballow(unused)%5D%0Afn+main()+%7B%0A++++use+std::str::FromStr;%0A++++%0A++++let+s+=+%225%22;%0A++++let+x+=+i32::from_str(s).unwrap();%0A++++%0A++++assert_eq!(5,+x);%0A%7D&amp;edition=2021\">Run</a></div>\n</div></details></div><h2 id=\"object-safety\" class=\"section-header\">Object Safety<a href=\"#object-safety\" class=\"anchor\">§</a></h2><div class=\"object-safety-info\">This trait is <b>not</b> <a href=\"https://doc.rust-lang.org/1.80.0/reference/items/traits.html#object-safety\">object safe</a>.</div><h2 id=\"implementors\" class=\"section-header\">Implementors<a href=\"#implementors\" class=\"anchor\">§</a></h2><div id=\"implementors-list\"><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-FromStr-for-IpAddr\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.7.0\">1.7.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/net/parser.rs.html#324\">source</a></span><a href=\"#impl-FromStr-for-IpAddr\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.FromStr.html\" title=\"trait std::str::FromStr\">FromStr</a> for <a class=\"enum\" href=\"../net/enum.IpAddr.html\" title=\"enum std::net::IpAddr\">IpAddr</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Err-1\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err-1\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"../net/struct.AddrParseError.html\" title=\"struct std::net::AddrParseError\">AddrParseError</a></h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-FromStr-for-SocketAddr\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/net/parser.rs.html#461\">source</a></span><a href=\"#impl-FromStr-for-SocketAddr\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.FromStr.html\" title=\"trait std::str::FromStr\">FromStr</a> for <a class=\"enum\" href=\"../net/enum.SocketAddr.html\" title=\"enum std::net::SocketAddr\">SocketAddr</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Err-2\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err-2\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"../net/struct.AddrParseError.html\" title=\"struct std::net::AddrParseError\">AddrParseError</a></h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-FromStr-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/str/traits.rs.html#641\">source</a></span><a href=\"#impl-FromStr-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.FromStr.html\" title=\"trait std::str::FromStr\">FromStr</a> for <a class=\"primitive\" href=\"../primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Err-3\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err-3\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"struct.ParseBoolError.html\" title=\"struct std::str::ParseBoolError\">ParseBoolError</a></h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-FromStr-for-char\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.20.0\">1.20.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/char/convert.rs.html#217\">source</a></span><a href=\"#impl-FromStr-for-char\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.FromStr.html\" title=\"trait std::str::FromStr\">FromStr</a> for <a class=\"primitive\" href=\"../primitive.char.html\">char</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Err-4\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err-4\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"../char/struct.ParseCharError.html\" title=\"struct std::char::ParseCharError\">ParseCharError</a></h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-FromStr-for-f32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/num/dec2flt/mod.rs.html#163\">source</a></span><a href=\"#impl-FromStr-for-f32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.FromStr.html\" title=\"trait std::str::FromStr\">FromStr</a> for <a class=\"primitive\" href=\"../primitive.f32.html\">f32</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Err-5\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err-5\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"../num/struct.ParseFloatError.html\" title=\"struct std::num::ParseFloatError\">ParseFloatError</a></h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-FromStr-for-f64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/num/dec2flt/mod.rs.html#164\">source</a></span><a href=\"#impl-FromStr-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.FromStr.html\" title=\"trait std::str::FromStr\">FromStr</a> for <a class=\"primitive\" href=\"../primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Err-6\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err-6\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"../num/struct.ParseFloatError.html\" title=\"struct std::num::ParseFloatError\">ParseFloatError</a></h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-FromStr-for-i8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/num/mod.rs.html#1389\">source</a></span><a href=\"#impl-FromStr-for-i8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.FromStr.html\" title=\"trait std::str::FromStr\">FromStr</a> for <a class=\"primitive\" href=\"../primitive.i8.html\">i8</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Err-7\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err-7\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"../num/struct.ParseIntError.html\" title=\"struct std::num::ParseIntError\">ParseIntError</a></h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-FromStr-for-i16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/num/mod.rs.html#1389\">source</a></span><a href=\"#impl-FromStr-for-i16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.FromStr.html\" title=\"trait std::str::FromStr\">FromStr</a> for <a class=\"primitive\" href=\"../primitive.i16.html\">i16</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Err-8\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err-8\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"../num/struct.ParseIntError.html\" title=\"struct std::num::ParseIntError\">ParseIntError</a></h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-FromStr-for-i32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/num/mod.rs.html#1389\">source</a></span><a href=\"#impl-FromStr-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.FromStr.html\" title=\"trait std::str::FromStr\">FromStr</a> for <a class=\"primitive\" href=\"../primitive.i32.html\">i32</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Err-9\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err-9\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"../num/struct.ParseIntError.html\" title=\"struct std::num::ParseIntError\">ParseIntError</a></h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-FromStr-for-i64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/num/mod.rs.html#1389\">source</a></span><a href=\"#impl-FromStr-for-i64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.FromStr.html\" title=\"trait std::str::FromStr\">FromStr</a> for <a class=\"primitive\" href=\"../primitive.i64.html\">i64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Err-10\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err-10\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"../num/struct.ParseIntError.html\" title=\"struct std::num::ParseIntError\">ParseIntError</a></h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-FromStr-for-i128\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/num/mod.rs.html#1389\">source</a></span><a href=\"#impl-FromStr-for-i128\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.FromStr.html\" title=\"trait std::str::FromStr\">FromStr</a> for <a class=\"primitive\" href=\"../primitive.i128.html\">i128</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Err-11\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err-11\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"../num/struct.ParseIntError.html\" title=\"struct std::num::ParseIntError\">ParseIntError</a></h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-FromStr-for-isize\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/num/mod.rs.html#1389\">source</a></span><a href=\"#impl-FromStr-for-isize\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.FromStr.html\" title=\"trait std::str::FromStr\">FromStr</a> for <a class=\"primitive\" href=\"../primitive.isize.html\">isize</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Err-12\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err-12\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"../num/struct.ParseIntError.html\" title=\"struct std::num::ParseIntError\">ParseIntError</a></h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-FromStr-for-u8\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/num/mod.rs.html#1389\">source</a></span><a href=\"#impl-FromStr-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.FromStr.html\" title=\"trait std::str::FromStr\">FromStr</a> for <a class=\"primitive\" href=\"../primitive.u8.html\">u8</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Err-13\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err-13\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"../num/struct.ParseIntError.html\" title=\"struct std::num::ParseIntError\">ParseIntError</a></h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-FromStr-for-u16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/num/mod.rs.html#1389\">source</a></span><a href=\"#impl-FromStr-for-u16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.FromStr.html\" title=\"trait std::str::FromStr\">FromStr</a> for <a class=\"primitive\" href=\"../primitive.u16.html\">u16</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Err-14\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err-14\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"../num/struct.ParseIntError.html\" title=\"struct std::num::ParseIntError\">ParseIntError</a></h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-FromStr-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/num/mod.rs.html#1389\">source</a></span><a href=\"#impl-FromStr-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.FromStr.html\" title=\"trait std::str::FromStr\">FromStr</a> for <a class=\"primitive\" href=\"../primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Err-15\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err-15\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"../num/struct.ParseIntError.html\" title=\"struct std::num::ParseIntError\">ParseIntError</a></h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-FromStr-for-u64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/num/mod.rs.html#1389\">source</a></span><a href=\"#impl-FromStr-for-u64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.FromStr.html\" title=\"trait std::str::FromStr\">FromStr</a> for <a class=\"primitive\" href=\"../primitive.u64.html\">u64</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Err-16\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err-16\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"../num/struct.ParseIntError.html\" title=\"struct std::num::ParseIntError\">ParseIntError</a></h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-FromStr-for-u128\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/num/mod.rs.html#1389\">source</a></span><a href=\"#impl-FromStr-for-u128\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.FromStr.html\" title=\"trait std::str::FromStr\">FromStr</a> for <a class=\"primitive\" href=\"../primitive.u128.html\">u128</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Err-17\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err-17\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"../num/struct.ParseIntError.html\" title=\"struct std::num::ParseIntError\">ParseIntError</a></h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-FromStr-for-usize\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/num/mod.rs.html#1389\">source</a></span><a href=\"#impl-FromStr-for-usize\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.FromStr.html\" title=\"trait std::str::FromStr\">FromStr</a> for <a class=\"primitive\" href=\"../primitive.usize.html\">usize</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Err-18\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err-18\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"../num/struct.ParseIntError.html\" title=\"struct std::num::ParseIntError\">ParseIntError</a></h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-FromStr-for-OsString\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"../../src/std/ffi/os_str.rs.html#1613-1620\">source</a></span><a href=\"#impl-FromStr-for-OsString\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.FromStr.html\" title=\"trait std::str::FromStr\">FromStr</a> for <a class=\"struct\" href=\"../ffi/struct.OsString.html\" title=\"struct std::ffi::OsString\">OsString</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Err-19\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err-19\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"enum\" href=\"../convert/enum.Infallible.html\" title=\"enum std::convert::Infallible\">Infallible</a></h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-FromStr-for-Ipv4Addr\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/net/parser.rs.html#355\">source</a></span><a href=\"#impl-FromStr-for-Ipv4Addr\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.FromStr.html\" title=\"trait std::str::FromStr\">FromStr</a> for <a class=\"struct\" href=\"../net/struct.Ipv4Addr.html\" title=\"struct std::net::Ipv4Addr\">Ipv4Addr</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Err-20\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err-20\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"../net/struct.AddrParseError.html\" title=\"struct std::net::AddrParseError\">AddrParseError</a></h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-FromStr-for-Ipv6Addr\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/net/parser.rs.html#381\">source</a></span><a href=\"#impl-FromStr-for-Ipv6Addr\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.FromStr.html\" title=\"trait std::str::FromStr\">FromStr</a> for <a class=\"struct\" href=\"../net/struct.Ipv6Addr.html\" title=\"struct std::net::Ipv6Addr\">Ipv6Addr</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Err-21\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err-21\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"../net/struct.AddrParseError.html\" title=\"struct std::net::AddrParseError\">AddrParseError</a></h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-FromStr-for-SocketAddrV4\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/net/parser.rs.html#407\">source</a></span><a href=\"#impl-FromStr-for-SocketAddrV4\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.FromStr.html\" title=\"trait std::str::FromStr\">FromStr</a> for <a class=\"struct\" href=\"../net/struct.SocketAddrV4.html\" title=\"struct std::net::SocketAddrV4\">SocketAddrV4</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Err-22\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err-22\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"../net/struct.AddrParseError.html\" title=\"struct std::net::AddrParseError\">AddrParseError</a></h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-FromStr-for-SocketAddrV6\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/net/parser.rs.html#433\">source</a></span><a href=\"#impl-FromStr-for-SocketAddrV6\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.FromStr.html\" title=\"trait std::str::FromStr\">FromStr</a> for <a class=\"struct\" href=\"../net/struct.SocketAddrV6.html\" title=\"struct std::net::SocketAddrV6\">SocketAddrV6</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Err-23\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err-23\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"../net/struct.AddrParseError.html\" title=\"struct std::net::AddrParseError\">AddrParseError</a></h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-FromStr-for-NonZero%3Ci8%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.35.0\">1.35.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/num/nonzero.rs.html#1666-1670\">source</a></span><a href=\"#impl-FromStr-for-NonZero%3Ci8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.FromStr.html\" title=\"trait std::str::FromStr\">FromStr</a> for <a class=\"struct\" href=\"../num/struct.NonZero.html\" title=\"struct std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"../primitive.i8.html\">i8</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Err-24\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err-24\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"../num/struct.ParseIntError.html\" title=\"struct std::num::ParseIntError\">ParseIntError</a></h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-FromStr-for-NonZero%3Ci16%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.35.0\">1.35.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/num/nonzero.rs.html#1672-1676\">source</a></span><a href=\"#impl-FromStr-for-NonZero%3Ci16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.FromStr.html\" title=\"trait std::str::FromStr\">FromStr</a> for <a class=\"struct\" href=\"../num/struct.NonZero.html\" title=\"struct std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"../primitive.i16.html\">i16</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Err-25\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err-25\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"../num/struct.ParseIntError.html\" title=\"struct std::num::ParseIntError\">ParseIntError</a></h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-FromStr-for-NonZero%3Ci32%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.35.0\">1.35.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/num/nonzero.rs.html#1678-1682\">source</a></span><a href=\"#impl-FromStr-for-NonZero%3Ci32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.FromStr.html\" title=\"trait std::str::FromStr\">FromStr</a> for <a class=\"struct\" href=\"../num/struct.NonZero.html\" title=\"struct std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"../primitive.i32.html\">i32</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Err-26\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err-26\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"../num/struct.ParseIntError.html\" title=\"struct std::num::ParseIntError\">ParseIntError</a></h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-FromStr-for-NonZero%3Ci64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.35.0\">1.35.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/num/nonzero.rs.html#1684-1688\">source</a></span><a href=\"#impl-FromStr-for-NonZero%3Ci64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.FromStr.html\" title=\"trait std::str::FromStr\">FromStr</a> for <a class=\"struct\" href=\"../num/struct.NonZero.html\" title=\"struct std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"../primitive.i64.html\">i64</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Err-27\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err-27\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"../num/struct.ParseIntError.html\" title=\"struct std::num::ParseIntError\">ParseIntError</a></h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-FromStr-for-NonZero%3Ci128%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.35.0\">1.35.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/num/nonzero.rs.html#1690-1694\">source</a></span><a href=\"#impl-FromStr-for-NonZero%3Ci128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.FromStr.html\" title=\"trait std::str::FromStr\">FromStr</a> for <a class=\"struct\" href=\"../num/struct.NonZero.html\" title=\"struct std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"../primitive.i128.html\">i128</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Err-28\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err-28\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"../num/struct.ParseIntError.html\" title=\"struct std::num::ParseIntError\">ParseIntError</a></h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-FromStr-for-NonZero%3Cisize%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.35.0\">1.35.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/num/nonzero.rs.html#1696-1700\">source</a></span><a href=\"#impl-FromStr-for-NonZero%3Cisize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.FromStr.html\" title=\"trait std::str::FromStr\">FromStr</a> for <a class=\"struct\" href=\"../num/struct.NonZero.html\" title=\"struct std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"../primitive.isize.html\">isize</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Err-29\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err-29\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"../num/struct.ParseIntError.html\" title=\"struct std::num::ParseIntError\">ParseIntError</a></h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-FromStr-for-NonZero%3Cu8%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.35.0\">1.35.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/num/nonzero.rs.html#1636-1639\">source</a></span><a href=\"#impl-FromStr-for-NonZero%3Cu8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.FromStr.html\" title=\"trait std::str::FromStr\">FromStr</a> for <a class=\"struct\" href=\"../num/struct.NonZero.html\" title=\"struct std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"../primitive.u8.html\">u8</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Err-30\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err-30\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"../num/struct.ParseIntError.html\" title=\"struct std::num::ParseIntError\">ParseIntError</a></h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-FromStr-for-NonZero%3Cu16%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.35.0\">1.35.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/num/nonzero.rs.html#1641-1644\">source</a></span><a href=\"#impl-FromStr-for-NonZero%3Cu16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.FromStr.html\" title=\"trait std::str::FromStr\">FromStr</a> for <a class=\"struct\" href=\"../num/struct.NonZero.html\" title=\"struct std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"../primitive.u16.html\">u16</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Err-31\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err-31\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"../num/struct.ParseIntError.html\" title=\"struct std::num::ParseIntError\">ParseIntError</a></h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-FromStr-for-NonZero%3Cu32%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.35.0\">1.35.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/num/nonzero.rs.html#1646-1649\">source</a></span><a href=\"#impl-FromStr-for-NonZero%3Cu32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.FromStr.html\" title=\"trait std::str::FromStr\">FromStr</a> for <a class=\"struct\" href=\"../num/struct.NonZero.html\" title=\"struct std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"../primitive.u32.html\">u32</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Err-32\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err-32\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"../num/struct.ParseIntError.html\" title=\"struct std::num::ParseIntError\">ParseIntError</a></h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-FromStr-for-NonZero%3Cu64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.35.0\">1.35.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/num/nonzero.rs.html#1651-1654\">source</a></span><a href=\"#impl-FromStr-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.FromStr.html\" title=\"trait std::str::FromStr\">FromStr</a> for <a class=\"struct\" href=\"../num/struct.NonZero.html\" title=\"struct std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"../primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Err-33\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err-33\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"../num/struct.ParseIntError.html\" title=\"struct std::num::ParseIntError\">ParseIntError</a></h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-FromStr-for-NonZero%3Cu128%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.35.0\">1.35.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/num/nonzero.rs.html#1656-1659\">source</a></span><a href=\"#impl-FromStr-for-NonZero%3Cu128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.FromStr.html\" title=\"trait std::str::FromStr\">FromStr</a> for <a class=\"struct\" href=\"../num/struct.NonZero.html\" title=\"struct std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"../primitive.u128.html\">u128</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Err-34\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err-34\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"../num/struct.ParseIntError.html\" title=\"struct std::num::ParseIntError\">ParseIntError</a></h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-FromStr-for-NonZero%3Cusize%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.35.0\">1.35.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/num/nonzero.rs.html#1661-1664\">source</a></span><a href=\"#impl-FromStr-for-NonZero%3Cusize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.FromStr.html\" title=\"trait std::str::FromStr\">FromStr</a> for <a class=\"struct\" href=\"../num/struct.NonZero.html\" title=\"struct std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"../primitive.usize.html\">usize</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Err-35\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err-35\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"../num/struct.ParseIntError.html\" title=\"struct std::num::ParseIntError\">ParseIntError</a></h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-FromStr-for-PathBuf\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.32.0\">1.32.0</span> · <a class=\"src\" href=\"../../src/std/path.rs.html#1750-1757\">source</a></span><a href=\"#impl-FromStr-for-PathBuf\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.FromStr.html\" title=\"trait std::str::FromStr\">FromStr</a> for <a class=\"struct\" href=\"../path/struct.PathBuf.html\" title=\"struct std::path::PathBuf\">PathBuf</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Err-36\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err-36\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"enum\" href=\"../convert/enum.Infallible.html\" title=\"enum std::convert::Infallible\">Infallible</a></h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-FromStr-for-String\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/alloc/string.rs.html#2509\">source</a></span><a href=\"#impl-FromStr-for-String\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.FromStr.html\" title=\"trait std::str::FromStr\">FromStr</a> for <a class=\"struct\" href=\"../string/struct.String.html\" title=\"struct std::string::String\">String</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Err-37\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err-37\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"enum\" href=\"../convert/enum.Infallible.html\" title=\"enum std::convert::Infallible\">Infallible</a></h4></section></div></details><div id=\"impl-FromStr-37\" class=\"impl\"><a href=\"#impl-FromStr-37\" class=\"anchor\"></a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for <a class=\"struct\" href=\"../../proc_macro/struct.Literal.html\" title=\"struct proc_macro::Literal\">Literal</a></h3></div><div id=\"impl-FromStr-38\" class=\"impl\"><a href=\"#impl-FromStr-38\" class=\"anchor\"></a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for <a class=\"struct\" href=\"../../proc_macro/struct.TokenStream.html\" title=\"struct proc_macro::TokenStream\">TokenStream</a></h3></div></div><script src=\"../../trait.impl/core/str/traits/trait.FromStr.js\" data-ignore-extern-crates=\"alloc,core\" async=\"\"></script></section></div></main></body></html>",
	"crawlDate": "2024-07-28T05:12:11.987Z"
}