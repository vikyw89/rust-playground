{
	"title": "f16 - Rust",
	"url": "https://doc.rust-lang.org/stable/std/primitive.f16.html",
	"markdown": "# f16 - Rust\n\n## Primitive Type [f16](#)\n\n🔬This is a nightly-only experimental API. (`f16` [#116909](https://github.com/rust-lang/rust/issues/116909))\n\nExpand description\n\nA 16-bit floating point type (specifically, the “binary16” type defined in IEEE 754-2008).\n\nThis type is very similar to [`f32`](primitive.f32.html \"primitive f32\") but has decreased precision because it uses half as many bits. Please see \\[the documentation for [`f32`](primitive.f32.html \"primitive f32\") or [Wikipedia on half-precision values](https://en.wikipedia.org/wiki/Half-precision_floating-point_format) for more information.\n\nNote that most common platforms will not support `f16` in hardware without enabling extra target features, with the notable exception of Apple Silicon (also known as M1, M2, etc.) processors. Hardware support on x86-64 requires the avx512fp16 feature, while RISC-V requires Zhf. Usually the fallback implementation will be to use `f32` hardware if it exists, and convert between `f16` and `f32` when performing math.\n\n_[See also the `std::f16::consts` module](f16/consts/index.html \"mod std::f16::consts\")._\n\n[source](about:blank/src/std/f16.rs.html#17-35)[§](#impl-f16)\n\n[source](about:blank/src/std/f16.rs.html#32-34)\n\n🔬This is a nightly-only experimental API. (`f16` [#116909](https://github.com/rust-lang/rust/issues/116909))\n\nRaises a number to an integer power.\n\nUsing this function is generally faster than using `powf`. It might have a different sequence of rounding operations than `powf`, so the results are not guaranteed to agree.\n\n##### [§](#unspecified-precision)Unspecified precision\n\nThe precision of this function is non-deterministic. This means it varies by platform, Rust version, and can even differ within the same execution from one invocation to the next.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/num/f16.rs.html#126)[§](#impl-f16-1)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/num/f16.rs.html#132)\n\n🔬This is a nightly-only experimental API. (`f16` [#116909](https://github.com/rust-lang/rust/issues/116909))\n\nThe radix or base of the internal representation of `f16`.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/num/f16.rs.html#136)\n\n🔬This is a nightly-only experimental API. (`f16` [#116909](https://github.com/rust-lang/rust/issues/116909))\n\nNumber of significant digits in base 2.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/num/f16.rs.html#147)\n\n🔬This is a nightly-only experimental API. (`f16` [#116909](https://github.com/rust-lang/rust/issues/116909))\n\nApproximate number of significant digits in base 10.\n\nThis is the maximum _x_ such that any decimal number with _x_ significant digits can be converted to `f16` and back without loss.\n\nEqual to floor(log10 2[`MANTISSA_DIGITS`](about:blank/primitive.f16.html#associatedconstant.MANTISSA_DIGITS \"associated constant f16::MANTISSA_DIGITS\") − 1).\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/num/f16.rs.html#158)\n\n🔬This is a nightly-only experimental API. (`f16` [#116909](https://github.com/rust-lang/rust/issues/116909))\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/num/f16.rs.html#166)\n\n🔬This is a nightly-only experimental API. (`f16` [#116909](https://github.com/rust-lang/rust/issues/116909))\n\nSmallest finite `f16` value.\n\nEqual to −[`MAX`](about:blank/primitive.f16.html#associatedconstant.MAX \"associated constant f16::MAX\").\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/num/f16.rs.html#173)\n\n🔬This is a nightly-only experimental API. (`f16` [#116909](https://github.com/rust-lang/rust/issues/116909))\n\nSmallest positive normal `f16` value.\n\nEqual to 2[`MIN_EXP`](about:blank/primitive.f16.html#associatedconstant.MIN_EXP \"associated constant f16::MIN_EXP\") − 1.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/num/f16.rs.html#182)\n\n🔬This is a nightly-only experimental API. (`f16` [#116909](https://github.com/rust-lang/rust/issues/116909))\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/num/f16.rs.html#189)\n\n🔬This is a nightly-only experimental API. (`f16` [#116909](https://github.com/rust-lang/rust/issues/116909))\n\nOne greater than the minimum possible normal power of 2 exponent.\n\nIf _x_ = `MIN_EXP`, then normal numbers ≥ 0.5 × 2_x_.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/num/f16.rs.html#195)\n\n🔬This is a nightly-only experimental API. (`f16` [#116909](https://github.com/rust-lang/rust/issues/116909))\n\nMaximum possible power of 2 exponent.\n\nIf _x_ = `MAX_EXP`, then normal numbers < 1 × 2_x_.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/num/f16.rs.html#203)\n\n🔬This is a nightly-only experimental API. (`f16` [#116909](https://github.com/rust-lang/rust/issues/116909))\n\nMinimum _x_ for which 10_x_ is normal.\n\nEqual to ceil(log10 [`MIN_POSITIVE`](about:blank/primitive.f16.html#associatedconstant.MIN_POSITIVE \"associated constant f16::MIN_POSITIVE\")).\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/num/f16.rs.html#210)\n\n🔬This is a nightly-only experimental API. (`f16` [#116909](https://github.com/rust-lang/rust/issues/116909))\n\nMaximum _x_ for which 10_x_ is normal.\n\nEqual to floor(log10 [`MAX`](about:blank/primitive.f16.html#associatedconstant.MAX \"associated constant f16::MAX\")).\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/num/f16.rs.html#217)\n\n🔬This is a nightly-only experimental API. (`f16` [#116909](https://github.com/rust-lang/rust/issues/116909))\n\nReturns `true` if this value is NaN.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/num/f16.rs.html#240)\n\n🔬This is a nightly-only experimental API. (`f16` [#116909](https://github.com/rust-lang/rust/issues/116909))\n\nReturns `true` if `self` has a positive sign, including `+0.0`, NaNs with positive sign bit and positive infinity. Note that IEEE 754 doesn’t assign any meaning to the sign bit in case of a NaN, and as Rust doesn’t guarantee that the bit pattern of NaNs are conserved over arithmetic operations, the result of `is_sign_positive` on a NaN might produce an unexpected result in some cases. See [explanation of NaN as a special value](primitive.f32.html \"primitive f32\") for more info.\n\n```\n#![feature(f16)]\n\nlet f = 7.0_f16;\nlet g = -7.0_f16;\n\nassert!(f.is_sign_positive());\nassert!(!g.is_sign_positive());\n```\n\n[Run](https://play.rust-lang.org/?code=%23!%5Ballow(unused)%5D%0A%23!%5Bfeature(f16)%5D%0A%0Afn+main()+%7B%0A++++let+f+=+7.0_f16;%0A++++let+g+=+-7.0_f16;%0A++++%0A++++assert!(f.is_sign_positive());%0A++++assert!(!g.is_sign_positive());%0A%7D&version=nightly&edition=2021)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/num/f16.rs.html#263)\n\n🔬This is a nightly-only experimental API. (`f16` [#116909](https://github.com/rust-lang/rust/issues/116909))\n\nReturns `true` if `self` has a negative sign, including `-0.0`, NaNs with negative sign bit and negative infinity. Note that IEEE 754 doesn’t assign any meaning to the sign bit in case of a NaN, and as Rust doesn’t guarantee that the bit pattern of NaNs are conserved over arithmetic operations, the result of `is_sign_negative` on a NaN might produce an unexpected result in some cases. See [explanation of NaN as a special value](primitive.f32.html \"primitive f32\") for more info.\n\n```\n#![feature(f16)]\n\nlet f = 7.0_f16;\nlet g = -7.0_f16;\n\nassert!(!f.is_sign_negative());\nassert!(g.is_sign_negative());\n```\n\n[Run](https://play.rust-lang.org/?code=%23!%5Ballow(unused)%5D%0A%23!%5Bfeature(f16)%5D%0A%0Afn+main()+%7B%0A++++let+f+=+7.0_f16;%0A++++let+g+=+-7.0_f16;%0A++++%0A++++assert!(!f.is_sign_negative());%0A++++assert!(g.is_sign_negative());%0A%7D&version=nightly&edition=2021)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/num/f16.rs.html#282)\n\n🔬This is a nightly-only experimental API. (`f16` [#116909](https://github.com/rust-lang/rust/issues/116909))\n\nRaw transmutation to `u16`.\n\nThis is currently identical to `transmute::<f16, u16>(self)` on all platforms.\n\nSee [`from_bits`](#method.from_bits) for some discussion of the portability of this operation (there are almost no issues).\n\nNote that this function is distinct from `as` casting, which attempts to preserve the _numeric_ value, and not the bitwise value.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/num/f16.rs.html#321)\n\n🔬This is a nightly-only experimental API. (`f16` [#116909](https://github.com/rust-lang/rust/issues/116909))\n\nRaw transmutation from `u16`.\n\nThis is currently identical to `transmute::<u16, f16>(v)` on all platforms. It turns out this is incredibly portable, for two reasons:\n\n-   Floats and Ints have the same endianness on all supported platforms.\n-   IEEE 754 very precisely specifies the bit layout of floats.\n\nHowever there is one caveat: prior to the 2008 version of IEEE 754, how to interpret the NaN signaling bit wasn’t actually specified. Most platforms (notably x86 and ARM) picked the interpretation that was ultimately standardized in 2008, but some didn’t (notably MIPS). As a result, all signaling NaNs on MIPS are quiet NaNs on x86, and vice-versa.\n\nRather than trying to preserve signaling-ness cross-platform, this implementation favors preserving the exact bits. This means that any payloads encoded in NaNs will be preserved even if the result of this method is sent over the network from an x86 machine to a MIPS one.\n\nIf the results of this method are only manipulated by the same architecture that produced them, then there is no portability concern.\n\nIf the input isn’t NaN, then there is no portability concern.\n\nIf you don’t care about signalingness (very likely), then there is no portability concern.\n\nNote that this function is distinct from `as` casting, which attempts to preserve the _numeric_ value, and not the bitwise value.\n\n1.0.0 · [source](https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#112)[§](#impl-Add%3C%26f16%3E-for-%26f16)\n\n[§](#associatedtype.Output-10)\n\nThe resulting type after applying the `+` operator.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#112)[§](#method.add)\n\n1.0.0 · [source](https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#112)[§](#impl-Add%3C%26f16%3E-for-f16)\n\n[§](#associatedtype.Output-12)\n\nThe resulting type after applying the `+` operator.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#112)[§](#method.add-2)\n\n1.0.0 · [source](https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#112)[§](#impl-Add%3Cf16%3E-for-%26f16)\n\n[§](#associatedtype.Output-11)\n\nThe resulting type after applying the `+` operator.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#112)[§](#method.add-1)\n\n1.0.0 (const: [unstable](https://github.com/rust-lang/rust/issues/90080 \"Tracking issue for const_ops\")) · [source](https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#112)[§](#impl-Add-for-f16)\n\n[§](#associatedtype.Output-13)\n\nThe resulting type after applying the `+` operator.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#112)[§](#method.add-3)\n\n1.22.0 · [source](https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#768)[§](#impl-AddAssign%3C%26f16%3E-for-f16)\n\n1.8.0 · [source](https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#768)[§](#impl-AddAssign-for-f16)\n\n1.0.0 · [source](https://doc.rust-lang.org/1.80.0/src/core/clone.rs.html#227-232)[§](#impl-Clone-for-f16)\n\n1.0.0 · [source](https://doc.rust-lang.org/1.80.0/src/core/fmt/float.rs.html#233)[§](#impl-Debug-for-f16)\n\n1.0.0 · [source](https://doc.rust-lang.org/1.80.0/src/core/default.rs.html#181)[§](#impl-Default-for-f16)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/default.rs.html#181)[§](#method.default)\n\nReturns the default value of `0.0`\n\n1.0.0 · [source](https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#509)[§](#impl-Div%3C%26f16%3E-for-%26f16)\n\n[§](#associatedtype.Output-15)\n\nThe resulting type after applying the `/` operator.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#509)[§](#method.div-1)\n\n1.0.0 · [source](https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#509)[§](#impl-Div%3C%26f16%3E-for-f16)\n\n[§](#associatedtype.Output-17)\n\nThe resulting type after applying the `/` operator.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#509)[§](#method.div-3)\n\n1.0.0 · [source](https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#509)[§](#impl-Div%3Cf16%3E-for-%26f16)\n\n[§](#associatedtype.Output-16)\n\nThe resulting type after applying the `/` operator.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#509)[§](#method.div-2)\n\n1.0.0 · [source](https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#509)[§](#impl-Div-for-f16)\n\n[§](#associatedtype.Output-14)\n\nThe resulting type after applying the `/` operator.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#509)[§](#method.div)\n\n1.22.0 · [source](https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#950)[§](#impl-DivAssign%3C%26f16%3E-for-f16)\n\n1.8.0 · [source](https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#950)[§](#impl-DivAssign-for-f16)\n\n1.6.0 · [source](https://doc.rust-lang.org/1.80.0/src/core/convert/num.rs.html#171)[§](#impl-From%3Cf16%3E-for-f128)\n\n1.6.0 · [source](https://doc.rust-lang.org/1.80.0/src/core/convert/num.rs.html#170)[§](#impl-From%3Cf16%3E-for-f64)\n\n1.0.0 · [source](https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#351)[§](#impl-Mul%3C%26f16%3E-for-%26f16)\n\n[§](#associatedtype.Output-2)\n\nThe resulting type after applying the `*` operator.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#351)[§](#method.mul-2)\n\n1.0.0 · [source](https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#351)[§](#impl-Mul%3C%26f16%3E-for-f16)\n\n[§](#associatedtype.Output)\n\nThe resulting type after applying the `*` operator.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#351)[§](#method.mul)\n\n1.0.0 · [source](https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#351)[§](#impl-Mul%3Cf16%3E-for-%26f16)\n\n[§](#associatedtype.Output-3)\n\nThe resulting type after applying the `*` operator.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#351)[§](#method.mul-3)\n\n1.0.0 · [source](https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#351)[§](#impl-Mul-for-f16)\n\n[§](#associatedtype.Output-1)\n\nThe resulting type after applying the `*` operator.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#351)[§](#method.mul-1)\n\n1.22.0 · [source](https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#893)[§](#impl-MulAssign%3C%26f16%3E-for-f16)\n\n1.8.0 · [source](https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#893)[§](#impl-MulAssign-for-f16)\n\n1.0.0 · [source](https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#701)[§](#impl-Neg-for-%26f16)\n\n[§](#associatedtype.Output-4)\n\nThe resulting type after applying the `-` operator.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#701)[§](#method.neg)\n\nPerforms the unary `-` operation. [Read more](about:blank/ops/trait.Neg.html#tymethod.neg)\n\n1.0.0 · [source](https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#701)[§](#impl-Neg-for-f16)\n\n[§](#associatedtype.Output-5)\n\nThe resulting type after applying the `-` operator.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#701)[§](#method.neg-1)\n\nPerforms the unary `-` operation. [Read more](about:blank/ops/trait.Neg.html#tymethod.neg)\n\n1.0.0 (const: [unstable](https://github.com/rust-lang/rust/issues/92391 \"Tracking issue for const_cmp\")) · [source](https://doc.rust-lang.org/1.80.0/src/core/cmp.rs.html#1500-1502)[§](#impl-PartialEq-for-f16)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/cmp.rs.html#1500-1502)[§](#method.eq)\n\nThis method tests for `self` and `other` values to be equal, and is used by `==`.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/cmp.rs.html#1500-1502)[§](#method.ne)\n\nThis method tests for `!=`. The default implementation is almost always sufficient, and should not be overridden without very good reason.\n\n1.0.0 · [source](https://doc.rust-lang.org/1.80.0/src/core/cmp.rs.html#1554)[§](#impl-PartialOrd-for-f16)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/cmp.rs.html#1554)[§](#method.partial_cmp)\n\nThis method returns an ordering between `self` and `other` values if one exists. [Read more](about:blank/cmp/trait.PartialOrd.html#tymethod.partial_cmp)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/cmp.rs.html#1554)[§](#method.lt)\n\nThis method tests less than (for `self` and `other`) and is used by the `<` operator. [Read more](about:blank/cmp/trait.PartialOrd.html#method.lt)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/cmp.rs.html#1554)[§](#method.le)\n\nThis method tests less than or equal to (for `self` and `other`) and is used by the `<=` operator. [Read more](about:blank/cmp/trait.PartialOrd.html#method.le)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/cmp.rs.html#1554)[§](#method.ge)\n\nThis method tests greater than or equal to (for `self` and `other`) and is used by the `>=` operator. [Read more](about:blank/cmp/trait.PartialOrd.html#method.ge)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/cmp.rs.html#1554)[§](#method.gt)\n\nThis method tests greater than (for `self` and `other`) and is used by the `>` operator. [Read more](about:blank/cmp/trait.PartialOrd.html#method.gt)\n\n1.0.0 · [source](https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#626)[§](#impl-Rem%3C%26f16%3E-for-%26f16)\n\n[§](#associatedtype.Output-20)\n\nThe resulting type after applying the `%` operator.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#626)[§](#method.rem-2)\n\n1.0.0 · [source](https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#626)[§](#impl-Rem%3C%26f16%3E-for-f16)\n\n[§](#associatedtype.Output-19)\n\nThe resulting type after applying the `%` operator.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#626)[§](#method.rem-1)\n\n1.0.0 · [source](https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#626)[§](#impl-Rem%3Cf16%3E-for-%26f16)\n\n[§](#associatedtype.Output-21)\n\nThe resulting type after applying the `%` operator.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#626)[§](#method.rem-3)\n\n1.0.0 · [source](https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#626)[§](#impl-Rem-for-f16)\n\nThe remainder from the division of two floats.\n\nThe remainder has the same sign as the dividend and is computed as: `x - (x / y).trunc() * y`.\n\n#### [§](#examples)Examples\n\n```\nlet x: f32 = 50.50;\nlet y: f32 = 8.125;\nlet remainder = x - (x / y).trunc() * y;\n\n// The answer to both operations is 1.75\nassert_eq!(x % y, remainder);\n```\n\n[Run](https://play.rust-lang.org/?code=%23!%5Ballow(unused)%5D%0Afn+main()+%7B%0A++++let+x:+f32+=+50.50;%0A++++let+y:+f32+=+8.125;%0A++++let+remainder+=+x+-+(x+/+y).trunc()+*+y;%0A++++%0A++++//+The+answer+to+both+operations+is+1.75%0A++++assert_eq!(x+%25+y,+remainder);%0A%7D&edition=2021)\n\n[§](#associatedtype.Output-18)\n\nThe resulting type after applying the `%` operator.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#626)[§](#method.rem)\n\n1.22.0 · [source](https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#1011)[§](#impl-RemAssign%3C%26f16%3E-for-f16)\n\n1.8.0 · [source](https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#1011)[§](#impl-RemAssign-for-f16)\n\n1.0.0 · [source](https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#221)[§](#impl-Sub%3C%26f16%3E-for-%26f16)\n\n[§](#associatedtype.Output-7)\n\nThe resulting type after applying the `-` operator.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#221)[§](#method.sub-1)\n\n1.0.0 · [source](https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#221)[§](#impl-Sub%3C%26f16%3E-for-f16)\n\n[§](#associatedtype.Output-6)\n\nThe resulting type after applying the `-` operator.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#221)[§](#method.sub)\n\n1.0.0 · [source](https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#221)[§](#impl-Sub%3Cf16%3E-for-%26f16)\n\n[§](#associatedtype.Output-9)\n\nThe resulting type after applying the `-` operator.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#221)[§](#method.sub-3)\n\n1.0.0 · [source](https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#221)[§](#impl-Sub-for-f16)\n\n[§](#associatedtype.Output-8)\n\nThe resulting type after applying the `-` operator.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#221)[§](#method.sub-2)\n\n1.22.0 · [source](https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#835)[§](#impl-SubAssign%3C%26f16%3E-for-f16)\n\n1.8.0 · [source](https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#835)[§](#impl-SubAssign-for-f16)\n\n1.0.0 · [source](https://doc.rust-lang.org/1.80.0/src/core/marker.rs.html#420-430)[§](#impl-Copy-for-f16)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/convert/num.rs.html#37)[§](#impl-FloatToInt%3Ci128%3E-for-f16)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/convert/num.rs.html#37)[§](#impl-FloatToInt%3Ci16%3E-for-f16)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/convert/num.rs.html#37)[§](#impl-FloatToInt%3Ci32%3E-for-f16)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/convert/num.rs.html#37)[§](#impl-FloatToInt%3Ci64%3E-for-f16)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/convert/num.rs.html#37)[§](#impl-FloatToInt%3Ci8%3E-for-f16)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/convert/num.rs.html#37)[§](#impl-FloatToInt%3Cisize%3E-for-f16)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/convert/num.rs.html#37)[§](#impl-FloatToInt%3Cu128%3E-for-f16)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/convert/num.rs.html#37)[§](#impl-FloatToInt%3Cu16%3E-for-f16)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/convert/num.rs.html#37)[§](#impl-FloatToInt%3Cu32%3E-for-f16)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/convert/num.rs.html#37)[§](#impl-FloatToInt%3Cu64%3E-for-f16)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/convert/num.rs.html#37)[§](#impl-FloatToInt%3Cu8%3E-for-f16)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/convert/num.rs.html#37)[§](#impl-FloatToInt%3Cusize%3E-for-f16)\n\n[§](#impl-Freeze-for-f16)\n\n[§](#impl-RefUnwindSafe-for-f16)\n\n[§](#impl-Send-for-f16)\n\n[§](#impl-Sync-for-f16)\n\n[§](#impl-Unpin-for-f16)\n\n[§](#impl-UnwindSafe-for-f16)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/any.rs.html#140)[§](#impl-Any-for-T)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/borrow.rs.html#208)[§](#impl-Borrow%3CT%3E-for-T)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/borrow.rs.html#216)[§](#impl-BorrowMut%3CT%3E-for-T)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#765)[§](#impl-From%3CT%3E-for-T)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#768)[§](#method.from-2)\n\nReturns the argument unchanged.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#748-750)[§](#impl-Into%3CU%3E-for-T)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#758)[§](#method.into)\n\nCalls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of `[From](convert/trait.From.html \"trait std::convert::From\")<T> for U` chooses to do.\n\n[source](https://doc.rust-lang.org/1.80.0/src/alloc/borrow.rs.html#83-85)[§](#impl-ToOwned-for-T)\n\n[§](#associatedtype.Owned)\n\nThe resulting type after obtaining ownership.\n\n[source](https://doc.rust-lang.org/1.80.0/src/alloc/borrow.rs.html#88)[§](#method.to_owned)\n\nCreates owned data from borrowed data, usually by cloning. [Read more](about:blank/borrow/trait.ToOwned.html#tymethod.to_owned)\n\n[source](https://doc.rust-lang.org/1.80.0/src/alloc/borrow.rs.html#92)[§](#method.clone_into)\n\nUses borrowed data to replace owned data, usually by cloning. [Read more](about:blank/borrow/trait.ToOwned.html#method.clone_into)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#805-807)[§](#impl-TryFrom%3CU%3E-for-T)\n\n[§](#associatedtype.Error-1)\n\nThe type returned in the event of a conversion error.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#812)[§](#method.try_from)\n\nPerforms the conversion.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#790-792)[§](#impl-TryInto%3CU%3E-for-T)\n\n[§](#associatedtype.Error)\n\nThe type returned in the event of a conversion error.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#797)[§](#method.try_into)\n\nPerforms the conversion.",
	"html": "<!DOCTYPE html><html lang=\"en\" data-theme=\"light\"><head><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><meta name=\"generator\" content=\"rustdoc\"><meta name=\"description\" content=\"A 16-bit floating point type (specifically, the “binary16” type defined in IEEE 754-2008).\"><title>f16 - Rust</title><script>if(window.location.protocol!==\"file:\")document.head.insertAdjacentHTML(\"beforeend\",\"SourceSerif4-Regular-46f98efaafac5295.ttf.woff2,FiraSans-Regular-018c141bf0843ffd.woff2,FiraSans-Medium-8f9a781e4970d388.woff2,SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2,SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\".split(\",\").map(f=>`<link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin href=\"../static.files/${f}\">`).join(\"\"))</script><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../static.files/SourceSerif4-Regular-46f98efaafac5295.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../static.files/FiraSans-Regular-018c141bf0843ffd.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../static.files/FiraSans-Medium-8f9a781e4970d388.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../static.files/SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../static.files/SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\"><link rel=\"stylesheet\" href=\"../static.files/normalize-76eba96aa4d2e634.css\"><link rel=\"stylesheet\" href=\"../static.files/rustdoc-dd39b87e5fcfba68.css\"><meta name=\"rustdoc-vars\" data-root-path=\"../\" data-static-root-path=\"../static.files/\" data-current-crate=\"std\" data-themes=\"\" data-resource-suffix=\"1.80.0\" data-rustdoc-version=\"1.80.0 (051478957 2024-07-21)\" data-channel=\"1.80.0\" data-search-js=\"search-d52510db62a78183.js\" data-settings-js=\"settings-4313503d2e1961c2.js\"><script src=\"../static.files/storage-118b08c4c78b968e.js\"></script><script defer=\"\" src=\"sidebar-items1.80.0.js\"></script><script defer=\"\" src=\"../static.files/main-20a3ad099b048cf2.js\"></script><noscript><link rel=\"stylesheet\" href=\"../static.files/noscript-df360f571f6edeae.css\"></noscript><link rel=\"alternate icon\" type=\"image/png\" href=\"../static.files/favicon-32x32-422f7d1d52889060.png\"><link rel=\"icon\" type=\"image/svg+xml\" href=\"../static.files/favicon-2c020d218678b618.svg\"></head><body class=\"rustdoc primitive\"><!--[if lte IE 11]><div class=\"warning\">This old browser is unsupported and will most likely display funky things.</div><![endif]--><nav class=\"mobile-topbar\"><button class=\"sidebar-menu-toggle\" title=\"show sidebar\"></button><a class=\"logo-container\" href=\"../std/index.html\"><img class=\"rust-logo\" src=\"../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"\"></a><h2 class=\"location\"><a href=\"#\">f16</a></h2></nav><nav class=\"sidebar\"><div class=\"sidebar-crate\"><a class=\"logo-container\" href=\"../std/index.html\"><img class=\"rust-logo\" src=\"../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"logo\"></a><h2><a href=\"../std/index.html\">std</a><span class=\"version\">1.80.0</span></h2></div><div class=\"version\">(051478957\t2024-07-21)</div><h2 class=\"location\"><a href=\"#\">f16</a></h2><div class=\"sidebar-elems\"><section><h3><a href=\"#implementations\">Associated Constants</a></h3><ul class=\"block associatedconstant\"><li><a href=\"#associatedconstant.DIGITS\">DIGITS</a></li><li><a href=\"#associatedconstant.EPSILON\">EPSILON</a></li><li><a href=\"#associatedconstant.MANTISSA_DIGITS\">MANTISSA_DIGITS</a></li><li><a href=\"#associatedconstant.MAX\">MAX</a></li><li><a href=\"#associatedconstant.MAX_10_EXP\">MAX_10_EXP</a></li><li><a href=\"#associatedconstant.MAX_EXP\">MAX_EXP</a></li><li><a href=\"#associatedconstant.MIN\">MIN</a></li><li><a href=\"#associatedconstant.MIN_10_EXP\">MIN_10_EXP</a></li><li><a href=\"#associatedconstant.MIN_EXP\">MIN_EXP</a></li><li><a href=\"#associatedconstant.MIN_POSITIVE\">MIN_POSITIVE</a></li><li><a href=\"#associatedconstant.RADIX\">RADIX</a></li></ul><h3><a href=\"#implementations\">Methods</a></h3><ul class=\"block method\"><li><a href=\"#method.from_bits\">from_bits</a></li><li><a href=\"#method.is_nan\">is_nan</a></li><li><a href=\"#method.is_sign_negative\">is_sign_negative</a></li><li><a href=\"#method.is_sign_positive\">is_sign_positive</a></li><li><a href=\"#method.powi\">powi</a></li><li><a href=\"#method.to_bits\">to_bits</a></li></ul><h3><a href=\"#trait-implementations\">Trait Implementations</a></h3><ul class=\"block trait-implementation\"><li><a href=\"#impl-Add-for-f16\">Add</a></li><li><a href=\"#impl-Add%3C%26f16%3E-for-%26f16\">Add&lt;&amp;f16&gt;</a></li><li><a href=\"#impl-Add%3C%26f16%3E-for-f16\">Add&lt;&amp;f16&gt;</a></li><li><a href=\"#impl-Add%3Cf16%3E-for-%26f16\">Add&lt;f16&gt;</a></li><li><a href=\"#impl-AddAssign-for-f16\">AddAssign</a></li><li><a href=\"#impl-AddAssign%3C%26f16%3E-for-f16\">AddAssign&lt;&amp;f16&gt;</a></li><li><a href=\"#impl-Clone-for-f16\">Clone</a></li><li><a href=\"#impl-Copy-for-f16\">Copy</a></li><li><a href=\"#impl-Debug-for-f16\">Debug</a></li><li><a href=\"#impl-Default-for-f16\">Default</a></li><li><a href=\"#impl-Div-for-f16\">Div</a></li><li><a href=\"#impl-Div%3C%26f16%3E-for-%26f16\">Div&lt;&amp;f16&gt;</a></li><li><a href=\"#impl-Div%3C%26f16%3E-for-f16\">Div&lt;&amp;f16&gt;</a></li><li><a href=\"#impl-Div%3Cf16%3E-for-%26f16\">Div&lt;f16&gt;</a></li><li><a href=\"#impl-DivAssign-for-f16\">DivAssign</a></li><li><a href=\"#impl-DivAssign%3C%26f16%3E-for-f16\">DivAssign&lt;&amp;f16&gt;</a></li><li><a href=\"#impl-FloatToInt%3Ci128%3E-for-f16\">FloatToInt&lt;i128&gt;</a></li><li><a href=\"#impl-FloatToInt%3Ci16%3E-for-f16\">FloatToInt&lt;i16&gt;</a></li><li><a href=\"#impl-FloatToInt%3Ci32%3E-for-f16\">FloatToInt&lt;i32&gt;</a></li><li><a href=\"#impl-FloatToInt%3Ci64%3E-for-f16\">FloatToInt&lt;i64&gt;</a></li><li><a href=\"#impl-FloatToInt%3Ci8%3E-for-f16\">FloatToInt&lt;i8&gt;</a></li><li><a href=\"#impl-FloatToInt%3Cisize%3E-for-f16\">FloatToInt&lt;isize&gt;</a></li><li><a href=\"#impl-FloatToInt%3Cu128%3E-for-f16\">FloatToInt&lt;u128&gt;</a></li><li><a href=\"#impl-FloatToInt%3Cu16%3E-for-f16\">FloatToInt&lt;u16&gt;</a></li><li><a href=\"#impl-FloatToInt%3Cu32%3E-for-f16\">FloatToInt&lt;u32&gt;</a></li><li><a href=\"#impl-FloatToInt%3Cu64%3E-for-f16\">FloatToInt&lt;u64&gt;</a></li><li><a href=\"#impl-FloatToInt%3Cu8%3E-for-f16\">FloatToInt&lt;u8&gt;</a></li><li><a href=\"#impl-FloatToInt%3Cusize%3E-for-f16\">FloatToInt&lt;usize&gt;</a></li><li><a href=\"#impl-From%3Cf16%3E-for-f128\">From&lt;f16&gt;</a></li><li><a href=\"#impl-From%3Cf16%3E-for-f64\">From&lt;f16&gt;</a></li><li><a href=\"#impl-Mul-for-f16\">Mul</a></li><li><a href=\"#impl-Mul%3C%26f16%3E-for-%26f16\">Mul&lt;&amp;f16&gt;</a></li><li><a href=\"#impl-Mul%3C%26f16%3E-for-f16\">Mul&lt;&amp;f16&gt;</a></li><li><a href=\"#impl-Mul%3Cf16%3E-for-%26f16\">Mul&lt;f16&gt;</a></li><li><a href=\"#impl-MulAssign-for-f16\">MulAssign</a></li><li><a href=\"#impl-MulAssign%3C%26f16%3E-for-f16\">MulAssign&lt;&amp;f16&gt;</a></li><li><a href=\"#impl-Neg-for-%26f16\">Neg</a></li><li><a href=\"#impl-Neg-for-f16\">Neg</a></li><li><a href=\"#impl-PartialEq-for-f16\">PartialEq</a></li><li><a href=\"#impl-PartialOrd-for-f16\">PartialOrd</a></li><li><a href=\"#impl-Rem-for-f16\">Rem</a></li><li><a href=\"#impl-Rem%3C%26f16%3E-for-%26f16\">Rem&lt;&amp;f16&gt;</a></li><li><a href=\"#impl-Rem%3C%26f16%3E-for-f16\">Rem&lt;&amp;f16&gt;</a></li><li><a href=\"#impl-Rem%3Cf16%3E-for-%26f16\">Rem&lt;f16&gt;</a></li><li><a href=\"#impl-RemAssign-for-f16\">RemAssign</a></li><li><a href=\"#impl-RemAssign%3C%26f16%3E-for-f16\">RemAssign&lt;&amp;f16&gt;</a></li><li><a href=\"#impl-Sub-for-f16\">Sub</a></li><li><a href=\"#impl-Sub%3C%26f16%3E-for-%26f16\">Sub&lt;&amp;f16&gt;</a></li><li><a href=\"#impl-Sub%3C%26f16%3E-for-f16\">Sub&lt;&amp;f16&gt;</a></li><li><a href=\"#impl-Sub%3Cf16%3E-for-%26f16\">Sub&lt;f16&gt;</a></li><li><a href=\"#impl-SubAssign-for-f16\">SubAssign</a></li><li><a href=\"#impl-SubAssign%3C%26f16%3E-for-f16\">SubAssign&lt;&amp;f16&gt;</a></li></ul><h3><a href=\"#synthetic-implementations\">Auto Trait Implementations</a></h3><ul class=\"block synthetic-implementation\"><li><a href=\"#impl-Freeze-for-f16\">Freeze</a></li><li><a href=\"#impl-RefUnwindSafe-for-f16\">RefUnwindSafe</a></li><li><a href=\"#impl-Send-for-f16\">Send</a></li><li><a href=\"#impl-Sync-for-f16\">Sync</a></li><li><a href=\"#impl-Unpin-for-f16\">Unpin</a></li><li><a href=\"#impl-UnwindSafe-for-f16\">UnwindSafe</a></li></ul><h3><a href=\"#blanket-implementations\">Blanket Implementations</a></h3><ul class=\"block blanket-implementation\"><li><a href=\"#impl-Any-for-T\">Any</a></li><li><a href=\"#impl-Borrow%3CT%3E-for-T\">Borrow&lt;T&gt;</a></li><li><a href=\"#impl-BorrowMut%3CT%3E-for-T\">BorrowMut&lt;T&gt;</a></li><li><a href=\"#impl-From%3CT%3E-for-T\">From&lt;T&gt;</a></li><li><a href=\"#impl-Into%3CU%3E-for-T\">Into&lt;U&gt;</a></li><li><a href=\"#impl-ToOwned-for-T\">ToOwned</a></li><li><a href=\"#impl-TryFrom%3CU%3E-for-T\">TryFrom&lt;U&gt;</a></li><li><a href=\"#impl-TryInto%3CU%3E-for-T\">TryInto&lt;U&gt;</a></li></ul></section><h2><a href=\"index.html\">In crate std</a></h2><h3><a href=\"index.html#primitives\">Primitive Types</a></h3><ul class=\"block primitive\"><li><a href=\"primitive.array.html\">array</a></li><li><a href=\"primitive.bool.html\">bool</a></li><li><a href=\"primitive.char.html\">char</a></li><li><a href=\"primitive.f128.html\">f128</a></li><li><a href=\"primitive.f16.html\">f16</a></li><li><a href=\"primitive.f32.html\">f32</a></li><li><a href=\"primitive.f64.html\">f64</a></li><li><a href=\"primitive.fn.html\">fn</a></li><li><a href=\"primitive.i128.html\">i128</a></li><li><a href=\"primitive.i16.html\">i16</a></li><li><a href=\"primitive.i32.html\">i32</a></li><li><a href=\"primitive.i64.html\">i64</a></li><li><a href=\"primitive.i8.html\">i8</a></li><li><a href=\"primitive.isize.html\">isize</a></li><li><a href=\"primitive.never.html\">never</a></li><li><a href=\"primitive.pointer.html\">pointer</a></li><li><a href=\"primitive.reference.html\">reference</a></li><li><a href=\"primitive.slice.html\">slice</a></li><li><a href=\"primitive.str.html\">str</a></li><li><a href=\"primitive.tuple.html\">tuple</a></li><li><a href=\"primitive.u128.html\">u128</a></li><li><a href=\"primitive.u16.html\">u16</a></li><li><a href=\"primitive.u32.html\">u32</a></li><li><a href=\"primitive.u64.html\">u64</a></li><li><a href=\"primitive.u8.html\">u8</a></li><li><a href=\"primitive.unit.html\">unit</a></li><li><a href=\"primitive.usize.html\">usize</a></li></ul><h3><a href=\"index.html#modules\">Modules</a></h3><ul class=\"block mod\"><li><a href=\"alloc/index.html\">alloc</a></li><li><a href=\"any/index.html\">any</a></li><li><a href=\"arch/index.html\">arch</a></li><li><a href=\"array/index.html\">array</a></li><li><a href=\"ascii/index.html\">ascii</a></li><li><a href=\"assert_matches/index.html\">assert_matches</a></li><li><a href=\"async_iter/index.html\">async_iter</a></li><li><a href=\"backtrace/index.html\">backtrace</a></li><li><a href=\"borrow/index.html\">borrow</a></li><li><a href=\"boxed/index.html\">boxed</a></li><li><a href=\"cell/index.html\">cell</a></li><li><a href=\"char/index.html\">char</a></li><li><a href=\"clone/index.html\">clone</a></li><li><a href=\"cmp/index.html\">cmp</a></li><li><a href=\"collections/index.html\">collections</a></li><li><a href=\"convert/index.html\">convert</a></li><li><a href=\"default/index.html\">default</a></li><li><a href=\"env/index.html\">env</a></li><li><a href=\"error/index.html\">error</a></li><li><a href=\"f128/index.html\">f128</a></li><li><a href=\"f16/index.html\">f16</a></li><li><a href=\"f32/index.html\">f32</a></li><li><a href=\"f64/index.html\">f64</a></li><li><a href=\"ffi/index.html\">ffi</a></li><li><a href=\"fmt/index.html\">fmt</a></li><li><a href=\"fs/index.html\">fs</a></li><li><a href=\"future/index.html\">future</a></li><li><a href=\"hash/index.html\">hash</a></li><li><a href=\"hint/index.html\">hint</a></li><li><a href=\"i128/index.html\">i128</a></li><li><a href=\"i16/index.html\">i16</a></li><li><a href=\"i32/index.html\">i32</a></li><li><a href=\"i64/index.html\">i64</a></li><li><a href=\"i8/index.html\">i8</a></li><li><a href=\"intrinsics/index.html\">intrinsics</a></li><li><a href=\"io/index.html\">io</a></li><li><a href=\"isize/index.html\">isize</a></li><li><a href=\"iter/index.html\">iter</a></li><li><a href=\"marker/index.html\">marker</a></li><li><a href=\"mem/index.html\">mem</a></li><li><a href=\"net/index.html\">net</a></li><li><a href=\"num/index.html\">num</a></li><li><a href=\"ops/index.html\">ops</a></li><li><a href=\"option/index.html\">option</a></li><li><a href=\"os/index.html\">os</a></li><li><a href=\"panic/index.html\">panic</a></li><li><a href=\"pat/index.html\">pat</a></li><li><a href=\"path/index.html\">path</a></li><li><a href=\"pin/index.html\">pin</a></li><li><a href=\"prelude/index.html\">prelude</a></li><li><a href=\"primitive/index.html\">primitive</a></li><li><a href=\"process/index.html\">process</a></li><li><a href=\"ptr/index.html\">ptr</a></li><li><a href=\"rc/index.html\">rc</a></li><li><a href=\"result/index.html\">result</a></li><li><a href=\"simd/index.html\">simd</a></li><li><a href=\"slice/index.html\">slice</a></li><li><a href=\"str/index.html\">str</a></li><li><a href=\"string/index.html\">string</a></li><li><a href=\"sync/index.html\">sync</a></li><li><a href=\"task/index.html\">task</a></li><li><a href=\"thread/index.html\">thread</a></li><li><a href=\"time/index.html\">time</a></li><li><a href=\"u128/index.html\">u128</a></li><li><a href=\"u16/index.html\">u16</a></li><li><a href=\"u32/index.html\">u32</a></li><li><a href=\"u64/index.html\">u64</a></li><li><a href=\"u8/index.html\">u8</a></li><li><a href=\"usize/index.html\">usize</a></li><li><a href=\"vec/index.html\">vec</a></li></ul><h3><a href=\"index.html#macros\">Macros</a></h3><ul class=\"block macro\"><li><a href=\"macro.assert.html\">assert</a></li><li><a href=\"macro.assert_eq.html\">assert_eq</a></li><li><a href=\"macro.assert_ne.html\">assert_ne</a></li><li><a href=\"macro.cfg.html\">cfg</a></li><li><a href=\"macro.cfg_match.html\">cfg_match</a></li><li><a href=\"macro.column.html\">column</a></li><li><a href=\"macro.compile_error.html\">compile_error</a></li><li><a href=\"macro.concat.html\">concat</a></li><li><a href=\"macro.concat_bytes.html\">concat_bytes</a></li><li><a href=\"macro.concat_idents.html\">concat_idents</a></li><li><a href=\"macro.const_format_args.html\">const_format_args</a></li><li><a href=\"macro.dbg.html\">dbg</a></li><li><a href=\"macro.debug_assert.html\">debug_assert</a></li><li><a href=\"macro.debug_assert_eq.html\">debug_assert_eq</a></li><li><a href=\"macro.debug_assert_ne.html\">debug_assert_ne</a></li><li><a href=\"macro.env.html\">env</a></li><li><a href=\"macro.eprint.html\">eprint</a></li><li><a href=\"macro.eprintln.html\">eprintln</a></li><li><a href=\"macro.file.html\">file</a></li><li><a href=\"macro.format.html\">format</a></li><li><a href=\"macro.format_args.html\">format_args</a></li><li><a href=\"macro.format_args_nl.html\">format_args_nl</a></li><li><a href=\"macro.include.html\">include</a></li><li><a href=\"macro.include_bytes.html\">include_bytes</a></li><li><a href=\"macro.include_str.html\">include_str</a></li><li><a href=\"macro.is_x86_feature_detected.html\">is_x86_feature_detected</a></li><li><a href=\"macro.line.html\">line</a></li><li><a href=\"macro.log_syntax.html\">log_syntax</a></li><li><a href=\"macro.matches.html\">matches</a></li><li><a href=\"macro.module_path.html\">module_path</a></li><li><a href=\"macro.option_env.html\">option_env</a></li><li><a href=\"macro.panic.html\">panic</a></li><li><a href=\"macro.print.html\">print</a></li><li><a href=\"macro.println.html\">println</a></li><li><a href=\"macro.stringify.html\">stringify</a></li><li><a href=\"macro.thread_local.html\">thread_local</a></li><li><a href=\"macro.todo.html\">todo</a></li><li><a href=\"macro.trace_macros.html\">trace_macros</a></li><li><a href=\"macro.try.html\">try</a></li><li><a href=\"macro.unimplemented.html\">unimplemented</a></li><li><a href=\"macro.unreachable.html\">unreachable</a></li><li><a href=\"macro.vec.html\">vec</a></li><li><a href=\"macro.write.html\">write</a></li><li><a href=\"macro.writeln.html\">writeln</a></li></ul><h3><a href=\"index.html#keywords\">Keywords</a></h3><ul class=\"block keyword\"><li><a href=\"keyword.SelfTy.html\">SelfTy</a></li><li><a href=\"keyword.as.html\">as</a></li><li><a href=\"keyword.async.html\">async</a></li><li><a href=\"keyword.await.html\">await</a></li><li><a href=\"keyword.break.html\">break</a></li><li><a href=\"keyword.const.html\">const</a></li><li><a href=\"keyword.continue.html\">continue</a></li><li><a href=\"keyword.crate.html\">crate</a></li><li><a href=\"keyword.dyn.html\">dyn</a></li><li><a href=\"keyword.else.html\">else</a></li><li><a href=\"keyword.enum.html\">enum</a></li><li><a href=\"keyword.extern.html\">extern</a></li><li><a href=\"keyword.false.html\">false</a></li><li><a href=\"keyword.fn.html\">fn</a></li><li><a href=\"keyword.for.html\">for</a></li><li><a href=\"keyword.if.html\">if</a></li><li><a href=\"keyword.impl.html\">impl</a></li><li><a href=\"keyword.in.html\">in</a></li><li><a href=\"keyword.let.html\">let</a></li><li><a href=\"keyword.loop.html\">loop</a></li><li><a href=\"keyword.match.html\">match</a></li><li><a href=\"keyword.mod.html\">mod</a></li><li><a href=\"keyword.move.html\">move</a></li><li><a href=\"keyword.mut.html\">mut</a></li><li><a href=\"keyword.pub.html\">pub</a></li><li><a href=\"keyword.ref.html\">ref</a></li><li><a href=\"keyword.return.html\">return</a></li><li><a href=\"keyword.self.html\">self</a></li><li><a href=\"keyword.static.html\">static</a></li><li><a href=\"keyword.struct.html\">struct</a></li><li><a href=\"keyword.super.html\">super</a></li><li><a href=\"keyword.trait.html\">trait</a></li><li><a href=\"keyword.true.html\">true</a></li><li><a href=\"keyword.type.html\">type</a></li><li><a href=\"keyword.union.html\">union</a></li><li><a href=\"keyword.unsafe.html\">unsafe</a></li><li><a href=\"keyword.use.html\">use</a></li><li><a href=\"keyword.where.html\">where</a></li><li><a href=\"keyword.while.html\">while</a></li></ul></div></nav><div class=\"sidebar-resizer\"></div><main><div class=\"width-limiter\"><rustdoc-search><nav class=\"sub\">\n            <form class=\"search-form\">\n                <span></span> <!-- This empty span is a hacky fix for Safari - See #93184 -->\n                <div id=\"sidebar-button\" tabindex=\"-1\">\n                    <a href=\"../std/all.html\" title=\"show sidebar\"></a>\n                </div>\n                <input class=\"search-input\" name=\"search\" aria-label=\"Run search in the documentation\" autocomplete=\"off\" spellcheck=\"false\" placeholder=\"Type ‘S’ or ‘/’ to search, ‘?’ for more options…\" type=\"search\">\n                <div id=\"help-button\" tabindex=\"-1\">\n                    <a href=\"../help.html\" title=\"help\">?</a>\n                </div>\n                <div id=\"settings-menu\" tabindex=\"-1\">\n                    <a href=\"../settings.html\" title=\"settings\">\n                        Settings\n                    </a>\n                </div>\n            </form>\n        </nav></rustdoc-search><section id=\"main-content\" class=\"content\"><div class=\"main-heading\"><h1>Primitive Type <a class=\"primitive\" href=\"#\">f16</a><button id=\"copy-path\" title=\"Copy item path to clipboard\">Copy item path</button></h1><span class=\"out-of-band\"><button id=\"toggle-all-docs\" title=\"collapse all docs\">[<span>−</span>]</button></span></div><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>f16</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/116909\">#116909</a>)</span></div></span><details class=\"toggle top-doc\" open=\"\"><summary class=\"hideme\"><span>Expand description</span></summary><div class=\"docblock\"><p>A 16-bit floating point type (specifically, the “binary16” type defined in IEEE 754-2008).</p>\n<p>This type is very similar to <a href=\"primitive.f32.html\" title=\"primitive f32\"><code>f32</code></a> but has decreased precision because it uses half as many\nbits. Please see [the documentation for <a href=\"primitive.f32.html\" title=\"primitive f32\"><code>f32</code></a> or <a href=\"https://en.wikipedia.org/wiki/Half-precision_floating-point_format\">Wikipedia on\nhalf-precision values</a> for more information.</p>\n<p>Note that most common platforms will not support <code>f16</code> in hardware without enabling extra target\nfeatures, with the notable exception of Apple Silicon (also known as M1, M2, etc.) processors.\nHardware support on x86-64 requires the avx512fp16 feature, while RISC-V requires Zhf.\nUsually the fallback implementation will be to use <code>f32</code> hardware if it exists, and convert\nbetween <code>f16</code> and <code>f32</code> when performing math.</p>\n<p><em><a href=\"f16/consts/index.html\" title=\"mod std::f16::consts\">See also the <code>std::f16::consts</code> module</a>.</em></p>\n</div></details><h2 id=\"implementations\" class=\"section-header\">Implementations<a href=\"#implementations\" class=\"anchor\">§</a></h2><div id=\"implementations-list\"><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-f16\" class=\"impl\"><a class=\"src rightside\" href=\"../src/std/f16.rs.html#17-35\">source</a><a href=\"#impl-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.powi\" class=\"method\"><a class=\"src rightside\" href=\"../src/std/f16.rs.html#32-34\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.powi\" class=\"fn\">powi</a>(self, n: <a class=\"primitive\" href=\"primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>f16</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/116909\">#116909</a>)</span></div></span></summary><div class=\"docblock\"><p>Raises a number to an integer power.</p>\n<p>Using this function is generally faster than using <code>powf</code>.\nIt might have a different sequence of rounding operations than <code>powf</code>,\nso the results are not guaranteed to agree.</p>\n<h5 id=\"unspecified-precision\"><a class=\"doc-anchor\" href=\"#unspecified-precision\">§</a>Unspecified precision</h5>\n<p>The precision of this function is non-deterministic. This means it varies by platform, Rust version, and\ncan even differ within the same execution from one invocation to the next.</p>\n</div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-f16-1\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/num/f16.rs.html#126\">source</a><a href=\"#impl-f16-1\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open=\"\"><summary><section id=\"associatedconstant.RADIX\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/num/f16.rs.html#132\">source</a><h4 class=\"code-header\">pub const <a href=\"#associatedconstant.RADIX\" class=\"constant\">RADIX</a>: <a class=\"primitive\" href=\"primitive.u32.html\">u32</a> = 2u32</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>f16</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/116909\">#116909</a>)</span></div></span></summary><div class=\"docblock\"><p>The radix or base of the internal representation of <code>f16</code>.</p>\n</div></details><details class=\"toggle\" open=\"\"><summary><section id=\"associatedconstant.MANTISSA_DIGITS\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/num/f16.rs.html#136\">source</a><h4 class=\"code-header\">pub const <a href=\"#associatedconstant.MANTISSA_DIGITS\" class=\"constant\">MANTISSA_DIGITS</a>: <a class=\"primitive\" href=\"primitive.u32.html\">u32</a> = 11u32</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>f16</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/116909\">#116909</a>)</span></div></span></summary><div class=\"docblock\"><p>Number of significant digits in base 2.</p>\n</div></details><details class=\"toggle\" open=\"\"><summary><section id=\"associatedconstant.DIGITS\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/num/f16.rs.html#147\">source</a><h4 class=\"code-header\">pub const <a href=\"#associatedconstant.DIGITS\" class=\"constant\">DIGITS</a>: <a class=\"primitive\" href=\"primitive.u32.html\">u32</a> = 3u32</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>f16</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/116909\">#116909</a>)</span></div></span></summary><div class=\"docblock\"><p>Approximate number of significant digits in base 10.</p>\n<p>This is the maximum <i>x</i> such that any decimal number with <i>x</i>\nsignificant digits can be converted to <code>f16</code> and back without loss.</p>\n<p>Equal to floor(log<sub>10</sub>&nbsp;2<sup><a href=\"primitive.f16.html#associatedconstant.MANTISSA_DIGITS\" title=\"associated constant f16::MANTISSA_DIGITS\"><code>MANTISSA_DIGITS</code></a>&nbsp;−&nbsp;1</sup>).</p>\n</div></details><details class=\"toggle\" open=\"\"><summary><section id=\"associatedconstant.EPSILON\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/num/f16.rs.html#158\">source</a><h4 class=\"code-header\">pub const <a href=\"#associatedconstant.EPSILON\" class=\"constant\">EPSILON</a>: <a class=\"primitive\" href=\"primitive.f16.html\">f16</a> = {transmute(0x1400): f16}</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>f16</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/116909\">#116909</a>)</span></div></span></summary><div class=\"docblock\"><p><a href=\"https://en.wikipedia.org/wiki/Machine_epsilon\">Machine epsilon</a> value for <code>f16</code>.</p>\n<p>This is the difference between <code>1.0</code> and the next larger representable number.</p>\n<p>Equal to 2<sup>1&nbsp;−&nbsp;<a href=\"primitive.f16.html#associatedconstant.MANTISSA_DIGITS\" title=\"associated constant f16::MANTISSA_DIGITS\"><code>MANTISSA_DIGITS</code></a></sup>.</p>\n</div></details><details class=\"toggle\" open=\"\"><summary><section id=\"associatedconstant.MIN\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/num/f16.rs.html#166\">source</a><h4 class=\"code-header\">pub const <a href=\"#associatedconstant.MIN\" class=\"constant\">MIN</a>: <a class=\"primitive\" href=\"primitive.f16.html\">f16</a> = {transmute(0xfbff): f16}</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>f16</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/116909\">#116909</a>)</span></div></span></summary><div class=\"docblock\"><p>Smallest finite <code>f16</code> value.</p>\n<p>Equal to −<a href=\"primitive.f16.html#associatedconstant.MAX\" title=\"associated constant f16::MAX\"><code>MAX</code></a>.</p>\n</div></details><details class=\"toggle\" open=\"\"><summary><section id=\"associatedconstant.MIN_POSITIVE\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/num/f16.rs.html#173\">source</a><h4 class=\"code-header\">pub const <a href=\"#associatedconstant.MIN_POSITIVE\" class=\"constant\">MIN_POSITIVE</a>: <a class=\"primitive\" href=\"primitive.f16.html\">f16</a> = {transmute(0x0400): f16}</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>f16</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/116909\">#116909</a>)</span></div></span></summary><div class=\"docblock\"><p>Smallest positive normal <code>f16</code> value.</p>\n<p>Equal to 2<sup><a href=\"primitive.f16.html#associatedconstant.MIN_EXP\" title=\"associated constant f16::MIN_EXP\"><code>MIN_EXP</code></a>&nbsp;−&nbsp;1</sup>.</p>\n</div></details><details class=\"toggle\" open=\"\"><summary><section id=\"associatedconstant.MAX\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/num/f16.rs.html#182\">source</a><h4 class=\"code-header\">pub const <a href=\"#associatedconstant.MAX\" class=\"constant\">MAX</a>: <a class=\"primitive\" href=\"primitive.f16.html\">f16</a> = {transmute(0x7bff): f16}</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>f16</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/116909\">#116909</a>)</span></div></span></summary><div class=\"docblock\"><p>Largest finite <code>f16</code> value.</p>\n<p>Equal to\n(1&nbsp;−&nbsp;2<sup>−<a href=\"primitive.f16.html#associatedconstant.MANTISSA_DIGITS\" title=\"associated constant f16::MANTISSA_DIGITS\"><code>MANTISSA_DIGITS</code></a></sup>)&nbsp;2<sup><a href=\"primitive.f16.html#associatedconstant.MAX_EXP\" title=\"associated constant f16::MAX_EXP\"><code>MAX_EXP</code></a></sup>.</p>\n</div></details><details class=\"toggle\" open=\"\"><summary><section id=\"associatedconstant.MIN_EXP\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/num/f16.rs.html#189\">source</a><h4 class=\"code-header\">pub const <a href=\"#associatedconstant.MIN_EXP\" class=\"constant\">MIN_EXP</a>: <a class=\"primitive\" href=\"primitive.i32.html\">i32</a> = -13i32</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>f16</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/116909\">#116909</a>)</span></div></span></summary><div class=\"docblock\"><p>One greater than the minimum possible normal power of 2 exponent.</p>\n<p>If <i>x</i>&nbsp;=&nbsp;<code>MIN_EXP</code>, then normal numbers\n≥&nbsp;0.5&nbsp;×&nbsp;2<sup><i>x</i></sup>.</p>\n</div></details><details class=\"toggle\" open=\"\"><summary><section id=\"associatedconstant.MAX_EXP\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/num/f16.rs.html#195\">source</a><h4 class=\"code-header\">pub const <a href=\"#associatedconstant.MAX_EXP\" class=\"constant\">MAX_EXP</a>: <a class=\"primitive\" href=\"primitive.i32.html\">i32</a> = 16i32</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>f16</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/116909\">#116909</a>)</span></div></span></summary><div class=\"docblock\"><p>Maximum possible power of 2 exponent.</p>\n<p>If <i>x</i>&nbsp;=&nbsp;<code>MAX_EXP</code>, then normal numbers\n&lt;&nbsp;1&nbsp;×&nbsp;2<sup><i>x</i></sup>.</p>\n</div></details><details class=\"toggle\" open=\"\"><summary><section id=\"associatedconstant.MIN_10_EXP\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/num/f16.rs.html#203\">source</a><h4 class=\"code-header\">pub const <a href=\"#associatedconstant.MIN_10_EXP\" class=\"constant\">MIN_10_EXP</a>: <a class=\"primitive\" href=\"primitive.i32.html\">i32</a> = -4i32</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>f16</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/116909\">#116909</a>)</span></div></span></summary><div class=\"docblock\"><p>Minimum <i>x</i> for which 10<sup><i>x</i></sup> is normal.</p>\n<p>Equal to ceil(log<sub>10</sub>&nbsp;<a href=\"primitive.f16.html#associatedconstant.MIN_POSITIVE\" title=\"associated constant f16::MIN_POSITIVE\"><code>MIN_POSITIVE</code></a>).</p>\n</div></details><details class=\"toggle\" open=\"\"><summary><section id=\"associatedconstant.MAX_10_EXP\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/num/f16.rs.html#210\">source</a><h4 class=\"code-header\">pub const <a href=\"#associatedconstant.MAX_10_EXP\" class=\"constant\">MAX_10_EXP</a>: <a class=\"primitive\" href=\"primitive.i32.html\">i32</a> = 4i32</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>f16</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/116909\">#116909</a>)</span></div></span></summary><div class=\"docblock\"><p>Maximum <i>x</i> for which 10<sup><i>x</i></sup> is normal.</p>\n<p>Equal to floor(log<sub>10</sub>&nbsp;<a href=\"primitive.f16.html#associatedconstant.MAX\" title=\"associated constant f16::MAX\"><code>MAX</code></a>).</p>\n</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.is_nan\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/num/f16.rs.html#217\">source</a><h4 class=\"code-header\">pub const fn <a href=\"#method.is_nan\" class=\"fn\">is_nan</a>(self) -&gt; <a class=\"primitive\" href=\"primitive.bool.html\">bool</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>f16</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/116909\">#116909</a>)</span></div></span></summary><div class=\"docblock\"><p>Returns <code>true</code> if this value is NaN.</p>\n</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.is_sign_positive\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/num/f16.rs.html#240\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.is_sign_positive\" class=\"fn\">is_sign_positive</a>(self) -&gt; <a class=\"primitive\" href=\"primitive.bool.html\">bool</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>f16</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/116909\">#116909</a>)</span></div></span></summary><div class=\"docblock\"><p>Returns <code>true</code> if <code>self</code> has a positive sign, including <code>+0.0</code>, NaNs with\npositive sign bit and positive infinity. Note that IEEE 754 doesn’t assign any\nmeaning to the sign bit in case of a NaN, and as Rust doesn’t guarantee that\nthe bit pattern of NaNs are conserved over arithmetic operations, the result of\n<code>is_sign_positive</code> on a NaN might produce an unexpected result in some cases.\nSee <a href=\"primitive.f32.html\" title=\"primitive f32\">explanation of NaN as a special value</a> for more info.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(f16)]\n\n</span><span class=\"kw\">let </span>f = <span class=\"number\">7.0_f16</span>;\n<span class=\"kw\">let </span>g = -<span class=\"number\">7.0_f16</span>;\n\n<span class=\"macro\">assert!</span>(f.is_sign_positive());\n<span class=\"macro\">assert!</span>(!g.is_sign_positive());</code></pre><a class=\"test-arrow\" target=\"_blank\" href=\"https://play.rust-lang.org/?code=%23!%5Ballow(unused)%5D%0A%23!%5Bfeature(f16)%5D%0A%0Afn+main()+%7B%0A++++let+f+=+7.0_f16;%0A++++let+g+=+-7.0_f16;%0A++++%0A++++assert!(f.is_sign_positive());%0A++++assert!(!g.is_sign_positive());%0A%7D&amp;version=nightly&amp;edition=2021\">Run</a></div>\n</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.is_sign_negative\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/num/f16.rs.html#263\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.is_sign_negative\" class=\"fn\">is_sign_negative</a>(self) -&gt; <a class=\"primitive\" href=\"primitive.bool.html\">bool</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>f16</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/116909\">#116909</a>)</span></div></span></summary><div class=\"docblock\"><p>Returns <code>true</code> if <code>self</code> has a negative sign, including <code>-0.0</code>, NaNs with\nnegative sign bit and negative infinity. Note that IEEE 754 doesn’t assign any\nmeaning to the sign bit in case of a NaN, and as Rust doesn’t guarantee that\nthe bit pattern of NaNs are conserved over arithmetic operations, the result of\n<code>is_sign_negative</code> on a NaN might produce an unexpected result in some cases.\nSee <a href=\"primitive.f32.html\" title=\"primitive f32\">explanation of NaN as a special value</a> for more info.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(f16)]\n\n</span><span class=\"kw\">let </span>f = <span class=\"number\">7.0_f16</span>;\n<span class=\"kw\">let </span>g = -<span class=\"number\">7.0_f16</span>;\n\n<span class=\"macro\">assert!</span>(!f.is_sign_negative());\n<span class=\"macro\">assert!</span>(g.is_sign_negative());</code></pre><a class=\"test-arrow\" target=\"_blank\" href=\"https://play.rust-lang.org/?code=%23!%5Ballow(unused)%5D%0A%23!%5Bfeature(f16)%5D%0A%0Afn+main()+%7B%0A++++let+f+=+7.0_f16;%0A++++let+g+=+-7.0_f16;%0A++++%0A++++assert!(!f.is_sign_negative());%0A++++assert!(g.is_sign_negative());%0A%7D&amp;version=nightly&amp;edition=2021\">Run</a></div>\n</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.to_bits\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/num/f16.rs.html#282\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.to_bits\" class=\"fn\">to_bits</a>(self) -&gt; <a class=\"primitive\" href=\"primitive.u16.html\">u16</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>f16</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/116909\">#116909</a>)</span></div></span></summary><div class=\"docblock\"><p>Raw transmutation to <code>u16</code>.</p>\n<p>This is currently identical to <code>transmute::&lt;f16, u16&gt;(self)</code> on all platforms.</p>\n<p>See <a href=\"#method.from_bits\"><code>from_bits</code></a> for some discussion of the\nportability of this operation (there are almost no issues).</p>\n<p>Note that this function is distinct from <code>as</code> casting, which attempts to\npreserve the <em>numeric</em> value, and not the bitwise value.</p>\n</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.from_bits\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/num/f16.rs.html#321\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.from_bits\" class=\"fn\">from_bits</a>(v: <a class=\"primitive\" href=\"primitive.u16.html\">u16</a>) -&gt; <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>f16</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/116909\">#116909</a>)</span></div></span></summary><div class=\"docblock\"><p>Raw transmutation from <code>u16</code>.</p>\n<p>This is currently identical to <code>transmute::&lt;u16, f16&gt;(v)</code> on all platforms.\nIt turns out this is incredibly portable, for two reasons:</p>\n<ul>\n<li>Floats and Ints have the same endianness on all supported platforms.</li>\n<li>IEEE 754 very precisely specifies the bit layout of floats.</li>\n</ul>\n<p>However there is one caveat: prior to the 2008 version of IEEE 754, how\nto interpret the NaN signaling bit wasn’t actually specified. Most platforms\n(notably x86 and ARM) picked the interpretation that was ultimately\nstandardized in 2008, but some didn’t (notably MIPS). As a result, all\nsignaling NaNs on MIPS are quiet NaNs on x86, and vice-versa.</p>\n<p>Rather than trying to preserve signaling-ness cross-platform, this\nimplementation favors preserving the exact bits. This means that\nany payloads encoded in NaNs will be preserved even if the result of\nthis method is sent over the network from an x86 machine to a MIPS one.</p>\n<p>If the results of this method are only manipulated by the same\narchitecture that produced them, then there is no portability concern.</p>\n<p>If the input isn’t NaN, then there is no portability concern.</p>\n<p>If you don’t care about signalingness (very likely), then there is no\nportability concern.</p>\n<p>Note that this function is distinct from <code>as</code> casting, which attempts to\npreserve the <em>numeric</em> value, and not the bitwise value.</p>\n</div></details></div></details></div><h2 id=\"trait-implementations\" class=\"section-header\">Trait Implementations<a href=\"#trait-implementations\" class=\"anchor\">§</a></h2><div id=\"trait-implementations-list\"><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-Add%3C%26f16%3E-for-%26f16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#112\">source</a></span><a href=\"#impl-Add%3C%26f16%3E-for-%26f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"ops/trait.Add.html\" title=\"trait std::ops::Add\">Add</a>&lt;&amp;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a>&gt; for &amp;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open=\"\"><summary><section id=\"associatedtype.Output-10\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output-10\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"ops/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a> as <a class=\"trait\" href=\"ops/trait.Add.html\" title=\"trait std::ops::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"ops/trait.Add.html#associatedtype.Output\" title=\"type std::ops::Add::Output\">Output</a></h4></section></summary><div class=\"docblock\">The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#112\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ops/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: &amp;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a>) -&gt; &lt;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a> as <a class=\"trait\" href=\"ops/trait.Add.html\" title=\"trait std::ops::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"ops/trait.Add.html#associatedtype.Output\" title=\"type std::ops::Add::Output\">Output</a></h4></section></summary><div class=\"docblock\">Performs the <code>+</code> operation. <a href=\"ops/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-Add%3C%26f16%3E-for-f16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#112\">source</a></span><a href=\"#impl-Add%3C%26f16%3E-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"ops/trait.Add.html\" title=\"trait std::ops::Add\">Add</a>&lt;&amp;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a>&gt; for <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open=\"\"><summary><section id=\"associatedtype.Output-12\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output-12\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"ops/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a> as <a class=\"trait\" href=\"ops/trait.Add.html\" title=\"trait std::ops::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"ops/trait.Add.html#associatedtype.Output\" title=\"type std::ops::Add::Output\">Output</a></h4></section></summary><div class=\"docblock\">The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.add-2\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#112\">source</a><a href=\"#method.add-2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ops/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: &amp;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a>) -&gt; &lt;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a> as <a class=\"trait\" href=\"ops/trait.Add.html\" title=\"trait std::ops::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"ops/trait.Add.html#associatedtype.Output\" title=\"type std::ops::Add::Output\">Output</a></h4></section></summary><div class=\"docblock\">Performs the <code>+</code> operation. <a href=\"ops/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-Add%3Cf16%3E-for-%26f16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#112\">source</a></span><a href=\"#impl-Add%3Cf16%3E-for-%26f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"ops/trait.Add.html\" title=\"trait std::ops::Add\">Add</a>&lt;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a>&gt; for &amp;'a <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open=\"\"><summary><section id=\"associatedtype.Output-11\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output-11\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"ops/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a> as <a class=\"trait\" href=\"ops/trait.Add.html\" title=\"trait std::ops::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"ops/trait.Add.html#associatedtype.Output\" title=\"type std::ops::Add::Output\">Output</a></h4></section></summary><div class=\"docblock\">The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.add-1\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#112\">source</a><a href=\"#method.add-1\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ops/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: <a class=\"primitive\" href=\"primitive.f16.html\">f16</a>) -&gt; &lt;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a> as <a class=\"trait\" href=\"ops/trait.Add.html\" title=\"trait std::ops::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"ops/trait.Add.html#associatedtype.Output\" title=\"type std::ops::Add::Output\">Output</a></h4></section></summary><div class=\"docblock\">Performs the <code>+</code> operation. <a href=\"ops/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-Add-for-f16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/90080\" title=\"Tracking issue for const_ops\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#112\">source</a></span><a href=\"#impl-Add-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"ops/trait.Add.html\" title=\"trait std::ops::Add\">Add</a> for <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open=\"\"><summary><section id=\"associatedtype.Output-13\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output-13\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"ops/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h4></section></summary><div class=\"docblock\">The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.add-3\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#112\">source</a><a href=\"#method.add-3\" class=\"anchor\">§</a><h4 class=\"code-header\">const fn <a href=\"ops/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: <a class=\"primitive\" href=\"primitive.f16.html\">f16</a>) -&gt; <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h4></section></summary><div class=\"docblock\">Performs the <code>+</code> operation. <a href=\"ops/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-AddAssign%3C%26f16%3E-for-f16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#768\">source</a></span><a href=\"#impl-AddAssign%3C%26f16%3E-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"ops/trait.AddAssign.html\" title=\"trait std::ops::AddAssign\">AddAssign</a>&lt;&amp;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a>&gt; for <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#768\">source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ops/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a>)</h4></section></summary><div class=\"docblock\">Performs the <code>+=</code> operation. <a href=\"ops/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-AddAssign-for-f16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#768\">source</a></span><a href=\"#impl-AddAssign-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"ops/trait.AddAssign.html\" title=\"trait std::ops::AddAssign\">AddAssign</a> for <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.add_assign-1\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#768\">source</a><a href=\"#method.add_assign-1\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ops/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"primitive.f16.html\">f16</a>)</h4></section></summary><div class=\"docblock\">Performs the <code>+=</code> operation. <a href=\"ops/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-Clone-for-f16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/clone.rs.html#227-232\">source</a></span><a href=\"#impl-Clone-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/clone.rs.html#227-232\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h4></section></summary><div class=\"docblock\">Returns a copy of the value. <a href=\"clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class=\"docblock\">Performs copy-assignment from <code>source</code>. <a href=\"clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-Debug-for-f16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/fmt/float.rs.html#233\">source</a></span><a href=\"#impl-Debug-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"fmt/trait.Debug.html\" title=\"trait std::fmt::Debug\">Debug</a> for <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/fmt/float.rs.html#235\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"fmt/struct.Formatter.html\" title=\"struct std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"result/enum.Result.html\" title=\"enum std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"primitive.unit.html\">()</a>, <a class=\"struct\" href=\"fmt/struct.Error.html\" title=\"struct std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\">Formats the value using the given formatter. <a href=\"fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-Default-for-f16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/default.rs.html#181\">source</a></span><a href=\"#impl-Default-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"default/trait.Default.html\" title=\"trait std::default::Default\">Default</a> for <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/default.rs.html#181\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h4></section></summary><div class=\"docblock\"><p>Returns the default value of <code>0.0</code></p>\n</div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-Div%3C%26f16%3E-for-%26f16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#509\">source</a></span><a href=\"#impl-Div%3C%26f16%3E-for-%26f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"ops/trait.Div.html\" title=\"trait std::ops::Div\">Div</a>&lt;&amp;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a>&gt; for &amp;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open=\"\"><summary><section id=\"associatedtype.Output-15\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output-15\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"ops/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a> as <a class=\"trait\" href=\"ops/trait.Div.html\" title=\"trait std::ops::Div\">Div</a>&gt;::<a class=\"associatedtype\" href=\"ops/trait.Div.html#associatedtype.Output\" title=\"type std::ops::Div::Output\">Output</a></h4></section></summary><div class=\"docblock\">The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.div-1\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#509\">source</a><a href=\"#method.div-1\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ops/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, other: &amp;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a>) -&gt; &lt;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a> as <a class=\"trait\" href=\"ops/trait.Div.html\" title=\"trait std::ops::Div\">Div</a>&gt;::<a class=\"associatedtype\" href=\"ops/trait.Div.html#associatedtype.Output\" title=\"type std::ops::Div::Output\">Output</a></h4></section></summary><div class=\"docblock\">Performs the <code>/</code> operation. <a href=\"ops/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-Div%3C%26f16%3E-for-f16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#509\">source</a></span><a href=\"#impl-Div%3C%26f16%3E-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"ops/trait.Div.html\" title=\"trait std::ops::Div\">Div</a>&lt;&amp;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a>&gt; for <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open=\"\"><summary><section id=\"associatedtype.Output-17\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output-17\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"ops/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a> as <a class=\"trait\" href=\"ops/trait.Div.html\" title=\"trait std::ops::Div\">Div</a>&gt;::<a class=\"associatedtype\" href=\"ops/trait.Div.html#associatedtype.Output\" title=\"type std::ops::Div::Output\">Output</a></h4></section></summary><div class=\"docblock\">The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.div-3\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#509\">source</a><a href=\"#method.div-3\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ops/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, other: &amp;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a>) -&gt; &lt;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a> as <a class=\"trait\" href=\"ops/trait.Div.html\" title=\"trait std::ops::Div\">Div</a>&gt;::<a class=\"associatedtype\" href=\"ops/trait.Div.html#associatedtype.Output\" title=\"type std::ops::Div::Output\">Output</a></h4></section></summary><div class=\"docblock\">Performs the <code>/</code> operation. <a href=\"ops/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-Div%3Cf16%3E-for-%26f16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#509\">source</a></span><a href=\"#impl-Div%3Cf16%3E-for-%26f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"ops/trait.Div.html\" title=\"trait std::ops::Div\">Div</a>&lt;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a>&gt; for &amp;'a <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open=\"\"><summary><section id=\"associatedtype.Output-16\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output-16\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"ops/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a> as <a class=\"trait\" href=\"ops/trait.Div.html\" title=\"trait std::ops::Div\">Div</a>&gt;::<a class=\"associatedtype\" href=\"ops/trait.Div.html#associatedtype.Output\" title=\"type std::ops::Div::Output\">Output</a></h4></section></summary><div class=\"docblock\">The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.div-2\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#509\">source</a><a href=\"#method.div-2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ops/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, other: <a class=\"primitive\" href=\"primitive.f16.html\">f16</a>) -&gt; &lt;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a> as <a class=\"trait\" href=\"ops/trait.Div.html\" title=\"trait std::ops::Div\">Div</a>&gt;::<a class=\"associatedtype\" href=\"ops/trait.Div.html#associatedtype.Output\" title=\"type std::ops::Div::Output\">Output</a></h4></section></summary><div class=\"docblock\">Performs the <code>/</code> operation. <a href=\"ops/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-Div-for-f16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#509\">source</a></span><a href=\"#impl-Div-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"ops/trait.Div.html\" title=\"trait std::ops::Div\">Div</a> for <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open=\"\"><summary><section id=\"associatedtype.Output-14\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output-14\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"ops/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h4></section></summary><div class=\"docblock\">The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#509\">source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ops/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, other: <a class=\"primitive\" href=\"primitive.f16.html\">f16</a>) -&gt; <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h4></section></summary><div class=\"docblock\">Performs the <code>/</code> operation. <a href=\"ops/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-DivAssign%3C%26f16%3E-for-f16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#950\">source</a></span><a href=\"#impl-DivAssign%3C%26f16%3E-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"ops/trait.DivAssign.html\" title=\"trait std::ops::DivAssign\">DivAssign</a>&lt;&amp;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a>&gt; for <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.div_assign-1\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#950\">source</a><a href=\"#method.div_assign-1\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ops/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a>)</h4></section></summary><div class=\"docblock\">Performs the <code>/=</code> operation. <a href=\"ops/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-DivAssign-for-f16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#950\">source</a></span><a href=\"#impl-DivAssign-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"ops/trait.DivAssign.html\" title=\"trait std::ops::DivAssign\">DivAssign</a> for <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#950\">source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ops/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"primitive.f16.html\">f16</a>)</h4></section></summary><div class=\"docblock\">Performs the <code>/=</code> operation. <a href=\"ops/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-From%3Cf16%3E-for-f128\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.6.0\">1.6.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/num.rs.html#171\">source</a></span><a href=\"#impl-From%3Cf16%3E-for-f128\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"convert/trait.From.html\" title=\"trait std::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a>&gt; for <a class=\"primitive\" href=\"primitive.f128.html\">f128</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/num.rs.html#171\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"primitive\" href=\"primitive.f16.html\">f16</a>) -&gt; <a class=\"primitive\" href=\"primitive.f128.html\">f128</a></h4></section></summary><div class=\"docblock\"><p>Converts <a href=\"primitive.f16.html\" title=\"primitive f16\"><code>f16</code></a> to <a href=\"primitive.f128.html\" title=\"primitive f128\"><code>f128</code></a> losslessly.</p>\n</div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-From%3Cf16%3E-for-f64\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.6.0\">1.6.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/num.rs.html#170\">source</a></span><a href=\"#impl-From%3Cf16%3E-for-f64\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"convert/trait.From.html\" title=\"trait std::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a>&gt; for <a class=\"primitive\" href=\"primitive.f64.html\">f64</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.from-1\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/num.rs.html#170\">source</a><a href=\"#method.from-1\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"primitive\" href=\"primitive.f16.html\">f16</a>) -&gt; <a class=\"primitive\" href=\"primitive.f64.html\">f64</a></h4></section></summary><div class=\"docblock\"><p>Converts <a href=\"primitive.f16.html\" title=\"primitive f16\"><code>f16</code></a> to <a href=\"primitive.f64.html\" title=\"primitive f64\"><code>f64</code></a> losslessly.</p>\n</div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-Mul%3C%26f16%3E-for-%26f16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#351\">source</a></span><a href=\"#impl-Mul%3C%26f16%3E-for-%26f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"ops/trait.Mul.html\" title=\"trait std::ops::Mul\">Mul</a>&lt;&amp;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a>&gt; for &amp;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open=\"\"><summary><section id=\"associatedtype.Output-2\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output-2\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"ops/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a> as <a class=\"trait\" href=\"ops/trait.Mul.html\" title=\"trait std::ops::Mul\">Mul</a>&gt;::<a class=\"associatedtype\" href=\"ops/trait.Mul.html#associatedtype.Output\" title=\"type std::ops::Mul::Output\">Output</a></h4></section></summary><div class=\"docblock\">The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.mul-2\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#351\">source</a><a href=\"#method.mul-2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ops/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, other: &amp;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a>) -&gt; &lt;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a> as <a class=\"trait\" href=\"ops/trait.Mul.html\" title=\"trait std::ops::Mul\">Mul</a>&gt;::<a class=\"associatedtype\" href=\"ops/trait.Mul.html#associatedtype.Output\" title=\"type std::ops::Mul::Output\">Output</a></h4></section></summary><div class=\"docblock\">Performs the <code>*</code> operation. <a href=\"ops/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-Mul%3C%26f16%3E-for-f16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#351\">source</a></span><a href=\"#impl-Mul%3C%26f16%3E-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"ops/trait.Mul.html\" title=\"trait std::ops::Mul\">Mul</a>&lt;&amp;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a>&gt; for <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open=\"\"><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"ops/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a> as <a class=\"trait\" href=\"ops/trait.Mul.html\" title=\"trait std::ops::Mul\">Mul</a>&gt;::<a class=\"associatedtype\" href=\"ops/trait.Mul.html#associatedtype.Output\" title=\"type std::ops::Mul::Output\">Output</a></h4></section></summary><div class=\"docblock\">The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#351\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ops/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, other: &amp;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a>) -&gt; &lt;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a> as <a class=\"trait\" href=\"ops/trait.Mul.html\" title=\"trait std::ops::Mul\">Mul</a>&gt;::<a class=\"associatedtype\" href=\"ops/trait.Mul.html#associatedtype.Output\" title=\"type std::ops::Mul::Output\">Output</a></h4></section></summary><div class=\"docblock\">Performs the <code>*</code> operation. <a href=\"ops/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-Mul%3Cf16%3E-for-%26f16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#351\">source</a></span><a href=\"#impl-Mul%3Cf16%3E-for-%26f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"ops/trait.Mul.html\" title=\"trait std::ops::Mul\">Mul</a>&lt;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a>&gt; for &amp;'a <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open=\"\"><summary><section id=\"associatedtype.Output-3\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output-3\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"ops/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a> as <a class=\"trait\" href=\"ops/trait.Mul.html\" title=\"trait std::ops::Mul\">Mul</a>&gt;::<a class=\"associatedtype\" href=\"ops/trait.Mul.html#associatedtype.Output\" title=\"type std::ops::Mul::Output\">Output</a></h4></section></summary><div class=\"docblock\">The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.mul-3\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#351\">source</a><a href=\"#method.mul-3\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ops/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, other: <a class=\"primitive\" href=\"primitive.f16.html\">f16</a>) -&gt; &lt;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a> as <a class=\"trait\" href=\"ops/trait.Mul.html\" title=\"trait std::ops::Mul\">Mul</a>&gt;::<a class=\"associatedtype\" href=\"ops/trait.Mul.html#associatedtype.Output\" title=\"type std::ops::Mul::Output\">Output</a></h4></section></summary><div class=\"docblock\">Performs the <code>*</code> operation. <a href=\"ops/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-Mul-for-f16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#351\">source</a></span><a href=\"#impl-Mul-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"ops/trait.Mul.html\" title=\"trait std::ops::Mul\">Mul</a> for <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open=\"\"><summary><section id=\"associatedtype.Output-1\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output-1\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"ops/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h4></section></summary><div class=\"docblock\">The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.mul-1\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#351\">source</a><a href=\"#method.mul-1\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ops/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, other: <a class=\"primitive\" href=\"primitive.f16.html\">f16</a>) -&gt; <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h4></section></summary><div class=\"docblock\">Performs the <code>*</code> operation. <a href=\"ops/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-MulAssign%3C%26f16%3E-for-f16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#893\">source</a></span><a href=\"#impl-MulAssign%3C%26f16%3E-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"ops/trait.MulAssign.html\" title=\"trait std::ops::MulAssign\">MulAssign</a>&lt;&amp;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a>&gt; for <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#893\">source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ops/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a>)</h4></section></summary><div class=\"docblock\">Performs the <code>*=</code> operation. <a href=\"ops/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-MulAssign-for-f16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#893\">source</a></span><a href=\"#impl-MulAssign-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"ops/trait.MulAssign.html\" title=\"trait std::ops::MulAssign\">MulAssign</a> for <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.mul_assign-1\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#893\">source</a><a href=\"#method.mul_assign-1\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ops/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"primitive.f16.html\">f16</a>)</h4></section></summary><div class=\"docblock\">Performs the <code>*=</code> operation. <a href=\"ops/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-Neg-for-%26f16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#701\">source</a></span><a href=\"#impl-Neg-for-%26f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"ops/trait.Neg.html\" title=\"trait std::ops::Neg\">Neg</a> for &amp;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open=\"\"><summary><section id=\"associatedtype.Output-4\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output-4\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"ops/trait.Neg.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a> as <a class=\"trait\" href=\"ops/trait.Neg.html\" title=\"trait std::ops::Neg\">Neg</a>&gt;::<a class=\"associatedtype\" href=\"ops/trait.Neg.html#associatedtype.Output\" title=\"type std::ops::Neg::Output\">Output</a></h4></section></summary><div class=\"docblock\">The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.neg\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#701\">source</a><a href=\"#method.neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ops/trait.Neg.html#tymethod.neg\" class=\"fn\">neg</a>(self) -&gt; &lt;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a> as <a class=\"trait\" href=\"ops/trait.Neg.html\" title=\"trait std::ops::Neg\">Neg</a>&gt;::<a class=\"associatedtype\" href=\"ops/trait.Neg.html#associatedtype.Output\" title=\"type std::ops::Neg::Output\">Output</a></h4></section></summary><div class=\"docblock\">Performs the unary <code>-</code> operation. <a href=\"ops/trait.Neg.html#tymethod.neg\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-Neg-for-f16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#701\">source</a></span><a href=\"#impl-Neg-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"ops/trait.Neg.html\" title=\"trait std::ops::Neg\">Neg</a> for <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open=\"\"><summary><section id=\"associatedtype.Output-5\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output-5\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"ops/trait.Neg.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h4></section></summary><div class=\"docblock\">The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.neg-1\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#701\">source</a><a href=\"#method.neg-1\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ops/trait.Neg.html#tymethod.neg\" class=\"fn\">neg</a>(self) -&gt; <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h4></section></summary><div class=\"docblock\">Performs the unary <code>-</code> operation. <a href=\"ops/trait.Neg.html#tymethod.neg\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-PartialEq-for-f16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/92391\" title=\"Tracking issue for const_cmp\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/cmp.rs.html#1500-1502\">source</a></span><a href=\"#impl-PartialEq-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"cmp/trait.PartialEq.html\" title=\"trait std::cmp::PartialEq\">PartialEq</a> for <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/cmp.rs.html#1500-1502\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">const fn <a href=\"cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a>) -&gt; <a class=\"primitive\" href=\"primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\">This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/cmp.rs.html#1500-1502\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">const fn <a href=\"cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a>) -&gt; <a class=\"primitive\" href=\"primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\">This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-PartialOrd-for-f16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/cmp.rs.html#1554\">source</a></span><a href=\"#impl-PartialOrd-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"cmp/trait.PartialOrd.html\" title=\"trait std::cmp::PartialOrd\">PartialOrd</a> for <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/cmp.rs.html#1554\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a>) -&gt; <a class=\"enum\" href=\"option/enum.Option.html\" title=\"enum std::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"cmp/enum.Ordering.html\" title=\"enum std::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class=\"docblock\">This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/cmp.rs.html#1554\">source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a>) -&gt; <a class=\"primitive\" href=\"primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\">This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/cmp.rs.html#1554\">source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a>) -&gt; <a class=\"primitive\" href=\"primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\">This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/cmp.rs.html#1554\">source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a>) -&gt; <a class=\"primitive\" href=\"primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\">This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/cmp.rs.html#1554\">source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a>) -&gt; <a class=\"primitive\" href=\"primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\">This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-Rem%3C%26f16%3E-for-%26f16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#626\">source</a></span><a href=\"#impl-Rem%3C%26f16%3E-for-%26f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"ops/trait.Rem.html\" title=\"trait std::ops::Rem\">Rem</a>&lt;&amp;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a>&gt; for &amp;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open=\"\"><summary><section id=\"associatedtype.Output-20\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output-20\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"ops/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a> as <a class=\"trait\" href=\"ops/trait.Rem.html\" title=\"trait std::ops::Rem\">Rem</a>&gt;::<a class=\"associatedtype\" href=\"ops/trait.Rem.html#associatedtype.Output\" title=\"type std::ops::Rem::Output\">Output</a></h4></section></summary><div class=\"docblock\">The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.rem-2\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#626\">source</a><a href=\"#method.rem-2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ops/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, other: &amp;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a>) -&gt; &lt;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a> as <a class=\"trait\" href=\"ops/trait.Rem.html\" title=\"trait std::ops::Rem\">Rem</a>&gt;::<a class=\"associatedtype\" href=\"ops/trait.Rem.html#associatedtype.Output\" title=\"type std::ops::Rem::Output\">Output</a></h4></section></summary><div class=\"docblock\">Performs the <code>%</code> operation. <a href=\"ops/trait.Rem.html#tymethod.rem\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-Rem%3C%26f16%3E-for-f16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#626\">source</a></span><a href=\"#impl-Rem%3C%26f16%3E-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"ops/trait.Rem.html\" title=\"trait std::ops::Rem\">Rem</a>&lt;&amp;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a>&gt; for <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open=\"\"><summary><section id=\"associatedtype.Output-19\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output-19\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"ops/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a> as <a class=\"trait\" href=\"ops/trait.Rem.html\" title=\"trait std::ops::Rem\">Rem</a>&gt;::<a class=\"associatedtype\" href=\"ops/trait.Rem.html#associatedtype.Output\" title=\"type std::ops::Rem::Output\">Output</a></h4></section></summary><div class=\"docblock\">The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.rem-1\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#626\">source</a><a href=\"#method.rem-1\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ops/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, other: &amp;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a>) -&gt; &lt;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a> as <a class=\"trait\" href=\"ops/trait.Rem.html\" title=\"trait std::ops::Rem\">Rem</a>&gt;::<a class=\"associatedtype\" href=\"ops/trait.Rem.html#associatedtype.Output\" title=\"type std::ops::Rem::Output\">Output</a></h4></section></summary><div class=\"docblock\">Performs the <code>%</code> operation. <a href=\"ops/trait.Rem.html#tymethod.rem\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-Rem%3Cf16%3E-for-%26f16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#626\">source</a></span><a href=\"#impl-Rem%3Cf16%3E-for-%26f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"ops/trait.Rem.html\" title=\"trait std::ops::Rem\">Rem</a>&lt;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a>&gt; for &amp;'a <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open=\"\"><summary><section id=\"associatedtype.Output-21\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output-21\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"ops/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a> as <a class=\"trait\" href=\"ops/trait.Rem.html\" title=\"trait std::ops::Rem\">Rem</a>&gt;::<a class=\"associatedtype\" href=\"ops/trait.Rem.html#associatedtype.Output\" title=\"type std::ops::Rem::Output\">Output</a></h4></section></summary><div class=\"docblock\">The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.rem-3\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#626\">source</a><a href=\"#method.rem-3\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ops/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, other: <a class=\"primitive\" href=\"primitive.f16.html\">f16</a>) -&gt; &lt;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a> as <a class=\"trait\" href=\"ops/trait.Rem.html\" title=\"trait std::ops::Rem\">Rem</a>&gt;::<a class=\"associatedtype\" href=\"ops/trait.Rem.html#associatedtype.Output\" title=\"type std::ops::Rem::Output\">Output</a></h4></section></summary><div class=\"docblock\">Performs the <code>%</code> operation. <a href=\"ops/trait.Rem.html#tymethod.rem\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-Rem-for-f16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#626\">source</a></span><a href=\"#impl-Rem-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"ops/trait.Rem.html\" title=\"trait std::ops::Rem\">Rem</a> for <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h3></section></summary><div class=\"docblock\"><p>The remainder from the division of two floats.</p>\n<p>The remainder has the same sign as the dividend and is computed as:\n<code>x - (x / y).trunc() * y</code>.</p>\n<h4 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h4>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>x: f32 = <span class=\"number\">50.50</span>;\n<span class=\"kw\">let </span>y: f32 = <span class=\"number\">8.125</span>;\n<span class=\"kw\">let </span>remainder = x - (x / y).trunc() * y;\n\n<span class=\"comment\">// The answer to both operations is 1.75\n</span><span class=\"macro\">assert_eq!</span>(x % y, remainder);</code></pre><a class=\"test-arrow\" target=\"_blank\" href=\"https://play.rust-lang.org/?code=%23!%5Ballow(unused)%5D%0Afn+main()+%7B%0A++++let+x:+f32+=+50.50;%0A++++let+y:+f32+=+8.125;%0A++++let+remainder+=+x+-+(x+/+y).trunc()+*+y;%0A++++%0A++++//+The+answer+to+both+operations+is+1.75%0A++++assert_eq!(x+%25+y,+remainder);%0A%7D&amp;edition=2021\">Run</a></div>\n</div><div class=\"impl-items\"><details class=\"toggle\" open=\"\"><summary><section id=\"associatedtype.Output-18\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output-18\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"ops/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h4></section></summary><div class=\"docblock\">The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#626\">source</a><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ops/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, other: <a class=\"primitive\" href=\"primitive.f16.html\">f16</a>) -&gt; <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h4></section></summary><div class=\"docblock\">Performs the <code>%</code> operation. <a href=\"ops/trait.Rem.html#tymethod.rem\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-RemAssign%3C%26f16%3E-for-f16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#1011\">source</a></span><a href=\"#impl-RemAssign%3C%26f16%3E-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"ops/trait.RemAssign.html\" title=\"trait std::ops::RemAssign\">RemAssign</a>&lt;&amp;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a>&gt; for <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.rem_assign-1\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#1011\">source</a><a href=\"#method.rem_assign-1\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ops/trait.RemAssign.html#tymethod.rem_assign\" class=\"fn\">rem_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a>)</h4></section></summary><div class=\"docblock\">Performs the <code>%=</code> operation. <a href=\"ops/trait.RemAssign.html#tymethod.rem_assign\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-RemAssign-for-f16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#1011\">source</a></span><a href=\"#impl-RemAssign-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"ops/trait.RemAssign.html\" title=\"trait std::ops::RemAssign\">RemAssign</a> for <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.rem_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#1011\">source</a><a href=\"#method.rem_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ops/trait.RemAssign.html#tymethod.rem_assign\" class=\"fn\">rem_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"primitive.f16.html\">f16</a>)</h4></section></summary><div class=\"docblock\">Performs the <code>%=</code> operation. <a href=\"ops/trait.RemAssign.html#tymethod.rem_assign\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-Sub%3C%26f16%3E-for-%26f16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#221\">source</a></span><a href=\"#impl-Sub%3C%26f16%3E-for-%26f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"ops/trait.Sub.html\" title=\"trait std::ops::Sub\">Sub</a>&lt;&amp;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a>&gt; for &amp;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open=\"\"><summary><section id=\"associatedtype.Output-7\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output-7\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"ops/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a> as <a class=\"trait\" href=\"ops/trait.Sub.html\" title=\"trait std::ops::Sub\">Sub</a>&gt;::<a class=\"associatedtype\" href=\"ops/trait.Sub.html#associatedtype.Output\" title=\"type std::ops::Sub::Output\">Output</a></h4></section></summary><div class=\"docblock\">The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.sub-1\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#221\">source</a><a href=\"#method.sub-1\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ops/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: &amp;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a>) -&gt; &lt;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a> as <a class=\"trait\" href=\"ops/trait.Sub.html\" title=\"trait std::ops::Sub\">Sub</a>&gt;::<a class=\"associatedtype\" href=\"ops/trait.Sub.html#associatedtype.Output\" title=\"type std::ops::Sub::Output\">Output</a></h4></section></summary><div class=\"docblock\">Performs the <code>-</code> operation. <a href=\"ops/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-Sub%3C%26f16%3E-for-f16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#221\">source</a></span><a href=\"#impl-Sub%3C%26f16%3E-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"ops/trait.Sub.html\" title=\"trait std::ops::Sub\">Sub</a>&lt;&amp;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a>&gt; for <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open=\"\"><summary><section id=\"associatedtype.Output-6\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output-6\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"ops/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a> as <a class=\"trait\" href=\"ops/trait.Sub.html\" title=\"trait std::ops::Sub\">Sub</a>&gt;::<a class=\"associatedtype\" href=\"ops/trait.Sub.html#associatedtype.Output\" title=\"type std::ops::Sub::Output\">Output</a></h4></section></summary><div class=\"docblock\">The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#221\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ops/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: &amp;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a>) -&gt; &lt;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a> as <a class=\"trait\" href=\"ops/trait.Sub.html\" title=\"trait std::ops::Sub\">Sub</a>&gt;::<a class=\"associatedtype\" href=\"ops/trait.Sub.html#associatedtype.Output\" title=\"type std::ops::Sub::Output\">Output</a></h4></section></summary><div class=\"docblock\">Performs the <code>-</code> operation. <a href=\"ops/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-Sub%3Cf16%3E-for-%26f16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#221\">source</a></span><a href=\"#impl-Sub%3Cf16%3E-for-%26f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"ops/trait.Sub.html\" title=\"trait std::ops::Sub\">Sub</a>&lt;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a>&gt; for &amp;'a <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open=\"\"><summary><section id=\"associatedtype.Output-9\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output-9\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"ops/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a> as <a class=\"trait\" href=\"ops/trait.Sub.html\" title=\"trait std::ops::Sub\">Sub</a>&gt;::<a class=\"associatedtype\" href=\"ops/trait.Sub.html#associatedtype.Output\" title=\"type std::ops::Sub::Output\">Output</a></h4></section></summary><div class=\"docblock\">The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.sub-3\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#221\">source</a><a href=\"#method.sub-3\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ops/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: <a class=\"primitive\" href=\"primitive.f16.html\">f16</a>) -&gt; &lt;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a> as <a class=\"trait\" href=\"ops/trait.Sub.html\" title=\"trait std::ops::Sub\">Sub</a>&gt;::<a class=\"associatedtype\" href=\"ops/trait.Sub.html#associatedtype.Output\" title=\"type std::ops::Sub::Output\">Output</a></h4></section></summary><div class=\"docblock\">Performs the <code>-</code> operation. <a href=\"ops/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-Sub-for-f16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#221\">source</a></span><a href=\"#impl-Sub-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"ops/trait.Sub.html\" title=\"trait std::ops::Sub\">Sub</a> for <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open=\"\"><summary><section id=\"associatedtype.Output-8\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output-8\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"ops/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h4></section></summary><div class=\"docblock\">The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.sub-2\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#221\">source</a><a href=\"#method.sub-2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ops/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: <a class=\"primitive\" href=\"primitive.f16.html\">f16</a>) -&gt; <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h4></section></summary><div class=\"docblock\">Performs the <code>-</code> operation. <a href=\"ops/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-SubAssign%3C%26f16%3E-for-f16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#835\">source</a></span><a href=\"#impl-SubAssign%3C%26f16%3E-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"ops/trait.SubAssign.html\" title=\"trait std::ops::SubAssign\">SubAssign</a>&lt;&amp;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a>&gt; for <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#835\">source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ops/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"primitive.f16.html\">f16</a>)</h4></section></summary><div class=\"docblock\">Performs the <code>-=</code> operation. <a href=\"ops/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-SubAssign-for-f16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#835\">source</a></span><a href=\"#impl-SubAssign-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"ops/trait.SubAssign.html\" title=\"trait std::ops::SubAssign\">SubAssign</a> for <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.sub_assign-1\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/ops/arith.rs.html#835\">source</a><a href=\"#method.sub_assign-1\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ops/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"primitive.f16.html\">f16</a>)</h4></section></summary><div class=\"docblock\">Performs the <code>-=</code> operation. <a href=\"ops/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details><section id=\"impl-Copy-for-f16\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/marker.rs.html#420-430\">source</a></span><a href=\"#impl-Copy-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"marker/trait.Copy.html\" title=\"trait std::marker::Copy\">Copy</a> for <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h3></section><section id=\"impl-FloatToInt%3Ci128%3E-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/num.rs.html#37\">source</a><a href=\"#impl-FloatToInt%3Ci128%3E-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"convert/trait.FloatToInt.html\" title=\"trait std::convert::FloatToInt\">FloatToInt</a>&lt;<a class=\"primitive\" href=\"primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h3></section><section id=\"impl-FloatToInt%3Ci16%3E-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/num.rs.html#37\">source</a><a href=\"#impl-FloatToInt%3Ci16%3E-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"convert/trait.FloatToInt.html\" title=\"trait std::convert::FloatToInt\">FloatToInt</a>&lt;<a class=\"primitive\" href=\"primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h3></section><section id=\"impl-FloatToInt%3Ci32%3E-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/num.rs.html#37\">source</a><a href=\"#impl-FloatToInt%3Ci32%3E-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"convert/trait.FloatToInt.html\" title=\"trait std::convert::FloatToInt\">FloatToInt</a>&lt;<a class=\"primitive\" href=\"primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h3></section><section id=\"impl-FloatToInt%3Ci64%3E-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/num.rs.html#37\">source</a><a href=\"#impl-FloatToInt%3Ci64%3E-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"convert/trait.FloatToInt.html\" title=\"trait std::convert::FloatToInt\">FloatToInt</a>&lt;<a class=\"primitive\" href=\"primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h3></section><section id=\"impl-FloatToInt%3Ci8%3E-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/num.rs.html#37\">source</a><a href=\"#impl-FloatToInt%3Ci8%3E-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"convert/trait.FloatToInt.html\" title=\"trait std::convert::FloatToInt\">FloatToInt</a>&lt;<a class=\"primitive\" href=\"primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h3></section><section id=\"impl-FloatToInt%3Cisize%3E-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/num.rs.html#37\">source</a><a href=\"#impl-FloatToInt%3Cisize%3E-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"convert/trait.FloatToInt.html\" title=\"trait std::convert::FloatToInt\">FloatToInt</a>&lt;<a class=\"primitive\" href=\"primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h3></section><section id=\"impl-FloatToInt%3Cu128%3E-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/num.rs.html#37\">source</a><a href=\"#impl-FloatToInt%3Cu128%3E-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"convert/trait.FloatToInt.html\" title=\"trait std::convert::FloatToInt\">FloatToInt</a>&lt;<a class=\"primitive\" href=\"primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h3></section><section id=\"impl-FloatToInt%3Cu16%3E-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/num.rs.html#37\">source</a><a href=\"#impl-FloatToInt%3Cu16%3E-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"convert/trait.FloatToInt.html\" title=\"trait std::convert::FloatToInt\">FloatToInt</a>&lt;<a class=\"primitive\" href=\"primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h3></section><section id=\"impl-FloatToInt%3Cu32%3E-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/num.rs.html#37\">source</a><a href=\"#impl-FloatToInt%3Cu32%3E-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"convert/trait.FloatToInt.html\" title=\"trait std::convert::FloatToInt\">FloatToInt</a>&lt;<a class=\"primitive\" href=\"primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h3></section><section id=\"impl-FloatToInt%3Cu64%3E-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/num.rs.html#37\">source</a><a href=\"#impl-FloatToInt%3Cu64%3E-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"convert/trait.FloatToInt.html\" title=\"trait std::convert::FloatToInt\">FloatToInt</a>&lt;<a class=\"primitive\" href=\"primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h3></section><section id=\"impl-FloatToInt%3Cu8%3E-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/num.rs.html#37\">source</a><a href=\"#impl-FloatToInt%3Cu8%3E-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"convert/trait.FloatToInt.html\" title=\"trait std::convert::FloatToInt\">FloatToInt</a>&lt;<a class=\"primitive\" href=\"primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h3></section><section id=\"impl-FloatToInt%3Cusize%3E-for-f16\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/num.rs.html#37\">source</a><a href=\"#impl-FloatToInt%3Cusize%3E-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"convert/trait.FloatToInt.html\" title=\"trait std::convert::FloatToInt\">FloatToInt</a>&lt;<a class=\"primitive\" href=\"primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h3></section></div><h2 id=\"synthetic-implementations\" class=\"section-header\">Auto Trait Implementations<a href=\"#synthetic-implementations\" class=\"anchor\">§</a></h2><div id=\"synthetic-implementations-list\"><section id=\"impl-Freeze-for-f16\" class=\"impl\"><a href=\"#impl-Freeze-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"marker/trait.Freeze.html\" title=\"trait std::marker::Freeze\">Freeze</a> for <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h3></section><section id=\"impl-RefUnwindSafe-for-f16\" class=\"impl\"><a href=\"#impl-RefUnwindSafe-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"panic/trait.RefUnwindSafe.html\" title=\"trait std::panic::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h3></section><section id=\"impl-Send-for-f16\" class=\"impl\"><a href=\"#impl-Send-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"marker/trait.Send.html\" title=\"trait std::marker::Send\">Send</a> for <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h3></section><section id=\"impl-Sync-for-f16\" class=\"impl\"><a href=\"#impl-Sync-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"marker/trait.Sync.html\" title=\"trait std::marker::Sync\">Sync</a> for <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h3></section><section id=\"impl-Unpin-for-f16\" class=\"impl\"><a href=\"#impl-Unpin-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"marker/trait.Unpin.html\" title=\"trait std::marker::Unpin\">Unpin</a> for <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h3></section><section id=\"impl-UnwindSafe-for-f16\" class=\"impl\"><a href=\"#impl-UnwindSafe-for-f16\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"primitive\" href=\"primitive.f16.html\">f16</a></h3></section></div><h2 id=\"blanket-implementations\" class=\"section-header\">Blanket Implementations<a href=\"#blanket-implementations\" class=\"anchor\">§</a></h2><div id=\"blanket-implementations-list\"><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-Any-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/any.rs.html#140\">source</a><a href=\"#impl-Any-for-T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"any/trait.Any.html\" title=\"trait std::any::Any\">Any</a> for T<div class=\"where\">where\n    T: 'static + ?<a class=\"trait\" href=\"marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.type_id\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/any.rs.html#141\">source</a><a href=\"#method.type_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"any/trait.Any.html#tymethod.type_id\" class=\"fn\">type_id</a>(&amp;self) -&gt; <a class=\"struct\" href=\"any/struct.TypeId.html\" title=\"struct std::any::TypeId\">TypeId</a></h4></section></summary><div class=\"docblock\">Gets the <code>TypeId</code> of <code>self</code>. <a href=\"any/trait.Any.html#tymethod.type_id\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-Borrow%3CT%3E-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/borrow.rs.html#208\">source</a><a href=\"#impl-Borrow%3CT%3E-for-T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"borrow/trait.Borrow.html\" title=\"trait std::borrow::Borrow\">Borrow</a>&lt;T&gt; for T<div class=\"where\">where\n    T: ?<a class=\"trait\" href=\"marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.borrow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/borrow.rs.html#210\">source</a><a href=\"#method.borrow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"borrow/trait.Borrow.html#tymethod.borrow\" class=\"fn\">borrow</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"primitive.reference.html\">&amp;T</a></h4></section></summary><div class=\"docblock\">Immutably borrows from an owned value. <a href=\"borrow/trait.Borrow.html#tymethod.borrow\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-BorrowMut%3CT%3E-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/borrow.rs.html#216\">source</a><a href=\"#impl-BorrowMut%3CT%3E-for-T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"borrow/trait.BorrowMut.html\" title=\"trait std::borrow::BorrowMut\">BorrowMut</a>&lt;T&gt; for T<div class=\"where\">where\n    T: ?<a class=\"trait\" href=\"marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.borrow_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/borrow.rs.html#217\">source</a><a href=\"#method.borrow_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"borrow/trait.BorrowMut.html#tymethod.borrow_mut\" class=\"fn\">borrow_mut</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"primitive.reference.html\">&amp;mut T</a></h4></section></summary><div class=\"docblock\">Mutably borrows from an owned value. <a href=\"borrow/trait.BorrowMut.html#tymethod.borrow_mut\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-From%3CT%3E-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#765\">source</a><a href=\"#impl-From%3CT%3E-for-T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"convert/trait.From.html\" title=\"trait std::convert::From\">From</a>&lt;T&gt; for T</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.from-2\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#768\">source</a><a href=\"#method.from-2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(t: T) -&gt; T</h4></section></summary><div class=\"docblock\"><p>Returns the argument unchanged.</p>\n</div></details></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-Into%3CU%3E-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#748-750\">source</a><a href=\"#impl-Into%3CU%3E-for-T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"convert/trait.Into.html\" title=\"trait std::convert::Into\">Into</a>&lt;U&gt; for T<div class=\"where\">where\n    U: <a class=\"trait\" href=\"convert/trait.From.html\" title=\"trait std::convert::From\">From</a>&lt;T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#758\">source</a><a href=\"#method.into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"convert/trait.Into.html#tymethod.into\" class=\"fn\">into</a>(self) -&gt; U</h4></section></summary><div class=\"docblock\"><p>Calls <code>U::from(self)</code>.</p>\n<p>That is, this conversion is whatever the implementation of\n<code><a href=\"convert/trait.From.html\" title=\"trait std::convert::From\">From</a>&lt;T&gt; for U</code> chooses to do.</p>\n</div></details></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-ToOwned-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/alloc/borrow.rs.html#83-85\">source</a><a href=\"#impl-ToOwned-for-T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"borrow/trait.ToOwned.html\" title=\"trait std::borrow::ToOwned\">ToOwned</a> for T<div class=\"where\">where\n    T: <a class=\"trait\" href=\"clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open=\"\"><summary><section id=\"associatedtype.Owned\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Owned\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"borrow/trait.ToOwned.html#associatedtype.Owned\" class=\"associatedtype\">Owned</a> = T</h4></section></summary><div class=\"docblock\">The resulting type after obtaining ownership.</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.to_owned\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/alloc/borrow.rs.html#88\">source</a><a href=\"#method.to_owned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"borrow/trait.ToOwned.html#tymethod.to_owned\" class=\"fn\">to_owned</a>(&amp;self) -&gt; T</h4></section></summary><div class=\"docblock\">Creates owned data from borrowed data, usually by cloning. <a href=\"borrow/trait.ToOwned.html#tymethod.to_owned\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.clone_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/alloc/borrow.rs.html#92\">source</a><a href=\"#method.clone_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"borrow/trait.ToOwned.html#method.clone_into\" class=\"fn\">clone_into</a>(&amp;self, target: <a class=\"primitive\" href=\"primitive.reference.html\">&amp;mut T</a>)</h4></section></summary><div class=\"docblock\">Uses borrowed data to replace owned data, usually by cloning. <a href=\"borrow/trait.ToOwned.html#method.clone_into\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-TryFrom%3CU%3E-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#805-807\">source</a><a href=\"#impl-TryFrom%3CU%3E-for-T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"convert/trait.TryFrom.html\" title=\"trait std::convert::TryFrom\">TryFrom</a>&lt;U&gt; for T<div class=\"where\">where\n    U: <a class=\"trait\" href=\"convert/trait.Into.html\" title=\"trait std::convert::Into\">Into</a>&lt;T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open=\"\"><summary><section id=\"associatedtype.Error-1\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error-1\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"convert/enum.Infallible.html\" title=\"enum std::convert::Infallible\">Infallible</a></h4></section></summary><div class=\"docblock\">The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#812\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(value: U) -&gt; <a class=\"enum\" href=\"result/enum.Result.html\" title=\"enum std::result::Result\">Result</a>&lt;T, &lt;T as <a class=\"trait\" href=\"convert/trait.TryFrom.html\" title=\"trait std::convert::TryFrom\">TryFrom</a>&lt;U&gt;&gt;::<a class=\"associatedtype\" href=\"convert/trait.TryFrom.html#associatedtype.Error\" title=\"type std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\">Performs the conversion.</div></details></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-TryInto%3CU%3E-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#790-792\">source</a><a href=\"#impl-TryInto%3CU%3E-for-T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"convert/trait.TryInto.html\" title=\"trait std::convert::TryInto\">TryInto</a>&lt;U&gt; for T<div class=\"where\">where\n    U: <a class=\"trait\" href=\"convert/trait.TryFrom.html\" title=\"trait std::convert::TryFrom\">TryFrom</a>&lt;T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open=\"\"><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"convert/trait.TryInto.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = &lt;U as <a class=\"trait\" href=\"convert/trait.TryFrom.html\" title=\"trait std::convert::TryFrom\">TryFrom</a>&lt;T&gt;&gt;::<a class=\"associatedtype\" href=\"convert/trait.TryFrom.html#associatedtype.Error\" title=\"type std::convert::TryFrom::Error\">Error</a></h4></section></summary><div class=\"docblock\">The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.try_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#797\">source</a><a href=\"#method.try_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"convert/trait.TryInto.html#tymethod.try_into\" class=\"fn\">try_into</a>(self) -&gt; <a class=\"enum\" href=\"result/enum.Result.html\" title=\"enum std::result::Result\">Result</a>&lt;U, &lt;U as <a class=\"trait\" href=\"convert/trait.TryFrom.html\" title=\"trait std::convert::TryFrom\">TryFrom</a>&lt;T&gt;&gt;::<a class=\"associatedtype\" href=\"convert/trait.TryFrom.html#associatedtype.Error\" title=\"type std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\">Performs the conversion.</div></details></div></details></div></section></div></main></body></html>",
	"crawlDate": "2024-07-28T05:09:57.001Z"
}