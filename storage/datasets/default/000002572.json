{
	"title": "std::os::raw - Rust",
	"url": "https://doc.rust-lang.org/stable/std/os/raw/index.html",
	"markdown": "# std::os::raw - Rust\n\n## Module [std](../../index.html)::[os](../index.html)::[raw](#)\n\n1.1.0 · [source](about:blank/src/std/os/raw/mod.rs.html#1-26) ·\n\nExpand description\n\nCompatibility module for C platform-specific types. Use [`core::ffi`](https://doc.rust-lang.org/1.80.0/core/ffi/index.html \"mod core::ffi\") instead.\n\n-   Equivalent to C’s `char` type.\n    \n-   Equivalent to C’s `double` type.\n    \n-   Equivalent to C’s `float` type.\n    \n-   Equivalent to C’s `signed int` (`int`) type.\n    \n-   Equivalent to C’s `signed long` (`long`) type.\n    \n-   Equivalent to C’s `signed long long` (`long long`) type.\n    \n-   Equivalent to C’s `signed char` type.\n    \n-   Equivalent to C’s `signed short` (`short`) type.\n    \n-   Equivalent to C’s `unsigned char` type.\n    \n-   Equivalent to C’s `unsigned int` type.\n    \n-   Equivalent to C’s `unsigned long` type.\n    \n-   Equivalent to C’s `unsigned long long` type.\n    \n-   Equivalent to C’s `unsigned short` type.\n    \n-   Equivalent to C’s `void` type when used as a [pointer](../../primitive.pointer.html \"primitive pointer\").",
	"html": "<!DOCTYPE html><html lang=\"en\" data-theme=\"light\"><head><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><meta name=\"generator\" content=\"rustdoc\"><meta name=\"description\" content=\"Compatibility module for C platform-specific types. Use `core::ffi` instead.\"><title>std::os::raw - Rust</title><script>if(window.location.protocol!==\"file:\")document.head.insertAdjacentHTML(\"beforeend\",\"SourceSerif4-Regular-46f98efaafac5295.ttf.woff2,FiraSans-Regular-018c141bf0843ffd.woff2,FiraSans-Medium-8f9a781e4970d388.woff2,SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2,SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\".split(\",\").map(f=>`<link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin href=\"../../../static.files/${f}\">`).join(\"\"))</script><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../../static.files/SourceSerif4-Regular-46f98efaafac5295.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../../static.files/FiraSans-Regular-018c141bf0843ffd.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../../static.files/FiraSans-Medium-8f9a781e4970d388.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../../static.files/SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../../static.files/SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\"><link rel=\"stylesheet\" href=\"../../../static.files/normalize-76eba96aa4d2e634.css\"><link rel=\"stylesheet\" href=\"../../../static.files/rustdoc-dd39b87e5fcfba68.css\"><meta name=\"rustdoc-vars\" data-root-path=\"../../../\" data-static-root-path=\"../../../static.files/\" data-current-crate=\"std\" data-themes=\"\" data-resource-suffix=\"1.80.0\" data-rustdoc-version=\"1.80.0 (051478957 2024-07-21)\" data-channel=\"1.80.0\" data-search-js=\"search-d52510db62a78183.js\" data-settings-js=\"settings-4313503d2e1961c2.js\"><script src=\"../../../static.files/storage-118b08c4c78b968e.js\"></script><script defer=\"\" src=\"../sidebar-items1.80.0.js\"></script><script defer=\"\" src=\"../../../static.files/main-20a3ad099b048cf2.js\"></script><noscript><link rel=\"stylesheet\" href=\"../../../static.files/noscript-df360f571f6edeae.css\"></noscript><link rel=\"alternate icon\" type=\"image/png\" href=\"../../../static.files/favicon-32x32-422f7d1d52889060.png\"><link rel=\"icon\" type=\"image/svg+xml\" href=\"../../../static.files/favicon-2c020d218678b618.svg\"></head><body class=\"rustdoc mod\"><!--[if lte IE 11]><div class=\"warning\">This old browser is unsupported and will most likely display funky things.</div><![endif]--><nav class=\"mobile-topbar\"><button class=\"sidebar-menu-toggle\" title=\"show sidebar\"></button><a class=\"logo-container\" href=\"../../../std/index.html\"><img class=\"rust-logo\" src=\"../../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"\"></a><h2 class=\"location\"><a href=\"#\">Module raw</a></h2></nav><nav class=\"sidebar\"><div class=\"sidebar-crate\"><a class=\"logo-container\" href=\"../../../std/index.html\"><img class=\"rust-logo\" src=\"../../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"logo\"></a><h2><a href=\"../../../std/index.html\">std</a><span class=\"version\">1.80.0</span></h2></div><div class=\"version\">(051478957\t2024-07-21)</div><h2 class=\"location\"><a href=\"#\">Module raw</a></h2><div class=\"sidebar-elems\"><section><ul class=\"block\"><li><a href=\"#types\">Type Aliases</a></li></ul></section><h2><a href=\"../index.html\">In std::os</a></h2><h3><a href=\"../index.html#modules\">Modules</a></h3><ul class=\"block mod\"><li><a href=\"../fd/index.html\">fd</a></li><li><a href=\"../linux/index.html\">linux</a></li><li><a href=\"../raw/index.html\">raw</a></li><li><a href=\"../unix/index.html\">unix</a></li><li><a href=\"../wasi/index.html\">wasi</a></li><li><a href=\"../wasip2/index.html\">wasip2</a></li><li><a href=\"../windows/index.html\">windows</a></li></ul></div></nav><div class=\"sidebar-resizer\"></div><main><div class=\"width-limiter\"><rustdoc-search><nav class=\"sub\">\n            <form class=\"search-form\">\n                <span></span> <!-- This empty span is a hacky fix for Safari - See #93184 -->\n                <div id=\"sidebar-button\" tabindex=\"-1\">\n                    <a href=\"../../../std/all.html\" title=\"show sidebar\"></a>\n                </div>\n                <input class=\"search-input\" name=\"search\" aria-label=\"Run search in the documentation\" autocomplete=\"off\" spellcheck=\"false\" placeholder=\"Type ‘S’ or ‘/’ to search, ‘?’ for more options…\" type=\"search\">\n                <div id=\"help-button\" tabindex=\"-1\">\n                    <a href=\"../../../help.html\" title=\"help\">?</a>\n                </div>\n                <div id=\"settings-menu\" tabindex=\"-1\">\n                    <a href=\"../../../settings.html\" title=\"settings\">\n                        Settings\n                    </a>\n                </div>\n            </form>\n        </nav></rustdoc-search><section id=\"main-content\" class=\"content\"><div class=\"main-heading\"><h1>Module <a href=\"../../index.html\">std</a>::<wbr><a href=\"../index.html\">os</a>::<wbr><a class=\"mod\" href=\"#\">raw</a><button id=\"copy-path\" title=\"Copy item path to clipboard\">Copy item path</button></h1><span class=\"out-of-band\"><span class=\"since\" title=\"Stable since Rust version 1.1.0\">1.1.0</span> · <a class=\"src\" href=\"../../../src/std/os/raw/mod.rs.html#1-26\">source</a> · <button id=\"toggle-all-docs\" title=\"collapse all docs\">[<span>−</span>]</button></span></div><details class=\"toggle top-doc\" open=\"\"><summary class=\"hideme\"><span>Expand description</span></summary><div class=\"docblock\"><p>Compatibility module for C platform-specific types. Use <a href=\"https://doc.rust-lang.org/1.80.0/core/ffi/index.html\" title=\"mod core::ffi\"><code>core::ffi</code></a> instead.</p>\n</div></details><h2 id=\"types\" class=\"section-header\">Type Aliases<a href=\"#types\" class=\"anchor\">§</a></h2><ul class=\"item-table\"><li><div class=\"item-name\"><a class=\"type\" href=\"type.c_char.html\" title=\"type std::os::raw::c_char\">c_char</a></div><div class=\"desc docblock-short\">Equivalent to C’s <code>char</code> type.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.c_double.html\" title=\"type std::os::raw::c_double\">c_double</a></div><div class=\"desc docblock-short\">Equivalent to C’s <code>double</code> type.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.c_float.html\" title=\"type std::os::raw::c_float\">c_float</a></div><div class=\"desc docblock-short\">Equivalent to C’s <code>float</code> type.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.c_int.html\" title=\"type std::os::raw::c_int\">c_int</a></div><div class=\"desc docblock-short\">Equivalent to C’s <code>signed int</code> (<code>int</code>) type.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.c_long.html\" title=\"type std::os::raw::c_long\">c_long</a></div><div class=\"desc docblock-short\">Equivalent to C’s <code>signed long</code> (<code>long</code>) type.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.c_longlong.html\" title=\"type std::os::raw::c_longlong\">c_longlong</a></div><div class=\"desc docblock-short\">Equivalent to C’s <code>signed long long</code> (<code>long long</code>) type.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.c_schar.html\" title=\"type std::os::raw::c_schar\">c_schar</a></div><div class=\"desc docblock-short\">Equivalent to C’s <code>signed char</code> type.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.c_short.html\" title=\"type std::os::raw::c_short\">c_short</a></div><div class=\"desc docblock-short\">Equivalent to C’s <code>signed short</code> (<code>short</code>) type.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.c_uchar.html\" title=\"type std::os::raw::c_uchar\">c_uchar</a></div><div class=\"desc docblock-short\">Equivalent to C’s <code>unsigned char</code> type.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.c_uint.html\" title=\"type std::os::raw::c_uint\">c_uint</a></div><div class=\"desc docblock-short\">Equivalent to C’s <code>unsigned int</code> type.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.c_ulong.html\" title=\"type std::os::raw::c_ulong\">c_ulong</a></div><div class=\"desc docblock-short\">Equivalent to C’s <code>unsigned long</code> type.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.c_ulonglong.html\" title=\"type std::os::raw::c_ulonglong\">c_ulonglong</a></div><div class=\"desc docblock-short\">Equivalent to C’s <code>unsigned long long</code> type.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.c_ushort.html\" title=\"type std::os::raw::c_ushort\">c_ushort</a></div><div class=\"desc docblock-short\">Equivalent to C’s <code>unsigned short</code> type.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.c_void.html\" title=\"type std::os::raw::c_void\">c_void</a></div><div class=\"desc docblock-short\">Equivalent to C’s <code>void</code> type when used as a <a href=\"../../primitive.pointer.html\" title=\"primitive pointer\">pointer</a>.</div></li></ul></section></div></main></body></html>",
	"crawlDate": "2024-07-28T05:24:07.761Z"
}