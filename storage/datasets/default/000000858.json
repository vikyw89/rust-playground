{
	"title": "SocketAddrV4 in std::net - Rust",
	"url": "https://doc.rust-lang.org/stable/std/net/struct.SocketAddrV4.html",
	"markdown": "# SocketAddrV4 in std::net - Rust\n\n```\npub struct SocketAddrV4 { /* private fields */ }\n```\n\nExpand description\n\nAn IPv4 socket address.\n\nIPv4 socket addresses consist of an [`IPv4` address](struct.Ipv4Addr.html \"struct std::net::Ipv4Addr\") and a 16-bit port number, as stated in [IETF RFC 793](https://tools.ietf.org/html/rfc793).\n\nSee [`SocketAddr`](enum.SocketAddr.html \"enum std::net::SocketAddr\") for a type encompassing both IPv4 and IPv6 socket addresses.\n\nThe size of a `SocketAddrV4` struct may vary depending on the target operating system. Do not assume that this type has the same memory layout as the underlying system representation.\n\n## [Â§](#examples)Examples\n\n```\nuse std::net::{Ipv4Addr, SocketAddrV4};\n\nlet socket = SocketAddrV4::new(Ipv4Addr::new(127, 0, 0, 1), 8080);\n\nassert_eq!(\"127.0.0.1:8080\".parse(), Ok(socket));\nassert_eq!(socket.ip(), &Ipv4Addr::new(127, 0, 0, 1));\nassert_eq!(socket.port(), 8080);\n```\n\n[Run](https://play.rust-lang.org/?code=%23!%5Ballow(unused)%5D%0Afn+main()+%7B%0A++++use+std::net::%7BIpv4Addr,+SocketAddrV4%7D;%0A++++%0A++++let+socket+=+SocketAddrV4::new(Ipv4Addr::new(127,+0,+0,+1),+8080);%0A++++%0A++++assert_eq!(%22127.0.0.1:8080%22.parse(),+Ok(socket));%0A++++assert_eq!(socket.ip(),+%26Ipv4Addr::new(127,+0,+0,+1));%0A++++assert_eq!(socket.port(),+8080);%0A%7D&edition=2021)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/net/parser.rs.html#388)[Â§](#impl-SocketAddrV4)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/net/parser.rs.html#401)\n\nðŸ”¬This is a nightly-only experimental API. (`addr_parse_ascii`Â [#101035](https://github.com/rust-lang/rust/issues/101035))\n\nParse an IPv4 socket address from a slice of bytes.\n\n```\n#![feature(addr_parse_ascii)]\n\nuse std::net::{Ipv4Addr, SocketAddrV4};\n\nlet socket = SocketAddrV4::new(Ipv4Addr::new(127, 0, 0, 1), 8080);\n\nassert_eq!(SocketAddrV4::parse_ascii(b\"127.0.0.1:8080\"), Ok(socket));\n```\n\n[Run](https://play.rust-lang.org/?code=%23!%5Ballow(unused)%5D%0A%23!%5Bfeature(addr_parse_ascii)%5D%0A%0Afn+main()+%7B%0A++++use+std::net::%7BIpv4Addr,+SocketAddrV4%7D;%0A++++%0A++++let+socket+=+SocketAddrV4::new(Ipv4Addr::new(127,+0,+0,+1),+8080);%0A++++%0A++++assert_eq!(SocketAddrV4::parse_ascii(b%22127.0.0.1:8080%22),+Ok(socket));%0A%7D&version=nightly&edition=2021)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/net/socket_addr.rs.html#262)[Â§](#impl-SocketAddrV4-1)\n\n1.0.0 (const: 1.69.0) Â· [source](https://doc.rust-lang.org/1.80.0/src/core/net/socket_addr.rs.html#278)\n\nCreates a new socket address from an [`IPv4` address](struct.Ipv4Addr.html \"struct std::net::Ipv4Addr\") and a port number.\n\n##### [Â§](#examples-1)Examples\n\n```\nuse std::net::{SocketAddrV4, Ipv4Addr};\n\nlet socket = SocketAddrV4::new(Ipv4Addr::new(127, 0, 0, 1), 8080);\n```\n\n[Run](https://play.rust-lang.org/?code=%23!%5Ballow(unused)%5D%0Afn+main()+%7B%0A++++use+std::net::%7BSocketAddrV4,+Ipv4Addr%7D;%0A++++%0A++++let+socket+=+SocketAddrV4::new(Ipv4Addr::new(127,+0,+0,+1),+8080);%0A%7D&edition=2021)\n\n1.0.0 (const: 1.69.0) Â· [source](https://doc.rust-lang.org/1.80.0/src/core/net/socket_addr.rs.html#296)\n\nReturns the IP address associated with this socket address.\n\n##### [Â§](#examples-2)Examples\n\n```\nuse std::net::{SocketAddrV4, Ipv4Addr};\n\nlet socket = SocketAddrV4::new(Ipv4Addr::new(127, 0, 0, 1), 8080);\nassert_eq!(socket.ip(), &Ipv4Addr::new(127, 0, 0, 1));\n```\n\n[Run](https://play.rust-lang.org/?code=%23!%5Ballow(unused)%5D%0Afn+main()+%7B%0A++++use+std::net::%7BSocketAddrV4,+Ipv4Addr%7D;%0A++++%0A++++let+socket+=+SocketAddrV4::new(Ipv4Addr::new(127,+0,+0,+1),+8080);%0A++++assert_eq!(socket.ip(),+%26Ipv4Addr::new(127,+0,+0,+1));%0A%7D&edition=2021)\n\n1.9.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/net/socket_addr.rs.html#313)\n\nChanges the IP address associated with this socket address.\n\n##### [Â§](#examples-3)Examples\n\n```\nuse std::net::{SocketAddrV4, Ipv4Addr};\n\nlet mut socket = SocketAddrV4::new(Ipv4Addr::new(127, 0, 0, 1), 8080);\nsocket.set_ip(Ipv4Addr::new(192, 168, 0, 1));\nassert_eq!(socket.ip(), &Ipv4Addr::new(192, 168, 0, 1));\n```\n\n[Run](https://play.rust-lang.org/?code=%23!%5Ballow(unused)%5D%0Afn+main()+%7B%0A++++use+std::net::%7BSocketAddrV4,+Ipv4Addr%7D;%0A++++%0A++++let+mut+socket+=+SocketAddrV4::new(Ipv4Addr::new(127,+0,+0,+1),+8080);%0A++++socket.set_ip(Ipv4Addr::new(192,+168,+0,+1));%0A++++assert_eq!(socket.ip(),+%26Ipv4Addr::new(192,+168,+0,+1));%0A%7D&edition=2021)\n\n1.0.0 (const: 1.69.0) Â· [source](https://doc.rust-lang.org/1.80.0/src/core/net/socket_addr.rs.html#331)\n\nReturns the port number associated with this socket address.\n\n##### [Â§](#examples-4)Examples\n\n```\nuse std::net::{SocketAddrV4, Ipv4Addr};\n\nlet socket = SocketAddrV4::new(Ipv4Addr::new(127, 0, 0, 1), 8080);\nassert_eq!(socket.port(), 8080);\n```\n\n[Run](https://play.rust-lang.org/?code=%23!%5Ballow(unused)%5D%0Afn+main()+%7B%0A++++use+std::net::%7BSocketAddrV4,+Ipv4Addr%7D;%0A++++%0A++++let+socket+=+SocketAddrV4::new(Ipv4Addr::new(127,+0,+0,+1),+8080);%0A++++assert_eq!(socket.port(),+8080);%0A%7D&edition=2021)\n\n1.9.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/net/socket_addr.rs.html#348)\n\nChanges the port number associated with this socket address.\n\n##### [Â§](#examples-5)Examples\n\n```\nuse std::net::{SocketAddrV4, Ipv4Addr};\n\nlet mut socket = SocketAddrV4::new(Ipv4Addr::new(127, 0, 0, 1), 8080);\nsocket.set_port(4242);\nassert_eq!(socket.port(), 4242);\n```\n\n[Run](https://play.rust-lang.org/?code=%23!%5Ballow(unused)%5D%0Afn+main()+%7B%0A++++use+std::net::%7BSocketAddrV4,+Ipv4Addr%7D;%0A++++%0A++++let+mut+socket+=+SocketAddrV4::new(Ipv4Addr::new(127,+0,+0,+1),+8080);%0A++++socket.set_port(4242);%0A++++assert_eq!(socket.port(),+4242);%0A%7D&edition=2021)\n\n1.0.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/net/socket_addr.rs.html#64)[Â§](#impl-Clone-for-SocketAddrV4)\n\n1.0.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/net/socket_addr.rs.html#606)[Â§](#impl-Debug-for-SocketAddrV4)\n\n1.0.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/net/socket_addr.rs.html#587)[Â§](#impl-Display-for-SocketAddrV4)\n\n1.16.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/net/socket_addr.rs.html#539)[Â§](#impl-From%3CSocketAddrV4%3E-for-SocketAddr)\n\n1.5.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/net/parser.rs.html#407)[Â§](#impl-FromStr-for-SocketAddrV4)\n\n[Â§](#associatedtype.Err)\n\nThe associated error which can be returned from parsing.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/net/parser.rs.html#409)[Â§](#method.from_str)\n\nParses a string `s` to return a value of this type. [Read more](about:blank/str/trait.FromStr.html#tymethod.from_str)\n\n1.0.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/net/socket_addr.rs.html#64)[Â§](#impl-Hash-for-SocketAddrV4)\n\n1.0.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/net/socket_addr.rs.html#64)[Â§](#impl-Ord-for-SocketAddrV4)\n\n1.0.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/net/socket_addr.rs.html#64)[Â§](#impl-PartialEq-for-SocketAddrV4)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/net/socket_addr.rs.html#64)[Â§](#method.eq)\n\nThis method tests for `self` and `other` values to be equal, and is used by `==`.\n\n1.0.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/cmp.rs.html#263)[Â§](#method.ne)\n\nThis method tests for `!=`. The default implementation is almost always sufficient, and should not be overridden without very good reason.\n\n1.0.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/net/socket_addr.rs.html#64)[Â§](#impl-PartialOrd-for-SocketAddrV4)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/net/socket_addr.rs.html#64)[Â§](#method.partial_cmp)\n\nThis method returns an ordering between `self` and `other` values if one exists. [Read more](about:blank/cmp/trait.PartialOrd.html#tymethod.partial_cmp)\n\n1.0.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/cmp.rs.html#1180)[Â§](#method.lt)\n\nThis method tests less than (for `self` and `other`) and is used by the `<` operator. [Read more](about:blank/cmp/trait.PartialOrd.html#method.lt)\n\n1.0.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/cmp.rs.html#1198)[Â§](#method.le)\n\nThis method tests less than or equal to (for `self` and `other`) and is used by the `<=` operator. [Read more](about:blank/cmp/trait.PartialOrd.html#method.le)\n\n1.0.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/cmp.rs.html#1215)[Â§](#method.gt)\n\nThis method tests greater than (for `self` and `other`) and is used by the `>` operator. [Read more](about:blank/cmp/trait.PartialOrd.html#method.gt)\n\n1.0.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/cmp.rs.html#1233)[Â§](#method.ge)\n\nThis method tests greater than or equal to (for `self` and `other`) and is used by the `>=` operator. [Read more](about:blank/cmp/trait.PartialOrd.html#method.ge)\n\n1.0.0 Â· [source](about:blank/src/std/net/socket_addr.rs.html#194-199)[Â§](#impl-ToSocketAddrs-for-SocketAddrV4)\n\n[Â§](#associatedtype.Iter)\n\nReturned iterator over socket addresses which this type may correspond to.\n\n[source](about:blank/src/std/net/socket_addr.rs.html#196-198)[Â§](#method.to_socket_addrs)\n\n1.0.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/net/socket_addr.rs.html#64)[Â§](#impl-Copy-for-SocketAddrV4)\n\n1.0.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/net/socket_addr.rs.html#64)[Â§](#impl-Eq-for-SocketAddrV4)\n\n1.0.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/net/socket_addr.rs.html#64)[Â§](#impl-StructuralPartialEq-for-SocketAddrV4)\n\n[Â§](#impl-Freeze-for-SocketAddrV4)\n\n[Â§](#impl-RefUnwindSafe-for-SocketAddrV4)\n\n[Â§](#impl-Send-for-SocketAddrV4)\n\n[Â§](#impl-Sync-for-SocketAddrV4)\n\n[Â§](#impl-Unpin-for-SocketAddrV4)\n\n[Â§](#impl-UnwindSafe-for-SocketAddrV4)",
	"html": "<!DOCTYPE html><html lang=\"en\" data-theme=\"light\"><head><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><meta name=\"generator\" content=\"rustdoc\"><meta name=\"description\" content=\"An IPv4 socket address.\"><title>SocketAddrV4 in std::net - Rust</title><script>if(window.location.protocol!==\"file:\")document.head.insertAdjacentHTML(\"beforeend\",\"SourceSerif4-Regular-46f98efaafac5295.ttf.woff2,FiraSans-Regular-018c141bf0843ffd.woff2,FiraSans-Medium-8f9a781e4970d388.woff2,SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2,SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\".split(\",\").map(f=>`<link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin href=\"../../static.files/${f}\">`).join(\"\"))</script><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceSerif4-Regular-46f98efaafac5295.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/FiraSans-Regular-018c141bf0843ffd.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/FiraSans-Medium-8f9a781e4970d388.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\"><link rel=\"stylesheet\" href=\"../../static.files/normalize-76eba96aa4d2e634.css\"><link rel=\"stylesheet\" href=\"../../static.files/rustdoc-dd39b87e5fcfba68.css\"><meta name=\"rustdoc-vars\" data-root-path=\"../../\" data-static-root-path=\"../../static.files/\" data-current-crate=\"std\" data-themes=\"\" data-resource-suffix=\"1.80.0\" data-rustdoc-version=\"1.80.0 (051478957 2024-07-21)\" data-channel=\"1.80.0\" data-search-js=\"search-d52510db62a78183.js\" data-settings-js=\"settings-4313503d2e1961c2.js\"><script src=\"../../static.files/storage-118b08c4c78b968e.js\"></script><script defer=\"\" src=\"sidebar-items1.80.0.js\"></script><script defer=\"\" src=\"../../static.files/main-20a3ad099b048cf2.js\"></script><noscript><link rel=\"stylesheet\" href=\"../../static.files/noscript-df360f571f6edeae.css\"></noscript><link rel=\"alternate icon\" type=\"image/png\" href=\"../../static.files/favicon-32x32-422f7d1d52889060.png\"><link rel=\"icon\" type=\"image/svg+xml\" href=\"../../static.files/favicon-2c020d218678b618.svg\"></head><body class=\"rustdoc struct\"><!--[if lte IE 11]><div class=\"warning\">This old browser is unsupported and will most likely display funky things.</div><![endif]--><nav class=\"mobile-topbar\"><button class=\"sidebar-menu-toggle\" title=\"show sidebar\"></button><a class=\"logo-container\" href=\"../../std/index.html\"><img class=\"rust-logo\" src=\"../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"\"></a><h2 class=\"location\"><a href=\"#\">SocketAddrV4</a></h2></nav><nav class=\"sidebar\"><div class=\"sidebar-crate\"><a class=\"logo-container\" href=\"../../std/index.html\"><img class=\"rust-logo\" src=\"../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"logo\"></a><h2><a href=\"../../std/index.html\">std</a><span class=\"version\">1.80.0</span></h2></div><div class=\"version\">(051478957\t2024-07-21)</div><h2 class=\"location\"><a href=\"#\">SocketAddrV4</a></h2><div class=\"sidebar-elems\"><section><h3><a href=\"#implementations\">Methods</a></h3><ul class=\"block method\"><li><a href=\"#method.ip\">ip</a></li><li><a href=\"#method.new\">new</a></li><li><a href=\"#method.parse_ascii\">parse_ascii</a></li><li><a href=\"#method.port\">port</a></li><li><a href=\"#method.set_ip\">set_ip</a></li><li><a href=\"#method.set_port\">set_port</a></li></ul><h3><a href=\"#trait-implementations\">Trait Implementations</a></h3><ul class=\"block trait-implementation\"><li><a href=\"#impl-Clone-for-SocketAddrV4\">Clone</a></li><li><a href=\"#impl-Copy-for-SocketAddrV4\">Copy</a></li><li><a href=\"#impl-Debug-for-SocketAddrV4\">Debug</a></li><li><a href=\"#impl-Display-for-SocketAddrV4\">Display</a></li><li><a href=\"#impl-Eq-for-SocketAddrV4\">Eq</a></li><li><a href=\"#impl-From%3CSocketAddrV4%3E-for-SocketAddr\">From&lt;SocketAddrV4&gt;</a></li><li><a href=\"#impl-FromStr-for-SocketAddrV4\">FromStr</a></li><li><a href=\"#impl-Hash-for-SocketAddrV4\">Hash</a></li><li><a href=\"#impl-Ord-for-SocketAddrV4\">Ord</a></li><li><a href=\"#impl-PartialEq-for-SocketAddrV4\">PartialEq</a></li><li><a href=\"#impl-PartialOrd-for-SocketAddrV4\">PartialOrd</a></li><li><a href=\"#impl-StructuralPartialEq-for-SocketAddrV4\">StructuralPartialEq</a></li><li><a href=\"#impl-ToSocketAddrs-for-SocketAddrV4\">ToSocketAddrs</a></li></ul><h3><a href=\"#synthetic-implementations\">Auto Trait Implementations</a></h3><ul class=\"block synthetic-implementation\"><li><a href=\"#impl-Freeze-for-SocketAddrV4\">Freeze</a></li><li><a href=\"#impl-RefUnwindSafe-for-SocketAddrV4\">RefUnwindSafe</a></li><li><a href=\"#impl-Send-for-SocketAddrV4\">Send</a></li><li><a href=\"#impl-Sync-for-SocketAddrV4\">Sync</a></li><li><a href=\"#impl-Unpin-for-SocketAddrV4\">Unpin</a></li><li><a href=\"#impl-UnwindSafe-for-SocketAddrV4\">UnwindSafe</a></li></ul><h3><a href=\"#blanket-implementations\">Blanket Implementations</a></h3><ul class=\"block blanket-implementation\"><li><a href=\"#impl-Any-for-T\">Any</a></li><li><a href=\"#impl-Borrow%3CT%3E-for-T\">Borrow&lt;T&gt;</a></li><li><a href=\"#impl-BorrowMut%3CT%3E-for-T\">BorrowMut&lt;T&gt;</a></li><li><a href=\"#impl-From%3CT%3E-for-T\">From&lt;T&gt;</a></li><li><a href=\"#impl-Into%3CU%3E-for-T\">Into&lt;U&gt;</a></li><li><a href=\"#impl-ToOwned-for-T\">ToOwned</a></li><li><a href=\"#impl-ToString-for-T\">ToString</a></li><li><a href=\"#impl-TryFrom%3CU%3E-for-T\">TryFrom&lt;U&gt;</a></li><li><a href=\"#impl-TryInto%3CU%3E-for-T\">TryInto&lt;U&gt;</a></li></ul></section><h2><a href=\"index.html\">In std::net</a></h2><h3><a href=\"index.html#structs\">Structs</a></h3><ul class=\"block struct\"><li><a href=\"struct.AddrParseError.html\">AddrParseError</a></li><li><a href=\"struct.Incoming.html\">Incoming</a></li><li><a href=\"struct.IntoIncoming.html\">IntoIncoming</a></li><li><a href=\"struct.Ipv4Addr.html\">Ipv4Addr</a></li><li><a href=\"struct.Ipv6Addr.html\">Ipv6Addr</a></li><li><a href=\"struct.SocketAddrV4.html\">SocketAddrV4</a></li><li><a href=\"struct.SocketAddrV6.html\">SocketAddrV6</a></li><li><a href=\"struct.TcpListener.html\">TcpListener</a></li><li><a href=\"struct.TcpStream.html\">TcpStream</a></li><li><a href=\"struct.UdpSocket.html\">UdpSocket</a></li></ul><h3><a href=\"index.html#enums\">Enums</a></h3><ul class=\"block enum\"><li><a href=\"enum.IpAddr.html\">IpAddr</a></li><li><a href=\"enum.Ipv6MulticastScope.html\">Ipv6MulticastScope</a></li><li><a href=\"enum.Shutdown.html\">Shutdown</a></li><li><a href=\"enum.SocketAddr.html\">SocketAddr</a></li></ul><h3><a href=\"index.html#traits\">Traits</a></h3><ul class=\"block trait\"><li><a href=\"trait.ToSocketAddrs.html\">ToSocketAddrs</a></li></ul></div></nav><div class=\"sidebar-resizer\"></div><main><div class=\"width-limiter\"><rustdoc-search><nav class=\"sub\">\n            <form class=\"search-form\">\n                <span></span> <!-- This empty span is a hacky fix for Safari - See #93184 -->\n                <div id=\"sidebar-button\" tabindex=\"-1\">\n                    <a href=\"../../std/all.html\" title=\"show sidebar\"></a>\n                </div>\n                <input class=\"search-input\" name=\"search\" aria-label=\"Run search in the documentation\" autocomplete=\"off\" spellcheck=\"false\" placeholder=\"Type â€˜Sâ€™ or â€˜/â€™ to search, â€˜?â€™ for more optionsâ€¦\" type=\"search\">\n                <div id=\"help-button\" tabindex=\"-1\">\n                    <a href=\"../../help.html\" title=\"help\">?</a>\n                </div>\n                <div id=\"settings-menu\" tabindex=\"-1\">\n                    <a href=\"../../settings.html\" title=\"settings\">\n                        Settings\n                    </a>\n                </div>\n            </form>\n        </nav></rustdoc-search><section id=\"main-content\" class=\"content\"><div class=\"main-heading\"><h1>Struct <a href=\"../index.html\">std</a>::<wbr><a href=\"index.html\">net</a>::<wbr><a class=\"struct\" href=\"#\">SocketAddrV4</a><button id=\"copy-path\" title=\"Copy item path to clipboard\">Copy item path</button></h1><span class=\"out-of-band\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/net/socket_addr.rs.html#66\">source</a> Â· <button id=\"toggle-all-docs\" title=\"collapse all docs\">[<span>âˆ’</span>]</button></span></div><pre class=\"rust item-decl\"><code>pub struct SocketAddrV4 { <span class=\"comment\">/* private fields */</span> }</code></pre><details class=\"toggle top-doc\" open=\"\"><summary class=\"hideme\"><span>Expand description</span></summary><div class=\"docblock\"><p>An IPv4 socket address.</p>\n<p>IPv4 socket addresses consist of an <a href=\"struct.Ipv4Addr.html\" title=\"struct std::net::Ipv4Addr\"><code>IPv4</code> address</a> and a 16-bit port number, as\nstated in <a href=\"https://tools.ietf.org/html/rfc793\">IETF RFC 793</a>.</p>\n<p>See <a href=\"enum.SocketAddr.html\" title=\"enum std::net::SocketAddr\"><code>SocketAddr</code></a> for a type encompassing both IPv4 and IPv6 socket addresses.</p>\n<p>The size of a <code>SocketAddrV4</code> struct may vary depending on the target operating\nsystem. Do not assume that this type has the same memory layout as the underlying\nsystem representation.</p>\n<h2 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">Â§</a>Examples</h2>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::net::{Ipv4Addr, SocketAddrV4};\n\n<span class=\"kw\">let </span>socket = SocketAddrV4::new(Ipv4Addr::new(<span class=\"number\">127</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>), <span class=\"number\">8080</span>);\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"127.0.0.1:8080\"</span>.parse(), <span class=\"prelude-val\">Ok</span>(socket));\n<span class=\"macro\">assert_eq!</span>(socket.ip(), <span class=\"kw-2\">&amp;</span>Ipv4Addr::new(<span class=\"number\">127</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>(socket.port(), <span class=\"number\">8080</span>);</code></pre><a class=\"test-arrow\" target=\"_blank\" href=\"https://play.rust-lang.org/?code=%23!%5Ballow(unused)%5D%0Afn+main()+%7B%0A++++use+std::net::%7BIpv4Addr,+SocketAddrV4%7D;%0A++++%0A++++let+socket+=+SocketAddrV4::new(Ipv4Addr::new(127,+0,+0,+1),+8080);%0A++++%0A++++assert_eq!(%22127.0.0.1:8080%22.parse(),+Ok(socket));%0A++++assert_eq!(socket.ip(),+%26Ipv4Addr::new(127,+0,+0,+1));%0A++++assert_eq!(socket.port(),+8080);%0A%7D&amp;edition=2021\">Run</a></div>\n</div></details><h2 id=\"implementations\" class=\"section-header\">Implementations<a href=\"#implementations\" class=\"anchor\">Â§</a></h2><div id=\"implementations-list\"><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-SocketAddrV4\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/net/parser.rs.html#388\">source</a><a href=\"#impl-SocketAddrV4\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"struct.SocketAddrV4.html\" title=\"struct std::net::SocketAddrV4\">SocketAddrV4</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.parse_ascii\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/net/parser.rs.html#401\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.parse_ascii\" class=\"fn\">parse_ascii</a>(b: &amp;[<a class=\"primitive\" href=\"../primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"../result/enum.Result.html\" title=\"enum std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"struct.SocketAddrV4.html\" title=\"struct std::net::SocketAddrV4\">SocketAddrV4</a>, <a class=\"struct\" href=\"struct.AddrParseError.html\" title=\"struct std::net::AddrParseError\">AddrParseError</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>addr_parse_ascii</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/101035\">#101035</a>)</span></div></span></summary><div class=\"docblock\"><p>Parse an IPv4 socket address from a slice of bytes.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(addr_parse_ascii)]\n\n</span><span class=\"kw\">use </span>std::net::{Ipv4Addr, SocketAddrV4};\n\n<span class=\"kw\">let </span>socket = SocketAddrV4::new(Ipv4Addr::new(<span class=\"number\">127</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>), <span class=\"number\">8080</span>);\n\n<span class=\"macro\">assert_eq!</span>(SocketAddrV4::parse_ascii(<span class=\"string\">b\"127.0.0.1:8080\"</span>), <span class=\"prelude-val\">Ok</span>(socket));</code></pre><a class=\"test-arrow\" target=\"_blank\" href=\"https://play.rust-lang.org/?code=%23!%5Ballow(unused)%5D%0A%23!%5Bfeature(addr_parse_ascii)%5D%0A%0Afn+main()+%7B%0A++++use+std::net::%7BIpv4Addr,+SocketAddrV4%7D;%0A++++%0A++++let+socket+=+SocketAddrV4::new(Ipv4Addr::new(127,+0,+0,+1),+8080);%0A++++%0A++++assert_eq!(SocketAddrV4::parse_ascii(b%22127.0.0.1:8080%22),+Ok(socket));%0A%7D&amp;version=nightly&amp;edition=2021\">Run</a></div>\n</div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-SocketAddrV4-1\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/net/socket_addr.rs.html#262\">source</a><a href=\"#impl-SocketAddrV4-1\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"struct.SocketAddrV4.html\" title=\"struct std::net::SocketAddrV4\">SocketAddrV4</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.new\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.69.0\">1.0.0 (const: 1.69.0)</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/net/socket_addr.rs.html#278\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"#method.new\" class=\"fn\">new</a>(ip: <a class=\"struct\" href=\"struct.Ipv4Addr.html\" title=\"struct std::net::Ipv4Addr\">Ipv4Addr</a>, port: <a class=\"primitive\" href=\"../primitive.u16.html\">u16</a>) -&gt; <a class=\"struct\" href=\"struct.SocketAddrV4.html\" title=\"struct std::net::SocketAddrV4\">SocketAddrV4</a></h4></section></summary><div class=\"docblock\"><p>Creates a new socket address from an <a href=\"struct.Ipv4Addr.html\" title=\"struct std::net::Ipv4Addr\"><code>IPv4</code> address</a> and a port number.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">Â§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::net::{SocketAddrV4, Ipv4Addr};\n\n<span class=\"kw\">let </span>socket = SocketAddrV4::new(Ipv4Addr::new(<span class=\"number\">127</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>), <span class=\"number\">8080</span>);</code></pre><a class=\"test-arrow\" target=\"_blank\" href=\"https://play.rust-lang.org/?code=%23!%5Ballow(unused)%5D%0Afn+main()+%7B%0A++++use+std::net::%7BSocketAddrV4,+Ipv4Addr%7D;%0A++++%0A++++let+socket+=+SocketAddrV4::new(Ipv4Addr::new(127,+0,+0,+1),+8080);%0A%7D&amp;edition=2021\">Run</a></div>\n</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.ip\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.69.0\">1.0.0 (const: 1.69.0)</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/net/socket_addr.rs.html#296\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"#method.ip\" class=\"fn\">ip</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"struct.Ipv4Addr.html\" title=\"struct std::net::Ipv4Addr\">Ipv4Addr</a></h4></section></summary><div class=\"docblock\"><p>Returns the IP address associated with this socket address.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">Â§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::net::{SocketAddrV4, Ipv4Addr};\n\n<span class=\"kw\">let </span>socket = SocketAddrV4::new(Ipv4Addr::new(<span class=\"number\">127</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>), <span class=\"number\">8080</span>);\n<span class=\"macro\">assert_eq!</span>(socket.ip(), <span class=\"kw-2\">&amp;</span>Ipv4Addr::new(<span class=\"number\">127</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>));</code></pre><a class=\"test-arrow\" target=\"_blank\" href=\"https://play.rust-lang.org/?code=%23!%5Ballow(unused)%5D%0Afn+main()+%7B%0A++++use+std::net::%7BSocketAddrV4,+Ipv4Addr%7D;%0A++++%0A++++let+socket+=+SocketAddrV4::new(Ipv4Addr::new(127,+0,+0,+1),+8080);%0A++++assert_eq!(socket.ip(),+%26Ipv4Addr::new(127,+0,+0,+1));%0A%7D&amp;edition=2021\">Run</a></div>\n</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.set_ip\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.9.0\">1.9.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/net/socket_addr.rs.html#313\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"#method.set_ip\" class=\"fn\">set_ip</a>(&amp;mut self, new_ip: <a class=\"struct\" href=\"struct.Ipv4Addr.html\" title=\"struct std::net::Ipv4Addr\">Ipv4Addr</a>)</h4></section></summary><div class=\"docblock\"><p>Changes the IP address associated with this socket address.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">Â§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::net::{SocketAddrV4, Ipv4Addr};\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>socket = SocketAddrV4::new(Ipv4Addr::new(<span class=\"number\">127</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>), <span class=\"number\">8080</span>);\nsocket.set_ip(Ipv4Addr::new(<span class=\"number\">192</span>, <span class=\"number\">168</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>(socket.ip(), <span class=\"kw-2\">&amp;</span>Ipv4Addr::new(<span class=\"number\">192</span>, <span class=\"number\">168</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>));</code></pre><a class=\"test-arrow\" target=\"_blank\" href=\"https://play.rust-lang.org/?code=%23!%5Ballow(unused)%5D%0Afn+main()+%7B%0A++++use+std::net::%7BSocketAddrV4,+Ipv4Addr%7D;%0A++++%0A++++let+mut+socket+=+SocketAddrV4::new(Ipv4Addr::new(127,+0,+0,+1),+8080);%0A++++socket.set_ip(Ipv4Addr::new(192,+168,+0,+1));%0A++++assert_eq!(socket.ip(),+%26Ipv4Addr::new(192,+168,+0,+1));%0A%7D&amp;edition=2021\">Run</a></div>\n</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.port\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.69.0\">1.0.0 (const: 1.69.0)</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/net/socket_addr.rs.html#331\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"#method.port\" class=\"fn\">port</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"../primitive.u16.html\">u16</a></h4></section></summary><div class=\"docblock\"><p>Returns the port number associated with this socket address.</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">Â§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::net::{SocketAddrV4, Ipv4Addr};\n\n<span class=\"kw\">let </span>socket = SocketAddrV4::new(Ipv4Addr::new(<span class=\"number\">127</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>), <span class=\"number\">8080</span>);\n<span class=\"macro\">assert_eq!</span>(socket.port(), <span class=\"number\">8080</span>);</code></pre><a class=\"test-arrow\" target=\"_blank\" href=\"https://play.rust-lang.org/?code=%23!%5Ballow(unused)%5D%0Afn+main()+%7B%0A++++use+std::net::%7BSocketAddrV4,+Ipv4Addr%7D;%0A++++%0A++++let+socket+=+SocketAddrV4::new(Ipv4Addr::new(127,+0,+0,+1),+8080);%0A++++assert_eq!(socket.port(),+8080);%0A%7D&amp;edition=2021\">Run</a></div>\n</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.set_port\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.9.0\">1.9.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/net/socket_addr.rs.html#348\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"#method.set_port\" class=\"fn\">set_port</a>(&amp;mut self, new_port: <a class=\"primitive\" href=\"../primitive.u16.html\">u16</a>)</h4></section></summary><div class=\"docblock\"><p>Changes the port number associated with this socket address.</p>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">Â§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::net::{SocketAddrV4, Ipv4Addr};\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>socket = SocketAddrV4::new(Ipv4Addr::new(<span class=\"number\">127</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>), <span class=\"number\">8080</span>);\nsocket.set_port(<span class=\"number\">4242</span>);\n<span class=\"macro\">assert_eq!</span>(socket.port(), <span class=\"number\">4242</span>);</code></pre><a class=\"test-arrow\" target=\"_blank\" href=\"https://play.rust-lang.org/?code=%23!%5Ballow(unused)%5D%0Afn+main()+%7B%0A++++use+std::net::%7BSocketAddrV4,+Ipv4Addr%7D;%0A++++%0A++++let+mut+socket+=+SocketAddrV4::new(Ipv4Addr::new(127,+0,+0,+1),+8080);%0A++++socket.set_port(4242);%0A++++assert_eq!(socket.port(),+4242);%0A%7D&amp;edition=2021\">Run</a></div>\n</div></details></div></details></div><h2 id=\"trait-implementations\" class=\"section-header\">Trait Implementations<a href=\"#trait-implementations\" class=\"anchor\">Â§</a></h2><div id=\"trait-implementations-list\"><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-Clone-for-SocketAddrV4\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/net/socket_addr.rs.html#64\">source</a></span><a href=\"#impl-Clone-for-SocketAddrV4\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"../clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"struct.SocketAddrV4.html\" title=\"struct std::net::SocketAddrV4\">SocketAddrV4</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/net/socket_addr.rs.html#64\">source</a><a href=\"#method.clone\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"struct.SocketAddrV4.html\" title=\"struct std::net::SocketAddrV4\">SocketAddrV4</a></h4></section></summary><div class=\"docblock\">Returns a copy of the value. <a href=\"../clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"../primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class=\"docblock\">Performs copy-assignment from <code>source</code>. <a href=\"../clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-Debug-for-SocketAddrV4\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/net/socket_addr.rs.html#606\">source</a></span><a href=\"#impl-Debug-for-SocketAddrV4\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"../fmt/trait.Debug.html\" title=\"trait std::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"struct.SocketAddrV4.html\" title=\"struct std::net::SocketAddrV4\">SocketAddrV4</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.fmt-1\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/net/socket_addr.rs.html#607\">source</a><a href=\"#method.fmt-1\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"../fmt/struct.Formatter.html\" title=\"struct std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"../result/enum.Result.html\" title=\"enum std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"../primitive.unit.html\">()</a>, <a class=\"struct\" href=\"../fmt/struct.Error.html\" title=\"struct std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\">Formats the value using the given formatter. <a href=\"../fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-Display-for-SocketAddrV4\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/net/socket_addr.rs.html#587\">source</a></span><a href=\"#impl-Display-for-SocketAddrV4\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"../fmt/trait.Display.html\" title=\"trait std::fmt::Display\">Display</a> for <a class=\"struct\" href=\"struct.SocketAddrV4.html\" title=\"struct std::net::SocketAddrV4\">SocketAddrV4</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/net/socket_addr.rs.html#588\">source</a><a href=\"#method.fmt\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"../fmt/struct.Formatter.html\" title=\"struct std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"../result/enum.Result.html\" title=\"enum std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"../primitive.unit.html\">()</a>, <a class=\"struct\" href=\"../fmt/struct.Error.html\" title=\"struct std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\">Formats the value using the given formatter. <a href=\"../fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-From%3CSocketAddrV4%3E-for-SocketAddr\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.16.0\">1.16.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/net/socket_addr.rs.html#539\">source</a></span><a href=\"#impl-From%3CSocketAddrV4%3E-for-SocketAddr\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"../convert/trait.From.html\" title=\"trait std::convert::From\">From</a>&lt;<a class=\"struct\" href=\"struct.SocketAddrV4.html\" title=\"struct std::net::SocketAddrV4\">SocketAddrV4</a>&gt; for <a class=\"enum\" href=\"enum.SocketAddr.html\" title=\"enum std::net::SocketAddr\">SocketAddr</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/net/socket_addr.rs.html#542\">source</a><a href=\"#method.from\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(sock4: <a class=\"struct\" href=\"struct.SocketAddrV4.html\" title=\"struct std::net::SocketAddrV4\">SocketAddrV4</a>) -&gt; <a class=\"enum\" href=\"enum.SocketAddr.html\" title=\"enum std::net::SocketAddr\">SocketAddr</a></h4></section></summary><div class=\"docblock\"><p>Converts a <a href=\"struct.SocketAddrV4.html\" title=\"struct std::net::SocketAddrV4\"><code>SocketAddrV4</code></a> into a <a href=\"enum.SocketAddr.html#variant.V4\" title=\"variant std::net::SocketAddr::V4\"><code>SocketAddr::V4</code></a>.</p>\n</div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-FromStr-for-SocketAddrV4\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/net/parser.rs.html#407\">source</a></span><a href=\"#impl-FromStr-for-SocketAddrV4\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"../str/trait.FromStr.html\" title=\"trait std::str::FromStr\">FromStr</a> for <a class=\"struct\" href=\"struct.SocketAddrV4.html\" title=\"struct std::net::SocketAddrV4\">SocketAddrV4</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open=\"\"><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">Â§</a><h4 class=\"code-header\">type <a href=\"../str/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"struct.AddrParseError.html\" title=\"struct std::net::AddrParseError\">AddrParseError</a></h4></section></summary><div class=\"docblock\">The associated error which can be returned from parsing.</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/net/parser.rs.html#409\">source</a><a href=\"#method.from_str\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../str/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(s: &amp;<a class=\"primitive\" href=\"../primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"../result/enum.Result.html\" title=\"enum std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"struct.SocketAddrV4.html\" title=\"struct std::net::SocketAddrV4\">SocketAddrV4</a>, <a class=\"struct\" href=\"struct.AddrParseError.html\" title=\"struct std::net::AddrParseError\">AddrParseError</a>&gt;</h4></section></summary><div class=\"docblock\">Parses a string <code>s</code> to return a value of this type. <a href=\"../str/trait.FromStr.html#tymethod.from_str\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-Hash-for-SocketAddrV4\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/net/socket_addr.rs.html#64\">source</a></span><a href=\"#impl-Hash-for-SocketAddrV4\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"../hash/trait.Hash.html\" title=\"trait std::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"struct.SocketAddrV4.html\" title=\"struct std::net::SocketAddrV4\">SocketAddrV4</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/net/socket_addr.rs.html#64\">source</a><a href=\"#method.hash\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;__H&gt;(&amp;self, state: <a class=\"primitive\" href=\"../primitive.reference.html\">&amp;mut __H</a>)<div class=\"where\">where\n    __H: <a class=\"trait\" href=\"../hash/trait.Hasher.html\" title=\"trait std::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class=\"docblock\">Feeds this value into the given <a href=\"../hash/trait.Hasher.html\" title=\"trait std::hash::Hasher\"><code>Hasher</code></a>. <a href=\"../hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/hash/mod.rs.html#238-240\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"../primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"../primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"../hash/trait.Hasher.html\" title=\"trait std::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\">Feeds a slice of this type into the given <a href=\"../hash/trait.Hasher.html\" title=\"trait std::hash::Hasher\"><code>Hasher</code></a>. <a href=\"../hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-Ord-for-SocketAddrV4\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/net/socket_addr.rs.html#64\">source</a></span><a href=\"#impl-Ord-for-SocketAddrV4\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"../cmp/trait.Ord.html\" title=\"trait std::cmp::Ord\">Ord</a> for <a class=\"struct\" href=\"struct.SocketAddrV4.html\" title=\"struct std::net::SocketAddrV4\">SocketAddrV4</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/net/socket_addr.rs.html#64\">source</a><a href=\"#method.cmp\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"struct.SocketAddrV4.html\" title=\"struct std::net::SocketAddrV4\">SocketAddrV4</a>) -&gt; <a class=\"enum\" href=\"../cmp/enum.Ordering.html\" title=\"enum std::cmp::Ordering\">Ordering</a></h4></section></summary><div class=\"docblock\">This method returns an <a href=\"../cmp/enum.Ordering.html\" title=\"enum std::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"../cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/cmp.rs.html#856-858\">source</a></span><a href=\"#method.max\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\">Compares and returns the maximum of two values. <a href=\"../cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/cmp.rs.html#877-879\">source</a></span><a href=\"#method.min\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\">Compares and returns the minimum of two values. <a href=\"../cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/cmp.rs.html#903-906\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"../cmp/trait.PartialOrd.html\" title=\"trait std::cmp::PartialOrd\">PartialOrd</a>,</div></h4></section></summary><div class=\"docblock\">Restrict a value to a certain interval. <a href=\"../cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-PartialEq-for-SocketAddrV4\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/net/socket_addr.rs.html#64\">source</a></span><a href=\"#impl-PartialEq-for-SocketAddrV4\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"../cmp/trait.PartialEq.html\" title=\"trait std::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"struct.SocketAddrV4.html\" title=\"struct std::net::SocketAddrV4\">SocketAddrV4</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/net/socket_addr.rs.html#64\">source</a><a href=\"#method.eq\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"struct.SocketAddrV4.html\" title=\"struct std::net::SocketAddrV4\">SocketAddrV4</a>) -&gt; <a class=\"primitive\" href=\"../primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\">This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"../primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"../primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\">This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-PartialOrd-for-SocketAddrV4\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/net/socket_addr.rs.html#64\">source</a></span><a href=\"#impl-PartialOrd-for-SocketAddrV4\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"../cmp/trait.PartialOrd.html\" title=\"trait std::cmp::PartialOrd\">PartialOrd</a> for <a class=\"struct\" href=\"struct.SocketAddrV4.html\" title=\"struct std::net::SocketAddrV4\">SocketAddrV4</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/net/socket_addr.rs.html#64\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"struct.SocketAddrV4.html\" title=\"struct std::net::SocketAddrV4\">SocketAddrV4</a>) -&gt; <a class=\"enum\" href=\"../option/enum.Option.html\" title=\"enum std::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"../cmp/enum.Ordering.html\" title=\"enum std::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class=\"docblock\">This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"../cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/cmp.rs.html#1180\">source</a></span><a href=\"#method.lt\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"../primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"../primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\">This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"../cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/cmp.rs.html#1198\">source</a></span><a href=\"#method.le\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"../primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"../primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\">This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"../cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/cmp.rs.html#1215\">source</a></span><a href=\"#method.gt\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"../primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"../primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\">This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"../cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/cmp.rs.html#1233\">source</a></span><a href=\"#method.ge\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"../primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"../primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\">This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"../cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-ToSocketAddrs-for-SocketAddrV4\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"../../src/std/net/socket_addr.rs.html#194-199\">source</a></span><a href=\"#impl-ToSocketAddrs-for-SocketAddrV4\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.ToSocketAddrs.html\" title=\"trait std::net::ToSocketAddrs\">ToSocketAddrs</a> for <a class=\"struct\" href=\"struct.SocketAddrV4.html\" title=\"struct std::net::SocketAddrV4\">SocketAddrV4</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open=\"\"><summary><section id=\"associatedtype.Iter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Iter\" class=\"anchor\">Â§</a><h4 class=\"code-header\">type <a href=\"trait.ToSocketAddrs.html#associatedtype.Iter\" class=\"associatedtype\">Iter</a> = <a class=\"struct\" href=\"../option/struct.IntoIter.html\" title=\"struct std::option::IntoIter\">IntoIter</a>&lt;<a class=\"enum\" href=\"enum.SocketAddr.html\" title=\"enum std::net::SocketAddr\">SocketAddr</a>&gt;</h4></section></summary><div class=\"docblock\">Returned iterator over socket addresses which this type may correspond\nto.</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.to_socket_addrs\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"../../src/std/net/socket_addr.rs.html#196-198\">source</a><a href=\"#method.to_socket_addrs\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"trait.ToSocketAddrs.html#tymethod.to_socket_addrs\" class=\"fn\">to_socket_addrs</a>(&amp;self) -&gt; <a class=\"type\" href=\"../io/type.Result.html\" title=\"type std::io::Result\">Result</a>&lt;<a class=\"struct\" href=\"../option/struct.IntoIter.html\" title=\"struct std::option::IntoIter\">IntoIter</a>&lt;<a class=\"enum\" href=\"enum.SocketAddr.html\" title=\"enum std::net::SocketAddr\">SocketAddr</a>&gt;&gt;</h4></section></summary><div class=\"docblock\">Converts this object to an iterator of resolved <a href=\"enum.SocketAddr.html\" title=\"enum std::net::SocketAddr\"><code>SocketAddr</code></a>s. <a href=\"trait.ToSocketAddrs.html#tymethod.to_socket_addrs\">Read more</a></div></details></div></details><section id=\"impl-Copy-for-SocketAddrV4\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/net/socket_addr.rs.html#64\">source</a></span><a href=\"#impl-Copy-for-SocketAddrV4\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"../marker/trait.Copy.html\" title=\"trait std::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"struct.SocketAddrV4.html\" title=\"struct std::net::SocketAddrV4\">SocketAddrV4</a></h3></section><section id=\"impl-Eq-for-SocketAddrV4\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/net/socket_addr.rs.html#64\">source</a></span><a href=\"#impl-Eq-for-SocketAddrV4\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"../cmp/trait.Eq.html\" title=\"trait std::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"struct.SocketAddrV4.html\" title=\"struct std::net::SocketAddrV4\">SocketAddrV4</a></h3></section><section id=\"impl-StructuralPartialEq-for-SocketAddrV4\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/net/socket_addr.rs.html#64\">source</a></span><a href=\"#impl-StructuralPartialEq-for-SocketAddrV4\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"../marker/trait.StructuralPartialEq.html\" title=\"trait std::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"struct.SocketAddrV4.html\" title=\"struct std::net::SocketAddrV4\">SocketAddrV4</a></h3></section></div><h2 id=\"synthetic-implementations\" class=\"section-header\">Auto Trait Implementations<a href=\"#synthetic-implementations\" class=\"anchor\">Â§</a></h2><div id=\"synthetic-implementations-list\"><section id=\"impl-Freeze-for-SocketAddrV4\" class=\"impl\"><a href=\"#impl-Freeze-for-SocketAddrV4\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"../marker/trait.Freeze.html\" title=\"trait std::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"struct.SocketAddrV4.html\" title=\"struct std::net::SocketAddrV4\">SocketAddrV4</a></h3></section><section id=\"impl-RefUnwindSafe-for-SocketAddrV4\" class=\"impl\"><a href=\"#impl-RefUnwindSafe-for-SocketAddrV4\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"../panic/trait.RefUnwindSafe.html\" title=\"trait std::panic::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"struct\" href=\"struct.SocketAddrV4.html\" title=\"struct std::net::SocketAddrV4\">SocketAddrV4</a></h3></section><section id=\"impl-Send-for-SocketAddrV4\" class=\"impl\"><a href=\"#impl-Send-for-SocketAddrV4\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"../marker/trait.Send.html\" title=\"trait std::marker::Send\">Send</a> for <a class=\"struct\" href=\"struct.SocketAddrV4.html\" title=\"struct std::net::SocketAddrV4\">SocketAddrV4</a></h3></section><section id=\"impl-Sync-for-SocketAddrV4\" class=\"impl\"><a href=\"#impl-Sync-for-SocketAddrV4\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"../marker/trait.Sync.html\" title=\"trait std::marker::Sync\">Sync</a> for <a class=\"struct\" href=\"struct.SocketAddrV4.html\" title=\"struct std::net::SocketAddrV4\">SocketAddrV4</a></h3></section><section id=\"impl-Unpin-for-SocketAddrV4\" class=\"impl\"><a href=\"#impl-Unpin-for-SocketAddrV4\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"../marker/trait.Unpin.html\" title=\"trait std::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"struct.SocketAddrV4.html\" title=\"struct std::net::SocketAddrV4\">SocketAddrV4</a></h3></section><section id=\"impl-UnwindSafe-for-SocketAddrV4\" class=\"impl\"><a href=\"#impl-UnwindSafe-for-SocketAddrV4\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"../panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"struct.SocketAddrV4.html\" title=\"struct std::net::SocketAddrV4\">SocketAddrV4</a></h3></section></div><h2 id=\"blanket-implementations\" class=\"section-header\">Blanket Implementations<a href=\"#blanket-implementations\" class=\"anchor\">Â§</a></h2><div id=\"blanket-implementations-list\"><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-Any-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/any.rs.html#140\">source</a><a href=\"#impl-Any-for-T\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"../any/trait.Any.html\" title=\"trait std::any::Any\">Any</a> for T<div class=\"where\">where\n    T: 'static + ?<a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.type_id\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/any.rs.html#141\">source</a><a href=\"#method.type_id\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../any/trait.Any.html#tymethod.type_id\" class=\"fn\">type_id</a>(&amp;self) -&gt; <a class=\"struct\" href=\"../any/struct.TypeId.html\" title=\"struct std::any::TypeId\">TypeId</a></h4></section></summary><div class=\"docblock\">Gets the <code>TypeId</code> of <code>self</code>. <a href=\"../any/trait.Any.html#tymethod.type_id\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-Borrow%3CT%3E-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/borrow.rs.html#208\">source</a><a href=\"#impl-Borrow%3CT%3E-for-T\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"../borrow/trait.Borrow.html\" title=\"trait std::borrow::Borrow\">Borrow</a>&lt;T&gt; for T<div class=\"where\">where\n    T: ?<a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.borrow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/borrow.rs.html#210\">source</a><a href=\"#method.borrow\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../borrow/trait.Borrow.html#tymethod.borrow\" class=\"fn\">borrow</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"../primitive.reference.html\">&amp;T</a></h4></section></summary><div class=\"docblock\">Immutably borrows from an owned value. <a href=\"../borrow/trait.Borrow.html#tymethod.borrow\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-BorrowMut%3CT%3E-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/borrow.rs.html#216\">source</a><a href=\"#impl-BorrowMut%3CT%3E-for-T\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"../borrow/trait.BorrowMut.html\" title=\"trait std::borrow::BorrowMut\">BorrowMut</a>&lt;T&gt; for T<div class=\"where\">where\n    T: ?<a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.borrow_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/borrow.rs.html#217\">source</a><a href=\"#method.borrow_mut\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../borrow/trait.BorrowMut.html#tymethod.borrow_mut\" class=\"fn\">borrow_mut</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"../primitive.reference.html\">&amp;mut T</a></h4></section></summary><div class=\"docblock\">Mutably borrows from an owned value. <a href=\"../borrow/trait.BorrowMut.html#tymethod.borrow_mut\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-From%3CT%3E-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#765\">source</a><a href=\"#impl-From%3CT%3E-for-T\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"../convert/trait.From.html\" title=\"trait std::convert::From\">From</a>&lt;T&gt; for T</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.from-1\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#768\">source</a><a href=\"#method.from-1\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(t: T) -&gt; T</h4></section></summary><div class=\"docblock\"><p>Returns the argument unchanged.</p>\n</div></details></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-Into%3CU%3E-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#748-750\">source</a><a href=\"#impl-Into%3CU%3E-for-T\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"../convert/trait.Into.html\" title=\"trait std::convert::Into\">Into</a>&lt;U&gt; for T<div class=\"where\">where\n    U: <a class=\"trait\" href=\"../convert/trait.From.html\" title=\"trait std::convert::From\">From</a>&lt;T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#758\">source</a><a href=\"#method.into\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../convert/trait.Into.html#tymethod.into\" class=\"fn\">into</a>(self) -&gt; U</h4></section></summary><div class=\"docblock\"><p>Calls <code>U::from(self)</code>.</p>\n<p>That is, this conversion is whatever the implementation of\n<code><a href=\"../convert/trait.From.html\" title=\"trait std::convert::From\">From</a>&lt;T&gt; for U</code> chooses to do.</p>\n</div></details></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-ToOwned-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/alloc/borrow.rs.html#83-85\">source</a><a href=\"#impl-ToOwned-for-T\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"../borrow/trait.ToOwned.html\" title=\"trait std::borrow::ToOwned\">ToOwned</a> for T<div class=\"where\">where\n    T: <a class=\"trait\" href=\"../clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open=\"\"><summary><section id=\"associatedtype.Owned\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Owned\" class=\"anchor\">Â§</a><h4 class=\"code-header\">type <a href=\"../borrow/trait.ToOwned.html#associatedtype.Owned\" class=\"associatedtype\">Owned</a> = T</h4></section></summary><div class=\"docblock\">The resulting type after obtaining ownership.</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.to_owned\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/alloc/borrow.rs.html#88\">source</a><a href=\"#method.to_owned\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../borrow/trait.ToOwned.html#tymethod.to_owned\" class=\"fn\">to_owned</a>(&amp;self) -&gt; T</h4></section></summary><div class=\"docblock\">Creates owned data from borrowed data, usually by cloning. <a href=\"../borrow/trait.ToOwned.html#tymethod.to_owned\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.clone_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/alloc/borrow.rs.html#92\">source</a><a href=\"#method.clone_into\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../borrow/trait.ToOwned.html#method.clone_into\" class=\"fn\">clone_into</a>(&amp;self, target: <a class=\"primitive\" href=\"../primitive.reference.html\">&amp;mut T</a>)</h4></section></summary><div class=\"docblock\">Uses borrowed data to replace owned data, usually by cloning. <a href=\"../borrow/trait.ToOwned.html#method.clone_into\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-ToString-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/alloc/string.rs.html#2552\">source</a><a href=\"#impl-ToString-for-T\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"../string/trait.ToString.html\" title=\"trait std::string::ToString\">ToString</a> for T<div class=\"where\">where\n    T: <a class=\"trait\" href=\"../fmt/trait.Display.html\" title=\"trait std::fmt::Display\">Display</a> + ?<a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.to_string\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/alloc/string.rs.html#2558\">source</a><a href=\"#method.to_string\" class=\"anchor\">Â§</a><h4 class=\"code-header\">default fn <a href=\"../string/trait.ToString.html#tymethod.to_string\" class=\"fn\">to_string</a>(&amp;self) -&gt; <a class=\"struct\" href=\"../string/struct.String.html\" title=\"struct std::string::String\">String</a></h4></section></summary><div class=\"docblock\">Converts the given value to a <code>String</code>. <a href=\"../string/trait.ToString.html#tymethod.to_string\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-TryFrom%3CU%3E-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#805-807\">source</a><a href=\"#impl-TryFrom%3CU%3E-for-T\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"../convert/trait.TryFrom.html\" title=\"trait std::convert::TryFrom\">TryFrom</a>&lt;U&gt; for T<div class=\"where\">where\n    U: <a class=\"trait\" href=\"../convert/trait.Into.html\" title=\"trait std::convert::Into\">Into</a>&lt;T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open=\"\"><summary><section id=\"associatedtype.Error-1\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error-1\" class=\"anchor\">Â§</a><h4 class=\"code-header\">type <a href=\"../convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"../convert/enum.Infallible.html\" title=\"enum std::convert::Infallible\">Infallible</a></h4></section></summary><div class=\"docblock\">The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#812\">source</a><a href=\"#method.try_from\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(value: U) -&gt; <a class=\"enum\" href=\"../result/enum.Result.html\" title=\"enum std::result::Result\">Result</a>&lt;T, &lt;T as <a class=\"trait\" href=\"../convert/trait.TryFrom.html\" title=\"trait std::convert::TryFrom\">TryFrom</a>&lt;U&gt;&gt;::<a class=\"associatedtype\" href=\"../convert/trait.TryFrom.html#associatedtype.Error\" title=\"type std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\">Performs the conversion.</div></details></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-TryInto%3CU%3E-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#790-792\">source</a><a href=\"#impl-TryInto%3CU%3E-for-T\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"../convert/trait.TryInto.html\" title=\"trait std::convert::TryInto\">TryInto</a>&lt;U&gt; for T<div class=\"where\">where\n    U: <a class=\"trait\" href=\"../convert/trait.TryFrom.html\" title=\"trait std::convert::TryFrom\">TryFrom</a>&lt;T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open=\"\"><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">Â§</a><h4 class=\"code-header\">type <a href=\"../convert/trait.TryInto.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = &lt;U as <a class=\"trait\" href=\"../convert/trait.TryFrom.html\" title=\"trait std::convert::TryFrom\">TryFrom</a>&lt;T&gt;&gt;::<a class=\"associatedtype\" href=\"../convert/trait.TryFrom.html#associatedtype.Error\" title=\"type std::convert::TryFrom::Error\">Error</a></h4></section></summary><div class=\"docblock\">The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.try_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#797\">source</a><a href=\"#method.try_into\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../convert/trait.TryInto.html#tymethod.try_into\" class=\"fn\">try_into</a>(self) -&gt; <a class=\"enum\" href=\"../result/enum.Result.html\" title=\"enum std::result::Result\">Result</a>&lt;U, &lt;U as <a class=\"trait\" href=\"../convert/trait.TryFrom.html\" title=\"trait std::convert::TryFrom\">TryFrom</a>&lt;T&gt;&gt;::<a class=\"associatedtype\" href=\"../convert/trait.TryFrom.html#associatedtype.Error\" title=\"type std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\">Performs the conversion.</div></details></div></details></div></section></div></main></body></html>",
	"crawlDate": "2024-07-28T05:14:01.486Z"
}