{
	"title": "AsRawFd in std::os::fd - Rust",
	"url": "https://doc.rust-lang.org/stable/std/os/fd/trait.AsRawFd.html",
	"markdown": "# AsRawFd in std::os::fd - Rust\n\n## Trait [std](../../index.html)::[os](../index.html)::[fd](index.html)::[AsRawFd](#)\n\n1.0.0 · [source](about:blank/src/std/os/fd/raw.rs.html#38-66) ·\n\n```\npub trait AsRawFd {\n    // Required method\n    fn as_raw_fd(&self) -> RawFd;\n}\n```\n\nExpand description\n\nA trait to extract the raw file descriptor from an underlying object.\n\nThis is only available on unix and WASI platforms and must be imported in order to call the method. Windows platforms have a corresponding `AsRawHandle` and `AsRawSocket` set of traits.\n\n1.0.0 · [source](about:blank/src/std/os/fd/raw.rs.html#65)\n\nExtracts the raw file descriptor.\n\nThis function is typically used to **borrow** an owned file descriptor. When used in this way, this method does **not** pass ownership of the raw file descriptor to the caller, and the file descriptor is only guaranteed to be valid while the original object has not yet been destroyed.\n\nHowever, borrowing is not strictly required. See [`AsFd::as_fd`](about:blank/trait.AsFd.html#tymethod.as_fd \"method std::os::fd::AsFd::as_fd\") for an API which strictly borrows a file descriptor.\n\n##### [§](#example)Example\n\n```\nuse std::fs::File;\n#[cfg(any(unix, target_os = \"wasi\"))]\nuse std::os::fd::{AsRawFd, RawFd};\n\nlet mut f = File::open(\"foo.txt\")?;\n// Note that `raw_fd` is only valid as long as `f` exists.\n#[cfg(any(unix, target_os = \"wasi\"))]\nlet raw_fd: RawFd = f.as_raw_fd();\n```\n\n[Run](https://play.rust-lang.org/?code=%23!%5Ballow(unused)%5D%0Afn+main()+%7B+fn+_inner()+-%3E+Result%3C(),+impl+core::fmt::Debug%3E+%7B%0A++++use+std::fs::File;%0A++++use+std::io;%0A++++%23%5Bcfg(any(unix,+target_os+=+%22wasi%22))%5D%0A++++use+std::os::fd::%7BAsRawFd,+RawFd%7D;%0A++++%0A++++let+mut+f+=+File::open(%22foo.txt%22)?;%0A++++//+Note+that+%60raw_fd%60+is+only+valid+as+long+as+%60f%60+exists.%0A++++%23%5Bcfg(any(unix,+target_os+=+%22wasi%22))%5D%0A++++let+raw_fd:+RawFd+=+f.as_raw_fd();%0A++++Ok::%3C(),+io::Error%3E(())%0A%7D+_inner().unwrap()+%7D&edition=2021)",
	"html": "<!DOCTYPE html><html lang=\"en\" data-theme=\"light\"><head><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><meta name=\"generator\" content=\"rustdoc\"><meta name=\"description\" content=\"A trait to extract the raw file descriptor from an underlying object.\"><title>AsRawFd in std::os::fd - Rust</title><script>if(window.location.protocol!==\"file:\")document.head.insertAdjacentHTML(\"beforeend\",\"SourceSerif4-Regular-46f98efaafac5295.ttf.woff2,FiraSans-Regular-018c141bf0843ffd.woff2,FiraSans-Medium-8f9a781e4970d388.woff2,SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2,SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\".split(\",\").map(f=>`<link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin href=\"../../../static.files/${f}\">`).join(\"\"))</script><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../../static.files/SourceSerif4-Regular-46f98efaafac5295.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../../static.files/FiraSans-Regular-018c141bf0843ffd.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../../static.files/FiraSans-Medium-8f9a781e4970d388.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../../static.files/SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../../static.files/SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\"><link rel=\"stylesheet\" href=\"../../../static.files/normalize-76eba96aa4d2e634.css\"><link rel=\"stylesheet\" href=\"../../../static.files/rustdoc-dd39b87e5fcfba68.css\"><meta name=\"rustdoc-vars\" data-root-path=\"../../../\" data-static-root-path=\"../../../static.files/\" data-current-crate=\"std\" data-themes=\"\" data-resource-suffix=\"1.80.0\" data-rustdoc-version=\"1.80.0 (051478957 2024-07-21)\" data-channel=\"1.80.0\" data-search-js=\"search-d52510db62a78183.js\" data-settings-js=\"settings-4313503d2e1961c2.js\"><script src=\"../../../static.files/storage-118b08c4c78b968e.js\"></script><script defer=\"\" src=\"sidebar-items1.80.0.js\"></script><script defer=\"\" src=\"../../../static.files/main-20a3ad099b048cf2.js\"></script><noscript><link rel=\"stylesheet\" href=\"../../../static.files/noscript-df360f571f6edeae.css\"></noscript><link rel=\"alternate icon\" type=\"image/png\" href=\"../../../static.files/favicon-32x32-422f7d1d52889060.png\"><link rel=\"icon\" type=\"image/svg+xml\" href=\"../../../static.files/favicon-2c020d218678b618.svg\"></head><body class=\"rustdoc trait\"><!--[if lte IE 11]><div class=\"warning\">This old browser is unsupported and will most likely display funky things.</div><![endif]--><nav class=\"mobile-topbar\"><button class=\"sidebar-menu-toggle\" title=\"show sidebar\"></button><a class=\"logo-container\" href=\"../../../std/index.html\"><img class=\"rust-logo\" src=\"../../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"\"></a><h2 class=\"location\"><a href=\"#\">AsRawFd</a></h2></nav><nav class=\"sidebar\"><div class=\"sidebar-crate\"><a class=\"logo-container\" href=\"../../../std/index.html\"><img class=\"rust-logo\" src=\"../../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"logo\"></a><h2><a href=\"../../../std/index.html\">std</a><span class=\"version\">1.80.0</span></h2></div><div class=\"version\">(051478957\t2024-07-21)</div><h2 class=\"location\"><a href=\"#\">AsRawFd</a></h2><div class=\"sidebar-elems\"><section><h3><a href=\"#required-methods\">Required Methods</a></h3><ul class=\"block\"><li><a href=\"#tymethod.as_raw_fd\">as_raw_fd</a></li></ul><h3><a href=\"#implementors\">Implementors</a></h3></section><h2><a href=\"index.html\">In std::os::fd</a></h2><h3><a href=\"index.html#structs\">Structs</a></h3><ul class=\"block struct\"><li><a href=\"struct.BorrowedFd.html\">BorrowedFd</a></li><li><a href=\"struct.OwnedFd.html\">OwnedFd</a></li></ul><h3><a href=\"index.html#traits\">Traits</a></h3><ul class=\"block trait\"><li><a href=\"trait.AsFd.html\">AsFd</a></li><li><a href=\"trait.AsRawFd.html\">AsRawFd</a></li><li><a href=\"trait.FromRawFd.html\">FromRawFd</a></li><li><a href=\"trait.IntoRawFd.html\">IntoRawFd</a></li></ul><h3><a href=\"index.html#types\">Type Aliases</a></h3><ul class=\"block type\"><li><a href=\"type.RawFd.html\">RawFd</a></li></ul></div></nav><div class=\"sidebar-resizer\"></div><main><div class=\"width-limiter\"><rustdoc-search><nav class=\"sub\">\n            <form class=\"search-form\">\n                <span></span> <!-- This empty span is a hacky fix for Safari - See #93184 -->\n                <div id=\"sidebar-button\" tabindex=\"-1\">\n                    <a href=\"../../../std/all.html\" title=\"show sidebar\"></a>\n                </div>\n                <input class=\"search-input\" name=\"search\" aria-label=\"Run search in the documentation\" autocomplete=\"off\" spellcheck=\"false\" placeholder=\"Type ‘S’ or ‘/’ to search, ‘?’ for more options…\" type=\"search\">\n                <div id=\"help-button\" tabindex=\"-1\">\n                    <a href=\"../../../help.html\" title=\"help\">?</a>\n                </div>\n                <div id=\"settings-menu\" tabindex=\"-1\">\n                    <a href=\"../../../settings.html\" title=\"settings\">\n                        Settings\n                    </a>\n                </div>\n            </form>\n        </nav></rustdoc-search><section id=\"main-content\" class=\"content\"><div class=\"main-heading\"><h1>Trait <a href=\"../../index.html\">std</a>::<wbr><a href=\"../index.html\">os</a>::<wbr><a href=\"index.html\">fd</a>::<wbr><a class=\"trait\" href=\"#\">AsRawFd</a><button id=\"copy-path\" title=\"Copy item path to clipboard\">Copy item path</button></h1><span class=\"out-of-band\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"../../../src/std/os/fd/raw.rs.html#38-66\">source</a> · <button id=\"toggle-all-docs\" title=\"collapse all docs\">[<span>−</span>]</button></span></div><pre class=\"rust item-decl\"><code>pub trait AsRawFd {\n    // Required method\n    fn <a href=\"#tymethod.as_raw_fd\" class=\"fn\">as_raw_fd</a>(&amp;self) -&gt; <a class=\"type\" href=\"type.RawFd.html\" title=\"type std::os::fd::RawFd\">RawFd</a>;\n}</code></pre><details class=\"toggle top-doc\" open=\"\"><summary class=\"hideme\"><span>Expand description</span></summary><div class=\"docblock\"><p>A trait to extract the raw file descriptor from an underlying object.</p>\n<p>This is only available on unix and WASI platforms and must be imported in\norder to call the method. Windows platforms have a corresponding\n<code>AsRawHandle</code> and <code>AsRawSocket</code> set of traits.</p>\n</div></details><h2 id=\"required-methods\" class=\"section-header\">Required Methods<a href=\"#required-methods\" class=\"anchor\">§</a></h2><div class=\"methods\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"tymethod.as_raw_fd\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"../../../src/std/os/fd/raw.rs.html#65\">source</a></span><h4 class=\"code-header\">fn <a href=\"#tymethod.as_raw_fd\" class=\"fn\">as_raw_fd</a>(&amp;self) -&gt; <a class=\"type\" href=\"type.RawFd.html\" title=\"type std::os::fd::RawFd\">RawFd</a></h4></section></summary><div class=\"docblock\"><p>Extracts the raw file descriptor.</p>\n<p>This function is typically used to <strong>borrow</strong> an owned file descriptor.\nWhen used in this way, this method does <strong>not</strong> pass ownership of the\nraw file descriptor to the caller, and the file descriptor is only\nguaranteed to be valid while the original object has not yet been\ndestroyed.</p>\n<p>However, borrowing is not strictly required. See <a href=\"trait.AsFd.html#tymethod.as_fd\" title=\"method std::os::fd::AsFd::as_fd\"><code>AsFd::as_fd</code></a>\nfor an API which strictly borrows a file descriptor.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::fs::File;\n<span class=\"attr\">#[cfg(any(unix, target_os = <span class=\"string\">\"wasi\"</span>))]\n</span><span class=\"kw\">use </span>std::os::fd::{AsRawFd, RawFd};\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>f = File::open(<span class=\"string\">\"foo.txt\"</span>)<span class=\"question-mark\">?</span>;\n<span class=\"comment\">// Note that `raw_fd` is only valid as long as `f` exists.\n</span><span class=\"attr\">#[cfg(any(unix, target_os = <span class=\"string\">\"wasi\"</span>))]\n</span><span class=\"kw\">let </span>raw_fd: RawFd = f.as_raw_fd();</code></pre><a class=\"test-arrow\" target=\"_blank\" href=\"https://play.rust-lang.org/?code=%23!%5Ballow(unused)%5D%0Afn+main()+%7B+fn+_inner()+-%3E+Result%3C(),+impl+core::fmt::Debug%3E+%7B%0A++++use+std::fs::File;%0A++++use+std::io;%0A++++%23%5Bcfg(any(unix,+target_os+=+%22wasi%22))%5D%0A++++use+std::os::fd::%7BAsRawFd,+RawFd%7D;%0A++++%0A++++let+mut+f+=+File::open(%22foo.txt%22)?;%0A++++//+Note+that+%60raw_fd%60+is+only+valid+as+long+as+%60f%60+exists.%0A++++%23%5Bcfg(any(unix,+target_os+=+%22wasi%22))%5D%0A++++let+raw_fd:+RawFd+=+f.as_raw_fd();%0A++++Ok::%3C(),+io::Error%3E(())%0A%7D+_inner().unwrap()+%7D&amp;edition=2021\">Run</a></div>\n</div></details></div><h2 id=\"implementors\" class=\"section-header\">Implementors<a href=\"#implementors\" class=\"anchor\">§</a></h2><div id=\"implementors-list\"><section id=\"impl-AsRawFd-for-File\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"../../../src/std/os/fd/raw.rs.html#168-173\">source</a></span><a href=\"#impl-AsRawFd-for-File\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.AsRawFd.html\" title=\"trait std::os::fd::AsRawFd\">AsRawFd</a> for <a class=\"struct\" href=\"../../fs/struct.File.html\" title=\"struct std::fs::File\">File</a></h3></section><section id=\"impl-AsRawFd-for-Stderr\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"../../../src/std/os/fd/raw.rs.html#206-211\">source</a></span><a href=\"#impl-AsRawFd-for-Stderr\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.AsRawFd.html\" title=\"trait std::os::fd::AsRawFd\">AsRawFd</a> for <a class=\"struct\" href=\"../../io/struct.Stderr.html\" title=\"struct std::io::Stderr\">Stderr</a></h3></section><section id=\"impl-AsRawFd-for-Stdin\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"../../../src/std/os/fd/raw.rs.html#190-195\">source</a></span><a href=\"#impl-AsRawFd-for-Stdin\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.AsRawFd.html\" title=\"trait std::os::fd::AsRawFd\">AsRawFd</a> for <a class=\"struct\" href=\"../../io/struct.Stdin.html\" title=\"struct std::io::Stdin\">Stdin</a></h3></section><section id=\"impl-AsRawFd-for-Stdout\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"../../../src/std/os/fd/raw.rs.html#198-203\">source</a></span><a href=\"#impl-AsRawFd-for-Stdout\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.AsRawFd.html\" title=\"trait std::os::fd::AsRawFd\">AsRawFd</a> for <a class=\"struct\" href=\"../../io/struct.Stdout.html\" title=\"struct std::io::Stdout\">Stdout</a></h3></section><section id=\"impl-AsRawFd-for-TcpListener\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"../../../src/std/os/fd/net.rs.html#17\">source</a></span><a href=\"#impl-AsRawFd-for-TcpListener\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.AsRawFd.html\" title=\"trait std::os::fd::AsRawFd\">AsRawFd</a> for <a class=\"struct\" href=\"../../net/struct.TcpListener.html\" title=\"struct std::net::TcpListener\">TcpListener</a></h3></section><section id=\"impl-AsRawFd-for-TcpStream\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"../../../src/std/os/fd/net.rs.html#17\">source</a></span><a href=\"#impl-AsRawFd-for-TcpStream\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.AsRawFd.html\" title=\"trait std::os::fd::AsRawFd\">AsRawFd</a> for <a class=\"struct\" href=\"../../net/struct.TcpStream.html\" title=\"struct std::net::TcpStream\">TcpStream</a></h3></section><section id=\"impl-AsRawFd-for-UdpSocket\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"../../../src/std/os/fd/net.rs.html#17\">source</a></span><a href=\"#impl-AsRawFd-for-UdpSocket\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.AsRawFd.html\" title=\"trait std::os::fd::AsRawFd\">AsRawFd</a> for <a class=\"struct\" href=\"../../net/struct.UdpSocket.html\" title=\"struct std::net::UdpSocket\">UdpSocket</a></h3></section><section id=\"impl-AsRawFd-for-ChildStderr\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.2.0\">1.2.0</span> · <a class=\"src\" href=\"../../../src/std/os/unix/process.rs.html#399-404\">source</a></span><a href=\"#impl-AsRawFd-for-ChildStderr\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.AsRawFd.html\" title=\"trait std::os::fd::AsRawFd\">AsRawFd</a> for <a class=\"struct\" href=\"../../process/struct.ChildStderr.html\" title=\"struct std::process::ChildStderr\">ChildStderr</a></h3><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>Unix</strong> only.</div></span></section><section id=\"impl-AsRawFd-for-ChildStdin\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.2.0\">1.2.0</span> · <a class=\"src\" href=\"../../../src/std/os/unix/process.rs.html#383-388\">source</a></span><a href=\"#impl-AsRawFd-for-ChildStdin\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.AsRawFd.html\" title=\"trait std::os::fd::AsRawFd\">AsRawFd</a> for <a class=\"struct\" href=\"../../process/struct.ChildStdin.html\" title=\"struct std::process::ChildStdin\">ChildStdin</a></h3><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>Unix</strong> only.</div></span></section><section id=\"impl-AsRawFd-for-ChildStdout\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.2.0\">1.2.0</span> · <a class=\"src\" href=\"../../../src/std/os/unix/process.rs.html#391-396\">source</a></span><a href=\"#impl-AsRawFd-for-ChildStdout\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.AsRawFd.html\" title=\"trait std::os::fd::AsRawFd\">AsRawFd</a> for <a class=\"struct\" href=\"../../process/struct.ChildStdout.html\" title=\"struct std::process::ChildStdout\">ChildStdout</a></h3><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>Unix</strong> only.</div></span></section><section id=\"impl-AsRawFd-for-PidFd\" class=\"impl\"><a class=\"src rightside\" href=\"../../../src/std/os/linux/process.rs.html#73-78\">source</a><a href=\"#impl-AsRawFd-for-PidFd\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.AsRawFd.html\" title=\"trait std::os::fd::AsRawFd\">AsRawFd</a> for <a class=\"struct\" href=\"../linux/process/struct.PidFd.html\" title=\"struct std::os::linux::process::PidFd\">PidFd</a></h3><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>Linux</strong> only.</div></span></section><section id=\"impl-AsRawFd-for-UnixDatagram\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.10.0\">1.10.0</span> · <a class=\"src\" href=\"../../../src/std/os/unix/net/datagram.rs.html#936-941\">source</a></span><a href=\"#impl-AsRawFd-for-UnixDatagram\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.AsRawFd.html\" title=\"trait std::os::fd::AsRawFd\">AsRawFd</a> for <a class=\"struct\" href=\"../unix/net/struct.UnixDatagram.html\" title=\"struct std::os::unix::net::UnixDatagram\">UnixDatagram</a></h3><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>Unix</strong> only.</div></span></section><section id=\"impl-AsRawFd-for-UnixListener\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.10.0\">1.10.0</span> · <a class=\"src\" href=\"../../../src/std/os/unix/net/listener.rs.html#316-321\">source</a></span><a href=\"#impl-AsRawFd-for-UnixListener\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.AsRawFd.html\" title=\"trait std::os::fd::AsRawFd\">AsRawFd</a> for <a class=\"struct\" href=\"../unix/net/struct.UnixListener.html\" title=\"struct std::os::unix::net::UnixListener\">UnixListener</a></h3><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>Unix</strong> only.</div></span></section><section id=\"impl-AsRawFd-for-UnixStream\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.10.0\">1.10.0</span> · <a class=\"src\" href=\"../../../src/std/os/unix/net/stream.rs.html#653-658\">source</a></span><a href=\"#impl-AsRawFd-for-UnixStream\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.AsRawFd.html\" title=\"trait std::os::fd::AsRawFd\">AsRawFd</a> for <a class=\"struct\" href=\"../unix/net/struct.UnixStream.html\" title=\"struct std::os::unix::net::UnixStream\">UnixStream</a></h3><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>Unix</strong> only.</div></span></section><section id=\"impl-AsRawFd-for-BorrowedFd%3C'_%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.63.0\">1.63.0</span> · <a class=\"src\" href=\"../../../src/std/os/fd/owned.rs.html#125-130\">source</a></span><a href=\"#impl-AsRawFd-for-BorrowedFd%3C'_%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.AsRawFd.html\" title=\"trait std::os::fd::AsRawFd\">AsRawFd</a> for <a class=\"struct\" href=\"struct.BorrowedFd.html\" title=\"struct std::os::fd::BorrowedFd\">BorrowedFd</a>&lt;'_&gt;</h3></section><section id=\"impl-AsRawFd-for-OwnedFd\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.63.0\">1.63.0</span> · <a class=\"src\" href=\"../../../src/std/os/fd/owned.rs.html#133-138\">source</a></span><a href=\"#impl-AsRawFd-for-OwnedFd\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.AsRawFd.html\" title=\"trait std::os::fd::AsRawFd\">AsRawFd</a> for <a class=\"struct\" href=\"struct.OwnedFd.html\" title=\"struct std::os::fd::OwnedFd\">OwnedFd</a></h3></section><section id=\"impl-AsRawFd-for-i32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.48.0\">1.48.0</span> · <a class=\"src\" href=\"../../../src/std/os/fd/raw.rs.html#146-151\">source</a></span><a href=\"#impl-AsRawFd-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.AsRawFd.html\" title=\"trait std::os::fd::AsRawFd\">AsRawFd</a> for <a class=\"type\" href=\"type.RawFd.html\" title=\"type std::os::fd::RawFd\">RawFd</a></h3></section><section id=\"impl-AsRawFd-for-StderrLock%3C'a%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.35.0\">1.35.0</span> · <a class=\"src\" href=\"../../../src/std/os/fd/raw.rs.html#230-235\">source</a></span><a href=\"#impl-AsRawFd-for-StderrLock%3C'a%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"trait.AsRawFd.html\" title=\"trait std::os::fd::AsRawFd\">AsRawFd</a> for <a class=\"struct\" href=\"../../io/struct.StderrLock.html\" title=\"struct std::io::StderrLock\">StderrLock</a>&lt;'a&gt;</h3></section><section id=\"impl-AsRawFd-for-StdinLock%3C'a%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.35.0\">1.35.0</span> · <a class=\"src\" href=\"../../../src/std/os/fd/raw.rs.html#214-219\">source</a></span><a href=\"#impl-AsRawFd-for-StdinLock%3C'a%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"trait.AsRawFd.html\" title=\"trait std::os::fd::AsRawFd\">AsRawFd</a> for <a class=\"struct\" href=\"../../io/struct.StdinLock.html\" title=\"struct std::io::StdinLock\">StdinLock</a>&lt;'a&gt;</h3></section><section id=\"impl-AsRawFd-for-StdoutLock%3C'a%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.35.0\">1.35.0</span> · <a class=\"src\" href=\"../../../src/std/os/fd/raw.rs.html#222-227\">source</a></span><a href=\"#impl-AsRawFd-for-StdoutLock%3C'a%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"trait.AsRawFd.html\" title=\"trait std::os::fd::AsRawFd\">AsRawFd</a> for <a class=\"struct\" href=\"../../io/struct.StdoutLock.html\" title=\"struct std::io::StdoutLock\">StdoutLock</a>&lt;'a&gt;</h3></section><section id=\"impl-AsRawFd-for-Box%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.63.0\">1.63.0</span> · <a class=\"src\" href=\"../../../src/std/os/fd/raw.rs.html#269-274\">source</a></span><a href=\"#impl-AsRawFd-for-Box%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"trait.AsRawFd.html\" title=\"trait std::os::fd::AsRawFd\">AsRawFd</a>&gt; <a class=\"trait\" href=\"trait.AsRawFd.html\" title=\"trait std::os::fd::AsRawFd\">AsRawFd</a> for <a class=\"struct\" href=\"../../boxed/struct.Box.html\" title=\"struct std::boxed::Box\">Box</a>&lt;T&gt;</h3></section><section id=\"impl-AsRawFd-for-Rc%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.69.0\">1.69.0</span> · <a class=\"src\" href=\"../../../src/std/os/fd/raw.rs.html#261-266\">source</a></span><a href=\"#impl-AsRawFd-for-Rc%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"trait.AsRawFd.html\" title=\"trait std::os::fd::AsRawFd\">AsRawFd</a>&gt; <a class=\"trait\" href=\"trait.AsRawFd.html\" title=\"trait std::os::fd::AsRawFd\">AsRawFd</a> for <a class=\"struct\" href=\"../../rc/struct.Rc.html\" title=\"struct std::rc::Rc\">Rc</a>&lt;T&gt;</h3></section><section id=\"impl-AsRawFd-for-Arc%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.63.0\">1.63.0</span> · <a class=\"src\" href=\"../../../src/std/os/fd/raw.rs.html#253-258\">source</a></span><a href=\"#impl-AsRawFd-for-Arc%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"trait.AsRawFd.html\" title=\"trait std::os::fd::AsRawFd\">AsRawFd</a>&gt; <a class=\"trait\" href=\"trait.AsRawFd.html\" title=\"trait std::os::fd::AsRawFd\">AsRawFd</a> for <a class=\"struct\" href=\"../../sync/struct.Arc.html\" title=\"struct std::sync::Arc\">Arc</a>&lt;T&gt;</h3></section><div class=\"docblock\"><p>This impl allows implementing traits that require <code>AsRawFd</code> on Arc.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::net::UdpSocket;\n<span class=\"kw\">use </span>std::sync::Arc;\n<span class=\"kw\">trait </span>MyTrait: AsRawFd {\n}\n<span class=\"kw\">impl </span>MyTrait <span class=\"kw\">for </span>Arc&lt;UdpSocket&gt; {}\n<span class=\"kw\">impl </span>MyTrait <span class=\"kw\">for </span>Box&lt;UdpSocket&gt; {}</code></pre><a class=\"test-arrow\" target=\"_blank\" href=\"https://play.rust-lang.org/?code=%23!%5Ballow(unused)%5D%0Afn+main()+%7B%0A++++%23%5Bcfg(any(unix,+target_os+=+%22wasi%22))%5D+mod+group_cfg+%7B%0A++++%23%5Bcfg(target_os+=+%22wasi%22)%5D%0A++++use+std::os::wasi::io::AsRawFd;%0A++++%23%5Bcfg(unix)%5D%0A++++use+std::os::unix::io::AsRawFd;%0A++++use+std::net::UdpSocket;%0A++++use+std::sync::Arc;%0A++++trait+MyTrait:+AsRawFd+%7B%0A++++%7D%0A++++impl+MyTrait+for+Arc%3CUdpSocket%3E+%7B%7D%0A++++impl+MyTrait+for+Box%3CUdpSocket%3E+%7B%7D%0A++++%7D%0A%7D&amp;edition=2021\">Run</a></div>\n</div></div><script src=\"../../../trait.impl/std/os/fd/raw/trait.AsRawFd.js\" data-ignore-extern-crates=\"alloc\" async=\"\"></script></section></div></main></body></html>",
	"crawlDate": "2024-07-28T05:11:40.570Z"
}