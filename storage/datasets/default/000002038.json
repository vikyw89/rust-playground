{
	"title": "is_x86_feature_detected in std::arch - Rust",
	"url": "https://doc.rust-lang.org/stable/std/arch/macro.is_x86_feature_detected.html",
	"markdown": "# is\\_x86\\_feature\\_detected in std::arch - Rust\n\n```\nmacro_rules! is_x86_feature_detected {\n    (\"aes\") => { ... };\n    (\"pclmulqdq\") => { ... };\n    (\"rdrand\") => { ... };\n    (\"rdseed\") => { ... };\n    (\"tsc\") => { ... };\n    (\"mmx\") => { ... };\n    (\"sse\") => { ... };\n    (\"sse2\") => { ... };\n    (\"sse3\") => { ... };\n    (\"ssse3\") => { ... };\n    (\"sse4.1\") => { ... };\n    (\"sse4.2\") => { ... };\n    (\"sse4a\") => { ... };\n    (\"sha\") => { ... };\n    (\"avx\") => { ... };\n    (\"avx2\") => { ... };\n    (\"avx512f\") => { ... };\n    (\"avx512cd\") => { ... };\n    (\"avx512er\") => { ... };\n    (\"avx512pf\") => { ... };\n    (\"avx512bw\") => { ... };\n    (\"avx512dq\") => { ... };\n    (\"avx512vl\") => { ... };\n    (\"avx512ifma\") => { ... };\n    (\"avx512vbmi\") => { ... };\n    (\"avx512vpopcntdq\") => { ... };\n    (\"avx512vbmi2\") => { ... };\n    (\"gfni\") => { ... };\n    (\"vaes\") => { ... };\n    (\"vpclmulqdq\") => { ... };\n    (\"avx512vnni\") => { ... };\n    (\"avx512bitalg\") => { ... };\n    (\"avx512bf16\") => { ... };\n    (\"avx512vp2intersect\") => { ... };\n    (\"avx512fp16\") => { ... };\n    (\"f16c\") => { ... };\n    (\"fma\") => { ... };\n    (\"bmi1\") => { ... };\n    (\"bmi2\") => { ... };\n    (\"lzcnt\") => { ... };\n    (\"tbm\") => { ... };\n    (\"popcnt\") => { ... };\n    (\"fxsr\") => { ... };\n    (\"xsave\") => { ... };\n    (\"xsaveopt\") => { ... };\n    (\"xsaves\") => { ... };\n    (\"xsavec\") => { ... };\n    (\"cmpxchg16b\") => { ... };\n    (\"adx\") => { ... };\n    (\"rtm\") => { ... };\n    (\"movbe\") => { ... };\n    (\"ermsb\") => { ... };\n    (\"abm\") => { ... };\n    (\"avx512gfni\") => { ... };\n    (\"avx512vaes\") => { ... };\n    (\"avx512vpclmulqdq\") => { ... };\n    ($t:tt,) => { ... };\n    ($t:tt) => { ... };\n}\n```\n\nExpand description\n\nA macro to test at _runtime_ whether a CPU feature is available on x86/x86-64 platforms.\n\nThis macro is provided in the standard library and will detect at runtime whether the specified CPU feature is detected. This does **not** resolve at compile time unless the specified feature is already enabled for the entire crate. Runtime detection currently relies mostly on the `cpuid` instruction.\n\nThis macro only takes one argument which is a string literal of the feature being tested for. The feature names supported are the lowercase versions of the ones defined by Intel in [their documentation](https://software.intel.com/sites/landingpage/IntrinsicsGuide).\n\n### [§](#supported-arguments)Supported arguments\n\nThis macro supports the same names that `#[target_feature]` supports. Unlike `#[target_feature]`, however, this macro does not support names separated with a comma. Instead testing for multiple features must be done through separate macro invocations for now.\n\nSupported arguments are:\n\n-   `\"aes\"`\n-   `\"pclmulqdq\"`\n-   `\"rdrand\"`\n-   `\"rdseed\"`\n-   `\"tsc\"`\n-   `\"mmx\"`\n-   `\"sse\"`\n-   `\"sse2\"`\n-   `\"sse3\"`\n-   `\"ssse3\"`\n-   `\"sse4.1\"`\n-   `\"sse4.2\"`\n-   `\"sse4a\"`\n-   `\"sha\"`\n-   `\"avx\"`\n-   `\"avx2\"`\n-   `\"avx512f\"`\n-   `\"avx512cd\"`\n-   `\"avx512er\"`\n-   `\"avx512pf\"`\n-   `\"avx512bw\"`\n-   `\"avx512dq\"`\n-   `\"avx512vl\"`\n-   `\"avx512ifma\"`\n-   `\"avx512vbmi\"`\n-   `\"avx512vpopcntdq\"`\n-   `\"avx512vbmi2\"`\n-   `\"gfni\"`\n-   `\"vaes\"`\n-   `\"vpclmulqdq\"`\n-   `\"avx512vnni\"`\n-   `\"avx512bitalg\"`\n-   `\"avx512bf16\"`\n-   `\"avx512vp2intersect\"`\n-   `\"avx512fp16\"`\n-   `\"f16c\"`\n-   `\"fma\"`\n-   `\"bmi1\"`\n-   `\"bmi2\"`\n-   `\"abm\"`\n-   `\"lzcnt\"`\n-   `\"tbm\"`\n-   `\"popcnt\"`\n-   `\"fxsr\"`\n-   `\"xsave\"`\n-   `\"xsaveopt\"`\n-   `\"xsaves\"`\n-   `\"xsavec\"`\n-   `\"cmpxchg16b\"`\n-   `\"adx\"`\n-   `\"rtm\"`\n-   `\"movbe\"`\n-   `\"ermsb\"`",
	"html": "<!DOCTYPE html><html lang=\"en\" data-theme=\"light\"><head><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><meta name=\"generator\" content=\"rustdoc\"><meta name=\"description\" content=\"A macro to test at runtime whether a CPU feature is available on x86/x86-64 platforms.\"><title>is_x86_feature_detected in std::arch - Rust</title><script>if(window.location.protocol!==\"file:\")document.head.insertAdjacentHTML(\"beforeend\",\"SourceSerif4-Regular-46f98efaafac5295.ttf.woff2,FiraSans-Regular-018c141bf0843ffd.woff2,FiraSans-Medium-8f9a781e4970d388.woff2,SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2,SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\".split(\",\").map(f=>`<link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin href=\"../../static.files/${f}\">`).join(\"\"))</script><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceSerif4-Regular-46f98efaafac5295.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/FiraSans-Regular-018c141bf0843ffd.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/FiraSans-Medium-8f9a781e4970d388.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\"><link rel=\"stylesheet\" href=\"../../static.files/normalize-76eba96aa4d2e634.css\"><link rel=\"stylesheet\" href=\"../../static.files/rustdoc-dd39b87e5fcfba68.css\"><meta name=\"rustdoc-vars\" data-root-path=\"../../\" data-static-root-path=\"../../static.files/\" data-current-crate=\"std\" data-themes=\"\" data-resource-suffix=\"1.80.0\" data-rustdoc-version=\"1.80.0 (051478957 2024-07-21)\" data-channel=\"1.80.0\" data-search-js=\"search-d52510db62a78183.js\" data-settings-js=\"settings-4313503d2e1961c2.js\"><script src=\"../../static.files/storage-118b08c4c78b968e.js\"></script><script defer=\"\" src=\"sidebar-items1.80.0.js\"></script><script defer=\"\" src=\"../../static.files/main-20a3ad099b048cf2.js\"></script><noscript><link rel=\"stylesheet\" href=\"../../static.files/noscript-df360f571f6edeae.css\"></noscript><link rel=\"alternate icon\" type=\"image/png\" href=\"../../static.files/favicon-32x32-422f7d1d52889060.png\"><link rel=\"icon\" type=\"image/svg+xml\" href=\"../../static.files/favicon-2c020d218678b618.svg\"></head><body class=\"rustdoc macro\"><!--[if lte IE 11]><div class=\"warning\">This old browser is unsupported and will most likely display funky things.</div><![endif]--><nav class=\"mobile-topbar\"><button class=\"sidebar-menu-toggle\" title=\"show sidebar\"></button><a class=\"logo-container\" href=\"../../std/index.html\"><img class=\"rust-logo\" src=\"../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"\"></a><h2 class=\"location\"></h2></nav><nav class=\"sidebar\"><div class=\"sidebar-crate\"><a class=\"logo-container\" href=\"../../std/index.html\"><img class=\"rust-logo\" src=\"../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"logo\"></a><h2><a href=\"../../std/index.html\">std</a><span class=\"version\">1.80.0</span></h2></div><div class=\"version\">(051478957\t2024-07-21)</div><div class=\"sidebar-elems\"><h2><a href=\"index.html\">In std::arch</a></h2><h3><a href=\"index.html#macros\">Macros</a></h3><ul class=\"block macro\"><li><a href=\"macro.is_aarch64_feature_detected.html\">is_aarch64_feature_detected</a></li><li><a href=\"macro.is_arm_feature_detected.html\">is_arm_feature_detected</a></li><li><a href=\"macro.is_mips64_feature_detected.html\">is_mips64_feature_detected</a></li><li><a href=\"macro.is_mips_feature_detected.html\">is_mips_feature_detected</a></li><li><a href=\"macro.is_powerpc64_feature_detected.html\">is_powerpc64_feature_detected</a></li><li><a href=\"macro.is_powerpc_feature_detected.html\">is_powerpc_feature_detected</a></li><li><a href=\"macro.is_riscv_feature_detected.html\">is_riscv_feature_detected</a></li><li><a href=\"macro.is_x86_feature_detected.html\">is_x86_feature_detected</a></li></ul></div></nav><div class=\"sidebar-resizer\"></div><main><div class=\"width-limiter\"><rustdoc-search><nav class=\"sub\">\n            <form class=\"search-form\">\n                <span></span> <!-- This empty span is a hacky fix for Safari - See #93184 -->\n                <div id=\"sidebar-button\" tabindex=\"-1\">\n                    <a href=\"../../std/all.html\" title=\"show sidebar\"></a>\n                </div>\n                <input class=\"search-input\" name=\"search\" aria-label=\"Run search in the documentation\" autocomplete=\"off\" spellcheck=\"false\" placeholder=\"Type ‘S’ or ‘/’ to search, ‘?’ for more options…\" type=\"search\">\n                <div id=\"help-button\" tabindex=\"-1\">\n                    <a href=\"../../help.html\" title=\"help\">?</a>\n                </div>\n                <div id=\"settings-menu\" tabindex=\"-1\">\n                    <a href=\"../../settings.html\" title=\"settings\">\n                        Settings\n                    </a>\n                </div>\n            </form>\n        </nav></rustdoc-search><section id=\"main-content\" class=\"content\"><div class=\"main-heading\"><h1>Macro <a href=\"../index.html\">std</a>::<wbr><a href=\"index.html\">arch</a>::<wbr><a class=\"macro\" href=\"#\">is_x86_feature_detected</a><button id=\"copy-path\" title=\"Copy item path to clipboard\">Copy item path</button></h1><span class=\"out-of-band\"><span class=\"since\" title=\"Stable since Rust version 1.27.0\">1.27.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/std_detect/detect/arch/x86.rs.html#18-209\">source</a> · <button id=\"toggle-all-docs\" title=\"collapse all docs\">[<span>−</span>]</button></span></div><pre class=\"rust item-decl\"><span class=\"macro\">macro_rules!</span> is_x86_feature_detected {\n    (<span class=\"string\">\"aes\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"pclmulqdq\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"rdrand\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"rdseed\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"tsc\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"mmx\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"sse\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"sse2\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"sse3\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"ssse3\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"sse4.1\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"sse4.2\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"sse4a\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"sha\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"avx\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"avx2\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"avx512f\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"avx512cd\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"avx512er\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"avx512pf\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"avx512bw\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"avx512dq\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"avx512vl\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"avx512ifma\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"avx512vbmi\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"avx512vpopcntdq\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"avx512vbmi2\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"gfni\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"vaes\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"vpclmulqdq\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"avx512vnni\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"avx512bitalg\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"avx512bf16\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"avx512vp2intersect\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"avx512fp16\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"f16c\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"fma\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"bmi1\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"bmi2\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"lzcnt\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"tbm\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"popcnt\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"fxsr\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"xsave\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"xsaveopt\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"xsaves\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"xsavec\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"cmpxchg16b\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"adx\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"rtm\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"movbe\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"ermsb\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"abm\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"avx512gfni\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"avx512vaes\"</span>) =&gt; { ... };\n    (<span class=\"string\">\"avx512vpclmulqdq\"</span>) =&gt; { ... };\n    (<span class=\"macro-nonterminal\">$t</span>:tt,) =&gt; { ... };\n    (<span class=\"macro-nonterminal\">$t</span>:tt) =&gt; { ... };\n}</pre><details class=\"toggle top-doc\" open=\"\"><summary class=\"hideme\"><span>Expand description</span></summary><div class=\"docblock\"><p>A macro to test at <em>runtime</em> whether a CPU feature is available on\nx86/x86-64 platforms.</p>\n<p>This macro is provided in the standard library and will detect at runtime\nwhether the specified CPU feature is detected. This does <strong>not</strong> resolve at\ncompile time unless the specified feature is already enabled for the entire\ncrate. Runtime detection currently relies mostly on the <code>cpuid</code> instruction.</p>\n<p>This macro only takes one argument which is a string literal of the feature\nbeing tested for. The feature names supported are the lowercase versions of\nthe ones defined by Intel in <a href=\"https://software.intel.com/sites/landingpage/IntrinsicsGuide\">their documentation</a>.</p>\n<h3 id=\"supported-arguments\"><a class=\"doc-anchor\" href=\"#supported-arguments\">§</a>Supported arguments</h3>\n<p>This macro supports the same names that <code>#[target_feature]</code> supports. Unlike\n<code>#[target_feature]</code>, however, this macro does not support names separated\nwith a comma. Instead testing for multiple features must be done through\nseparate macro invocations for now.</p>\n<p>Supported arguments are:</p>\n<ul>\n<li><code>\"aes\"</code></li>\n<li><code>\"pclmulqdq\"</code></li>\n<li><code>\"rdrand\"</code></li>\n<li><code>\"rdseed\"</code></li>\n<li><code>\"tsc\"</code></li>\n<li><code>\"mmx\"</code></li>\n<li><code>\"sse\"</code></li>\n<li><code>\"sse2\"</code></li>\n<li><code>\"sse3\"</code></li>\n<li><code>\"ssse3\"</code></li>\n<li><code>\"sse4.1\"</code></li>\n<li><code>\"sse4.2\"</code></li>\n<li><code>\"sse4a\"</code></li>\n<li><code>\"sha\"</code></li>\n<li><code>\"avx\"</code></li>\n<li><code>\"avx2\"</code></li>\n<li><code>\"avx512f\"</code></li>\n<li><code>\"avx512cd\"</code></li>\n<li><code>\"avx512er\"</code></li>\n<li><code>\"avx512pf\"</code></li>\n<li><code>\"avx512bw\"</code></li>\n<li><code>\"avx512dq\"</code></li>\n<li><code>\"avx512vl\"</code></li>\n<li><code>\"avx512ifma\"</code></li>\n<li><code>\"avx512vbmi\"</code></li>\n<li><code>\"avx512vpopcntdq\"</code></li>\n<li><code>\"avx512vbmi2\"</code></li>\n<li><code>\"gfni\"</code></li>\n<li><code>\"vaes\"</code></li>\n<li><code>\"vpclmulqdq\"</code></li>\n<li><code>\"avx512vnni\"</code></li>\n<li><code>\"avx512bitalg\"</code></li>\n<li><code>\"avx512bf16\"</code></li>\n<li><code>\"avx512vp2intersect\"</code></li>\n<li><code>\"avx512fp16\"</code></li>\n<li><code>\"f16c\"</code></li>\n<li><code>\"fma\"</code></li>\n<li><code>\"bmi1\"</code></li>\n<li><code>\"bmi2\"</code></li>\n<li><code>\"abm\"</code></li>\n<li><code>\"lzcnt\"</code></li>\n<li><code>\"tbm\"</code></li>\n<li><code>\"popcnt\"</code></li>\n<li><code>\"fxsr\"</code></li>\n<li><code>\"xsave\"</code></li>\n<li><code>\"xsaveopt\"</code></li>\n<li><code>\"xsaves\"</code></li>\n<li><code>\"xsavec\"</code></li>\n<li><code>\"cmpxchg16b\"</code></li>\n<li><code>\"adx\"</code></li>\n<li><code>\"rtm\"</code></li>\n<li><code>\"movbe\"</code></li>\n<li><code>\"ermsb\"</code></li>\n</ul>\n</div></details></section></div></main></body></html>",
	"crawlDate": "2024-07-28T05:22:45.444Z"
}