{
	"title": "ZeroablePrimitive in std::num - Rust",
	"url": "https://doc.rust-lang.org/stable/std/num/trait.ZeroablePrimitive.html",
	"markdown": "# ZeroablePrimitive in std::num - Rust\n\n```\npub unsafe trait ZeroablePrimitive: Sized + Copy + Sealed { }\n```\n\nðŸ”¬This is a nightly-only experimental API. (`nonzero_internals`)\n\nExpand description\n\nA marker trait for primitive types which can be zero.\n\nThis is an implementation detail for `[NonZero](struct.NonZero.html \"struct std::num::NonZero\")<T>` which may disappear or be replaced at any time.\n\n## [Â§](#safety)Safety\n\nTypes implementing this trait must be primitives that are valid when zeroed.\n\nThe associated `Self::NonZeroInner` type must have the same size+align as `Self`, but with a niche and bit validity making it so the following `transmutes` are sound:\n\n-   `Self::NonZeroInner` to `Option<Self::NonZeroInner>`\n-   `Option<Self::NonZeroInner>` to `Self`\n\n(And, consequently, `Self::NonZeroInner` to `Self`.)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/num/nonzero.rs.html#87-100)[Â§](#impl-ZeroablePrimitive-for-i8)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/num/nonzero.rs.html#87-100)[Â§](#impl-ZeroablePrimitive-for-i16)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/num/nonzero.rs.html#87-100)[Â§](#impl-ZeroablePrimitive-for-i32)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/num/nonzero.rs.html#87-100)[Â§](#impl-ZeroablePrimitive-for-i64)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/num/nonzero.rs.html#87-100)[Â§](#impl-ZeroablePrimitive-for-i128)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/num/nonzero.rs.html#87-100)[Â§](#impl-ZeroablePrimitive-for-isize)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/num/nonzero.rs.html#87-100)[Â§](#impl-ZeroablePrimitive-for-u8)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/num/nonzero.rs.html#87-100)[Â§](#impl-ZeroablePrimitive-for-u16)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/num/nonzero.rs.html#87-100)[Â§](#impl-ZeroablePrimitive-for-u32)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/num/nonzero.rs.html#87-100)[Â§](#impl-ZeroablePrimitive-for-u64)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/num/nonzero.rs.html#87-100)[Â§](#impl-ZeroablePrimitive-for-u128)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/num/nonzero.rs.html#87-100)[Â§](#impl-ZeroablePrimitive-for-usize)",
	"html": "<!DOCTYPE html><html lang=\"en\" data-theme=\"light\"><head><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><meta name=\"generator\" content=\"rustdoc\"><meta name=\"description\" content=\"A marker trait for primitive types which can be zero.\"><title>ZeroablePrimitive in std::num - Rust</title><script>if(window.location.protocol!==\"file:\")document.head.insertAdjacentHTML(\"beforeend\",\"SourceSerif4-Regular-46f98efaafac5295.ttf.woff2,FiraSans-Regular-018c141bf0843ffd.woff2,FiraSans-Medium-8f9a781e4970d388.woff2,SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2,SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\".split(\",\").map(f=>`<link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin href=\"../../static.files/${f}\">`).join(\"\"))</script><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceSerif4-Regular-46f98efaafac5295.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/FiraSans-Regular-018c141bf0843ffd.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/FiraSans-Medium-8f9a781e4970d388.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\"><link rel=\"stylesheet\" href=\"../../static.files/normalize-76eba96aa4d2e634.css\"><link rel=\"stylesheet\" href=\"../../static.files/rustdoc-dd39b87e5fcfba68.css\"><meta name=\"rustdoc-vars\" data-root-path=\"../../\" data-static-root-path=\"../../static.files/\" data-current-crate=\"std\" data-themes=\"\" data-resource-suffix=\"1.80.0\" data-rustdoc-version=\"1.80.0 (051478957 2024-07-21)\" data-channel=\"1.80.0\" data-search-js=\"search-d52510db62a78183.js\" data-settings-js=\"settings-4313503d2e1961c2.js\"><script src=\"../../static.files/storage-118b08c4c78b968e.js\"></script><script defer=\"\" src=\"sidebar-items1.80.0.js\"></script><script defer=\"\" src=\"../../static.files/main-20a3ad099b048cf2.js\"></script><noscript><link rel=\"stylesheet\" href=\"../../static.files/noscript-df360f571f6edeae.css\"></noscript><link rel=\"alternate icon\" type=\"image/png\" href=\"../../static.files/favicon-32x32-422f7d1d52889060.png\"><link rel=\"icon\" type=\"image/svg+xml\" href=\"../../static.files/favicon-2c020d218678b618.svg\"></head><body class=\"rustdoc trait\"><!--[if lte IE 11]><div class=\"warning\">This old browser is unsupported and will most likely display funky things.</div><![endif]--><nav class=\"mobile-topbar\"><button class=\"sidebar-menu-toggle\" title=\"show sidebar\"></button><a class=\"logo-container\" href=\"../../std/index.html\"><img class=\"rust-logo\" src=\"../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"\"></a><h2 class=\"location\"><a href=\"#\">ZeroablePrimitive</a></h2></nav><nav class=\"sidebar\"><div class=\"sidebar-crate\"><a class=\"logo-container\" href=\"../../std/index.html\"><img class=\"rust-logo\" src=\"../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"logo\"></a><h2><a href=\"../../std/index.html\">std</a><span class=\"version\">1.80.0</span></h2></div><div class=\"version\">(051478957\t2024-07-21)</div><h2 class=\"location\"><a href=\"#\">ZeroablePrimitive</a></h2><div class=\"sidebar-elems\"><section><h3><a href=\"#object-safety\">Object Safety</a></h3><h3><a href=\"#implementors\">Implementors</a></h3></section><h2><a href=\"index.html\">In std::num</a></h2><h3><a href=\"index.html#structs\">Structs</a></h3><ul class=\"block struct\"><li><a href=\"struct.NonZero.html\">NonZero</a></li><li><a href=\"struct.ParseFloatError.html\">ParseFloatError</a></li><li><a href=\"struct.ParseIntError.html\">ParseIntError</a></li><li><a href=\"struct.Saturating.html\">Saturating</a></li><li><a href=\"struct.TryFromIntError.html\">TryFromIntError</a></li><li><a href=\"struct.Wrapping.html\">Wrapping</a></li></ul><h3><a href=\"index.html#enums\">Enums</a></h3><ul class=\"block enum\"><li><a href=\"enum.FpCategory.html\">FpCategory</a></li><li><a href=\"enum.IntErrorKind.html\">IntErrorKind</a></li></ul><h3><a href=\"index.html#traits\">Traits</a></h3><ul class=\"block trait\"><li><a href=\"trait.ZeroablePrimitive.html\">ZeroablePrimitive</a></li></ul><h3><a href=\"index.html#types\">Type Aliases</a></h3><ul class=\"block type\"><li><a href=\"type.NonZeroI128.html\">NonZeroI128</a></li><li><a href=\"type.NonZeroI16.html\">NonZeroI16</a></li><li><a href=\"type.NonZeroI32.html\">NonZeroI32</a></li><li><a href=\"type.NonZeroI64.html\">NonZeroI64</a></li><li><a href=\"type.NonZeroI8.html\">NonZeroI8</a></li><li><a href=\"type.NonZeroIsize.html\">NonZeroIsize</a></li><li><a href=\"type.NonZeroU128.html\">NonZeroU128</a></li><li><a href=\"type.NonZeroU16.html\">NonZeroU16</a></li><li><a href=\"type.NonZeroU32.html\">NonZeroU32</a></li><li><a href=\"type.NonZeroU64.html\">NonZeroU64</a></li><li><a href=\"type.NonZeroU8.html\">NonZeroU8</a></li><li><a href=\"type.NonZeroUsize.html\">NonZeroUsize</a></li></ul></div></nav><div class=\"sidebar-resizer\"></div><main><div class=\"width-limiter\"><rustdoc-search><nav class=\"sub\">\n            <form class=\"search-form\">\n                <span></span> <!-- This empty span is a hacky fix for Safari - See #93184 -->\n                <div id=\"sidebar-button\" tabindex=\"-1\">\n                    <a href=\"../../std/all.html\" title=\"show sidebar\"></a>\n                </div>\n                <input class=\"search-input\" name=\"search\" aria-label=\"Run search in the documentation\" autocomplete=\"off\" spellcheck=\"false\" placeholder=\"Type â€˜Sâ€™ or â€˜/â€™ to search, â€˜?â€™ for more optionsâ€¦\" type=\"search\">\n                <div id=\"help-button\" tabindex=\"-1\">\n                    <a href=\"../../help.html\" title=\"help\">?</a>\n                </div>\n                <div id=\"settings-menu\" tabindex=\"-1\">\n                    <a href=\"../../settings.html\" title=\"settings\">\n                        Settings\n                    </a>\n                </div>\n            </form>\n        </nav></rustdoc-search><section id=\"main-content\" class=\"content\"><div class=\"main-heading\"><h1>Trait <a href=\"../index.html\">std</a>::<wbr><a href=\"index.html\">num</a>::<wbr><a class=\"trait\" href=\"#\">ZeroablePrimitive</a><button id=\"copy-path\" title=\"Copy item path to clipboard\">Copy item path</button></h1><span class=\"out-of-band\"><a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/num/nonzero.rs.html#37\">source</a> Â· <button id=\"toggle-all-docs\" title=\"collapse all docs\">[<span>âˆ’</span>]</button></span></div><pre class=\"rust item-decl\"><code>pub unsafe trait ZeroablePrimitive: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"../marker/trait.Copy.html\" title=\"trait std::marker::Copy\">Copy</a> + Sealed { }</code></pre><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>nonzero_internals</code>)</span></div></span><details class=\"toggle top-doc\" open=\"\"><summary class=\"hideme\"><span>Expand description</span></summary><div class=\"docblock\"><p>A marker trait for primitive types which can be zero.</p>\n<p>This is an implementation detail for <code><a href=\"struct.NonZero.html\" title=\"struct std::num::NonZero\">NonZero</a>&lt;T&gt;</code> which may disappear or be replaced at any time.</p>\n<h2 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">Â§</a>Safety</h2>\n<p>Types implementing this trait must be primitives that are valid when zeroed.</p>\n<p>The associated <code>Self::NonZeroInner</code> type must have the same size+align as <code>Self</code>,\nbut with a niche and bit validity making it so the following <code>transmutes</code> are sound:</p>\n<ul>\n<li><code>Self::NonZeroInner</code> to <code>Option&lt;Self::NonZeroInner&gt;</code></li>\n<li><code>Option&lt;Self::NonZeroInner&gt;</code> to <code>Self</code></li>\n</ul>\n<p>(And, consequently, <code>Self::NonZeroInner</code> to <code>Self</code>.)</p>\n</div></details><h2 id=\"object-safety\" class=\"section-header\">Object Safety<a href=\"#object-safety\" class=\"anchor\">Â§</a></h2><div class=\"object-safety-info\">This trait is <b>not</b> <a href=\"https://doc.rust-lang.org/1.80.0/reference/items/traits.html#object-safety\">object safe</a>.</div><h2 id=\"implementors\" class=\"section-header\">Implementors<a href=\"#implementors\" class=\"anchor\">Â§</a></h2><div id=\"implementors-list\"><section id=\"impl-ZeroablePrimitive-for-i8\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/num/nonzero.rs.html#87-100\">source</a><a href=\"#impl-ZeroablePrimitive-for-i8\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.ZeroablePrimitive.html\" title=\"trait std::num::ZeroablePrimitive\">ZeroablePrimitive</a> for <a class=\"primitive\" href=\"../primitive.i8.html\">i8</a></h3></section><section id=\"impl-ZeroablePrimitive-for-i16\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/num/nonzero.rs.html#87-100\">source</a><a href=\"#impl-ZeroablePrimitive-for-i16\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.ZeroablePrimitive.html\" title=\"trait std::num::ZeroablePrimitive\">ZeroablePrimitive</a> for <a class=\"primitive\" href=\"../primitive.i16.html\">i16</a></h3></section><section id=\"impl-ZeroablePrimitive-for-i32\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/num/nonzero.rs.html#87-100\">source</a><a href=\"#impl-ZeroablePrimitive-for-i32\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.ZeroablePrimitive.html\" title=\"trait std::num::ZeroablePrimitive\">ZeroablePrimitive</a> for <a class=\"primitive\" href=\"../primitive.i32.html\">i32</a></h3></section><section id=\"impl-ZeroablePrimitive-for-i64\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/num/nonzero.rs.html#87-100\">source</a><a href=\"#impl-ZeroablePrimitive-for-i64\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.ZeroablePrimitive.html\" title=\"trait std::num::ZeroablePrimitive\">ZeroablePrimitive</a> for <a class=\"primitive\" href=\"../primitive.i64.html\">i64</a></h3></section><section id=\"impl-ZeroablePrimitive-for-i128\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/num/nonzero.rs.html#87-100\">source</a><a href=\"#impl-ZeroablePrimitive-for-i128\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.ZeroablePrimitive.html\" title=\"trait std::num::ZeroablePrimitive\">ZeroablePrimitive</a> for <a class=\"primitive\" href=\"../primitive.i128.html\">i128</a></h3></section><section id=\"impl-ZeroablePrimitive-for-isize\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/num/nonzero.rs.html#87-100\">source</a><a href=\"#impl-ZeroablePrimitive-for-isize\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.ZeroablePrimitive.html\" title=\"trait std::num::ZeroablePrimitive\">ZeroablePrimitive</a> for <a class=\"primitive\" href=\"../primitive.isize.html\">isize</a></h3></section><section id=\"impl-ZeroablePrimitive-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/num/nonzero.rs.html#87-100\">source</a><a href=\"#impl-ZeroablePrimitive-for-u8\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.ZeroablePrimitive.html\" title=\"trait std::num::ZeroablePrimitive\">ZeroablePrimitive</a> for <a class=\"primitive\" href=\"../primitive.u8.html\">u8</a></h3></section><section id=\"impl-ZeroablePrimitive-for-u16\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/num/nonzero.rs.html#87-100\">source</a><a href=\"#impl-ZeroablePrimitive-for-u16\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.ZeroablePrimitive.html\" title=\"trait std::num::ZeroablePrimitive\">ZeroablePrimitive</a> for <a class=\"primitive\" href=\"../primitive.u16.html\">u16</a></h3></section><section id=\"impl-ZeroablePrimitive-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/num/nonzero.rs.html#87-100\">source</a><a href=\"#impl-ZeroablePrimitive-for-u32\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.ZeroablePrimitive.html\" title=\"trait std::num::ZeroablePrimitive\">ZeroablePrimitive</a> for <a class=\"primitive\" href=\"../primitive.u32.html\">u32</a></h3></section><section id=\"impl-ZeroablePrimitive-for-u64\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/num/nonzero.rs.html#87-100\">source</a><a href=\"#impl-ZeroablePrimitive-for-u64\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.ZeroablePrimitive.html\" title=\"trait std::num::ZeroablePrimitive\">ZeroablePrimitive</a> for <a class=\"primitive\" href=\"../primitive.u64.html\">u64</a></h3></section><section id=\"impl-ZeroablePrimitive-for-u128\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/num/nonzero.rs.html#87-100\">source</a><a href=\"#impl-ZeroablePrimitive-for-u128\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.ZeroablePrimitive.html\" title=\"trait std::num::ZeroablePrimitive\">ZeroablePrimitive</a> for <a class=\"primitive\" href=\"../primitive.u128.html\">u128</a></h3></section><section id=\"impl-ZeroablePrimitive-for-usize\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/num/nonzero.rs.html#87-100\">source</a><a href=\"#impl-ZeroablePrimitive-for-usize\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.ZeroablePrimitive.html\" title=\"trait std::num::ZeroablePrimitive\">ZeroablePrimitive</a> for <a class=\"primitive\" href=\"../primitive.usize.html\">usize</a></h3></section></div><script src=\"../../trait.impl/core/num/nonzero/trait.ZeroablePrimitive.js\" async=\"\"></script></section></div></main></body></html>",
	"crawlDate": "2024-07-28T05:21:29.581Z"
}