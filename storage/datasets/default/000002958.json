{
	"title": "ExitCodeExt in std::os::windows::process - Rust",
	"url": "https://doc.rust-lang.org/stable/std/os/windows/process/trait.ExitCodeExt.html",
	"markdown": "# ExitCodeExt in std::os::windows::process - Rust\n\n```\npub trait ExitCodeExt: Sealed {\n    // Required method\n    fn from_raw(raw: u32) -> Self;\n}\n```\n\nðŸ”¬This is a nightly-only experimental API. (`windows_process_exit_code_from`Â [#111688](https://github.com/rust-lang/rust/issues/111688))\n\nAvailable on **Windows** only.\n\nExpand description\n\nWindows-specific extensions to [`process::ExitCode`](../../../process/struct.ExitCode.html \"struct std::process::ExitCode\").\n\nThis trait is sealed: it cannot be implemented outside the standard library. This is so that future additional methods are not breaking changes.\n\n[source](about:blank/src/std/os/windows/process.rs.html#429)\n\nðŸ”¬This is a nightly-only experimental API. (`windows_process_exit_code_from`Â [#111688](https://github.com/rust-lang/rust/issues/111688))\n\nCreates a new `ExitCode` from the raw underlying `u32` return value of a process.\n\nThe exit code should not be 259, as this conflicts with the `STILL_ACTIVE` macro returned from the `GetExitCodeProcess` function to signal that the process has yet to run to completion.\n\n[source](about:blank/src/std/os/windows/process.rs.html#433-437)[Â§](#impl-ExitCodeExt-for-ExitCode)",
	"html": "<!DOCTYPE html><html lang=\"en\" data-theme=\"light\"><head><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><meta name=\"generator\" content=\"rustdoc\"><meta name=\"description\" content=\"Windows-specific extensions to `process::ExitCode`.\"><title>ExitCodeExt in std::os::windows::process - Rust</title><script>if(window.location.protocol!==\"file:\")document.head.insertAdjacentHTML(\"beforeend\",\"SourceSerif4-Regular-46f98efaafac5295.ttf.woff2,FiraSans-Regular-018c141bf0843ffd.woff2,FiraSans-Medium-8f9a781e4970d388.woff2,SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2,SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\".split(\",\").map(f=>`<link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin href=\"../../../../static.files/${f}\">`).join(\"\"))</script><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../../../static.files/SourceSerif4-Regular-46f98efaafac5295.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../../../static.files/FiraSans-Regular-018c141bf0843ffd.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../../../static.files/FiraSans-Medium-8f9a781e4970d388.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../../../static.files/SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../../../static.files/SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\"><link rel=\"stylesheet\" href=\"../../../../static.files/normalize-76eba96aa4d2e634.css\"><link rel=\"stylesheet\" href=\"../../../../static.files/rustdoc-dd39b87e5fcfba68.css\"><meta name=\"rustdoc-vars\" data-root-path=\"../../../../\" data-static-root-path=\"../../../../static.files/\" data-current-crate=\"std\" data-themes=\"\" data-resource-suffix=\"1.80.0\" data-rustdoc-version=\"1.80.0 (051478957 2024-07-21)\" data-channel=\"1.80.0\" data-search-js=\"search-d52510db62a78183.js\" data-settings-js=\"settings-4313503d2e1961c2.js\"><script src=\"../../../../static.files/storage-118b08c4c78b968e.js\"></script><script defer=\"\" src=\"sidebar-items1.80.0.js\"></script><script defer=\"\" src=\"../../../../static.files/main-20a3ad099b048cf2.js\"></script><noscript><link rel=\"stylesheet\" href=\"../../../../static.files/noscript-df360f571f6edeae.css\"></noscript><link rel=\"alternate icon\" type=\"image/png\" href=\"../../../../static.files/favicon-32x32-422f7d1d52889060.png\"><link rel=\"icon\" type=\"image/svg+xml\" href=\"../../../../static.files/favicon-2c020d218678b618.svg\"></head><body class=\"rustdoc trait\"><!--[if lte IE 11]><div class=\"warning\">This old browser is unsupported and will most likely display funky things.</div><![endif]--><nav class=\"mobile-topbar\"><button class=\"sidebar-menu-toggle\" title=\"show sidebar\"></button><a class=\"logo-container\" href=\"../../../../std/index.html\"><img class=\"rust-logo\" src=\"../../../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"\"></a><h2 class=\"location\"><a href=\"#\">ExitCodeExt</a></h2></nav><nav class=\"sidebar\"><div class=\"sidebar-crate\"><a class=\"logo-container\" href=\"../../../../std/index.html\"><img class=\"rust-logo\" src=\"../../../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"logo\"></a><h2><a href=\"../../../../std/index.html\">std</a><span class=\"version\">1.80.0</span></h2></div><div class=\"version\">(051478957\t2024-07-21)</div><h2 class=\"location\"><a href=\"#\">ExitCodeExt</a></h2><div class=\"sidebar-elems\"><section><h3><a href=\"#required-methods\">Required Methods</a></h3><ul class=\"block\"><li><a href=\"#tymethod.from_raw\">from_raw</a></li></ul><h3><a href=\"#object-safety\">Object Safety</a></h3><h3><a href=\"#implementors\">Implementors</a></h3></section><h2><a href=\"index.html\">In std::os::windows::process</a></h2><h3><a href=\"index.html#traits\">Traits</a></h3><ul class=\"block trait\"><li><a href=\"trait.ChildExt.html\">ChildExt</a></li><li><a href=\"trait.CommandExt.html\">CommandExt</a></li><li><a href=\"trait.ExitCodeExt.html\">ExitCodeExt</a></li><li><a href=\"trait.ExitStatusExt.html\">ExitStatusExt</a></li></ul></div></nav><div class=\"sidebar-resizer\"></div><main><div class=\"width-limiter\"><rustdoc-search><nav class=\"sub\">\n            <form class=\"search-form\">\n                <span></span> <!-- This empty span is a hacky fix for Safari - See #93184 -->\n                <div id=\"sidebar-button\" tabindex=\"-1\">\n                    <a href=\"../../../../std/all.html\" title=\"show sidebar\"></a>\n                </div>\n                <input class=\"search-input\" name=\"search\" aria-label=\"Run search in the documentation\" autocomplete=\"off\" spellcheck=\"false\" placeholder=\"Type â€˜Sâ€™ or â€˜/â€™ to search, â€˜?â€™ for more optionsâ€¦\" type=\"search\">\n                <div id=\"help-button\" tabindex=\"-1\">\n                    <a href=\"../../../../help.html\" title=\"help\">?</a>\n                </div>\n                <div id=\"settings-menu\" tabindex=\"-1\">\n                    <a href=\"../../../../settings.html\" title=\"settings\">\n                        Settings\n                    </a>\n                </div>\n            </form>\n        </nav></rustdoc-search><section id=\"main-content\" class=\"content\"><div class=\"main-heading\"><h1>Trait <a href=\"../../../index.html\">std</a>::<wbr><a href=\"../../index.html\">os</a>::<wbr><a href=\"../index.html\">windows</a>::<wbr><a href=\"index.html\">process</a>::<wbr><a class=\"trait\" href=\"#\">ExitCodeExt</a><button id=\"copy-path\" title=\"Copy item path to clipboard\">Copy item path</button></h1><span class=\"out-of-band\"><a class=\"src\" href=\"../../../../src/std/os/windows/process.rs.html#421-430\">source</a> Â· <button id=\"toggle-all-docs\" title=\"collapse all docs\">[<span>âˆ’</span>]</button></span></div><pre class=\"rust item-decl\"><code>pub trait ExitCodeExt: Sealed {\n    // Required method\n    fn <a href=\"#tymethod.from_raw\" class=\"fn\">from_raw</a>(raw: <a class=\"primitive\" href=\"../../../primitive.u32.html\">u32</a>) -&gt; Self;\n}</code></pre><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>windows_process_exit_code_from</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/111688\">#111688</a>)</span></div><div class=\"stab portability\">Available on <strong>Windows</strong> only.</div></span><details class=\"toggle top-doc\" open=\"\"><summary class=\"hideme\"><span>Expand description</span></summary><div class=\"docblock\"><p>Windows-specific extensions to <a href=\"../../../process/struct.ExitCode.html\" title=\"struct std::process::ExitCode\"><code>process::ExitCode</code></a>.</p>\n<p>This trait is sealed: it cannot be implemented outside the standard library.\nThis is so that future additional methods are not breaking changes.</p>\n</div></details><h2 id=\"required-methods\" class=\"section-header\">Required Methods<a href=\"#required-methods\" class=\"anchor\">Â§</a></h2><div class=\"methods\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"tymethod.from_raw\" class=\"method\"><a class=\"src rightside\" href=\"../../../../src/std/os/windows/process.rs.html#429\">source</a><h4 class=\"code-header\">fn <a href=\"#tymethod.from_raw\" class=\"fn\">from_raw</a>(raw: <a class=\"primitive\" href=\"../../../primitive.u32.html\">u32</a>) -&gt; Self</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>windows_process_exit_code_from</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/111688\">#111688</a>)</span></div></span></summary><div class=\"docblock\"><p>Creates a new <code>ExitCode</code> from the raw underlying <code>u32</code> return value of\na process.</p>\n<p>The exit code should not be 259, as this conflicts with the <code>STILL_ACTIVE</code>\nmacro returned from the <code>GetExitCodeProcess</code> function to signal that the\nprocess has yet to run to completion.</p>\n</div></details></div><h2 id=\"object-safety\" class=\"section-header\">Object Safety<a href=\"#object-safety\" class=\"anchor\">Â§</a></h2><div class=\"object-safety-info\">This trait is <b>not</b> <a href=\"https://doc.rust-lang.org/1.80.0/reference/items/traits.html#object-safety\">object safe</a>.</div><h2 id=\"implementors\" class=\"section-header\">Implementors<a href=\"#implementors\" class=\"anchor\">Â§</a></h2><div id=\"implementors-list\"><section id=\"impl-ExitCodeExt-for-ExitCode\" class=\"impl\"><a class=\"src rightside\" href=\"../../../../src/std/os/windows/process.rs.html#433-437\">source</a><a href=\"#impl-ExitCodeExt-for-ExitCode\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.ExitCodeExt.html\" title=\"trait std::os::windows::process::ExitCodeExt\">ExitCodeExt</a> for <a class=\"struct\" href=\"../../../process/struct.ExitCode.html\" title=\"struct std::process::ExitCode\">ExitCode</a></h3></section></div><script src=\"../../../../trait.impl/std/os/windows/process/trait.ExitCodeExt.js\" async=\"\"></script></section></div></main></body></html>",
	"crawlDate": "2024-07-28T05:26:29.743Z"
}