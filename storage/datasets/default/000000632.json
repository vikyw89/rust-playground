{
	"title": "Join in std::slice - Rust",
	"url": "https://doc.rust-lang.org/stable/std/slice/trait.Join.html",
	"markdown": "# Join in std::slice - Rust\n\n```\npub trait Join<Separator> {\n    type Output;\n\n    // Required method\n    fn join(slice: &Self, sep: Separator) -> Self::Output;\n}\n```\n\nðŸ”¬This is a nightly-only experimental API. (`slice_concat_trait`Â [#27747](https://github.com/rust-lang/rust/issues/27747))\n\nExpand description\n\n[source](https://doc.rust-lang.org/1.80.0/src/alloc/slice.rs.html#698)\n\nðŸ”¬This is a nightly-only experimental API. (`slice_concat_trait`Â [#27747](https://github.com/rust-lang/rust/issues/27747))\n\nThe resulting type after concatenation\n\n[source](https://doc.rust-lang.org/1.80.0/src/alloc/slice.rs.html#702)\n\nðŸ”¬This is a nightly-only experimental API. (`slice_concat_trait`Â [#27747](https://github.com/rust-lang/rust/issues/27747))",
	"html": "<!DOCTYPE html><html lang=\"en\" data-theme=\"light\"><head><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><meta name=\"generator\" content=\"rustdoc\"><meta name=\"description\" content=\"Helper trait for `[T]::join`\"><title>Join in std::slice - Rust</title><script>if(window.location.protocol!==\"file:\")document.head.insertAdjacentHTML(\"beforeend\",\"SourceSerif4-Regular-46f98efaafac5295.ttf.woff2,FiraSans-Regular-018c141bf0843ffd.woff2,FiraSans-Medium-8f9a781e4970d388.woff2,SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2,SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\".split(\",\").map(f=>`<link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin href=\"../../static.files/${f}\">`).join(\"\"))</script><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceSerif4-Regular-46f98efaafac5295.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/FiraSans-Regular-018c141bf0843ffd.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/FiraSans-Medium-8f9a781e4970d388.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\"><link rel=\"stylesheet\" href=\"../../static.files/normalize-76eba96aa4d2e634.css\"><link rel=\"stylesheet\" href=\"../../static.files/rustdoc-dd39b87e5fcfba68.css\"><meta name=\"rustdoc-vars\" data-root-path=\"../../\" data-static-root-path=\"../../static.files/\" data-current-crate=\"std\" data-themes=\"\" data-resource-suffix=\"1.80.0\" data-rustdoc-version=\"1.80.0 (051478957 2024-07-21)\" data-channel=\"1.80.0\" data-search-js=\"search-d52510db62a78183.js\" data-settings-js=\"settings-4313503d2e1961c2.js\"><script src=\"../../static.files/storage-118b08c4c78b968e.js\"></script><script defer=\"\" src=\"sidebar-items1.80.0.js\"></script><script defer=\"\" src=\"../../static.files/main-20a3ad099b048cf2.js\"></script><noscript><link rel=\"stylesheet\" href=\"../../static.files/noscript-df360f571f6edeae.css\"></noscript><link rel=\"alternate icon\" type=\"image/png\" href=\"../../static.files/favicon-32x32-422f7d1d52889060.png\"><link rel=\"icon\" type=\"image/svg+xml\" href=\"../../static.files/favicon-2c020d218678b618.svg\"></head><body class=\"rustdoc trait\"><!--[if lte IE 11]><div class=\"warning\">This old browser is unsupported and will most likely display funky things.</div><![endif]--><nav class=\"mobile-topbar\"><button class=\"sidebar-menu-toggle\" title=\"show sidebar\"></button><a class=\"logo-container\" href=\"../../std/index.html\"><img class=\"rust-logo\" src=\"../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"\"></a><h2 class=\"location\"><a href=\"#\">Join</a></h2></nav><nav class=\"sidebar\"><div class=\"sidebar-crate\"><a class=\"logo-container\" href=\"../../std/index.html\"><img class=\"rust-logo\" src=\"../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"logo\"></a><h2><a href=\"../../std/index.html\">std</a><span class=\"version\">1.80.0</span></h2></div><div class=\"version\">(051478957\t2024-07-21)</div><h2 class=\"location\"><a href=\"#\">Join</a></h2><div class=\"sidebar-elems\"><section><h3><a href=\"#required-associated-types\">Required Associated Types</a></h3><ul class=\"block\"><li><a href=\"#associatedtype.Output\">Output</a></li></ul><h3><a href=\"#required-methods\">Required Methods</a></h3><ul class=\"block\"><li><a href=\"#tymethod.join\">join</a></li></ul><h3><a href=\"#object-safety\">Object Safety</a></h3><h3><a href=\"#implementors\">Implementors</a></h3></section><h2><a href=\"index.html\">In std::slice</a></h2><h3><a href=\"index.html#structs\">Structs</a></h3><ul class=\"block struct\"><li><a href=\"struct.ArrayChunks.html\">ArrayChunks</a></li><li><a href=\"struct.ArrayChunksMut.html\">ArrayChunksMut</a></li><li><a href=\"struct.ArrayWindows.html\">ArrayWindows</a></li><li><a href=\"struct.ChunkBy.html\">ChunkBy</a></li><li><a href=\"struct.ChunkByMut.html\">ChunkByMut</a></li><li><a href=\"struct.Chunks.html\">Chunks</a></li><li><a href=\"struct.ChunksExact.html\">ChunksExact</a></li><li><a href=\"struct.ChunksExactMut.html\">ChunksExactMut</a></li><li><a href=\"struct.ChunksMut.html\">ChunksMut</a></li><li><a href=\"struct.EscapeAscii.html\">EscapeAscii</a></li><li><a href=\"struct.Iter.html\">Iter</a></li><li><a href=\"struct.IterMut.html\">IterMut</a></li><li><a href=\"struct.RChunks.html\">RChunks</a></li><li><a href=\"struct.RChunksExact.html\">RChunksExact</a></li><li><a href=\"struct.RChunksExactMut.html\">RChunksExactMut</a></li><li><a href=\"struct.RChunksMut.html\">RChunksMut</a></li><li><a href=\"struct.RSplit.html\">RSplit</a></li><li><a href=\"struct.RSplitMut.html\">RSplitMut</a></li><li><a href=\"struct.RSplitN.html\">RSplitN</a></li><li><a href=\"struct.RSplitNMut.html\">RSplitNMut</a></li><li><a href=\"struct.Split.html\">Split</a></li><li><a href=\"struct.SplitInclusive.html\">SplitInclusive</a></li><li><a href=\"struct.SplitInclusiveMut.html\">SplitInclusiveMut</a></li><li><a href=\"struct.SplitMut.html\">SplitMut</a></li><li><a href=\"struct.SplitN.html\">SplitN</a></li><li><a href=\"struct.SplitNMut.html\">SplitNMut</a></li><li><a href=\"struct.Windows.html\">Windows</a></li></ul><h3><a href=\"index.html#traits\">Traits</a></h3><ul class=\"block trait\"><li><a href=\"trait.Concat.html\">Concat</a></li><li><a href=\"trait.Join.html\">Join</a></li><li><a href=\"trait.SliceIndex.html\">SliceIndex</a></li></ul><h3><a href=\"index.html#functions\">Functions</a></h3><ul class=\"block fn\"><li><a href=\"fn.from_mut.html\">from_mut</a></li><li><a href=\"fn.from_mut_ptr_range.html\">from_mut_ptr_range</a></li><li><a href=\"fn.from_ptr_range.html\">from_ptr_range</a></li><li><a href=\"fn.from_raw_parts.html\">from_raw_parts</a></li><li><a href=\"fn.from_raw_parts_mut.html\">from_raw_parts_mut</a></li><li><a href=\"fn.from_ref.html\">from_ref</a></li><li><a href=\"fn.range.html\">range</a></li><li><a href=\"fn.try_range.html\">try_range</a></li></ul></div></nav><div class=\"sidebar-resizer\"></div><main><div class=\"width-limiter\"><rustdoc-search><nav class=\"sub\">\n            <form class=\"search-form\">\n                <span></span> <!-- This empty span is a hacky fix for Safari - See #93184 -->\n                <div id=\"sidebar-button\" tabindex=\"-1\">\n                    <a href=\"../../std/all.html\" title=\"show sidebar\"></a>\n                </div>\n                <input class=\"search-input\" name=\"search\" aria-label=\"Run search in the documentation\" autocomplete=\"off\" spellcheck=\"false\" placeholder=\"Type â€˜Sâ€™ or â€˜/â€™ to search, â€˜?â€™ for more optionsâ€¦\" type=\"search\">\n                <div id=\"help-button\" tabindex=\"-1\">\n                    <a href=\"../../help.html\" title=\"help\">?</a>\n                </div>\n                <div id=\"settings-menu\" tabindex=\"-1\">\n                    <a href=\"../../settings.html\" title=\"settings\">\n                        Settings\n                    </a>\n                </div>\n            </form>\n        </nav></rustdoc-search><section id=\"main-content\" class=\"content\"><div class=\"main-heading\"><h1>Trait <a href=\"../index.html\">std</a>::<wbr><a href=\"index.html\">slice</a>::<wbr><a class=\"trait\" href=\"#\">Join</a><button id=\"copy-path\" title=\"Copy item path to clipboard\">Copy item path</button></h1><span class=\"out-of-band\"><a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/alloc/slice.rs.html#695\">source</a> Â· <button id=\"toggle-all-docs\" title=\"collapse all docs\">[<span>âˆ’</span>]</button></span></div><pre class=\"rust item-decl\"><code>pub trait Join&lt;Separator&gt; {\n    type <a href=\"#associatedtype.Output\" class=\"associatedtype\">Output</a>;\n\n    // Required method\n    fn <a href=\"#tymethod.join\" class=\"fn\">join</a>(slice: <a class=\"primitive\" href=\"../primitive.reference.html\">&amp;Self</a>, sep: Separator) -&gt; Self::<a class=\"associatedtype\" href=\"trait.Join.html#associatedtype.Output\" title=\"type std::slice::Join::Output\">Output</a>;\n}</code></pre><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>slice_concat_trait</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/27747\">#27747</a>)</span></div></span><details class=\"toggle top-doc\" open=\"\"><summary class=\"hideme\"><span>Expand description</span></summary><div class=\"docblock\"><p>Helper trait for <a href=\"../primitive.slice.html#method.join\" title=\"method slice::join\"><code>[T]::join</code></a></p>\n</div></details><h2 id=\"required-associated-types\" class=\"section-header\">Required Associated Types<a href=\"#required-associated-types\" class=\"anchor\">Â§</a></h2><div class=\"methods\"><details class=\"toggle\" open=\"\"><summary><section id=\"associatedtype.Output\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/alloc/slice.rs.html#698\">source</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Output\" class=\"associatedtype\">Output</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>slice_concat_trait</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/27747\">#27747</a>)</span></div></span></summary><div class=\"docblock\"><p>The resulting type after concatenation</p>\n</div></details></div><h2 id=\"required-methods\" class=\"section-header\">Required Methods<a href=\"#required-methods\" class=\"anchor\">Â§</a></h2><div class=\"methods\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"tymethod.join\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/alloc/slice.rs.html#702\">source</a><h4 class=\"code-header\">fn <a href=\"#tymethod.join\" class=\"fn\">join</a>(slice: <a class=\"primitive\" href=\"../primitive.reference.html\">&amp;Self</a>, sep: Separator) -&gt; Self::<a class=\"associatedtype\" href=\"trait.Join.html#associatedtype.Output\" title=\"type std::slice::Join::Output\">Output</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>slice_concat_trait</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/27747\">#27747</a>)</span></div></span></summary><div class=\"docblock\"><p>Implementation of <a href=\"../primitive.slice.html#method.join\" title=\"method slice::join\"><code>[T]::join</code></a></p>\n</div></details></div><h2 id=\"object-safety\" class=\"section-header\">Object Safety<a href=\"#object-safety\" class=\"anchor\">Â§</a></h2><div class=\"object-safety-info\">This trait is <b>not</b> <a href=\"https://doc.rust-lang.org/1.80.0/reference/items/traits.html#object-safety\">object safe</a>.</div><h2 id=\"implementors\" class=\"section-header\">Implementors<a href=\"#implementors\" class=\"anchor\">Â§</a></h2><div id=\"implementors-list\"><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-Join%3C%26str%3E-for-%5BS%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/alloc/str.rs.html#73\">source</a><a href=\"#impl-Join%3C%26str%3E-for-%5BS%5D\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"trait.Join.html\" title=\"trait std::slice::Join\">Join</a>&lt;&amp;<a class=\"primitive\" href=\"../primitive.str.html\">str</a>&gt; for <a class=\"primitive\" href=\"../primitive.slice.html\">[S]</a><div class=\"where\">where\n    S: <a class=\"trait\" href=\"../borrow/trait.Borrow.html\" title=\"trait std::borrow::Borrow\">Borrow</a>&lt;<a class=\"primitive\" href=\"../primitive.str.html\">str</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output-1\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output-1\" class=\"anchor\">Â§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"../string/struct.String.html\" title=\"struct std::string::String\">String</a></h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-Join%3C%26OsStr%3E-for-%5BS%5D\" class=\"impl\"><a class=\"src rightside\" href=\"../../src/std/ffi/os_str.rs.html#1522-1536\">source</a><a href=\"#impl-Join%3C%26OsStr%3E-for-%5BS%5D\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;S: <a class=\"trait\" href=\"../borrow/trait.Borrow.html\" title=\"trait std::borrow::Borrow\">Borrow</a>&lt;<a class=\"struct\" href=\"../ffi/struct.OsStr.html\" title=\"struct std::ffi::OsStr\">OsStr</a>&gt;&gt; <a class=\"trait\" href=\"trait.Join.html\" title=\"trait std::slice::Join\">Join</a>&lt;&amp;<a class=\"struct\" href=\"../ffi/struct.OsStr.html\" title=\"struct std::ffi::OsStr\">OsStr</a>&gt; for <a class=\"primitive\" href=\"../primitive.slice.html\">[S]</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output-2\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output-2\" class=\"anchor\">Â§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"../ffi/struct.OsString.html\" title=\"struct std::ffi::OsString\">OsString</a></h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-Join%3C%26%5BT%5D%3E-for-%5BV%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/alloc/slice.rs.html#745\">source</a><a href=\"#impl-Join%3C%26%5BT%5D%3E-for-%5BV%5D\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, V&gt; <a class=\"trait\" href=\"trait.Join.html\" title=\"trait std::slice::Join\">Join</a>&lt;&amp;<a class=\"primitive\" href=\"../primitive.slice.html\">[T]</a>&gt; for <a class=\"primitive\" href=\"../primitive.slice.html\">[V]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"../clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a>,\n    V: <a class=\"trait\" href=\"../borrow/trait.Borrow.html\" title=\"trait std::borrow::Borrow\">Borrow</a>&lt;<a class=\"primitive\" href=\"../primitive.slice.html\">[T]</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output-3\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output-3\" class=\"anchor\">Â§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"../vec/struct.Vec.html\" title=\"struct std::vec::Vec\">Vec</a>&lt;T&gt;</h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-Join%3C%26T%3E-for-%5BV%5D\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/alloc/slice.rs.html#722\">source</a><a href=\"#impl-Join%3C%26T%3E-for-%5BV%5D\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, V&gt; <a class=\"trait\" href=\"trait.Join.html\" title=\"trait std::slice::Join\">Join</a>&lt;<a class=\"primitive\" href=\"../primitive.reference.html\">&amp;T</a>&gt; for <a class=\"primitive\" href=\"../primitive.slice.html\">[V]</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"../clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a>,\n    V: <a class=\"trait\" href=\"../borrow/trait.Borrow.html\" title=\"trait std::borrow::Borrow\">Borrow</a>&lt;<a class=\"primitive\" href=\"../primitive.slice.html\">[T]</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output-4\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output-4\" class=\"anchor\">Â§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"../vec/struct.Vec.html\" title=\"struct std::vec::Vec\">Vec</a>&lt;T&gt;</h4></section></div></details></div><script src=\"../../trait.impl/alloc/slice/trait.Join.js\" async=\"\"></script></section></div></main></body></html>",
	"crawlDate": "2024-07-28T05:12:47.501Z"
}