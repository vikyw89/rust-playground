{
	"title": "cargo metadata - The Cargo Book",
	"url": "https://doc.rust-lang.org/cargo/commands/cargo-metadata.html",
	"markdown": "# cargo metadata - The Cargo Book\n\n## [NAME](#name)\n\ncargo-metadata — Machine-readable metadata about the current package\n\n## [SYNOPSIS](#synopsis)\n\n`cargo metadata` \\[_options_\\]\n\n## [DESCRIPTION](#description)\n\nOutput JSON to stdout containing information about the workspace members and resolved dependencies of the current package.\n\nThe format of the output is subject to change in futures versions of Cargo. It is recommended to include the `--format-version` flag to future-proof your code to ensure the output is in the format you are expecting. For more on the expectations, see [“Compatibility”](#compatibility).\n\nSee the [cargo\\_metadata crate](https://crates.io/crates/cargo_metadata) for a Rust API for reading the metadata.\n\n## [OUTPUT FORMAT](#output-format)\n\n### [Compatibility](#compatibility)\n\nWithin the same output format version, the compatibility is maintained, except some scenarios. The following is a non-exhaustive list of changes that are not considersed as incompatible:\n\n-   **Adding new fields** — New fields will be added when needed. Reserving this helps Cargo evolve without bumping the format version too often.\n-   **Adding new values for enum-like fields** — Same as adding new fields. It keeps metadata evolving without stagnation.\n-   **Changing opaque representations** — The inner representations of some fields are implementation details. For example, fields related to “Source ID” are treated as opaque identifiers to differentiate packages or sources. Consumers shouldn’t rely on those representations unless specified.\n\n### [JSON format](#json-format)\n\nThe JSON output has the following format:\n\n```javascript\n{\n    /* Array of all packages in the workspace.\n       It also includes all feature-enabled dependencies unless --no-deps is used.\n    */\n    \"packages\": [\n        {\n            /* The name of the package. */\n            \"name\": \"my-package\",\n            /* The version of the package. */\n            \"version\": \"0.1.0\",\n            /* The Package ID for referring to the\n               package within the document and as the `--package` argument to many commands\n            */\n            \"id\": \"file:///path/to/my-package#0.1.0\",\n            /* The license value from the manifest, or null. */\n            \"license\": \"MIT/Apache-2.0\",\n            /* The license-file value from the manifest, or null. */\n            \"license_file\": \"LICENSE\",\n            /* The description value from the manifest, or null. */\n            \"description\": \"Package description.\",\n            /* The source ID of the package, an \"opaque\" identifier representing\n               where a package is retrieved from. See \"Compatibility\" above for\n               the stability guarantee.\n\n               This is null for path dependencies and workspace members.\n\n               For other dependencies, it is a string with the format:\n               - \"registry+URL\" for registry-based dependencies.\n                 Example: \"registry+https://github.com/rust-lang/crates.io-index\"\n               - \"git+URL\" for git-based dependencies.\n                 Example: \"git+https://github.com/rust-lang/cargo?rev=5e85ba14aaa20f8133863373404cb0af69eeef2c#5e85ba14aaa20f8133863373404cb0af69eeef2c\"\n               - \"sparse+URL\" for dependencies from a sparse registry\n                 Example: \"sparse+https://my-sparse-registry.org\"\n\n               The value after the `+` is not explicitly defined, and may change\n               between versions of Cargo and may not directly correlate to other\n               things, such as registry definitions in a config file. New source\n               kinds may be added in the future which will have different `+`\n               prefixed identifiers.\n            */\n            \"source\": null,\n            /* Array of dependencies declared in the package's manifest. */\n            \"dependencies\": [\n                {\n                    /* The name of the dependency. */\n                    \"name\": \"bitflags\",\n                    /* The source ID of the dependency. May be null, see\n                       description for the package source.\n                    */\n                    \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n                    /* The version requirement for the dependency.\n                       Dependencies without a version requirement have a value of \"*\".\n                    */\n                    \"req\": \"^1.0\",\n                    /* The dependency kind.\n                       \"dev\", \"build\", or null for a normal dependency.\n                    */\n                    \"kind\": null,\n                    /* If the dependency is renamed, this is the new name for\n                       the dependency as a string.  null if it is not renamed.\n                    */\n                    \"rename\": null,\n                    /* Boolean of whether or not this is an optional dependency. */\n                    \"optional\": false,\n                    /* Boolean of whether or not default features are enabled. */\n                    \"uses_default_features\": true,\n                    /* Array of features enabled. */\n                    \"features\": [],\n                    /* The target platform for the dependency.\n                       null if not a target dependency.\n                    */\n                    \"target\": \"cfg(windows)\",\n                    /* The file system path for a local path dependency.\n                       not present if not a path dependency.\n                    */\n                    \"path\": \"/path/to/dep\",\n                    /* A string of the URL of the registry this dependency is from.\n                       If not specified or null, the dependency is from the default\n                       registry (crates.io).\n                    */\n                    \"registry\": null\n                }\n            ],\n            /* Array of Cargo targets. */\n            \"targets\": [\n                {\n                    /* Array of target kinds.\n                       - lib targets list the `crate-type` values from the\n                         manifest such as \"lib\", \"rlib\", \"dylib\",\n                         \"proc-macro\", etc. (default [\"lib\"])\n                       - binary is [\"bin\"]\n                       - example is [\"example\"]\n                       - integration test is [\"test\"]\n                       - benchmark is [\"bench\"]\n                       - build script is [\"custom-build\"]\n                    */\n                    \"kind\": [\n                        \"bin\"\n                    ],\n                    /* Array of crate types.\n                       - lib and example libraries list the `crate-type` values\n                         from the manifest such as \"lib\", \"rlib\", \"dylib\",\n                         \"proc-macro\", etc. (default [\"lib\"])\n                       - all other target kinds are [\"bin\"]\n                    */\n                    \"crate_types\": [\n                        \"bin\"\n                    ],\n                    /* The name of the target.\n                       For lib targets, dashes will be replaced with underscores.\n                    */\n                    \"name\": \"my-package\",\n                    /* Absolute path to the root source file of the target. */\n                    \"src_path\": \"/path/to/my-package/src/main.rs\",\n                    /* The Rust edition of the target.\n                       Defaults to the package edition.\n                    */\n                    \"edition\": \"2018\",\n                    /* Array of required features.\n                       This property is not included if no required features are set.\n                    */\n                    \"required-features\": [\"feat1\"],\n                    /* Whether the target should be documented by `cargo doc`. */\n                    \"doc\": true,\n                    /* Whether or not this target has doc tests enabled, and\n                       the target is compatible with doc testing.\n                    */\n                    \"doctest\": false,\n                    /* Whether or not this target should be built and run with `--test`\n                    */\n                    \"test\": true\n                }\n            ],\n            /* Set of features defined for the package.\n               Each feature maps to an array of features or dependencies it\n               enables.\n            */\n            \"features\": {\n                \"default\": [\n                    \"feat1\"\n                ],\n                \"feat1\": [],\n                \"feat2\": []\n            },\n            /* Absolute path to this package's manifest. */\n            \"manifest_path\": \"/path/to/my-package/Cargo.toml\",\n            /* Package metadata.\n               This is null if no metadata is specified.\n            */\n            \"metadata\": {\n                \"docs\": {\n                    \"rs\": {\n                        \"all-features\": true\n                    }\n                }\n            },\n            /* List of registries to which this package may be published.\n               Publishing is unrestricted if null, and forbidden if an empty array. */\n            \"publish\": [\n                \"crates-io\"\n            ],\n            /* Array of authors from the manifest.\n               Empty array if no authors specified.\n            */\n            \"authors\": [\n                \"Jane Doe <user@example.com>\"\n            ],\n            /* Array of categories from the manifest. */\n            \"categories\": [\n                \"command-line-utilities\"\n            ],\n            /* Optional string that is the default binary picked by cargo run. */\n            \"default_run\": null,\n            /* Optional string that is the minimum supported rust version */\n            \"rust_version\": \"1.56\",\n            /* Array of keywords from the manifest. */\n            \"keywords\": [\n                \"cli\"\n            ],\n            /* The readme value from the manifest or null if not specified. */\n            \"readme\": \"README.md\",\n            /* The repository value from the manifest or null if not specified. */\n            \"repository\": \"https://github.com/rust-lang/cargo\",\n            /* The homepage value from the manifest or null if not specified. */\n            \"homepage\": \"https://rust-lang.org\",\n            /* The documentation value from the manifest or null if not specified. */\n            \"documentation\": \"https://doc.rust-lang.org/stable/std\",\n            /* The default edition of the package.\n               Note that individual targets may have different editions.\n            */\n            \"edition\": \"2018\",\n            /* Optional string that is the name of a native library the package\n               is linking to.\n            */\n            \"links\": null,\n        }\n    ],\n    /* Array of members of the workspace.\n       Each entry is the Package ID for the package.\n    */\n    \"workspace_members\": [\n        \"file:///path/to/my-package#0.1.0\",\n    ],\n    /* Array of default members of the workspace.\n       Each entry is the Package ID for the package.\n    */\n    \"workspace_default_members\": [\n        \"file:///path/to/my-package#0.1.0\",\n    ],\n    // The resolved dependency graph for the entire workspace. The enabled\n    // features are based on the enabled features for the \"current\" package.\n    // Inactivated optional dependencies are not listed.\n    //\n    // This is null if --no-deps is specified.\n    //\n    // By default, this includes all dependencies for all target platforms.\n    // The `--filter-platform` flag may be used to narrow to a specific\n    // target triple.\n    \"resolve\": {\n        /* Array of nodes within the dependency graph.\n           Each node is a package.\n        */\n        \"nodes\": [\n            {\n                /* The Package ID of this node. */\n                \"id\": \"file:///path/to/my-package#0.1.0\",\n                /* The dependencies of this package, an array of Package IDs. */\n                \"dependencies\": [\n                    \"https://github.com/rust-lang/crates.io-index#bitflags@1.0.4\"\n                ],\n                /* The dependencies of this package. This is an alternative to\n                   \"dependencies\" which contains additional information. In\n                   particular, this handles renamed dependencies.\n                */\n                \"deps\": [\n                    {\n                        /* The name of the dependency's library target.\n                           If this is a renamed dependency, this is the new\n                           name.\n                        */\n                        \"name\": \"bitflags\",\n                        /* The Package ID of the dependency. */\n                        \"pkg\": \"https://github.com/rust-lang/crates.io-index#bitflags@1.0.4\"\n                        /* Array of dependency kinds. Added in Cargo 1.40. */\n                        \"dep_kinds\": [\n                            {\n                                /* The dependency kind.\n                                   \"dev\", \"build\", or null for a normal dependency.\n                                */\n                                \"kind\": null,\n                                /* The target platform for the dependency.\n                                   null if not a target dependency.\n                                */\n                                \"target\": \"cfg(windows)\"\n                            }\n                        ]\n                    }\n                ],\n                /* Array of features enabled on this package. */\n                \"features\": [\n                    \"default\"\n                ]\n            }\n        ],\n        /* The root package of the workspace.\n           This is null if this is a virtual workspace. Otherwise it is\n           the Package ID of the root package.\n        */\n        \"root\": \"file:///path/to/my-package#0.1.0\",\n    },\n    /* The absolute path to the build directory where Cargo places its output. */\n    \"target_directory\": \"/path/to/my-package/target\",\n    /* The version of the schema for this metadata structure.\n       This will be changed if incompatible changes are ever made.\n    */\n    \"version\": 1,\n    /* The absolute path to the root of the workspace. */\n    \"workspace_root\": \"/path/to/my-package\"\n    /* Workspace metadata.\n       This is null if no metadata is specified. */\n    \"metadata\": {\n        \"docs\": {\n            \"rs\": {\n                \"all-features\": true\n            }\n        }\n    }\n}\n\n```\n\nNotes:\n\n-   For `\"id\"` field syntax, see [Package ID Specifications](../reference/pkgid-spec.html) in the reference.\n\n## [OPTIONS](#options)\n\n### [Output Options](#output-options)\n\n`--no-deps`\n\nOutput information only about the workspace members and don’t fetch dependencies.\n\n`--format-version` _version_\n\nSpecify the version of the output format to use. Currently `1` is the only possible value.\n\n`--filter-platform` _triple_\n\nThis filters the `resolve` output to only include dependencies for the given [target triple](about:blank/appendix/glossary.html#target). Without this flag, the resolve includes all targets.\n\nNote that the dependencies listed in the “packages” array still includes all dependencies. Each package definition is intended to be an unaltered reproduction of the information within `Cargo.toml`.\n\n### [Feature Selection](#feature-selection)\n\nThe feature flags allow you to control which features are enabled. When no feature options are given, the `default` feature is activated for every selected package.\n\nSee [the features documentation](about:blank/reference/features.html#command-line-feature-options) for more details.\n\n`-F` _features_\n\n`--features` _features_\n\nSpace or comma separated list of features to activate. Features of workspace members may be enabled with `package-name/feature-name` syntax. This flag may be specified multiple times, which enables all specified features.\n\n`--all-features`\n\nActivate all available features of all selected packages.\n\n`--no-default-features`\n\nDo not activate the `default` feature of the selected packages.\n\n### [Display Options](#display-options)\n\n`-v`\n\n`--verbose`\n\nUse verbose output. May be specified twice for “very verbose” output which includes extra output such as dependency warnings and build script output. May also be specified with the `term.verbose` [config value](../reference/config.html).\n\n`-q`\n\n`--quiet`\n\nDo not print cargo log messages. May also be specified with the `term.quiet` [config value](../reference/config.html).\n\n`--color` _when_\n\nControl when colored output is used. Valid values:\n\n-   `auto` (default): Automatically detect if color support is available on the terminal.\n-   `always`: Always display colors.\n-   `never`: Never display colors.\n\nMay also be specified with the `term.color` [config value](../reference/config.html).\n\n### [Manifest Options](#manifest-options)\n\n`--manifest-path` _path_\n\nPath to the `Cargo.toml` file. By default, Cargo searches for the `Cargo.toml` file in the current directory or any parent directory.\n\n`--locked`\n\nAsserts that the exact same dependencies and versions are used as when the existing `Cargo.lock` file was originally generated. Cargo will exit with an error when either of the following scenarios arises:\n\n-   The lock file is missing.\n-   Cargo attempted to change the lock file due to a different dependency resolution.\n\nIt may be used in environments where deterministic builds are desired, such as in CI pipelines.\n\n`--offline`\n\nPrevents Cargo from accessing the network for any reason. Without this flag, Cargo will stop with an error if it needs to access the network and the network is not available. With this flag, Cargo will attempt to proceed without the network if possible.\n\nBeware that this may result in different dependency resolution than online mode. Cargo will restrict itself to crates that are downloaded locally, even if there might be a newer version as indicated in the local copy of the index. See the [cargo-fetch(1)](cargo-fetch.html) command to download dependencies before going offline.\n\nMay also be specified with the `net.offline` [config value](../reference/config.html).\n\n`--frozen`\n\nEquivalent to specifying both `--locked` and `--offline`.\n\n### [Common Options](#common-options)\n\n`+`_toolchain_\n\nIf Cargo has been installed with rustup, and the first argument to `cargo` begins with `+`, it will be interpreted as a rustup toolchain name (such as `+stable` or `+nightly`). See the [rustup documentation](https://rust-lang.github.io/rustup/overrides.html) for more information about how toolchain overrides work.\n\n`--config` _KEY=VALUE_ or _PATH_\n\nOverrides a Cargo configuration value. The argument should be in TOML syntax of `KEY=VALUE`, or provided as a path to an extra configuration file. This flag may be specified multiple times. See the [command-line overrides section](about:blank/reference/config.html#command-line-overrides) for more information.\n\n`-C` _PATH_\n\nChanges the current working directory before executing any specified operations. This affects things like where cargo looks by default for the project manifest (`Cargo.toml`), as well as the directories searched for discovering `.cargo/config.toml`, for example. This option must appear before the command name, for example `cargo -C path/to/my-project build`.\n\nThis option is only available on the [nightly channel](https://doc.rust-lang.org/book/appendix-07-nightly-rust.html) and requires the `-Z unstable-options` flag to enable (see [#10098](https://github.com/rust-lang/cargo/issues/10098)).\n\n`-h`\n\n`--help`\n\nPrints help information.\n\n`-Z` _flag_\n\nUnstable (nightly-only) flags to Cargo. Run `cargo -Z help` for details.\n\n## [ENVIRONMENT](#environment)\n\nSee [the reference](../reference/environment-variables.html) for details on environment variables that Cargo reads.\n\n## [EXIT STATUS](#exit-status)\n\n-   `0`: Cargo succeeded.\n-   `101`: Cargo failed to complete.\n\n## [EXAMPLES](#examples)\n\n1.  Output JSON about the current package:\n    \n    ```\n    cargo metadata --format-version=1\n    \n    ```\n    \n\n## [SEE ALSO](#see-also)\n\n[cargo(1)](cargo.html), [cargo-pkgid(1)](cargo-pkgid.html), [Package ID Specifications](../reference/pkgid-spec.html), [JSON messages](about:blank/reference/external-tools.html#json-messages)",
	"html": "<!DOCTYPE html><html lang=\"en\" class=\"light\" dir=\"ltr\"><head>\n        <!-- Book generated using mdBook -->\n        <meta charset=\"UTF-8\">\n        <title>cargo metadata - The Cargo Book</title>\n\n\n        <!-- Custom HTML head -->\n        <style>\n            dd {\n                margin-bottom: 1em;\n            }\n        </style>\n\n        <meta name=\"description\" content=\"\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n        <meta name=\"theme-color\" content=\"rgb(255, 255, 255)\">\n\n        <link rel=\"shortcut icon\" href=\"../favicon.png\">\n        <link rel=\"stylesheet\" href=\"../css/variables.css\">\n        <link rel=\"stylesheet\" href=\"../css/general.css\">\n        <link rel=\"stylesheet\" href=\"../css/chrome.css\">\n        <link rel=\"stylesheet\" href=\"../css/print.css\" media=\"print\">\n\n        <!-- Fonts -->\n        <link rel=\"stylesheet\" href=\"../FontAwesome/css/font-awesome.css\">\n        <link rel=\"stylesheet\" href=\"../fonts/fonts.css\">\n\n        <!-- Highlight.js Stylesheets -->\n        <link rel=\"stylesheet\" href=\"../highlight.css\">\n        <link rel=\"stylesheet\" href=\"../tomorrow-night.css\" disabled=\"\">\n        <link rel=\"stylesheet\" href=\"../ayu-highlight.css\" disabled=\"\">\n\n        <!-- Custom theme stylesheets -->\n\n    </head>\n    <body class=\"js sidebar-visible\">\n    <div id=\"body-container\">\n        <!-- Provide site root to javascript -->\n        <script>\n            var path_to_root = \"../\";\n            var default_theme = window.matchMedia(\"(prefers-color-scheme: dark)\").matches ? \"navy\" : \"light\";\n        </script>\n\n        <!-- Work around some values being stored in localStorage wrapped in quotes -->\n        <script>\n            try {\n                var theme = localStorage.getItem('mdbook-theme');\n                var sidebar = localStorage.getItem('mdbook-sidebar');\n\n                if (theme.startsWith('\"') && theme.endsWith('\"')) {\n                    localStorage.setItem('mdbook-theme', theme.slice(1, theme.length - 1));\n                }\n\n                if (sidebar.startsWith('\"') && sidebar.endsWith('\"')) {\n                    localStorage.setItem('mdbook-sidebar', sidebar.slice(1, sidebar.length - 1));\n                }\n            } catch (e) { }\n        </script>\n\n        <!-- Set the theme before any content is loaded, prevents flash -->\n        <script>\n            var theme;\n            try { theme = localStorage.getItem('mdbook-theme'); } catch(e) { }\n            if (theme === null || theme === undefined) { theme = default_theme; }\n            var html = document.querySelector('html');\n            html.classList.remove('light')\n            html.classList.add(theme);\n            var body = document.querySelector('body');\n            body.classList.remove('no-js')\n            body.classList.add('js');\n        </script>\n\n        <input type=\"checkbox\" id=\"sidebar-toggle-anchor\" class=\"hidden\">\n\n        <!-- Hide / unhide sidebar before it is displayed -->\n        <script>\n            var body = document.querySelector('body');\n            var sidebar = null;\n            var sidebar_toggle = document.getElementById(\"sidebar-toggle-anchor\");\n            if (document.body.clientWidth >= 1080) {\n                try { sidebar = localStorage.getItem('mdbook-sidebar'); } catch(e) { }\n                sidebar = sidebar || 'visible';\n            } else {\n                sidebar = 'hidden';\n            }\n            sidebar_toggle.checked = sidebar === 'visible';\n            body.classList.remove('sidebar-visible');\n            body.classList.add(\"sidebar-\" + sidebar);\n        </script>\n\n        <nav id=\"sidebar\" class=\"sidebar\" aria-label=\"Table of contents\" aria-hidden=\"false\">\n            <div class=\"sidebar-scrollbox\">\n                <ol class=\"chapter\"><li class=\"chapter-item expanded affix \"><a href=\"../index.html\" tabindex=\"0\">Introduction</a></li><li class=\"chapter-item expanded \"><a href=\"../getting-started/index.html\" tabindex=\"0\"><strong aria-hidden=\"true\">1.</strong> Getting Started</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../getting-started/installation.html\" tabindex=\"0\"><strong aria-hidden=\"true\">1.1.</strong> Installation</a></li><li class=\"chapter-item expanded \"><a href=\"../getting-started/first-steps.html\" tabindex=\"0\"><strong aria-hidden=\"true\">1.2.</strong> First Steps with Cargo</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../guide/index.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.</strong> Cargo Guide</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../guide/why-cargo-exists.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.1.</strong> Why Cargo Exists</a></li><li class=\"chapter-item expanded \"><a href=\"../guide/creating-a-new-project.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.2.</strong> Creating a New Package</a></li><li class=\"chapter-item expanded \"><a href=\"../guide/working-on-an-existing-project.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.3.</strong> Working on an Existing Package</a></li><li class=\"chapter-item expanded \"><a href=\"../guide/dependencies.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.4.</strong> Dependencies</a></li><li class=\"chapter-item expanded \"><a href=\"../guide/project-layout.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.5.</strong> Package Layout</a></li><li class=\"chapter-item expanded \"><a href=\"../guide/cargo-toml-vs-cargo-lock.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.6.</strong> Cargo.toml vs Cargo.lock</a></li><li class=\"chapter-item expanded \"><a href=\"../guide/tests.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.7.</strong> Tests</a></li><li class=\"chapter-item expanded \"><a href=\"../guide/continuous-integration.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.8.</strong> Continuous Integration</a></li><li class=\"chapter-item expanded \"><a href=\"../guide/cargo-home.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.9.</strong> Cargo Home</a></li><li class=\"chapter-item expanded \"><a href=\"../guide/build-cache.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.10.</strong> Build Cache</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../reference/index.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.</strong> Cargo Reference</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../reference/specifying-dependencies.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.1.</strong> Specifying Dependencies</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../reference/overriding-dependencies.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.1.1.</strong> Overriding Dependencies</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../reference/manifest.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.2.</strong> The Manifest Format</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../reference/cargo-targets.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.2.1.</strong> Cargo Targets</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../reference/workspaces.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.3.</strong> Workspaces</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/features.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.4.</strong> Features</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../reference/features-examples.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.4.1.</strong> Features Examples</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../reference/profiles.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.5.</strong> Profiles</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/config.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.6.</strong> Configuration</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/environment-variables.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.7.</strong> Environment Variables</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/build-scripts.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.8.</strong> Build Scripts</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../reference/build-script-examples.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.8.1.</strong> Build Script Examples</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../reference/publishing.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.9.</strong> Publishing on crates.io</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/pkgid-spec.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.10.</strong> Package ID Specifications</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/source-replacement.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.11.</strong> Source Replacement</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/external-tools.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.12.</strong> External Tools</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/registries.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.13.</strong> Registries</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../reference/registry-authentication.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.13.1.</strong> Registry Authentication</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../reference/credential-provider-protocol.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.13.1.1.</strong> Credential Provider Protocol</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../reference/running-a-registry.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.13.2.</strong> Running a Registry</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../reference/registry-index.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.13.2.1.</strong> Registry Index</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/registry-web-api.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.13.2.2.</strong> Registry Web API</a></li></ol></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../reference/resolver.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.14.</strong> Dependency Resolution</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/semver.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.15.</strong> SemVer Compatibility</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/future-incompat-report.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.16.</strong> Future incompat report</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/timings.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.17.</strong> Reporting build timings</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/unstable.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.18.</strong> Unstable Features</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../commands/index.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.</strong> Cargo Commands</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../commands/general-commands.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.1.</strong> General Commands</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../commands/cargo.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.1.1.</strong> cargo</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-help.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.1.2.</strong> cargo help</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-version.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.1.3.</strong> cargo version</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../commands/build-commands.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.</strong> Build Commands</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-bench.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.1.</strong> cargo bench</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-build.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.2.</strong> cargo build</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-check.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.3.</strong> cargo check</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-clean.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.4.</strong> cargo clean</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-doc.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.5.</strong> cargo doc</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-fetch.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.6.</strong> cargo fetch</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-fix.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.7.</strong> cargo fix</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-run.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.8.</strong> cargo run</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-rustc.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.9.</strong> cargo rustc</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-rustdoc.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.10.</strong> cargo rustdoc</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-test.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.11.</strong> cargo test</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-report.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.12.</strong> cargo report</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../commands/manifest-commands.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.3.</strong> Manifest Commands</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-add.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.3.1.</strong> cargo add</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-generate-lockfile.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.3.2.</strong> cargo generate-lockfile</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-locate-project.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.3.3.</strong> cargo locate-project</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-metadata.html\" class=\"active\" tabindex=\"0\"><strong aria-hidden=\"true\">4.3.4.</strong> cargo metadata</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-pkgid.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.3.5.</strong> cargo pkgid</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-remove.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.3.6.</strong> cargo remove</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-tree.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.3.7.</strong> cargo tree</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-update.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.3.8.</strong> cargo update</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-vendor.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.3.9.</strong> cargo vendor</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-verify-project.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.3.10.</strong> cargo verify-project</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../commands/package-commands.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.4.</strong> Package Commands</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-init.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.4.1.</strong> cargo init</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-install.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.4.2.</strong> cargo install</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-new.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.4.3.</strong> cargo new</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-search.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.4.4.</strong> cargo search</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-uninstall.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.4.5.</strong> cargo uninstall</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../commands/publishing-commands.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.5.</strong> Publishing Commands</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-login.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.5.1.</strong> cargo login</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-logout.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.5.2.</strong> cargo logout</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-owner.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.5.3.</strong> cargo owner</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-package.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.5.4.</strong> cargo package</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-publish.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.5.5.</strong> cargo publish</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-yank.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.5.6.</strong> cargo yank</a></li></ol></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../faq.html\" tabindex=\"0\"><strong aria-hidden=\"true\">5.</strong> FAQ</a></li><li class=\"chapter-item expanded \"><a href=\"../appendix/glossary.html\" tabindex=\"0\"><strong aria-hidden=\"true\">6.</strong> Appendix: Glossary</a></li><li class=\"chapter-item expanded \"><a href=\"../appendix/git-authentication.html\" tabindex=\"0\"><strong aria-hidden=\"true\">7.</strong> Appendix: Git Authentication</a></li></ol>\n            </div>\n            <div id=\"sidebar-resize-handle\" class=\"sidebar-resize-handle\">\n                <div class=\"sidebar-resize-indicator\"></div>\n            </div>\n        </nav>\n\n        <!-- Track and set sidebar scroll position -->\n        <script>\n            var sidebarScrollbox = document.querySelector('#sidebar .sidebar-scrollbox');\n            sidebarScrollbox.addEventListener('click', function(e) {\n                if (e.target.tagName === 'A') {\n                    sessionStorage.setItem('sidebar-scroll', sidebarScrollbox.scrollTop);\n                }\n            }, { passive: true });\n            var sidebarScrollTop = sessionStorage.getItem('sidebar-scroll');\n            sessionStorage.removeItem('sidebar-scroll');\n            if (sidebarScrollTop) {\n                // preserve sidebar scroll position when navigating via links within sidebar\n                sidebarScrollbox.scrollTop = sidebarScrollTop;\n            } else {\n                // scroll sidebar to current active section when navigating via \"next/previous chapter\" buttons\n                var activeSection = document.querySelector('#sidebar .active');\n                if (activeSection) {\n                    activeSection.scrollIntoView({ block: 'center' });\n                }\n            }\n        </script>\n\n        <div id=\"page-wrapper\" class=\"page-wrapper\">\n\n            <div class=\"page\">\n                                <div id=\"menu-bar-hover-placeholder\"></div>\n                <div id=\"menu-bar\" class=\"menu-bar\" style=\"top: 0px;\">\n                    <div class=\"left-buttons\">\n                        <label id=\"sidebar-toggle\" class=\"icon-button\" for=\"sidebar-toggle-anchor\" title=\"Toggle Table of Contents\" aria-label=\"Toggle Table of Contents\" aria-controls=\"sidebar\" aria-expanded=\"true\">\n                            <i class=\"fa fa-bars\"></i>\n                        </label>\n                        <button id=\"theme-toggle\" class=\"icon-button\" type=\"button\" title=\"Change theme\" aria-label=\"Change theme\" aria-haspopup=\"true\" aria-expanded=\"false\" aria-controls=\"theme-list\">\n                            <i class=\"fa fa-paint-brush\"></i>\n                        </button>\n                        <ul id=\"theme-list\" class=\"theme-popup\" aria-label=\"Themes\" role=\"menu\">\n                            <li role=\"none\"><button role=\"menuitem\" class=\"theme theme-selected\" id=\"light\">Light</button></li>\n                            <li role=\"none\"><button role=\"menuitem\" class=\"theme\" id=\"rust\">Rust</button></li>\n                            <li role=\"none\"><button role=\"menuitem\" class=\"theme\" id=\"coal\">Coal</button></li>\n                            <li role=\"none\"><button role=\"menuitem\" class=\"theme\" id=\"navy\">Navy</button></li>\n                            <li role=\"none\"><button role=\"menuitem\" class=\"theme\" id=\"ayu\">Ayu</button></li>\n                        </ul>\n                        <button id=\"search-toggle\" class=\"icon-button\" type=\"button\" title=\"Search. (Shortkey: s)\" aria-label=\"Toggle Searchbar\" aria-expanded=\"false\" aria-keyshortcuts=\"S\" aria-controls=\"searchbar\">\n                            <i class=\"fa fa-search\"></i>\n                        </button>\n                    </div>\n\n                    <h1 class=\"menu-title\">The Cargo Book</h1>\n\n                    <div class=\"right-buttons\">\n                        <a href=\"../print.html\" title=\"Print this book\" aria-label=\"Print this book\">\n                            <i id=\"print-button\" class=\"fa fa-print\"></i>\n                        </a>\n                        <a href=\"https://github.com/rust-lang/cargo/tree/master/src/doc/src\" title=\"Git repository\" aria-label=\"Git repository\">\n                            <i id=\"git-repository-button\" class=\"fa fa-github\"></i>\n                        </a>\n                        <a href=\"https://github.com/rust-lang/cargo/edit/master/src/doc/src/commands/cargo-metadata.md\" title=\"Suggest an edit\" aria-label=\"Suggest an edit\">\n                            <i id=\"git-edit-button\" class=\"fa fa-edit\"></i>\n                        </a>\n\n                    </div>\n                </div>\n\n                <div id=\"search-wrapper\" class=\"hidden\">\n                    <form id=\"searchbar-outer\" class=\"searchbar-outer\">\n                        <input type=\"search\" id=\"searchbar\" name=\"searchbar\" placeholder=\"Search this book ...\" aria-controls=\"searchresults-outer\" aria-describedby=\"searchresults-header\">\n                    </form>\n                    <div id=\"searchresults-outer\" class=\"searchresults-outer hidden\">\n                        <div id=\"searchresults-header\" class=\"searchresults-header\"></div>\n                        <ul id=\"searchresults\">\n                        </ul>\n                    </div>\n                </div>\n\n                <!-- Apply ARIA attributes after the sidebar and the sidebar toggle button are added to the DOM -->\n                <script>\n                    document.getElementById('sidebar-toggle').setAttribute('aria-expanded', sidebar === 'visible');\n                    document.getElementById('sidebar').setAttribute('aria-hidden', sidebar !== 'visible');\n                    Array.from(document.querySelectorAll('#sidebar a')).forEach(function(link) {\n                        link.setAttribute('tabIndex', sidebar === 'visible' ? 0 : -1);\n                    });\n                </script>\n\n                <div id=\"content\" class=\"content\">\n                    <main>\n                        <h1 id=\"cargo-metadata1\"><a class=\"header\" href=\"#cargo-metadata1\">cargo-metadata(1)</a></h1>\n<h2 id=\"name\"><a class=\"header\" href=\"#name\">NAME</a></h2>\n<p>cargo-metadata — Machine-readable metadata about the current package</p>\n<h2 id=\"synopsis\"><a class=\"header\" href=\"#synopsis\">SYNOPSIS</a></h2>\n<p><code class=\"hljs\">cargo metadata</code> [<em>options</em>]</p>\n<h2 id=\"description\"><a class=\"header\" href=\"#description\">DESCRIPTION</a></h2>\n<p>Output JSON to stdout containing information about the workspace members and\nresolved dependencies of the current package.</p>\n<p>The format of the output is subject to change in futures versions of Cargo. It\nis recommended to include the <code class=\"hljs\">--format-version</code> flag to future-proof your code\nto ensure the output is in the format you are expecting. For more on the\nexpectations, see <a href=\"#compatibility\">“Compatibility”</a>.</p>\n<p>See the <a href=\"https://crates.io/crates/cargo_metadata\">cargo_metadata crate</a>\nfor a Rust API for reading the metadata.</p>\n<h2 id=\"output-format\"><a class=\"header\" href=\"#output-format\">OUTPUT FORMAT</a></h2>\n<h3 id=\"compatibility\"><a class=\"header\" href=\"#compatibility\">Compatibility</a></h3>\n<p>Within the same output format version, the compatibility is maintained, except\nsome scenarios. The following is a non-exhaustive list of changes that are not\nconsidersed as incompatible:</p>\n<ul>\n<li><strong>Adding new fields</strong> — New fields will be added when needed. Reserving this\nhelps Cargo evolve without bumping the format version too often.</li>\n<li><strong>Adding new values for enum-like fields</strong> — Same as adding new fields. It\nkeeps metadata evolving without stagnation.</li>\n<li><strong>Changing opaque representations</strong> — The inner representations of some\nfields are implementation details. For example, fields related to\n“Source ID” are treated as opaque identifiers to differentiate packages or\nsources. Consumers shouldn’t rely on those representations unless specified.</li>\n</ul>\n<h3 id=\"json-format\"><a class=\"header\" href=\"#json-format\">JSON format</a></h3>\n<p>The JSON output has the following format:</p>\n<pre><div class=\"buttons\"><button class=\"fa fa-copy clip-button\" title=\"Copy to clipboard\" aria-label=\"Copy to clipboard\"><i class=\"tooltiptext\"></i></button></div><code class=\"language-javascript hljs\">{\n    <span class=\"hljs-comment\">/* Array of all packages in the workspace.\n       It also includes all feature-enabled dependencies unless --no-deps is used.\n    */</span>\n    <span class=\"hljs-string\">\"packages\"</span>: [\n        {\n            <span class=\"hljs-comment\">/* The name of the package. */</span>\n            <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"my-package\"</span>,\n            <span class=\"hljs-comment\">/* The version of the package. */</span>\n            <span class=\"hljs-string\">\"version\"</span>: <span class=\"hljs-string\">\"0.1.0\"</span>,\n            <span class=\"hljs-comment\">/* The Package ID for referring to the\n               package within the document and as the `--package` argument to many commands\n            */</span>\n            <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-string\">\"file:///path/to/my-package#0.1.0\"</span>,\n            <span class=\"hljs-comment\">/* The license value from the manifest, or null. */</span>\n            <span class=\"hljs-string\">\"license\"</span>: <span class=\"hljs-string\">\"MIT/Apache-2.0\"</span>,\n            <span class=\"hljs-comment\">/* The license-file value from the manifest, or null. */</span>\n            <span class=\"hljs-string\">\"license_file\"</span>: <span class=\"hljs-string\">\"LICENSE\"</span>,\n            <span class=\"hljs-comment\">/* The description value from the manifest, or null. */</span>\n            <span class=\"hljs-string\">\"description\"</span>: <span class=\"hljs-string\">\"Package description.\"</span>,\n            <span class=\"hljs-comment\">/* The source ID of the package, an \"opaque\" identifier representing\n               where a package is retrieved from. See \"Compatibility\" above for\n               the stability guarantee.\n\n               This is null for path dependencies and workspace members.\n\n               For other dependencies, it is a string with the format:\n               - \"registry+URL\" for registry-based dependencies.\n                 Example: \"registry+https://github.com/rust-lang/crates.io-index\"\n               - \"git+URL\" for git-based dependencies.\n                 Example: \"git+https://github.com/rust-lang/cargo?rev=5e85ba14aaa20f8133863373404cb0af69eeef2c#5e85ba14aaa20f8133863373404cb0af69eeef2c\"\n               - \"sparse+URL\" for dependencies from a sparse registry\n                 Example: \"sparse+https://my-sparse-registry.org\"\n\n               The value after the `+` is not explicitly defined, and may change\n               between versions of Cargo and may not directly correlate to other\n               things, such as registry definitions in a config file. New source\n               kinds may be added in the future which will have different `+`\n               prefixed identifiers.\n            */</span>\n            <span class=\"hljs-string\">\"source\"</span>: <span class=\"hljs-literal\">null</span>,\n            <span class=\"hljs-comment\">/* Array of dependencies declared in the package's manifest. */</span>\n            <span class=\"hljs-string\">\"dependencies\"</span>: [\n                {\n                    <span class=\"hljs-comment\">/* The name of the dependency. */</span>\n                    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"bitflags\"</span>,\n                    <span class=\"hljs-comment\">/* The source ID of the dependency. May be null, see\n                       description for the package source.\n                    */</span>\n                    <span class=\"hljs-string\">\"source\"</span>: <span class=\"hljs-string\">\"registry+https://github.com/rust-lang/crates.io-index\"</span>,\n                    <span class=\"hljs-comment\">/* The version requirement for the dependency.\n                       Dependencies without a version requirement have a value of \"*\".\n                    */</span>\n                    <span class=\"hljs-string\">\"req\"</span>: <span class=\"hljs-string\">\"^1.0\"</span>,\n                    <span class=\"hljs-comment\">/* The dependency kind.\n                       \"dev\", \"build\", or null for a normal dependency.\n                    */</span>\n                    <span class=\"hljs-string\">\"kind\"</span>: <span class=\"hljs-literal\">null</span>,\n                    <span class=\"hljs-comment\">/* If the dependency is renamed, this is the new name for\n                       the dependency as a string.  null if it is not renamed.\n                    */</span>\n                    <span class=\"hljs-string\">\"rename\"</span>: <span class=\"hljs-literal\">null</span>,\n                    <span class=\"hljs-comment\">/* Boolean of whether or not this is an optional dependency. */</span>\n                    <span class=\"hljs-string\">\"optional\"</span>: <span class=\"hljs-literal\">false</span>,\n                    <span class=\"hljs-comment\">/* Boolean of whether or not default features are enabled. */</span>\n                    <span class=\"hljs-string\">\"uses_default_features\"</span>: <span class=\"hljs-literal\">true</span>,\n                    <span class=\"hljs-comment\">/* Array of features enabled. */</span>\n                    <span class=\"hljs-string\">\"features\"</span>: [],\n                    <span class=\"hljs-comment\">/* The target platform for the dependency.\n                       null if not a target dependency.\n                    */</span>\n                    <span class=\"hljs-string\">\"target\"</span>: <span class=\"hljs-string\">\"cfg(windows)\"</span>,\n                    <span class=\"hljs-comment\">/* The file system path for a local path dependency.\n                       not present if not a path dependency.\n                    */</span>\n                    <span class=\"hljs-string\">\"path\"</span>: <span class=\"hljs-string\">\"/path/to/dep\"</span>,\n                    <span class=\"hljs-comment\">/* A string of the URL of the registry this dependency is from.\n                       If not specified or null, the dependency is from the default\n                       registry (crates.io).\n                    */</span>\n                    <span class=\"hljs-string\">\"registry\"</span>: <span class=\"hljs-literal\">null</span>\n                }\n            ],\n            <span class=\"hljs-comment\">/* Array of Cargo targets. */</span>\n            <span class=\"hljs-string\">\"targets\"</span>: [\n                {\n                    <span class=\"hljs-comment\">/* Array of target kinds.\n                       - lib targets list the `crate-type` values from the\n                         manifest such as \"lib\", \"rlib\", \"dylib\",\n                         \"proc-macro\", etc. (default [\"lib\"])\n                       - binary is [\"bin\"]\n                       - example is [\"example\"]\n                       - integration test is [\"test\"]\n                       - benchmark is [\"bench\"]\n                       - build script is [\"custom-build\"]\n                    */</span>\n                    <span class=\"hljs-string\">\"kind\"</span>: [\n                        <span class=\"hljs-string\">\"bin\"</span>\n                    ],\n                    <span class=\"hljs-comment\">/* Array of crate types.\n                       - lib and example libraries list the `crate-type` values\n                         from the manifest such as \"lib\", \"rlib\", \"dylib\",\n                         \"proc-macro\", etc. (default [\"lib\"])\n                       - all other target kinds are [\"bin\"]\n                    */</span>\n                    <span class=\"hljs-string\">\"crate_types\"</span>: [\n                        <span class=\"hljs-string\">\"bin\"</span>\n                    ],\n                    <span class=\"hljs-comment\">/* The name of the target.\n                       For lib targets, dashes will be replaced with underscores.\n                    */</span>\n                    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"my-package\"</span>,\n                    <span class=\"hljs-comment\">/* Absolute path to the root source file of the target. */</span>\n                    <span class=\"hljs-string\">\"src_path\"</span>: <span class=\"hljs-string\">\"/path/to/my-package/src/main.rs\"</span>,\n                    <span class=\"hljs-comment\">/* The Rust edition of the target.\n                       Defaults to the package edition.\n                    */</span>\n                    <span class=\"hljs-string\">\"edition\"</span>: <span class=\"hljs-string\">\"2018\"</span>,\n                    <span class=\"hljs-comment\">/* Array of required features.\n                       This property is not included if no required features are set.\n                    */</span>\n                    <span class=\"hljs-string\">\"required-features\"</span>: [<span class=\"hljs-string\">\"feat1\"</span>],\n                    <span class=\"hljs-comment\">/* Whether the target should be documented by `cargo doc`. */</span>\n                    <span class=\"hljs-string\">\"doc\"</span>: <span class=\"hljs-literal\">true</span>,\n                    <span class=\"hljs-comment\">/* Whether or not this target has doc tests enabled, and\n                       the target is compatible with doc testing.\n                    */</span>\n                    <span class=\"hljs-string\">\"doctest\"</span>: <span class=\"hljs-literal\">false</span>,\n                    <span class=\"hljs-comment\">/* Whether or not this target should be built and run with `--test`\n                    */</span>\n                    <span class=\"hljs-string\">\"test\"</span>: <span class=\"hljs-literal\">true</span>\n                }\n            ],\n            <span class=\"hljs-comment\">/* Set of features defined for the package.\n               Each feature maps to an array of features or dependencies it\n               enables.\n            */</span>\n            <span class=\"hljs-string\">\"features\"</span>: {\n                <span class=\"hljs-string\">\"default\"</span>: [\n                    <span class=\"hljs-string\">\"feat1\"</span>\n                ],\n                <span class=\"hljs-string\">\"feat1\"</span>: [],\n                <span class=\"hljs-string\">\"feat2\"</span>: []\n            },\n            <span class=\"hljs-comment\">/* Absolute path to this package's manifest. */</span>\n            <span class=\"hljs-string\">\"manifest_path\"</span>: <span class=\"hljs-string\">\"/path/to/my-package/Cargo.toml\"</span>,\n            <span class=\"hljs-comment\">/* Package metadata.\n               This is null if no metadata is specified.\n            */</span>\n            <span class=\"hljs-string\">\"metadata\"</span>: {\n                <span class=\"hljs-string\">\"docs\"</span>: {\n                    <span class=\"hljs-string\">\"rs\"</span>: {\n                        <span class=\"hljs-string\">\"all-features\"</span>: <span class=\"hljs-literal\">true</span>\n                    }\n                }\n            },\n            <span class=\"hljs-comment\">/* List of registries to which this package may be published.\n               Publishing is unrestricted if null, and forbidden if an empty array. */</span>\n            <span class=\"hljs-string\">\"publish\"</span>: [\n                <span class=\"hljs-string\">\"crates-io\"</span>\n            ],\n            <span class=\"hljs-comment\">/* Array of authors from the manifest.\n               Empty array if no authors specified.\n            */</span>\n            <span class=\"hljs-string\">\"authors\"</span>: [\n                <span class=\"hljs-string\">\"Jane Doe &lt;user@example.com&gt;\"</span>\n            ],\n            <span class=\"hljs-comment\">/* Array of categories from the manifest. */</span>\n            <span class=\"hljs-string\">\"categories\"</span>: [\n                <span class=\"hljs-string\">\"command-line-utilities\"</span>\n            ],\n            <span class=\"hljs-comment\">/* Optional string that is the default binary picked by cargo run. */</span>\n            <span class=\"hljs-string\">\"default_run\"</span>: <span class=\"hljs-literal\">null</span>,\n            <span class=\"hljs-comment\">/* Optional string that is the minimum supported rust version */</span>\n            <span class=\"hljs-string\">\"rust_version\"</span>: <span class=\"hljs-string\">\"1.56\"</span>,\n            <span class=\"hljs-comment\">/* Array of keywords from the manifest. */</span>\n            <span class=\"hljs-string\">\"keywords\"</span>: [\n                <span class=\"hljs-string\">\"cli\"</span>\n            ],\n            <span class=\"hljs-comment\">/* The readme value from the manifest or null if not specified. */</span>\n            <span class=\"hljs-string\">\"readme\"</span>: <span class=\"hljs-string\">\"README.md\"</span>,\n            <span class=\"hljs-comment\">/* The repository value from the manifest or null if not specified. */</span>\n            <span class=\"hljs-string\">\"repository\"</span>: <span class=\"hljs-string\">\"https://github.com/rust-lang/cargo\"</span>,\n            <span class=\"hljs-comment\">/* The homepage value from the manifest or null if not specified. */</span>\n            <span class=\"hljs-string\">\"homepage\"</span>: <span class=\"hljs-string\">\"https://rust-lang.org\"</span>,\n            <span class=\"hljs-comment\">/* The documentation value from the manifest or null if not specified. */</span>\n            <span class=\"hljs-string\">\"documentation\"</span>: <span class=\"hljs-string\">\"https://doc.rust-lang.org/stable/std\"</span>,\n            <span class=\"hljs-comment\">/* The default edition of the package.\n               Note that individual targets may have different editions.\n            */</span>\n            <span class=\"hljs-string\">\"edition\"</span>: <span class=\"hljs-string\">\"2018\"</span>,\n            <span class=\"hljs-comment\">/* Optional string that is the name of a native library the package\n               is linking to.\n            */</span>\n            <span class=\"hljs-string\">\"links\"</span>: <span class=\"hljs-literal\">null</span>,\n        }\n    ],\n    <span class=\"hljs-comment\">/* Array of members of the workspace.\n       Each entry is the Package ID for the package.\n    */</span>\n    <span class=\"hljs-string\">\"workspace_members\"</span>: [\n        <span class=\"hljs-string\">\"file:///path/to/my-package#0.1.0\"</span>,\n    ],\n    <span class=\"hljs-comment\">/* Array of default members of the workspace.\n       Each entry is the Package ID for the package.\n    */</span>\n    <span class=\"hljs-string\">\"workspace_default_members\"</span>: [\n        <span class=\"hljs-string\">\"file:///path/to/my-package#0.1.0\"</span>,\n    ],\n    <span class=\"hljs-comment\">// The resolved dependency graph for the entire workspace. The enabled</span>\n    <span class=\"hljs-comment\">// features are based on the enabled features for the \"current\" package.</span>\n    <span class=\"hljs-comment\">// Inactivated optional dependencies are not listed.</span>\n    <span class=\"hljs-comment\">//</span>\n    <span class=\"hljs-comment\">// This is null if --no-deps is specified.</span>\n    <span class=\"hljs-comment\">//</span>\n    <span class=\"hljs-comment\">// By default, this includes all dependencies for all target platforms.</span>\n    <span class=\"hljs-comment\">// The `--filter-platform` flag may be used to narrow to a specific</span>\n    <span class=\"hljs-comment\">// target triple.</span>\n    <span class=\"hljs-string\">\"resolve\"</span>: {\n        <span class=\"hljs-comment\">/* Array of nodes within the dependency graph.\n           Each node is a package.\n        */</span>\n        <span class=\"hljs-string\">\"nodes\"</span>: [\n            {\n                <span class=\"hljs-comment\">/* The Package ID of this node. */</span>\n                <span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-string\">\"file:///path/to/my-package#0.1.0\"</span>,\n                <span class=\"hljs-comment\">/* The dependencies of this package, an array of Package IDs. */</span>\n                <span class=\"hljs-string\">\"dependencies\"</span>: [\n                    <span class=\"hljs-string\">\"https://github.com/rust-lang/crates.io-index#bitflags@1.0.4\"</span>\n                ],\n                <span class=\"hljs-comment\">/* The dependencies of this package. This is an alternative to\n                   \"dependencies\" which contains additional information. In\n                   particular, this handles renamed dependencies.\n                */</span>\n                <span class=\"hljs-string\">\"deps\"</span>: [\n                    {\n                        <span class=\"hljs-comment\">/* The name of the dependency's library target.\n                           If this is a renamed dependency, this is the new\n                           name.\n                        */</span>\n                        <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"bitflags\"</span>,\n                        <span class=\"hljs-comment\">/* The Package ID of the dependency. */</span>\n                        <span class=\"hljs-string\">\"pkg\"</span>: <span class=\"hljs-string\">\"https://github.com/rust-lang/crates.io-index#bitflags@1.0.4\"</span>\n                        <span class=\"hljs-comment\">/* Array of dependency kinds. Added in Cargo 1.40. */</span>\n                        <span class=\"hljs-string\">\"dep_kinds\"</span>: [\n                            {\n                                <span class=\"hljs-comment\">/* The dependency kind.\n                                   \"dev\", \"build\", or null for a normal dependency.\n                                */</span>\n                                <span class=\"hljs-string\">\"kind\"</span>: <span class=\"hljs-literal\">null</span>,\n                                <span class=\"hljs-comment\">/* The target platform for the dependency.\n                                   null if not a target dependency.\n                                */</span>\n                                <span class=\"hljs-string\">\"target\"</span>: <span class=\"hljs-string\">\"cfg(windows)\"</span>\n                            }\n                        ]\n                    }\n                ],\n                <span class=\"hljs-comment\">/* Array of features enabled on this package. */</span>\n                <span class=\"hljs-string\">\"features\"</span>: [\n                    <span class=\"hljs-string\">\"default\"</span>\n                ]\n            }\n        ],\n        <span class=\"hljs-comment\">/* The root package of the workspace.\n           This is null if this is a virtual workspace. Otherwise it is\n           the Package ID of the root package.\n        */</span>\n        <span class=\"hljs-string\">\"root\"</span>: <span class=\"hljs-string\">\"file:///path/to/my-package#0.1.0\"</span>,\n    },\n    <span class=\"hljs-comment\">/* The absolute path to the build directory where Cargo places its output. */</span>\n    <span class=\"hljs-string\">\"target_directory\"</span>: <span class=\"hljs-string\">\"/path/to/my-package/target\"</span>,\n    <span class=\"hljs-comment\">/* The version of the schema for this metadata structure.\n       This will be changed if incompatible changes are ever made.\n    */</span>\n    <span class=\"hljs-string\">\"version\"</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-comment\">/* The absolute path to the root of the workspace. */</span>\n    <span class=\"hljs-string\">\"workspace_root\"</span>: <span class=\"hljs-string\">\"/path/to/my-package\"</span>\n    <span class=\"hljs-comment\">/* Workspace metadata.\n       This is null if no metadata is specified. */</span>\n    <span class=\"hljs-string\">\"metadata\"</span>: {\n        <span class=\"hljs-string\">\"docs\"</span>: {\n            <span class=\"hljs-string\">\"rs\"</span>: {\n                <span class=\"hljs-string\">\"all-features\"</span>: <span class=\"hljs-literal\">true</span>\n            }\n        }\n    }\n}\n</code></pre>\n<p>Notes:</p>\n<ul>\n<li>For <code class=\"hljs\">\"id\"</code> field syntax, see <a href=\"../reference/pkgid-spec.html\">Package ID Specifications</a> in the reference.</li>\n</ul>\n<h2 id=\"options\"><a class=\"header\" href=\"#options\">OPTIONS</a></h2>\n<h3 id=\"output-options\"><a class=\"header\" href=\"#output-options\">Output Options</a></h3>\n<dl>\n<dt class=\"option-term\" id=\"option-cargo-metadata---no-deps\"><a class=\"option-anchor\" href=\"#option-cargo-metadata---no-deps\"></a><code class=\"hljs\">--no-deps</code></dt>\n<dd class=\"option-desc\">Output information only about the workspace members and don’t fetch\ndependencies.</dd>\n<dt class=\"option-term\" id=\"option-cargo-metadata---format-version\"><a class=\"option-anchor\" href=\"#option-cargo-metadata---format-version\"></a><code class=\"hljs\">--format-version</code> <em>version</em></dt>\n<dd class=\"option-desc\">Specify the version of the output format to use. Currently <code class=\"hljs\">1</code> is the only\npossible value.</dd>\n<dt class=\"option-term\" id=\"option-cargo-metadata---filter-platform\"><a class=\"option-anchor\" href=\"#option-cargo-metadata---filter-platform\"></a><code class=\"hljs\">--filter-platform</code> <em>triple</em></dt>\n<dd class=\"option-desc\">This filters the <code class=\"hljs\">resolve</code> output to only include dependencies for the\ngiven <a href=\"../appendix/glossary.html#target\">target triple</a>.\nWithout this flag, the resolve includes all targets.<p></p>\n<p>Note that the dependencies listed in the “packages” array still includes all\ndependencies. Each package definition is intended to be an unaltered\nreproduction of the information within <code class=\"hljs\">Cargo.toml</code>.</p></dd>\n</dl>\n<h3 id=\"feature-selection\"><a class=\"header\" href=\"#feature-selection\">Feature Selection</a></h3>\n<p>The feature flags allow you to control which features are enabled. When no\nfeature options are given, the <code class=\"hljs\">default</code> feature is activated for every\nselected package.</p>\n<p>See <a href=\"../reference/features.html#command-line-feature-options\">the features documentation</a>\nfor more details.</p>\n<dl>\n<dt class=\"option-term\" id=\"option-cargo-metadata--F\"><a class=\"option-anchor\" href=\"#option-cargo-metadata--F\"></a><code class=\"hljs\">-F</code> <em>features</em></dt>\n<dt class=\"option-term\" id=\"option-cargo-metadata---features\"><a class=\"option-anchor\" href=\"#option-cargo-metadata---features\"></a><code class=\"hljs\">--features</code> <em>features</em></dt>\n<dd class=\"option-desc\">Space or comma separated list of features to activate. Features of workspace\nmembers may be enabled with <code class=\"hljs\">package-name/feature-name</code> syntax. This flag may\nbe specified multiple times, which enables all specified features.</dd>\n<dt class=\"option-term\" id=\"option-cargo-metadata---all-features\"><a class=\"option-anchor\" href=\"#option-cargo-metadata---all-features\"></a><code class=\"hljs\">--all-features</code></dt>\n<dd class=\"option-desc\">Activate all available features of all selected packages.</dd>\n<dt class=\"option-term\" id=\"option-cargo-metadata---no-default-features\"><a class=\"option-anchor\" href=\"#option-cargo-metadata---no-default-features\"></a><code class=\"hljs\">--no-default-features</code></dt>\n<dd class=\"option-desc\">Do not activate the <code class=\"hljs\">default</code> feature of the selected packages.</dd>\n</dl>\n<h3 id=\"display-options\"><a class=\"header\" href=\"#display-options\">Display Options</a></h3>\n<dl>\n<dt class=\"option-term\" id=\"option-cargo-metadata--v\"><a class=\"option-anchor\" href=\"#option-cargo-metadata--v\"></a><code class=\"hljs\">-v</code></dt>\n<dt class=\"option-term\" id=\"option-cargo-metadata---verbose\"><a class=\"option-anchor\" href=\"#option-cargo-metadata---verbose\"></a><code class=\"hljs\">--verbose</code></dt>\n<dd class=\"option-desc\">Use verbose output. May be specified twice for “very verbose” output which\nincludes extra output such as dependency warnings and build script output.\nMay also be specified with the <code class=\"hljs\">term.verbose</code>\n<a href=\"../reference/config.html\">config value</a>.</dd>\n<dt class=\"option-term\" id=\"option-cargo-metadata--q\"><a class=\"option-anchor\" href=\"#option-cargo-metadata--q\"></a><code class=\"hljs\">-q</code></dt>\n<dt class=\"option-term\" id=\"option-cargo-metadata---quiet\"><a class=\"option-anchor\" href=\"#option-cargo-metadata---quiet\"></a><code class=\"hljs\">--quiet</code></dt>\n<dd class=\"option-desc\">Do not print cargo log messages.\nMay also be specified with the <code class=\"hljs\">term.quiet</code>\n<a href=\"../reference/config.html\">config value</a>.</dd>\n<dt class=\"option-term\" id=\"option-cargo-metadata---color\"><a class=\"option-anchor\" href=\"#option-cargo-metadata---color\"></a><code class=\"hljs\">--color</code> <em>when</em></dt>\n<dd class=\"option-desc\">Control when colored output is used. Valid values:<p></p>\n<ul>\n<li><code class=\"hljs\">auto</code> (default): Automatically detect if color support is available on the\nterminal.</li>\n<li><code class=\"hljs\">always</code>: Always display colors.</li>\n<li><code class=\"hljs\">never</code>: Never display colors.</li>\n</ul>\n<p>May also be specified with the <code class=\"hljs\">term.color</code>\n<a href=\"../reference/config.html\">config value</a>.</p></dd>\n</dl>\n<h3 id=\"manifest-options\"><a class=\"header\" href=\"#manifest-options\">Manifest Options</a></h3>\n<dl>\n<dt class=\"option-term\" id=\"option-cargo-metadata---manifest-path\"><a class=\"option-anchor\" href=\"#option-cargo-metadata---manifest-path\"></a><code class=\"hljs\">--manifest-path</code> <em>path</em></dt>\n<dd class=\"option-desc\">Path to the <code class=\"hljs\">Cargo.toml</code> file. By default, Cargo searches for the\n<code class=\"hljs\">Cargo.toml</code> file in the current directory or any parent directory.</dd>\n<dt class=\"option-term\" id=\"option-cargo-metadata---locked\"><a class=\"option-anchor\" href=\"#option-cargo-metadata---locked\"></a><code class=\"hljs\">--locked</code></dt>\n<dd class=\"option-desc\">Asserts that the exact same dependencies and versions are used as when the\nexisting <code class=\"hljs\">Cargo.lock</code> file was originally generated. Cargo will exit with an\nerror when either of the following scenarios arises:<p></p>\n<ul>\n<li>The lock file is missing.</li>\n<li>Cargo attempted to change the lock file due to a different dependency resolution.</li>\n</ul>\n<p>It may be used in environments where deterministic builds are desired,\nsuch as in CI pipelines.</p></dd>\n<dt class=\"option-term\" id=\"option-cargo-metadata---offline\"><a class=\"option-anchor\" href=\"#option-cargo-metadata---offline\"></a><code class=\"hljs\">--offline</code></dt>\n<dd class=\"option-desc\">Prevents Cargo from accessing the network for any reason. Without this\nflag, Cargo will stop with an error if it needs to access the network and\nthe network is not available. With this flag, Cargo will attempt to\nproceed without the network if possible.<p></p>\n<p>Beware that this may result in different dependency resolution than online\nmode. Cargo will restrict itself to crates that are downloaded locally, even\nif there might be a newer version as indicated in the local copy of the index.\nSee the <a href=\"cargo-fetch.html\">cargo-fetch(1)</a> command to download dependencies before going\noffline.</p>\n<p>May also be specified with the <code class=\"hljs\">net.offline</code> <a href=\"../reference/config.html\">config value</a>.</p></dd>\n<dt class=\"option-term\" id=\"option-cargo-metadata---frozen\"><a class=\"option-anchor\" href=\"#option-cargo-metadata---frozen\"></a><code class=\"hljs\">--frozen</code></dt>\n<dd class=\"option-desc\">Equivalent to specifying both <code class=\"hljs\">--locked</code> and <code class=\"hljs\">--offline</code>.</dd>\n</dl>\n<h3 id=\"common-options\"><a class=\"header\" href=\"#common-options\">Common Options</a></h3>\n<dl>\n<dt class=\"option-term\" id=\"option-cargo-metadata-+toolchain\"><a class=\"option-anchor\" href=\"#option-cargo-metadata-+toolchain\"></a><code class=\"hljs\">+</code><em>toolchain</em></dt>\n<dd class=\"option-desc\">If Cargo has been installed with rustup, and the first argument to <code class=\"hljs\">cargo</code>\nbegins with <code class=\"hljs\">+</code>, it will be interpreted as a rustup toolchain name (such\nas <code class=\"hljs\">+stable</code> or <code class=\"hljs\">+nightly</code>).\nSee the <a href=\"https://rust-lang.github.io/rustup/overrides.html\">rustup documentation</a>\nfor more information about how toolchain overrides work.</dd>\n<dt class=\"option-term\" id=\"option-cargo-metadata---config\"><a class=\"option-anchor\" href=\"#option-cargo-metadata---config\"></a><code class=\"hljs\">--config</code> <em>KEY=VALUE</em> or <em>PATH</em></dt>\n<dd class=\"option-desc\">Overrides a Cargo configuration value. The argument should be in TOML syntax of <code class=\"hljs\">KEY=VALUE</code>,\nor provided as a path to an extra configuration file. This flag may be specified multiple times.\nSee the <a href=\"../reference/config.html#command-line-overrides\">command-line overrides section</a> for more information.</dd>\n<dt class=\"option-term\" id=\"option-cargo-metadata--C\"><a class=\"option-anchor\" href=\"#option-cargo-metadata--C\"></a><code class=\"hljs\">-C</code> <em>PATH</em></dt>\n<dd class=\"option-desc\">Changes the current working directory before executing any specified operations. This affects\nthings like where cargo looks by default for the project manifest (<code class=\"hljs\">Cargo.toml</code>), as well as\nthe directories searched for discovering <code class=\"hljs\">.cargo/config.toml</code>, for example. This option must\nappear before the command name, for example <code class=\"hljs\">cargo -C path/to/my-project build</code>.<p></p>\n<p>This option is only available on the <a href=\"https://doc.rust-lang.org/book/appendix-07-nightly-rust.html\">nightly\nchannel</a> and\nrequires the <code class=\"hljs\">-Z unstable-options</code> flag to enable (see\n<a href=\"https://github.com/rust-lang/cargo/issues/10098\">#10098</a>).</p></dd>\n<dt class=\"option-term\" id=\"option-cargo-metadata--h\"><a class=\"option-anchor\" href=\"#option-cargo-metadata--h\"></a><code class=\"hljs\">-h</code></dt>\n<dt class=\"option-term\" id=\"option-cargo-metadata---help\"><a class=\"option-anchor\" href=\"#option-cargo-metadata---help\"></a><code class=\"hljs\">--help</code></dt>\n<dd class=\"option-desc\">Prints help information.</dd>\n<dt class=\"option-term\" id=\"option-cargo-metadata--Z\"><a class=\"option-anchor\" href=\"#option-cargo-metadata--Z\"></a><code class=\"hljs\">-Z</code> <em>flag</em></dt>\n<dd class=\"option-desc\">Unstable (nightly-only) flags to Cargo. Run <code class=\"hljs\">cargo -Z help</code> for details.</dd>\n</dl>\n<h2 id=\"environment\"><a class=\"header\" href=\"#environment\">ENVIRONMENT</a></h2>\n<p>See <a href=\"../reference/environment-variables.html\">the reference</a> for\ndetails on environment variables that Cargo reads.</p>\n<h2 id=\"exit-status\"><a class=\"header\" href=\"#exit-status\">EXIT STATUS</a></h2>\n<ul>\n<li><code class=\"hljs\">0</code>: Cargo succeeded.</li>\n<li><code class=\"hljs\">101</code>: Cargo failed to complete.</li>\n</ul>\n<h2 id=\"examples\"><a class=\"header\" href=\"#examples\">EXAMPLES</a></h2>\n<ol>\n<li>\n<p>Output JSON about the current package:</p>\n<pre><div class=\"buttons\"><button class=\"fa fa-copy clip-button\" title=\"Copy to clipboard\" aria-label=\"Copy to clipboard\"><i class=\"tooltiptext\"></i></button></div><code class=\"hljs\">cargo metadata --format-version=1\n</code></pre>\n</li>\n</ol>\n<h2 id=\"see-also\"><a class=\"header\" href=\"#see-also\">SEE ALSO</a></h2>\n<p><a href=\"cargo.html\">cargo(1)</a>, <a href=\"cargo-pkgid.html\">cargo-pkgid(1)</a>, <a href=\"../reference/pkgid-spec.html\">Package ID Specifications</a>, <a href=\"../reference/external-tools.html#json-messages\">JSON messages</a></p>\n\n                    </main>\n\n                    <nav class=\"nav-wrapper\" aria-label=\"Page navigation\">\n                        <!-- Mobile navigation buttons -->\n                            <a rel=\"prev\" href=\"../commands/cargo-locate-project.html\" class=\"mobile-nav-chapters previous\" title=\"Previous chapter\" aria-label=\"Previous chapter\" aria-keyshortcuts=\"Left\">\n                                <i class=\"fa fa-angle-left\"></i>\n                            </a>\n\n                            <a rel=\"next prefetch\" href=\"../commands/cargo-pkgid.html\" class=\"mobile-nav-chapters next\" title=\"Next chapter\" aria-label=\"Next chapter\" aria-keyshortcuts=\"Right\">\n                                <i class=\"fa fa-angle-right\"></i>\n                            </a>\n\n                        <div style=\"clear: both\"></div>\n                    </nav>\n                </div>\n            </div>\n\n            <nav class=\"nav-wide-wrapper\" aria-label=\"Page navigation\">\n                    <a rel=\"prev\" href=\"../commands/cargo-locate-project.html\" class=\"nav-chapters previous\" title=\"Previous chapter\" aria-label=\"Previous chapter\" aria-keyshortcuts=\"Left\">\n                        <i class=\"fa fa-angle-left\"></i>\n                    </a>\n\n                    <a rel=\"next prefetch\" href=\"../commands/cargo-pkgid.html\" class=\"nav-chapters next\" title=\"Next chapter\" aria-label=\"Next chapter\" aria-keyshortcuts=\"Right\">\n                        <i class=\"fa fa-angle-right\"></i>\n                    </a>\n            </nav>\n\n        </div>\n\n\n\n\n        <script>\n            window.playground_copyable = true;\n        </script>\n\n\n        <script src=\"../elasticlunr.min.js\"></script>\n        <script src=\"../mark.min.js\"></script>\n        <script src=\"../searcher.js\"></script>\n\n        <script src=\"../clipboard.min.js\"></script>\n        <script src=\"../highlight.js\"></script>\n        <script src=\"../book.js\"></script>\n\n        <!-- Custom JS scripts -->\n\n\n    </div>\n    \n\n</body></html>",
	"crawlDate": "2024-07-28T05:09:29.749Z"
}