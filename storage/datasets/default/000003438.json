{
	"title": "layout.rs - source",
	"url": "https://doc.rust-lang.org/stable/src/core/alloc/layout.rs.html",
	"markdown": "# layout.rs - source\n\n```features\n// Seemingly inconsequential code changes to this file can lead to measurable\n// performance impact on compilation times, due at least in part to the fact\n// that the layout code gets called from many instantiations of the various\n// collections, resulting in having to optimize down excess IR multiple times.\n// Your performance intuition is useless. Run perf.\n\nuse crate::cmp;\nuse crate::error::Error;\nuse crate::fmt;\nuse crate::mem;\nuse crate::ptr::{Alignment, NonNull};\n\n// While this function is used in one place and its implementation\n// could be inlined, the previous attempts to do so made rustc\n// slower:\n//\n// * https://github.com/rust-lang/rust/pull/72189\n// * https://github.com/rust-lang/rust/pull/79827\nconst fn size_align<T>() -> (usize, usize) {\n    (mem::size_of::<T>(), mem::align_of::<T>())\n}\n\n/// Layout of a block of memory.\n///\n/// An instance of `Layout` describes a particular layout of memory.\n/// You build a `Layout` up as an input to give to an allocator.\n///\n/// All layouts have an associated size and a power-of-two alignment. The size, when rounded up to\n/// the nearest multiple of `align`, does not overflow isize (i.e., the rounded value will always be\n/// less than or equal to `isize::MAX`).\n///\n/// (Note that layouts are *not* required to have non-zero size,\n/// even though `GlobalAlloc` requires that all memory requests\n/// be non-zero in size. A caller must either ensure that conditions\n/// like this are met, use specific allocators with looser\n/// requirements, or use the more lenient `Allocator` interface.)\n#[stable(feature = \"alloc_layout\", since = \"1.28.0\")]\n#[derive(Copy, Clone, Debug, PartialEq, Eq, Hash)]\n#[lang = \"alloc_layout\"]\npub struct Layout {\n    // size of the requested block of memory, measured in bytes.\n    size: usize,\n\n    // alignment of the requested block of memory, measured in bytes.\n    // we ensure that this is always a power-of-two, because API's\n    // like `posix_memalign` require it and it is a reasonable\n    // constraint to impose on Layout constructors.\n    //\n    // (However, we do not analogously require `align >= sizeof(void*)`,\n    //  even though that is *also* a requirement of `posix_memalign`.)\n    align: Alignment,\n}\n\nimpl Layout {\n    /// Constructs a `Layout` from a given `size` and `align`,\n    /// or returns `LayoutError` if any of the following conditions\n    /// are not met:\n    ///\n    /// * `align` must not be zero,\n    ///\n    /// * `align` must be a power of two,\n    ///\n    /// * `size`, when rounded up to the nearest multiple of `align`,\n    ///    must not overflow isize (i.e., the rounded value must be\n    ///    less than or equal to `isize::MAX`).\n    #[stable(feature = \"alloc_layout\", since = \"1.28.0\")]\n    #[rustc_const_stable(feature = \"const_alloc_layout_size_align\", since = \"1.50.0\")]\n    #[inline]\n    #[rustc_allow_const_fn_unstable(ptr_alignment_type)]\n    pub const fn from_size_align(size: usize, align: usize) -> Result<Self, LayoutError> {\n        if !align.is_power_of_two() {\n            return Err(LayoutError);\n        }\n\n        // SAFETY: just checked that align is a power of two.\n        Layout::from_size_alignment(size, unsafe { Alignment::new_unchecked(align) })\n    }\n\n    #[inline(always)]\n    const fn max_size_for_align(align: Alignment) -> usize {\n        // (power-of-two implies align != 0.)\n\n        // Rounded up size is:\n        //   size_rounded_up = (size + align - 1) & !(align - 1);\n        //\n        // We know from above that align != 0. If adding (align - 1)\n        // does not overflow, then rounding up will be fine.\n        //\n        // Conversely, &-masking with !(align - 1) will subtract off\n        // only low-order-bits. Thus if overflow occurs with the sum,\n        // the &-mask cannot subtract enough to undo that overflow.\n        //\n        // Above implies that checking for summation overflow is both\n        // necessary and sufficient.\n        isize::MAX as usize - (align.as_usize() - 1)\n    }\n\n    /// Internal helper constructor to skip revalidating alignment validity.\n    #[inline]\n    const fn from_size_alignment(size: usize, align: Alignment) -> Result<Self, LayoutError> {\n        if size > Self::max_size_for_align(align) {\n            return Err(LayoutError);\n        }\n\n        // SAFETY: Layout::size invariants checked above.\n        Ok(Layout { size, align })\n    }\n\n    /// Creates a layout, bypassing all checks.\n    ///\n    /// # Safety\n    ///\n    /// This function is unsafe as it does not verify the preconditions from\n    /// [`Layout::from_size_align`].\n    #[stable(feature = \"alloc_layout\", since = \"1.28.0\")]\n    #[rustc_const_stable(feature = \"const_alloc_layout_unchecked\", since = \"1.36.0\")]\n    #[must_use]\n    #[inline]\n    #[rustc_allow_const_fn_unstable(ptr_alignment_type)]\n    pub const unsafe fn from_size_align_unchecked(size: usize, align: usize) -> Self {\n        // SAFETY: the caller is required to uphold the preconditions.\n        unsafe { Layout { size, align: Alignment::new_unchecked(align) } }\n    }\n\n    /// The minimum size in bytes for a memory block of this layout.\n    #[stable(feature = \"alloc_layout\", since = \"1.28.0\")]\n    #[rustc_const_stable(feature = \"const_alloc_layout_size_align\", since = \"1.50.0\")]\n    #[must_use]\n    #[inline]\n    pub const fn size(&self) -> usize {\n        self.size\n    }\n\n    /// The minimum byte alignment for a memory block of this layout.\n    ///\n    /// The returned alignment is guaranteed to be a power of two.\n    #[stable(feature = \"alloc_layout\", since = \"1.28.0\")]\n    #[rustc_const_stable(feature = \"const_alloc_layout_size_align\", since = \"1.50.0\")]\n    #[must_use = \"this returns the minimum alignment, \\\n                  without modifying the layout\"]\n    #[inline]\n    #[rustc_allow_const_fn_unstable(ptr_alignment_type)]\n    pub const fn align(&self) -> usize {\n        self.align.as_usize()\n    }\n\n    /// Constructs a `Layout` suitable for holding a value of type `T`.\n    #[stable(feature = \"alloc_layout\", since = \"1.28.0\")]\n    #[rustc_const_stable(feature = \"alloc_layout_const_new\", since = \"1.42.0\")]\n    #[must_use]\n    #[inline]\n    pub const fn new<T>() -> Self {\n        let (size, align) = size_align::<T>();\n        // SAFETY: if the type is instantiated, rustc already ensures that its\n        // layout is valid. Use the unchecked constructor to avoid inserting a\n        // panicking codepath that needs to be optimized out.\n        unsafe { Layout::from_size_align_unchecked(size, align) }\n    }\n\n    /// Produces layout describing a record that could be used to\n    /// allocate backing structure for `T` (which could be a trait\n    /// or other unsized type like a slice).\n    #[stable(feature = \"alloc_layout\", since = \"1.28.0\")]\n    #[rustc_const_unstable(feature = \"const_alloc_layout\", issue = \"67521\")]\n    #[must_use]\n    #[inline]\n    pub const fn for_value<T: ?Sized>(t: &T) -> Self {\n        let (size, align) = (mem::size_of_val(t), mem::align_of_val(t));\n        // SAFETY: see rationale in `new` for why this is using the unsafe variant\n        unsafe { Layout::from_size_align_unchecked(size, align) }\n    }\n\n    /// Produces layout describing a record that could be used to\n    /// allocate backing structure for `T` (which could be a trait\n    /// or other unsized type like a slice).\n    ///\n    /// # Safety\n    ///\n    /// This function is only safe to call if the following conditions hold:\n    ///\n    /// - If `T` is `Sized`, this function is always safe to call.\n    /// - If the unsized tail of `T` is:\n    ///     - a [slice], then the length of the slice tail must be an initialized\n    ///       integer, and the size of the *entire value*\n    ///       (dynamic tail length + statically sized prefix) must fit in `isize`.\n    ///     - a [trait object], then the vtable part of the pointer must point\n    ///       to a valid vtable for the type `T` acquired by an unsizing coercion,\n    ///       and the size of the *entire value*\n    ///       (dynamic tail length + statically sized prefix) must fit in `isize`.\n    ///     - an (unstable) [extern type], then this function is always safe to\n    ///       call, but may panic or otherwise return the wrong value, as the\n    ///       extern type's layout is not known. This is the same behavior as\n    ///       [`Layout::for_value`] on a reference to an extern type tail.\n    ///     - otherwise, it is conservatively not allowed to call this function.\n    ///\n    /// [trait object]: ../../book/ch17-02-trait-objects.html\n    /// [extern type]: ../../unstable-book/language-features/extern-types.html\n    #[unstable(feature = \"layout_for_ptr\", issue = \"69835\")]\n    #[rustc_const_unstable(feature = \"const_alloc_layout\", issue = \"67521\")]\n    #[must_use]\n    pub const unsafe fn for_value_raw<T: ?Sized>(t: *const T) -> Self {\n        // SAFETY: we pass along the prerequisites of these functions to the caller\n        let (size, align) = unsafe { (mem::size_of_val_raw(t), mem::align_of_val_raw(t)) };\n        // SAFETY: see rationale in `new` for why this is using the unsafe variant\n        unsafe { Layout::from_size_align_unchecked(size, align) }\n    }\n\n    /// Creates a `NonNull` that is dangling, but well-aligned for this Layout.\n    ///\n    /// Note that the pointer value may potentially represent a valid pointer,\n    /// which means this must not be used as a \"not yet initialized\"\n    /// sentinel value. Types that lazily allocate must track initialization by\n    /// some other means.\n    #[unstable(feature = \"alloc_layout_extra\", issue = \"55724\")]\n    #[rustc_const_unstable(feature = \"alloc_layout_extra\", issue = \"55724\")]\n    #[must_use]\n    #[inline]\n    pub const fn dangling(&self) -> NonNull<u8> {\n        // SAFETY: align is guaranteed to be non-zero\n        unsafe { NonNull::new_unchecked(crate::ptr::without_provenance_mut::<u8>(self.align())) }\n    }\n\n    /// Creates a layout describing the record that can hold a value\n    /// of the same layout as `self`, but that also is aligned to\n    /// alignment `align` (measured in bytes).\n    ///\n    /// If `self` already meets the prescribed alignment, then returns\n    /// `self`.\n    ///\n    /// Note that this method does not add any padding to the overall\n    /// size, regardless of whether the returned layout has a different\n    /// alignment. In other words, if `K` has size 16, `K.align_to(32)`\n    /// will *still* have size 16.\n    ///\n    /// Returns an error if the combination of `self.size()` and the given\n    /// `align` violates the conditions listed in [`Layout::from_size_align`].\n    #[stable(feature = \"alloc_layout_manipulation\", since = \"1.44.0\")]\n    #[inline]\n    pub fn align_to(&self, align: usize) -> Result<Self, LayoutError> {\n        Layout::from_size_align(self.size(), cmp::max(self.align(), align))\n    }\n\n    /// Returns the amount of padding we must insert after `self`\n    /// to ensure that the following address will satisfy `align`\n    /// (measured in bytes).\n    ///\n    /// e.g., if `self.size()` is 9, then `self.padding_needed_for(4)`\n    /// returns 3, because that is the minimum number of bytes of\n    /// padding required to get a 4-aligned address (assuming that the\n    /// corresponding memory block starts at a 4-aligned address).\n    ///\n    /// The return value of this function has no meaning if `align` is\n    /// not a power-of-two.\n    ///\n    /// Note that the utility of the returned value requires `align`\n    /// to be less than or equal to the alignment of the starting\n    /// address for the whole allocated block of memory. One way to\n    /// satisfy this constraint is to ensure `align <= self.align()`.\n    #[unstable(feature = \"alloc_layout_extra\", issue = \"55724\")]\n    #[rustc_const_unstable(feature = \"const_alloc_layout\", issue = \"67521\")]\n    #[must_use = \"this returns the padding needed, \\\n                  without modifying the `Layout`\"]\n    #[inline]\n    pub const fn padding_needed_for(&self, align: usize) -> usize {\n        let len = self.size();\n\n        // Rounded up value is:\n        //   len_rounded_up = (len + align - 1) & !(align - 1);\n        // and then we return the padding difference: `len_rounded_up - len`.\n        //\n        // We use modular arithmetic throughout:\n        //\n        // 1. align is guaranteed to be > 0, so align - 1 is always\n        //    valid.\n        //\n        // 2. `len + align - 1` can overflow by at most `align - 1`,\n        //    so the &-mask with `!(align - 1)` will ensure that in the\n        //    case of overflow, `len_rounded_up` will itself be 0.\n        //    Thus the returned padding, when added to `len`, yields 0,\n        //    which trivially satisfies the alignment `align`.\n        //\n        // (Of course, attempts to allocate blocks of memory whose\n        // size and padding overflow in the above manner should cause\n        // the allocator to yield an error anyway.)\n\n        let len_rounded_up = len.wrapping_add(align).wrapping_sub(1) & !align.wrapping_sub(1);\n        len_rounded_up.wrapping_sub(len)\n    }\n\n    /// Creates a layout by rounding the size of this layout up to a multiple\n    /// of the layout's alignment.\n    ///\n    /// This is equivalent to adding the result of `padding_needed_for`\n    /// to the layout's current size.\n    #[stable(feature = \"alloc_layout_manipulation\", since = \"1.44.0\")]\n    #[rustc_const_unstable(feature = \"const_alloc_layout\", issue = \"67521\")]\n    #[must_use = \"this returns a new `Layout`, \\\n                  without modifying the original\"]\n    #[inline]\n    pub const fn pad_to_align(&self) -> Layout {\n        let pad = self.padding_needed_for(self.align());\n        // This cannot overflow. Quoting from the invariant of Layout:\n        // > `size`, when rounded up to the nearest multiple of `align`,\n        // > must not overflow isize (i.e., the rounded value must be\n        // > less than or equal to `isize::MAX`)\n        let new_size = self.size() + pad;\n\n        // SAFETY: padded size is guaranteed to not exceed `isize::MAX`.\n        unsafe { Layout::from_size_align_unchecked(new_size, self.align()) }\n    }\n\n    /// Creates a layout describing the record for `n` instances of\n    /// `self`, with a suitable amount of padding between each to\n    /// ensure that each instance is given its requested size and\n    /// alignment. On success, returns `(k, offs)` where `k` is the\n    /// layout of the array and `offs` is the distance between the start\n    /// of each element in the array.\n    ///\n    /// On arithmetic overflow, returns `LayoutError`.\n    #[unstable(feature = \"alloc_layout_extra\", issue = \"55724\")]\n    #[inline]\n    pub fn repeat(&self, n: usize) -> Result<(Self, usize), LayoutError> {\n        // This cannot overflow. Quoting from the invariant of Layout:\n        // > `size`, when rounded up to the nearest multiple of `align`,\n        // > must not overflow isize (i.e., the rounded value must be\n        // > less than or equal to `isize::MAX`)\n        let padded_size = self.size() + self.padding_needed_for(self.align());\n        let alloc_size = padded_size.checked_mul(n).ok_or(LayoutError)?;\n\n        // The safe constructor is called here to enforce the isize size limit.\n        let layout = Layout::from_size_alignment(alloc_size, self.align)?;\n        Ok((layout, padded_size))\n    }\n\n    /// Creates a layout describing the record for `self` followed by\n    /// `next`, including any necessary padding to ensure that `next`\n    /// will be properly aligned, but *no trailing padding*.\n    ///\n    /// In order to match C representation layout `repr(C)`, you should\n    /// call `pad_to_align` after extending the layout with all fields.\n    /// (There is no way to match the default Rust representation\n    /// layout `repr(Rust)`, as it is unspecified.)\n    ///\n    /// Note that the alignment of the resulting layout will be the maximum of\n    /// those of `self` and `next`, in order to ensure alignment of both parts.\n    ///\n    /// Returns `Ok((k, offset))`, where `k` is layout of the concatenated\n    /// record and `offset` is the relative location, in bytes, of the\n    /// start of the `next` embedded within the concatenated record\n    /// (assuming that the record itself starts at offset 0).\n    ///\n    /// On arithmetic overflow, returns `LayoutError`.\n    ///\n    /// # Examples\n    ///\n    /// To calculate the layout of a `#[repr(C)]` structure and the offsets of\n    /// the fields from its fields' layouts:\n    ///\n    /// ```rust\n    /// # use std::alloc::{Layout, LayoutError};\n    /// pub fn repr_c(fields: &[Layout]) -> Result<(Layout, Vec<usize>), LayoutError> {\n    ///     let mut offsets = Vec::new();\n    ///     let mut layout = Layout::from_size_align(0, 1)?;\n    ///     for &field in fields {\n    ///         let (new_layout, offset) = layout.extend(field)?;\n    ///         layout = new_layout;\n    ///         offsets.push(offset);\n    ///     }\n    ///     // Remember to finalize with `pad_to_align`!\n    ///     Ok((layout.pad_to_align(), offsets))\n    /// }\n    /// # // test that it works\n    /// # #[repr(C)] struct S { a: u64, b: u32, c: u16, d: u32 }\n    /// # let s = Layout::new::<S>();\n    /// # let u16 = Layout::new::<u16>();\n    /// # let u32 = Layout::new::<u32>();\n    /// # let u64 = Layout::new::<u64>();\n    /// # assert_eq!(repr_c(&[u64, u32, u16, u32]), Ok((s, vec![0, 8, 12, 16])));\n    /// ```\n    #[stable(feature = \"alloc_layout_manipulation\", since = \"1.44.0\")]\n    #[inline]\n    pub fn extend(&self, next: Self) -> Result<(Self, usize), LayoutError> {\n        let new_align = cmp::max(self.align, next.align);\n        let pad = self.padding_needed_for(next.align());\n\n        let offset = self.size().checked_add(pad).ok_or(LayoutError)?;\n        let new_size = offset.checked_add(next.size()).ok_or(LayoutError)?;\n\n        // The safe constructor is called here to enforce the isize size limit.\n        let layout = Layout::from_size_alignment(new_size, new_align)?;\n        Ok((layout, offset))\n    }\n\n    /// Creates a layout describing the record for `n` instances of\n    /// `self`, with no padding between each instance.\n    ///\n    /// Note that, unlike `repeat`, `repeat_packed` does not guarantee\n    /// that the repeated instances of `self` will be properly\n    /// aligned, even if a given instance of `self` is properly\n    /// aligned. In other words, if the layout returned by\n    /// `repeat_packed` is used to allocate an array, it is not\n    /// guaranteed that all elements in the array will be properly\n    /// aligned.\n    ///\n    /// On arithmetic overflow, returns `LayoutError`.\n    #[unstable(feature = \"alloc_layout_extra\", issue = \"55724\")]\n    #[inline]\n    pub fn repeat_packed(&self, n: usize) -> Result<Self, LayoutError> {\n        let size = self.size().checked_mul(n).ok_or(LayoutError)?;\n        // The safe constructor is called here to enforce the isize size limit.\n        Layout::from_size_alignment(size, self.align)\n    }\n\n    /// Creates a layout describing the record for `self` followed by\n    /// `next` with no additional padding between the two. Since no\n    /// padding is inserted, the alignment of `next` is irrelevant,\n    /// and is not incorporated *at all* into the resulting layout.\n    ///\n    /// On arithmetic overflow, returns `LayoutError`.\n    #[unstable(feature = \"alloc_layout_extra\", issue = \"55724\")]\n    #[inline]\n    pub fn extend_packed(&self, next: Self) -> Result<Self, LayoutError> {\n        let new_size = self.size().checked_add(next.size()).ok_or(LayoutError)?;\n        // The safe constructor is called here to enforce the isize size limit.\n        Layout::from_size_alignment(new_size, self.align)\n    }\n\n    /// Creates a layout describing the record for a `[T; n]`.\n    ///\n    /// On arithmetic overflow or when the total size would exceed\n    /// `isize::MAX`, returns `LayoutError`.\n    #[stable(feature = \"alloc_layout_manipulation\", since = \"1.44.0\")]\n    #[rustc_const_unstable(feature = \"const_alloc_layout\", issue = \"67521\")]\n    #[inline]\n    pub const fn array<T>(n: usize) -> Result<Self, LayoutError> {\n        // Reduce the amount of code we need to monomorphize per `T`.\n        return inner(mem::size_of::<T>(), Alignment::of::<T>(), n);\n\n        #[inline]\n        const fn inner(\n            element_size: usize,\n            align: Alignment,\n            n: usize,\n        ) -> Result<Layout, LayoutError> {\n            // We need to check two things about the size:\n            //  - That the total size won't overflow a `usize`, and\n            //  - That the total size still fits in an `isize`.\n            // By using division we can check them both with a single threshold.\n            // That'd usually be a bad idea, but thankfully here the element size\n            // and alignment are constants, so the compiler will fold all of it.\n            if element_size != 0 && n > Layout::max_size_for_align(align) / element_size {\n                return Err(LayoutError);\n            }\n\n            // SAFETY: We just checked that we won't overflow `usize` when we multiply.\n            // This is a useless hint inside this function, but after inlining this helps\n            // deduplicate checks for whether the overall capacity is zero (e.g., in RawVec's\n            // allocation path) before/after this multiplication.\n            let array_size = unsafe { element_size.unchecked_mul(n) };\n\n            // SAFETY: We just checked above that the `array_size` will not\n            // exceed `isize::MAX` even when rounded up to the alignment.\n            // And `Alignment` guarantees it's a power of two.\n            unsafe { Ok(Layout::from_size_align_unchecked(array_size, align.as_usize())) }\n        }\n    }\n}\n\n#[stable(feature = \"alloc_layout\", since = \"1.28.0\")]\n#[deprecated(\n    since = \"1.52.0\",\n    note = \"Name does not follow std convention, use LayoutError\",\n    suggestion = \"LayoutError\"\n)]\npub type LayoutErr = LayoutError;\n\n/// The parameters given to `Layout::from_size_align`\n/// or some other `Layout` constructor\n/// do not satisfy its documented constraints.\n#[stable(feature = \"alloc_layout_error\", since = \"1.50.0\")]\n#[non_exhaustive]\n#[derive(Clone, PartialEq, Eq, Debug)]\npub struct LayoutError;\n\n#[stable(feature = \"alloc_layout\", since = \"1.28.0\")]\nimpl Error for LayoutError {}\n\n// (we need this for downstream impl of trait Error)\n#[stable(feature = \"alloc_layout\", since = \"1.28.0\")]\nimpl fmt::Display for LayoutError {\n    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n        f.write_str(\"invalid parameters to Layout::from_size_align\")\n    }\n}\n\n```",
	"html": "<!DOCTYPE html><html lang=\"en\" data-theme=\"light\"><head><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><meta name=\"generator\" content=\"rustdoc\"><meta name=\"description\" content=\"Source of the Rust file `library/core/src/alloc/layout.rs`.\"><title>layout.rs - source</title><script>if(window.location.protocol!==\"file:\")document.head.insertAdjacentHTML(\"beforeend\",\"SourceSerif4-Regular-46f98efaafac5295.ttf.woff2,FiraSans-Regular-018c141bf0843ffd.woff2,FiraSans-Medium-8f9a781e4970d388.woff2,SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2,SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\".split(\",\").map(f=>`<link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin href=\"../../../static.files/${f}\">`).join(\"\"))</script><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../../static.files/SourceSerif4-Regular-46f98efaafac5295.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../../static.files/FiraSans-Regular-018c141bf0843ffd.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../../static.files/FiraSans-Medium-8f9a781e4970d388.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../../static.files/SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../../static.files/SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\"><link rel=\"stylesheet\" href=\"../../../static.files/normalize-76eba96aa4d2e634.css\"><link rel=\"stylesheet\" href=\"../../../static.files/rustdoc-dd39b87e5fcfba68.css\"><meta name=\"rustdoc-vars\" data-root-path=\"../../../\" data-static-root-path=\"../../../static.files/\" data-current-crate=\"core\" data-themes=\"\" data-resource-suffix=\"1.80.0\" data-rustdoc-version=\"1.80.0 (051478957 2024-07-21)\" data-channel=\"1.80.0\" data-search-js=\"search-d52510db62a78183.js\" data-settings-js=\"settings-4313503d2e1961c2.js\"><script src=\"../../../static.files/storage-118b08c4c78b968e.js\"></script><script defer=\"\" src=\"../../../static.files/src-script-e66d777a5a92e9b2.js\"></script><script defer=\"\" src=\"../../../src-files1.80.0.js\"></script><script defer=\"\" src=\"../../../static.files/main-20a3ad099b048cf2.js\"></script><noscript><link rel=\"stylesheet\" href=\"../../../static.files/noscript-df360f571f6edeae.css\"></noscript><link rel=\"alternate icon\" type=\"image/png\" href=\"../../../static.files/favicon-32x32-422f7d1d52889060.png\"><link rel=\"icon\" type=\"image/svg+xml\" href=\"../../../static.files/favicon-2c020d218678b618.svg\"></head><body class=\"rustdoc src\"><!--[if lte IE 11]><div class=\"warning\">This old browser is unsupported and will most likely display funky things.</div><![endif]--><nav class=\"sidebar\"><div class=\"src-sidebar-title\"><h2>Files</h2></div><div id=\"src-sidebar\"><details class=\"dir-entry\"><summary>alloc</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>boxed</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/alloc/boxed/thin.rs.html\">thin.rs</a></div></details><details class=\"dir-entry\"><summary>collections</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>binary_heap</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/alloc/collections/binary_heap/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>btree</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>map</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/alloc/collections/btree/map/entry.rs.html\">entry.rs</a></div></details></div><div class=\"files\"><a href=\"../../../src/alloc/collections/btree/append.rs.html\">append.rs</a><a href=\"../../../src/alloc/collections/btree/borrow.rs.html\">borrow.rs</a><a href=\"../../../src/alloc/collections/btree/dedup_sorted_iter.rs.html\">dedup_sorted_iter.rs</a><a href=\"../../../src/alloc/collections/btree/fix.rs.html\">fix.rs</a><a href=\"../../../src/alloc/collections/btree/map.rs.html\">map.rs</a><a href=\"../../../src/alloc/collections/btree/mem.rs.html\">mem.rs</a><a href=\"../../../src/alloc/collections/btree/merge_iter.rs.html\">merge_iter.rs</a><a href=\"../../../src/alloc/collections/btree/mod.rs.html\">mod.rs</a><a href=\"../../../src/alloc/collections/btree/navigate.rs.html\">navigate.rs</a><a href=\"../../../src/alloc/collections/btree/node.rs.html\">node.rs</a><a href=\"../../../src/alloc/collections/btree/remove.rs.html\">remove.rs</a><a href=\"../../../src/alloc/collections/btree/search.rs.html\">search.rs</a><a href=\"../../../src/alloc/collections/btree/set.rs.html\">set.rs</a><a href=\"../../../src/alloc/collections/btree/set_val.rs.html\">set_val.rs</a><a href=\"../../../src/alloc/collections/btree/split.rs.html\">split.rs</a></div></details><details class=\"dir-entry\"><summary>vec_deque</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/alloc/collections/vec_deque/drain.rs.html\">drain.rs</a><a href=\"../../../src/alloc/collections/vec_deque/into_iter.rs.html\">into_iter.rs</a><a href=\"../../../src/alloc/collections/vec_deque/iter.rs.html\">iter.rs</a><a href=\"../../../src/alloc/collections/vec_deque/iter_mut.rs.html\">iter_mut.rs</a><a href=\"../../../src/alloc/collections/vec_deque/macros.rs.html\">macros.rs</a><a href=\"../../../src/alloc/collections/vec_deque/mod.rs.html\">mod.rs</a><a href=\"../../../src/alloc/collections/vec_deque/spec_extend.rs.html\">spec_extend.rs</a><a href=\"../../../src/alloc/collections/vec_deque/spec_from_iter.rs.html\">spec_from_iter.rs</a></div></details></div><div class=\"files\"><a href=\"../../../src/alloc/collections/linked_list.rs.html\">linked_list.rs</a><a href=\"../../../src/alloc/collections/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>ffi</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/alloc/ffi/c_str.rs.html\">c_str.rs</a><a href=\"../../../src/alloc/ffi/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>vec</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/alloc/vec/cow.rs.html\">cow.rs</a><a href=\"../../../src/alloc/vec/drain.rs.html\">drain.rs</a><a href=\"../../../src/alloc/vec/extract_if.rs.html\">extract_if.rs</a><a href=\"../../../src/alloc/vec/in_place_collect.rs.html\">in_place_collect.rs</a><a href=\"../../../src/alloc/vec/in_place_drop.rs.html\">in_place_drop.rs</a><a href=\"../../../src/alloc/vec/into_iter.rs.html\">into_iter.rs</a><a href=\"../../../src/alloc/vec/is_zero.rs.html\">is_zero.rs</a><a href=\"../../../src/alloc/vec/mod.rs.html\">mod.rs</a><a href=\"../../../src/alloc/vec/partial_eq.rs.html\">partial_eq.rs</a><a href=\"../../../src/alloc/vec/set_len_on_drop.rs.html\">set_len_on_drop.rs</a><a href=\"../../../src/alloc/vec/spec_extend.rs.html\">spec_extend.rs</a><a href=\"../../../src/alloc/vec/spec_from_elem.rs.html\">spec_from_elem.rs</a><a href=\"../../../src/alloc/vec/spec_from_iter.rs.html\">spec_from_iter.rs</a><a href=\"../../../src/alloc/vec/spec_from_iter_nested.rs.html\">spec_from_iter_nested.rs</a><a href=\"../../../src/alloc/vec/splice.rs.html\">splice.rs</a></div></details></div><div class=\"files\"><a href=\"../../../src/alloc/alloc.rs.html\">alloc.rs</a><a href=\"../../../src/alloc/borrow.rs.html\">borrow.rs</a><a href=\"../../../src/alloc/boxed.rs.html\">boxed.rs</a><a href=\"../../../src/alloc/fmt.rs.html\">fmt.rs</a><a href=\"../../../src/alloc/lib.rs.html\">lib.rs</a><a href=\"../../../src/alloc/macros.rs.html\">macros.rs</a><a href=\"../../../src/alloc/raw_vec.rs.html\">raw_vec.rs</a><a href=\"../../../src/alloc/rc.rs.html\">rc.rs</a><a href=\"../../../src/alloc/slice.rs.html\">slice.rs</a><a href=\"../../../src/alloc/str.rs.html\">str.rs</a><a href=\"../../../src/alloc/string.rs.html\">string.rs</a><a href=\"../../../src/alloc/sync.rs.html\">sync.rs</a><a href=\"../../../src/alloc/task.rs.html\">task.rs</a></div></details><details class=\"dir-entry\" open=\"\"><summary>core</summary><div class=\"folders\"><details class=\"dir-entry\" open=\"\"><summary>alloc</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/core/alloc/global.rs.html\">global.rs</a><a href=\"../../../src/core/alloc/layout.rs.html\" class=\"selected\">layout.rs</a><a href=\"../../../src/core/alloc/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>array</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/core/array/ascii.rs.html\">ascii.rs</a><a href=\"../../../src/core/array/drain.rs.html\">drain.rs</a><a href=\"../../../src/core/array/equality.rs.html\">equality.rs</a><a href=\"../../../src/core/array/iter.rs.html\">iter.rs</a><a href=\"../../../src/core/array/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>ascii</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/core/ascii/ascii_char.rs.html\">ascii_char.rs</a></div></details><details class=\"dir-entry\"><summary>async_iter</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/core/async_iter/async_iter.rs.html\">async_iter.rs</a><a href=\"../../../src/core/async_iter/from_iter.rs.html\">from_iter.rs</a><a href=\"../../../src/core/async_iter/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>cell</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/core/cell/lazy.rs.html\">lazy.rs</a><a href=\"../../../src/core/cell/once.rs.html\">once.rs</a></div></details><details class=\"dir-entry\"><summary>char</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/core/char/convert.rs.html\">convert.rs</a><a href=\"../../../src/core/char/decode.rs.html\">decode.rs</a><a href=\"../../../src/core/char/methods.rs.html\">methods.rs</a><a href=\"../../../src/core/char/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>cmp</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/core/cmp/bytewise.rs.html\">bytewise.rs</a></div></details><details class=\"dir-entry\"><summary>convert</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/core/convert/mod.rs.html\">mod.rs</a><a href=\"../../../src/core/convert/num.rs.html\">num.rs</a></div></details><details class=\"dir-entry\"><summary>ffi</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/core/ffi/c_str.rs.html\">c_str.rs</a><a href=\"../../../src/core/ffi/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>fmt</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/core/fmt/builders.rs.html\">builders.rs</a><a href=\"../../../src/core/fmt/float.rs.html\">float.rs</a><a href=\"../../../src/core/fmt/mod.rs.html\">mod.rs</a><a href=\"../../../src/core/fmt/num.rs.html\">num.rs</a><a href=\"../../../src/core/fmt/rt.rs.html\">rt.rs</a></div></details><details class=\"dir-entry\"><summary>future</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/core/future/async_drop.rs.html\">async_drop.rs</a><a href=\"../../../src/core/future/future.rs.html\">future.rs</a><a href=\"../../../src/core/future/into_future.rs.html\">into_future.rs</a><a href=\"../../../src/core/future/join.rs.html\">join.rs</a><a href=\"../../../src/core/future/mod.rs.html\">mod.rs</a><a href=\"../../../src/core/future/pending.rs.html\">pending.rs</a><a href=\"../../../src/core/future/poll_fn.rs.html\">poll_fn.rs</a><a href=\"../../../src/core/future/ready.rs.html\">ready.rs</a></div></details><details class=\"dir-entry\"><summary>hash</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/core/hash/mod.rs.html\">mod.rs</a><a href=\"../../../src/core/hash/sip.rs.html\">sip.rs</a></div></details><details class=\"dir-entry\"><summary>intrinsics</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/core/intrinsics/mir.rs.html\">mir.rs</a><a href=\"../../../src/core/intrinsics/simd.rs.html\">simd.rs</a></div></details><details class=\"dir-entry\"><summary>io</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/core/io/borrowed_buf.rs.html\">borrowed_buf.rs</a><a href=\"../../../src/core/io/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>iter</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>adapters</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/core/iter/adapters/array_chunks.rs.html\">array_chunks.rs</a><a href=\"../../../src/core/iter/adapters/by_ref_sized.rs.html\">by_ref_sized.rs</a><a href=\"../../../src/core/iter/adapters/chain.rs.html\">chain.rs</a><a href=\"../../../src/core/iter/adapters/cloned.rs.html\">cloned.rs</a><a href=\"../../../src/core/iter/adapters/copied.rs.html\">copied.rs</a><a href=\"../../../src/core/iter/adapters/cycle.rs.html\">cycle.rs</a><a href=\"../../../src/core/iter/adapters/enumerate.rs.html\">enumerate.rs</a><a href=\"../../../src/core/iter/adapters/filter.rs.html\">filter.rs</a><a href=\"../../../src/core/iter/adapters/filter_map.rs.html\">filter_map.rs</a><a href=\"../../../src/core/iter/adapters/flatten.rs.html\">flatten.rs</a><a href=\"../../../src/core/iter/adapters/fuse.rs.html\">fuse.rs</a><a href=\"../../../src/core/iter/adapters/inspect.rs.html\">inspect.rs</a><a href=\"../../../src/core/iter/adapters/intersperse.rs.html\">intersperse.rs</a><a href=\"../../../src/core/iter/adapters/map.rs.html\">map.rs</a><a href=\"../../../src/core/iter/adapters/map_while.rs.html\">map_while.rs</a><a href=\"../../../src/core/iter/adapters/map_windows.rs.html\">map_windows.rs</a><a href=\"../../../src/core/iter/adapters/mod.rs.html\">mod.rs</a><a href=\"../../../src/core/iter/adapters/peekable.rs.html\">peekable.rs</a><a href=\"../../../src/core/iter/adapters/rev.rs.html\">rev.rs</a><a href=\"../../../src/core/iter/adapters/scan.rs.html\">scan.rs</a><a href=\"../../../src/core/iter/adapters/skip.rs.html\">skip.rs</a><a href=\"../../../src/core/iter/adapters/skip_while.rs.html\">skip_while.rs</a><a href=\"../../../src/core/iter/adapters/step_by.rs.html\">step_by.rs</a><a href=\"../../../src/core/iter/adapters/take.rs.html\">take.rs</a><a href=\"../../../src/core/iter/adapters/take_while.rs.html\">take_while.rs</a><a href=\"../../../src/core/iter/adapters/zip.rs.html\">zip.rs</a></div></details><details class=\"dir-entry\"><summary>sources</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/core/iter/sources/empty.rs.html\">empty.rs</a><a href=\"../../../src/core/iter/sources/from_coroutine.rs.html\">from_coroutine.rs</a><a href=\"../../../src/core/iter/sources/from_fn.rs.html\">from_fn.rs</a><a href=\"../../../src/core/iter/sources/once.rs.html\">once.rs</a><a href=\"../../../src/core/iter/sources/once_with.rs.html\">once_with.rs</a><a href=\"../../../src/core/iter/sources/repeat.rs.html\">repeat.rs</a><a href=\"../../../src/core/iter/sources/repeat_n.rs.html\">repeat_n.rs</a><a href=\"../../../src/core/iter/sources/repeat_with.rs.html\">repeat_with.rs</a><a href=\"../../../src/core/iter/sources/successors.rs.html\">successors.rs</a></div></details><details class=\"dir-entry\"><summary>traits</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/core/iter/traits/accum.rs.html\">accum.rs</a><a href=\"../../../src/core/iter/traits/collect.rs.html\">collect.rs</a><a href=\"../../../src/core/iter/traits/double_ended.rs.html\">double_ended.rs</a><a href=\"../../../src/core/iter/traits/exact_size.rs.html\">exact_size.rs</a><a href=\"../../../src/core/iter/traits/iterator.rs.html\">iterator.rs</a><a href=\"../../../src/core/iter/traits/marker.rs.html\">marker.rs</a><a href=\"../../../src/core/iter/traits/mod.rs.html\">mod.rs</a><a href=\"../../../src/core/iter/traits/unchecked_iterator.rs.html\">unchecked_iterator.rs</a></div></details></div><div class=\"files\"><a href=\"../../../src/core/iter/mod.rs.html\">mod.rs</a><a href=\"../../../src/core/iter/range.rs.html\">range.rs</a><a href=\"../../../src/core/iter/sources.rs.html\">sources.rs</a></div></details><details class=\"dir-entry\"><summary>macros</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/core/macros/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>mem</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/core/mem/manually_drop.rs.html\">manually_drop.rs</a><a href=\"../../../src/core/mem/maybe_uninit.rs.html\">maybe_uninit.rs</a><a href=\"../../../src/core/mem/mod.rs.html\">mod.rs</a><a href=\"../../../src/core/mem/transmutability.rs.html\">transmutability.rs</a></div></details><details class=\"dir-entry\"><summary>net</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/core/net/display_buffer.rs.html\">display_buffer.rs</a><a href=\"../../../src/core/net/ip_addr.rs.html\">ip_addr.rs</a><a href=\"../../../src/core/net/mod.rs.html\">mod.rs</a><a href=\"../../../src/core/net/parser.rs.html\">parser.rs</a><a href=\"../../../src/core/net/socket_addr.rs.html\">socket_addr.rs</a></div></details><details class=\"dir-entry\"><summary>num</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>dec2flt</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/core/num/dec2flt/common.rs.html\">common.rs</a><a href=\"../../../src/core/num/dec2flt/decimal.rs.html\">decimal.rs</a><a href=\"../../../src/core/num/dec2flt/float.rs.html\">float.rs</a><a href=\"../../../src/core/num/dec2flt/fpu.rs.html\">fpu.rs</a><a href=\"../../../src/core/num/dec2flt/lemire.rs.html\">lemire.rs</a><a href=\"../../../src/core/num/dec2flt/mod.rs.html\">mod.rs</a><a href=\"../../../src/core/num/dec2flt/number.rs.html\">number.rs</a><a href=\"../../../src/core/num/dec2flt/parse.rs.html\">parse.rs</a><a href=\"../../../src/core/num/dec2flt/slow.rs.html\">slow.rs</a><a href=\"../../../src/core/num/dec2flt/table.rs.html\">table.rs</a></div></details><details class=\"dir-entry\"><summary>flt2dec</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>strategy</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/core/num/flt2dec/strategy/dragon.rs.html\">dragon.rs</a><a href=\"../../../src/core/num/flt2dec/strategy/grisu.rs.html\">grisu.rs</a></div></details></div><div class=\"files\"><a href=\"../../../src/core/num/flt2dec/decoder.rs.html\">decoder.rs</a><a href=\"../../../src/core/num/flt2dec/estimator.rs.html\">estimator.rs</a><a href=\"../../../src/core/num/flt2dec/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>shells</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/core/num/shells/i128.rs.html\">i128.rs</a><a href=\"../../../src/core/num/shells/i16.rs.html\">i16.rs</a><a href=\"../../../src/core/num/shells/i32.rs.html\">i32.rs</a><a href=\"../../../src/core/num/shells/i64.rs.html\">i64.rs</a><a href=\"../../../src/core/num/shells/i8.rs.html\">i8.rs</a><a href=\"../../../src/core/num/shells/int_macros.rs.html\">int_macros.rs</a><a href=\"../../../src/core/num/shells/isize.rs.html\">isize.rs</a><a href=\"../../../src/core/num/shells/u128.rs.html\">u128.rs</a><a href=\"../../../src/core/num/shells/u16.rs.html\">u16.rs</a><a href=\"../../../src/core/num/shells/u32.rs.html\">u32.rs</a><a href=\"../../../src/core/num/shells/u64.rs.html\">u64.rs</a><a href=\"../../../src/core/num/shells/u8.rs.html\">u8.rs</a><a href=\"../../../src/core/num/shells/usize.rs.html\">usize.rs</a></div></details></div><div class=\"files\"><a href=\"../../../src/core/num/bignum.rs.html\">bignum.rs</a><a href=\"../../../src/core/num/diy_float.rs.html\">diy_float.rs</a><a href=\"../../../src/core/num/error.rs.html\">error.rs</a><a href=\"../../../src/core/num/f128.rs.html\">f128.rs</a><a href=\"../../../src/core/num/f16.rs.html\">f16.rs</a><a href=\"../../../src/core/num/f32.rs.html\">f32.rs</a><a href=\"../../../src/core/num/f64.rs.html\">f64.rs</a><a href=\"../../../src/core/num/fmt.rs.html\">fmt.rs</a><a href=\"../../../src/core/num/int_log10.rs.html\">int_log10.rs</a><a href=\"../../../src/core/num/int_macros.rs.html\">int_macros.rs</a><a href=\"../../../src/core/num/mod.rs.html\">mod.rs</a><a href=\"../../../src/core/num/nonzero.rs.html\">nonzero.rs</a><a href=\"../../../src/core/num/overflow_panic.rs.html\">overflow_panic.rs</a><a href=\"../../../src/core/num/saturating.rs.html\">saturating.rs</a><a href=\"../../../src/core/num/uint_macros.rs.html\">uint_macros.rs</a><a href=\"../../../src/core/num/wrapping.rs.html\">wrapping.rs</a></div></details><details class=\"dir-entry\"><summary>ops</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/core/ops/arith.rs.html\">arith.rs</a><a href=\"../../../src/core/ops/async_function.rs.html\">async_function.rs</a><a href=\"../../../src/core/ops/bit.rs.html\">bit.rs</a><a href=\"../../../src/core/ops/control_flow.rs.html\">control_flow.rs</a><a href=\"../../../src/core/ops/coroutine.rs.html\">coroutine.rs</a><a href=\"../../../src/core/ops/deref.rs.html\">deref.rs</a><a href=\"../../../src/core/ops/drop.rs.html\">drop.rs</a><a href=\"../../../src/core/ops/function.rs.html\">function.rs</a><a href=\"../../../src/core/ops/index.rs.html\">index.rs</a><a href=\"../../../src/core/ops/index_range.rs.html\">index_range.rs</a><a href=\"../../../src/core/ops/mod.rs.html\">mod.rs</a><a href=\"../../../src/core/ops/range.rs.html\">range.rs</a><a href=\"../../../src/core/ops/try_trait.rs.html\">try_trait.rs</a><a href=\"../../../src/core/ops/unsize.rs.html\">unsize.rs</a></div></details><details class=\"dir-entry\"><summary>panic</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/core/panic/location.rs.html\">location.rs</a><a href=\"../../../src/core/panic/panic_info.rs.html\">panic_info.rs</a><a href=\"../../../src/core/panic/unwind_safe.rs.html\">unwind_safe.rs</a></div></details><details class=\"dir-entry\"><summary>portable-simd</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>crates</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>core_simd</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>src</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>masks</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/core/portable-simd/crates/core_simd/src/masks/full_masks.rs.html\">full_masks.rs</a></div></details><details class=\"dir-entry\"><summary>ops</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/core/portable-simd/crates/core_simd/src/ops/assign.rs.html\">assign.rs</a><a href=\"../../../src/core/portable-simd/crates/core_simd/src/ops/deref.rs.html\">deref.rs</a><a href=\"../../../src/core/portable-simd/crates/core_simd/src/ops/shift_scalar.rs.html\">shift_scalar.rs</a><a href=\"../../../src/core/portable-simd/crates/core_simd/src/ops/unary.rs.html\">unary.rs</a></div></details><details class=\"dir-entry\"><summary>simd</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>cmp</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/core/portable-simd/crates/core_simd/src/simd/cmp/eq.rs.html\">eq.rs</a><a href=\"../../../src/core/portable-simd/crates/core_simd/src/simd/cmp/ord.rs.html\">ord.rs</a></div></details><details class=\"dir-entry\"><summary>num</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/core/portable-simd/crates/core_simd/src/simd/num/float.rs.html\">float.rs</a><a href=\"../../../src/core/portable-simd/crates/core_simd/src/simd/num/int.rs.html\">int.rs</a><a href=\"../../../src/core/portable-simd/crates/core_simd/src/simd/num/uint.rs.html\">uint.rs</a></div></details><details class=\"dir-entry\"><summary>ptr</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/core/portable-simd/crates/core_simd/src/simd/ptr/const_ptr.rs.html\">const_ptr.rs</a><a href=\"../../../src/core/portable-simd/crates/core_simd/src/simd/ptr/mut_ptr.rs.html\">mut_ptr.rs</a></div></details></div><div class=\"files\"><a href=\"../../../src/core/portable-simd/crates/core_simd/src/simd/cmp.rs.html\">cmp.rs</a><a href=\"../../../src/core/portable-simd/crates/core_simd/src/simd/num.rs.html\">num.rs</a><a href=\"../../../src/core/portable-simd/crates/core_simd/src/simd/prelude.rs.html\">prelude.rs</a><a href=\"../../../src/core/portable-simd/crates/core_simd/src/simd/ptr.rs.html\">ptr.rs</a></div></details><details class=\"dir-entry\"><summary>vendor</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/core/portable-simd/crates/core_simd/src/vendor/x86.rs.html\">x86.rs</a></div></details></div><div class=\"files\"><a href=\"../../../src/core/portable-simd/crates/core_simd/src/alias.rs.html\">alias.rs</a><a href=\"../../../src/core/portable-simd/crates/core_simd/src/cast.rs.html\">cast.rs</a><a href=\"../../../src/core/portable-simd/crates/core_simd/src/fmt.rs.html\">fmt.rs</a><a href=\"../../../src/core/portable-simd/crates/core_simd/src/iter.rs.html\">iter.rs</a><a href=\"../../../src/core/portable-simd/crates/core_simd/src/lane_count.rs.html\">lane_count.rs</a><a href=\"../../../src/core/portable-simd/crates/core_simd/src/masks.rs.html\">masks.rs</a><a href=\"../../../src/core/portable-simd/crates/core_simd/src/mod.rs.html\">mod.rs</a><a href=\"../../../src/core/portable-simd/crates/core_simd/src/ops.rs.html\">ops.rs</a><a href=\"../../../src/core/portable-simd/crates/core_simd/src/select.rs.html\">select.rs</a><a href=\"../../../src/core/portable-simd/crates/core_simd/src/swizzle.rs.html\">swizzle.rs</a><a href=\"../../../src/core/portable-simd/crates/core_simd/src/swizzle_dyn.rs.html\">swizzle_dyn.rs</a><a href=\"../../../src/core/portable-simd/crates/core_simd/src/to_bytes.rs.html\">to_bytes.rs</a><a href=\"../../../src/core/portable-simd/crates/core_simd/src/vector.rs.html\">vector.rs</a><a href=\"../../../src/core/portable-simd/crates/core_simd/src/vendor.rs.html\">vendor.rs</a></div></details></div><div class=\"files\"></div></details></div><div class=\"files\"></div></details></div><div class=\"files\"></div></details><details class=\"dir-entry\"><summary>prelude</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/core/prelude/common.rs.html\">common.rs</a><a href=\"../../../src/core/prelude/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>ptr</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/core/ptr/alignment.rs.html\">alignment.rs</a><a href=\"../../../src/core/ptr/const_ptr.rs.html\">const_ptr.rs</a><a href=\"../../../src/core/ptr/metadata.rs.html\">metadata.rs</a><a href=\"../../../src/core/ptr/mod.rs.html\">mod.rs</a><a href=\"../../../src/core/ptr/mut_ptr.rs.html\">mut_ptr.rs</a><a href=\"../../../src/core/ptr/non_null.rs.html\">non_null.rs</a><a href=\"../../../src/core/ptr/unique.rs.html\">unique.rs</a></div></details><details class=\"dir-entry\"><summary>slice</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>iter</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/core/slice/iter/macros.rs.html\">macros.rs</a></div></details></div><div class=\"files\"><a href=\"../../../src/core/slice/ascii.rs.html\">ascii.rs</a><a href=\"../../../src/core/slice/cmp.rs.html\">cmp.rs</a><a href=\"../../../src/core/slice/index.rs.html\">index.rs</a><a href=\"../../../src/core/slice/iter.rs.html\">iter.rs</a><a href=\"../../../src/core/slice/memchr.rs.html\">memchr.rs</a><a href=\"../../../src/core/slice/mod.rs.html\">mod.rs</a><a href=\"../../../src/core/slice/raw.rs.html\">raw.rs</a><a href=\"../../../src/core/slice/rotate.rs.html\">rotate.rs</a><a href=\"../../../src/core/slice/select.rs.html\">select.rs</a><a href=\"../../../src/core/slice/sort.rs.html\">sort.rs</a><a href=\"../../../src/core/slice/specialize.rs.html\">specialize.rs</a></div></details><details class=\"dir-entry\"><summary>stdarch</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>crates</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>core_arch</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>src</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>aarch64</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>neon</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/core/stdarch/crates/core_arch/src/aarch64/neon/generated.rs.html\">generated.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/aarch64/neon/mod.rs.html\">mod.rs</a></div></details></div><div class=\"files\"><a href=\"../../../src/core/stdarch/crates/core_arch/src/aarch64/mod.rs.html\">mod.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/aarch64/prefetch.rs.html\">prefetch.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/aarch64/tme.rs.html\">tme.rs</a></div></details><details class=\"dir-entry\"><summary>arm</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/core/stdarch/crates/core_arch/src/arm/dsp.rs.html\">dsp.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/arm/mod.rs.html\">mod.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/arm/neon.rs.html\">neon.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/arm/sat.rs.html\">sat.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/arm/simd32.rs.html\">simd32.rs</a></div></details><details class=\"dir-entry\"><summary>arm_shared</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>barrier</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/core/stdarch/crates/core_arch/src/arm_shared/barrier/cp15.rs.html\">cp15.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/arm_shared/barrier/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>neon</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/core/stdarch/crates/core_arch/src/arm_shared/neon/generated.rs.html\">generated.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/arm_shared/neon/mod.rs.html\">mod.rs</a></div></details></div><div class=\"files\"><a href=\"../../../src/core/stdarch/crates/core_arch/src/arm_shared/crc.rs.html\">crc.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/arm_shared/crypto.rs.html\">crypto.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/arm_shared/hints.rs.html\">hints.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/arm_shared/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>loongarch64</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>lasx</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/core/stdarch/crates/core_arch/src/loongarch64/lasx/generated.rs.html\">generated.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/loongarch64/lasx/mod.rs.html\">mod.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/loongarch64/lasx/types.rs.html\">types.rs</a></div></details><details class=\"dir-entry\"><summary>lsx</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/core/stdarch/crates/core_arch/src/loongarch64/lsx/generated.rs.html\">generated.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/loongarch64/lsx/mod.rs.html\">mod.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/loongarch64/lsx/types.rs.html\">types.rs</a></div></details></div><div class=\"files\"><a href=\"../../../src/core/stdarch/crates/core_arch/src/loongarch64/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>mips</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/core/stdarch/crates/core_arch/src/mips/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>nvptx</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/core/stdarch/crates/core_arch/src/nvptx/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>powerpc</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/core/stdarch/crates/core_arch/src/powerpc/altivec.rs.html\">altivec.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/powerpc/macros.rs.html\">macros.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/powerpc/mod.rs.html\">mod.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/powerpc/vsx.rs.html\">vsx.rs</a></div></details><details class=\"dir-entry\"><summary>powerpc64</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/core/stdarch/crates/core_arch/src/powerpc64/mod.rs.html\">mod.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/powerpc64/vsx.rs.html\">vsx.rs</a></div></details><details class=\"dir-entry\"><summary>riscv32</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/core/stdarch/crates/core_arch/src/riscv32/mod.rs.html\">mod.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/riscv32/zk.rs.html\">zk.rs</a></div></details><details class=\"dir-entry\"><summary>riscv64</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/core/stdarch/crates/core_arch/src/riscv64/mod.rs.html\">mod.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/riscv64/zk.rs.html\">zk.rs</a></div></details><details class=\"dir-entry\"><summary>riscv_shared</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/core/stdarch/crates/core_arch/src/riscv_shared/mod.rs.html\">mod.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/riscv_shared/p.rs.html\">p.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/riscv_shared/zb.rs.html\">zb.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/riscv_shared/zk.rs.html\">zk.rs</a></div></details><details class=\"dir-entry\"><summary>wasm32</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/core/stdarch/crates/core_arch/src/wasm32/atomic.rs.html\">atomic.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/wasm32/memory.rs.html\">memory.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/wasm32/mod.rs.html\">mod.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/wasm32/relaxed_simd.rs.html\">relaxed_simd.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/wasm32/simd128.rs.html\">simd128.rs</a></div></details><details class=\"dir-entry\"><summary>x86</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86/abm.rs.html\">abm.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86/adx.rs.html\">adx.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86/aes.rs.html\">aes.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86/avx.rs.html\">avx.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86/avx2.rs.html\">avx2.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86/avx512bf16.rs.html\">avx512bf16.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86/avx512bitalg.rs.html\">avx512bitalg.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86/avx512bw.rs.html\">avx512bw.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86/avx512cd.rs.html\">avx512cd.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86/avx512f.rs.html\">avx512f.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86/avx512ifma.rs.html\">avx512ifma.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86/avx512vbmi.rs.html\">avx512vbmi.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86/avx512vbmi2.rs.html\">avx512vbmi2.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86/avx512vnni.rs.html\">avx512vnni.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs.html\">avx512vpopcntdq.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86/bmi1.rs.html\">bmi1.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86/bmi2.rs.html\">bmi2.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86/bswap.rs.html\">bswap.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86/bt.rs.html\">bt.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86/cpuid.rs.html\">cpuid.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86/eflags.rs.html\">eflags.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86/f16c.rs.html\">f16c.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86/fma.rs.html\">fma.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86/fxsr.rs.html\">fxsr.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86/gfni.rs.html\">gfni.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86/macros.rs.html\">macros.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86/mod.rs.html\">mod.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86/pclmulqdq.rs.html\">pclmulqdq.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86/rdrand.rs.html\">rdrand.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86/rdtsc.rs.html\">rdtsc.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86/rtm.rs.html\">rtm.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86/sha.rs.html\">sha.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86/sse.rs.html\">sse.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86/sse2.rs.html\">sse2.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86/sse3.rs.html\">sse3.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86/sse41.rs.html\">sse41.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86/sse42.rs.html\">sse42.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86/sse4a.rs.html\">sse4a.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86/ssse3.rs.html\">ssse3.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86/tbm.rs.html\">tbm.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86/vaes.rs.html\">vaes.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86/vpclmulqdq.rs.html\">vpclmulqdq.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86/xsave.rs.html\">xsave.rs</a></div></details><details class=\"dir-entry\"><summary>x86_64</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86_64/abm.rs.html\">abm.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86_64/adx.rs.html\">adx.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86_64/avx.rs.html\">avx.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86_64/avx2.rs.html\">avx2.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86_64/avx512f.rs.html\">avx512f.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86_64/bmi.rs.html\">bmi.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86_64/bmi2.rs.html\">bmi2.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86_64/bswap.rs.html\">bswap.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86_64/bt.rs.html\">bt.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86_64/cmpxchg16b.rs.html\">cmpxchg16b.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86_64/fxsr.rs.html\">fxsr.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86_64/macros.rs.html\">macros.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86_64/mod.rs.html\">mod.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86_64/rdrand.rs.html\">rdrand.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86_64/sse.rs.html\">sse.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86_64/sse2.rs.html\">sse2.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86_64/sse41.rs.html\">sse41.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86_64/sse42.rs.html\">sse42.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/x86_64/xsave.rs.html\">xsave.rs</a></div></details></div><div class=\"files\"><a href=\"../../../src/core/stdarch/crates/core_arch/src/macros.rs.html\">macros.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/mod.rs.html\">mod.rs</a><a href=\"../../../src/core/stdarch/crates/core_arch/src/simd.rs.html\">simd.rs</a></div></details></div><div class=\"files\"></div></details></div><div class=\"files\"></div></details></div><div class=\"files\"></div></details><details class=\"dir-entry\"><summary>str</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/core/str/converts.rs.html\">converts.rs</a><a href=\"../../../src/core/str/count.rs.html\">count.rs</a><a href=\"../../../src/core/str/error.rs.html\">error.rs</a><a href=\"../../../src/core/str/iter.rs.html\">iter.rs</a><a href=\"../../../src/core/str/lossy.rs.html\">lossy.rs</a><a href=\"../../../src/core/str/mod.rs.html\">mod.rs</a><a href=\"../../../src/core/str/pattern.rs.html\">pattern.rs</a><a href=\"../../../src/core/str/traits.rs.html\">traits.rs</a><a href=\"../../../src/core/str/validations.rs.html\">validations.rs</a></div></details><details class=\"dir-entry\"><summary>sync</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/core/sync/atomic.rs.html\">atomic.rs</a><a href=\"../../../src/core/sync/exclusive.rs.html\">exclusive.rs</a><a href=\"../../../src/core/sync/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>task</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/core/task/mod.rs.html\">mod.rs</a><a href=\"../../../src/core/task/poll.rs.html\">poll.rs</a><a href=\"../../../src/core/task/ready.rs.html\">ready.rs</a><a href=\"../../../src/core/task/wake.rs.html\">wake.rs</a></div></details><details class=\"dir-entry\"><summary>unicode</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/core/unicode/mod.rs.html\">mod.rs</a><a href=\"../../../src/core/unicode/printable.rs.html\">printable.rs</a><a href=\"../../../src/core/unicode/unicode_data.rs.html\">unicode_data.rs</a></div></details></div><div class=\"files\"><a href=\"../../../src/core/any.rs.html\">any.rs</a><a href=\"../../../src/core/arch.rs.html\">arch.rs</a><a href=\"../../../src/core/ascii.rs.html\">ascii.rs</a><a href=\"../../../src/core/asserting.rs.html\">asserting.rs</a><a href=\"../../../src/core/bool.rs.html\">bool.rs</a><a href=\"../../../src/core/borrow.rs.html\">borrow.rs</a><a href=\"../../../src/core/cell.rs.html\">cell.rs</a><a href=\"../../../src/core/clone.rs.html\">clone.rs</a><a href=\"../../../src/core/cmp.rs.html\">cmp.rs</a><a href=\"../../../src/core/default.rs.html\">default.rs</a><a href=\"../../../src/core/error.rs.html\">error.rs</a><a href=\"../../../src/core/escape.rs.html\">escape.rs</a><a href=\"../../../src/core/hint.rs.html\">hint.rs</a><a href=\"../../../src/core/internal_macros.rs.html\">internal_macros.rs</a><a href=\"../../../src/core/intrinsics.rs.html\">intrinsics.rs</a><a href=\"../../../src/core/lib.rs.html\">lib.rs</a><a href=\"../../../src/core/marker.rs.html\">marker.rs</a><a href=\"../../../src/core/option.rs.html\">option.rs</a><a href=\"../../../src/core/panic.rs.html\">panic.rs</a><a href=\"../../../src/core/panicking.rs.html\">panicking.rs</a><a href=\"../../../src/core/pat.rs.html\">pat.rs</a><a href=\"../../../src/core/pin.rs.html\">pin.rs</a><a href=\"../../../src/core/primitive.rs.html\">primitive.rs</a><a href=\"../../../src/core/primitive_docs.rs.html\">primitive_docs.rs</a><a href=\"../../../src/core/result.rs.html\">result.rs</a><a href=\"../../../src/core/time.rs.html\">time.rs</a><a href=\"../../../src/core/tuple.rs.html\">tuple.rs</a><a href=\"../../../src/core/ub_checks.rs.html\">ub_checks.rs</a><a href=\"../../../src/core/unit.rs.html\">unit.rs</a></div></details><details class=\"dir-entry\"><summary>proc_macro</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>bridge</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/proc_macro/bridge/arena.rs.html\">arena.rs</a><a href=\"../../../src/proc_macro/bridge/buffer.rs.html\">buffer.rs</a><a href=\"../../../src/proc_macro/bridge/client.rs.html\">client.rs</a><a href=\"../../../src/proc_macro/bridge/closure.rs.html\">closure.rs</a><a href=\"../../../src/proc_macro/bridge/fxhash.rs.html\">fxhash.rs</a><a href=\"../../../src/proc_macro/bridge/handle.rs.html\">handle.rs</a><a href=\"../../../src/proc_macro/bridge/mod.rs.html\">mod.rs</a><a href=\"../../../src/proc_macro/bridge/rpc.rs.html\">rpc.rs</a><a href=\"../../../src/proc_macro/bridge/selfless_reify.rs.html\">selfless_reify.rs</a><a href=\"../../../src/proc_macro/bridge/server.rs.html\">server.rs</a><a href=\"../../../src/proc_macro/bridge/symbol.rs.html\">symbol.rs</a></div></details></div><div class=\"files\"><a href=\"../../../src/proc_macro/diagnostic.rs.html\">diagnostic.rs</a><a href=\"../../../src/proc_macro/lib.rs.html\">lib.rs</a><a href=\"../../../src/proc_macro/quote.rs.html\">quote.rs</a></div></details><details class=\"dir-entry\"><summary>std</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>backtrace</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>src</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>backtrace</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/std/backtrace/src/backtrace/libunwind.rs.html\">libunwind.rs</a><a href=\"../../../src/std/backtrace/src/backtrace/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>symbolize</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>gimli</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/std/backtrace/src/symbolize/gimli/elf.rs.html\">elf.rs</a><a href=\"../../../src/std/backtrace/src/symbolize/gimli/libs_dl_iterate_phdr.rs.html\">libs_dl_iterate_phdr.rs</a><a href=\"../../../src/std/backtrace/src/symbolize/gimli/mmap_unix.rs.html\">mmap_unix.rs</a><a href=\"../../../src/std/backtrace/src/symbolize/gimli/parse_running_mmaps_unix.rs.html\">parse_running_mmaps_unix.rs</a><a href=\"../../../src/std/backtrace/src/symbolize/gimli/stash.rs.html\">stash.rs</a></div></details></div><div class=\"files\"><a href=\"../../../src/std/backtrace/src/symbolize/gimli.rs.html\">gimli.rs</a><a href=\"../../../src/std/backtrace/src/symbolize/mod.rs.html\">mod.rs</a></div></details></div><div class=\"files\"><a href=\"../../../src/std/backtrace/src/lib.rs.html\">lib.rs</a><a href=\"../../../src/std/backtrace/src/print.rs.html\">print.rs</a><a href=\"../../../src/std/backtrace/src/types.rs.html\">types.rs</a></div></details></div><div class=\"files\"></div></details><details class=\"dir-entry\"><summary>collections</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>hash</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/std/collections/hash/map.rs.html\">map.rs</a><a href=\"../../../src/std/collections/hash/mod.rs.html\">mod.rs</a><a href=\"../../../src/std/collections/hash/set.rs.html\">set.rs</a></div></details></div><div class=\"files\"><a href=\"../../../src/std/collections/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>core</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>src</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/std/core/src/primitive_docs.rs.html\">primitive_docs.rs</a></div></details></div><div class=\"files\"></div></details><details class=\"dir-entry\"><summary>ffi</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/std/ffi/c_str.rs.html\">c_str.rs</a><a href=\"../../../src/std/ffi/mod.rs.html\">mod.rs</a><a href=\"../../../src/std/ffi/os_str.rs.html\">os_str.rs</a></div></details><details class=\"dir-entry\"><summary>hash</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/std/hash/mod.rs.html\">mod.rs</a><a href=\"../../../src/std/hash/random.rs.html\">random.rs</a></div></details><details class=\"dir-entry\"><summary>io</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>buffered</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>bufreader</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/std/io/buffered/bufreader/buffer.rs.html\">buffer.rs</a></div></details></div><div class=\"files\"><a href=\"../../../src/std/io/buffered/bufreader.rs.html\">bufreader.rs</a><a href=\"../../../src/std/io/buffered/bufwriter.rs.html\">bufwriter.rs</a><a href=\"../../../src/std/io/buffered/linewriter.rs.html\">linewriter.rs</a><a href=\"../../../src/std/io/buffered/linewritershim.rs.html\">linewritershim.rs</a><a href=\"../../../src/std/io/buffered/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>error</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/std/io/error/repr_bitpacked.rs.html\">repr_bitpacked.rs</a></div></details></div><div class=\"files\"><a href=\"../../../src/std/io/copy.rs.html\">copy.rs</a><a href=\"../../../src/std/io/cursor.rs.html\">cursor.rs</a><a href=\"../../../src/std/io/error.rs.html\">error.rs</a><a href=\"../../../src/std/io/impls.rs.html\">impls.rs</a><a href=\"../../../src/std/io/mod.rs.html\">mod.rs</a><a href=\"../../../src/std/io/prelude.rs.html\">prelude.rs</a><a href=\"../../../src/std/io/stdio.rs.html\">stdio.rs</a><a href=\"../../../src/std/io/util.rs.html\">util.rs</a></div></details><details class=\"dir-entry\"><summary>net</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/std/net/ip_addr.rs.html\">ip_addr.rs</a><a href=\"../../../src/std/net/mod.rs.html\">mod.rs</a><a href=\"../../../src/std/net/socket_addr.rs.html\">socket_addr.rs</a><a href=\"../../../src/std/net/tcp.rs.html\">tcp.rs</a><a href=\"../../../src/std/net/udp.rs.html\">udp.rs</a></div></details><details class=\"dir-entry\"><summary>os</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>fd</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/std/os/fd/mod.rs.html\">mod.rs</a><a href=\"../../../src/std/os/fd/net.rs.html\">net.rs</a><a href=\"../../../src/std/os/fd/owned.rs.html\">owned.rs</a><a href=\"../../../src/std/os/fd/raw.rs.html\">raw.rs</a></div></details><details class=\"dir-entry\"><summary>linux</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/std/os/linux/fs.rs.html\">fs.rs</a><a href=\"../../../src/std/os/linux/mod.rs.html\">mod.rs</a><a href=\"../../../src/std/os/linux/net.rs.html\">net.rs</a><a href=\"../../../src/std/os/linux/process.rs.html\">process.rs</a><a href=\"../../../src/std/os/linux/raw.rs.html\">raw.rs</a></div></details><details class=\"dir-entry\"><summary>net</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>linux_ext</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/std/os/net/linux_ext/addr.rs.html\">addr.rs</a><a href=\"../../../src/std/os/net/linux_ext/mod.rs.html\">mod.rs</a><a href=\"../../../src/std/os/net/linux_ext/socket.rs.html\">socket.rs</a><a href=\"../../../src/std/os/net/linux_ext/tcp.rs.html\">tcp.rs</a></div></details></div><div class=\"files\"><a href=\"../../../src/std/os/net/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>raw</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/std/os/raw/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>unix</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>ffi</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/std/os/unix/ffi/mod.rs.html\">mod.rs</a><a href=\"../../../src/std/os/unix/ffi/os_str.rs.html\">os_str.rs</a></div></details><details class=\"dir-entry\"><summary>io</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/std/os/unix/io/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>net</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/std/os/unix/net/addr.rs.html\">addr.rs</a><a href=\"../../../src/std/os/unix/net/ancillary.rs.html\">ancillary.rs</a><a href=\"../../../src/std/os/unix/net/datagram.rs.html\">datagram.rs</a><a href=\"../../../src/std/os/unix/net/listener.rs.html\">listener.rs</a><a href=\"../../../src/std/os/unix/net/mod.rs.html\">mod.rs</a><a href=\"../../../src/std/os/unix/net/stream.rs.html\">stream.rs</a><a href=\"../../../src/std/os/unix/net/ucred.rs.html\">ucred.rs</a></div></details></div><div class=\"files\"><a href=\"../../../src/std/os/unix/fs.rs.html\">fs.rs</a><a href=\"../../../src/std/os/unix/mod.rs.html\">mod.rs</a><a href=\"../../../src/std/os/unix/process.rs.html\">process.rs</a><a href=\"../../../src/std/os/unix/raw.rs.html\">raw.rs</a><a href=\"../../../src/std/os/unix/thread.rs.html\">thread.rs</a></div></details><details class=\"dir-entry\"><summary>wasi</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>io</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/std/os/wasi/io/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>net</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/std/os/wasi/net/mod.rs.html\">mod.rs</a></div></details></div><div class=\"files\"><a href=\"../../../src/std/os/wasi/ffi.rs.html\">ffi.rs</a><a href=\"../../../src/std/os/wasi/fs.rs.html\">fs.rs</a><a href=\"../../../src/std/os/wasi/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>wasip2</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/std/os/wasip2/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>windows</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>io</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/std/os/windows/io/handle.rs.html\">handle.rs</a><a href=\"../../../src/std/os/windows/io/mod.rs.html\">mod.rs</a><a href=\"../../../src/std/os/windows/io/raw.rs.html\">raw.rs</a><a href=\"../../../src/std/os/windows/io/socket.rs.html\">socket.rs</a></div></details></div><div class=\"files\"><a href=\"../../../src/std/os/windows/ffi.rs.html\">ffi.rs</a><a href=\"../../../src/std/os/windows/fs.rs.html\">fs.rs</a><a href=\"../../../src/std/os/windows/mod.rs.html\">mod.rs</a><a href=\"../../../src/std/os/windows/process.rs.html\">process.rs</a><a href=\"../../../src/std/os/windows/raw.rs.html\">raw.rs</a><a href=\"../../../src/std/os/windows/thread.rs.html\">thread.rs</a></div></details></div><div class=\"files\"><a href=\"../../../src/std/os/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>portable-simd</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>crates</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>std_float</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>src</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/std/portable-simd/crates/std_float/src/lib.rs.html\">lib.rs</a></div></details></div><div class=\"files\"></div></details></div><div class=\"files\"></div></details></div><div class=\"files\"></div></details><details class=\"dir-entry\"><summary>prelude</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/std/prelude/common.rs.html\">common.rs</a><a href=\"../../../src/std/prelude/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>sync</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>mpmc</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/std/sync/mpmc/array.rs.html\">array.rs</a><a href=\"../../../src/std/sync/mpmc/context.rs.html\">context.rs</a><a href=\"../../../src/std/sync/mpmc/counter.rs.html\">counter.rs</a><a href=\"../../../src/std/sync/mpmc/error.rs.html\">error.rs</a><a href=\"../../../src/std/sync/mpmc/list.rs.html\">list.rs</a><a href=\"../../../src/std/sync/mpmc/mod.rs.html\">mod.rs</a><a href=\"../../../src/std/sync/mpmc/select.rs.html\">select.rs</a><a href=\"../../../src/std/sync/mpmc/utils.rs.html\">utils.rs</a><a href=\"../../../src/std/sync/mpmc/waker.rs.html\">waker.rs</a><a href=\"../../../src/std/sync/mpmc/zero.rs.html\">zero.rs</a></div></details><details class=\"dir-entry\"><summary>mpsc</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/std/sync/mpsc/mod.rs.html\">mod.rs</a></div></details></div><div class=\"files\"><a href=\"../../../src/std/sync/barrier.rs.html\">barrier.rs</a><a href=\"../../../src/std/sync/condvar.rs.html\">condvar.rs</a><a href=\"../../../src/std/sync/lazy_lock.rs.html\">lazy_lock.rs</a><a href=\"../../../src/std/sync/mod.rs.html\">mod.rs</a><a href=\"../../../src/std/sync/mutex.rs.html\">mutex.rs</a><a href=\"../../../src/std/sync/once.rs.html\">once.rs</a><a href=\"../../../src/std/sync/once_lock.rs.html\">once_lock.rs</a><a href=\"../../../src/std/sync/poison.rs.html\">poison.rs</a><a href=\"../../../src/std/sync/reentrant_lock.rs.html\">reentrant_lock.rs</a><a href=\"../../../src/std/sync/rwlock.rs.html\">rwlock.rs</a></div></details><details class=\"dir-entry\"><summary>sys</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>os_str</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/std/sys/os_str/bytes.rs.html\">bytes.rs</a><a href=\"../../../src/std/sys/os_str/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>pal</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>common</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/std/sys/pal/common/alloc.rs.html\">alloc.rs</a><a href=\"../../../src/std/sys/pal/common/mod.rs.html\">mod.rs</a><a href=\"../../../src/std/sys/pal/common/small_c_string.rs.html\">small_c_string.rs</a></div></details><details class=\"dir-entry\"><summary>unix</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>process</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/std/sys/pal/unix/process/mod.rs.html\">mod.rs</a><a href=\"../../../src/std/sys/pal/unix/process/process_common.rs.html\">process_common.rs</a><a href=\"../../../src/std/sys/pal/unix/process/process_unix.rs.html\">process_unix.rs</a></div></details></div><div class=\"files\"><a href=\"../../../src/std/sys/pal/unix/alloc.rs.html\">alloc.rs</a><a href=\"../../../src/std/sys/pal/unix/args.rs.html\">args.rs</a><a href=\"../../../src/std/sys/pal/unix/env.rs.html\">env.rs</a><a href=\"../../../src/std/sys/pal/unix/fd.rs.html\">fd.rs</a><a href=\"../../../src/std/sys/pal/unix/fs.rs.html\">fs.rs</a><a href=\"../../../src/std/sys/pal/unix/futex.rs.html\">futex.rs</a><a href=\"../../../src/std/sys/pal/unix/io.rs.html\">io.rs</a><a href=\"../../../src/std/sys/pal/unix/kernel_copy.rs.html\">kernel_copy.rs</a><a href=\"../../../src/std/sys/pal/unix/mod.rs.html\">mod.rs</a><a href=\"../../../src/std/sys/pal/unix/net.rs.html\">net.rs</a><a href=\"../../../src/std/sys/pal/unix/os.rs.html\">os.rs</a><a href=\"../../../src/std/sys/pal/unix/pipe.rs.html\">pipe.rs</a><a href=\"../../../src/std/sys/pal/unix/rand.rs.html\">rand.rs</a><a href=\"../../../src/std/sys/pal/unix/stack_overflow.rs.html\">stack_overflow.rs</a><a href=\"../../../src/std/sys/pal/unix/stdio.rs.html\">stdio.rs</a><a href=\"../../../src/std/sys/pal/unix/thread.rs.html\">thread.rs</a><a href=\"../../../src/std/sys/pal/unix/thread_local_dtor.rs.html\">thread_local_dtor.rs</a><a href=\"../../../src/std/sys/pal/unix/thread_local_key.rs.html\">thread_local_key.rs</a><a href=\"../../../src/std/sys/pal/unix/time.rs.html\">time.rs</a><a href=\"../../../src/std/sys/pal/unix/weak.rs.html\">weak.rs</a></div></details></div><div class=\"files\"><a href=\"../../../src/std/sys/pal/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>path</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/std/sys/path/mod.rs.html\">mod.rs</a><a href=\"../../../src/std/sys/path/unix.rs.html\">unix.rs</a></div></details><details class=\"dir-entry\"><summary>personality</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>dwarf</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/std/sys/personality/dwarf/eh.rs.html\">eh.rs</a><a href=\"../../../src/std/sys/personality/dwarf/mod.rs.html\">mod.rs</a></div></details></div><div class=\"files\"><a href=\"../../../src/std/sys/personality/gcc.rs.html\">gcc.rs</a><a href=\"../../../src/std/sys/personality/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>sync</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>condvar</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/std/sys/sync/condvar/futex.rs.html\">futex.rs</a><a href=\"../../../src/std/sys/sync/condvar/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>mutex</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/std/sys/sync/mutex/futex.rs.html\">futex.rs</a><a href=\"../../../src/std/sys/sync/mutex/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>once</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/std/sys/sync/once/futex.rs.html\">futex.rs</a><a href=\"../../../src/std/sys/sync/once/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>rwlock</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/std/sys/sync/rwlock/futex.rs.html\">futex.rs</a><a href=\"../../../src/std/sys/sync/rwlock/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>thread_parking</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/std/sys/sync/thread_parking/futex.rs.html\">futex.rs</a><a href=\"../../../src/std/sys/sync/thread_parking/mod.rs.html\">mod.rs</a></div></details></div><div class=\"files\"><a href=\"../../../src/std/sys/sync/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>thread_local</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>fast_local</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/std/sys/thread_local/fast_local/eager.rs.html\">eager.rs</a><a href=\"../../../src/std/sys/thread_local/fast_local/lazy.rs.html\">lazy.rs</a><a href=\"../../../src/std/sys/thread_local/fast_local/mod.rs.html\">mod.rs</a></div></details></div><div class=\"files\"><a href=\"../../../src/std/sys/thread_local/mod.rs.html\">mod.rs</a></div></details></div><div class=\"files\"><a href=\"../../../src/std/sys/cmath.rs.html\">cmath.rs</a><a href=\"../../../src/std/sys/mod.rs.html\">mod.rs</a></div></details><details class=\"dir-entry\"><summary>sys_common</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/std/sys_common/backtrace.rs.html\">backtrace.rs</a><a href=\"../../../src/std/sys_common/fs.rs.html\">fs.rs</a><a href=\"../../../src/std/sys_common/io.rs.html\">io.rs</a><a href=\"../../../src/std/sys_common/lazy_box.rs.html\">lazy_box.rs</a><a href=\"../../../src/std/sys_common/mod.rs.html\">mod.rs</a><a href=\"../../../src/std/sys_common/net.rs.html\">net.rs</a><a href=\"../../../src/std/sys_common/process.rs.html\">process.rs</a><a href=\"../../../src/std/sys_common/thread_local_dtor.rs.html\">thread_local_dtor.rs</a><a href=\"../../../src/std/sys_common/thread_local_key.rs.html\">thread_local_key.rs</a><a href=\"../../../src/std/sys_common/wstr.rs.html\">wstr.rs</a><a href=\"../../../src/std/sys_common/wtf8.rs.html\">wtf8.rs</a></div></details><details class=\"dir-entry\"><summary>thread</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/std/thread/local.rs.html\">local.rs</a><a href=\"../../../src/std/thread/mod.rs.html\">mod.rs</a><a href=\"../../../src/std/thread/scoped.rs.html\">scoped.rs</a></div></details></div><div class=\"files\"><a href=\"../../../src/std/alloc.rs.html\">alloc.rs</a><a href=\"../../../src/std/ascii.rs.html\">ascii.rs</a><a href=\"../../../src/std/backtrace.rs.html\">backtrace.rs</a><a href=\"../../../src/std/env.rs.html\">env.rs</a><a href=\"../../../src/std/error.rs.html\">error.rs</a><a href=\"../../../src/std/f128.rs.html\">f128.rs</a><a href=\"../../../src/std/f16.rs.html\">f16.rs</a><a href=\"../../../src/std/f32.rs.html\">f32.rs</a><a href=\"../../../src/std/f64.rs.html\">f64.rs</a><a href=\"../../../src/std/fs.rs.html\">fs.rs</a><a href=\"../../../src/std/keyword_docs.rs.html\">keyword_docs.rs</a><a href=\"../../../src/std/lib.rs.html\">lib.rs</a><a href=\"../../../src/std/macros.rs.html\">macros.rs</a><a href=\"../../../src/std/num.rs.html\">num.rs</a><a href=\"../../../src/std/panic.rs.html\">panic.rs</a><a href=\"../../../src/std/panicking.rs.html\">panicking.rs</a><a href=\"../../../src/std/pat.rs.html\">pat.rs</a><a href=\"../../../src/std/path.rs.html\">path.rs</a><a href=\"../../../src/std/process.rs.html\">process.rs</a><a href=\"../../../src/std/rt.rs.html\">rt.rs</a><a href=\"../../../src/std/time.rs.html\">time.rs</a></div></details><details class=\"dir-entry\"><summary>test</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>formatters</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/test/formatters/json.rs.html\">json.rs</a><a href=\"../../../src/test/formatters/junit.rs.html\">junit.rs</a><a href=\"../../../src/test/formatters/mod.rs.html\">mod.rs</a><a href=\"../../../src/test/formatters/pretty.rs.html\">pretty.rs</a><a href=\"../../../src/test/formatters/terse.rs.html\">terse.rs</a></div></details><details class=\"dir-entry\"><summary>helpers</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/test/helpers/concurrency.rs.html\">concurrency.rs</a><a href=\"../../../src/test/helpers/metrics.rs.html\">metrics.rs</a><a href=\"../../../src/test/helpers/mod.rs.html\">mod.rs</a><a href=\"../../../src/test/helpers/shuffle.rs.html\">shuffle.rs</a></div></details><details class=\"dir-entry\"><summary>term</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>terminfo</summary><div class=\"folders\"><details class=\"dir-entry\"><summary>parser</summary><div class=\"folders\"></div><div class=\"files\"><a href=\"../../../src/test/term/terminfo/parser/compiled.rs.html\">compiled.rs</a></div></details></div><div class=\"files\"><a href=\"../../../src/test/term/terminfo/mod.rs.html\">mod.rs</a><a href=\"../../../src/test/term/terminfo/parm.rs.html\">parm.rs</a><a href=\"../../../src/test/term/terminfo/searcher.rs.html\">searcher.rs</a></div></details></div><div class=\"files\"></div></details></div><div class=\"files\"><a href=\"../../../src/test/bench.rs.html\">bench.rs</a><a href=\"../../../src/test/cli.rs.html\">cli.rs</a><a href=\"../../../src/test/console.rs.html\">console.rs</a><a href=\"../../../src/test/event.rs.html\">event.rs</a><a href=\"../../../src/test/lib.rs.html\">lib.rs</a><a href=\"../../../src/test/options.rs.html\">options.rs</a><a href=\"../../../src/test/stats.rs.html\">stats.rs</a><a href=\"../../../src/test/term.rs.html\">term.rs</a><a href=\"../../../src/test/test_result.rs.html\">test_result.rs</a><a href=\"../../../src/test/time.rs.html\">time.rs</a><a href=\"../../../src/test/types.rs.html\">types.rs</a></div></details></div></nav><div class=\"sidebar-resizer\"></div><main><rustdoc-search><nav class=\"sub\">\n            <form class=\"search-form\">\n                <span></span> <!-- This empty span is a hacky fix for Safari - See #93184 -->\n                <div id=\"sidebar-button\" tabindex=\"-1\">\n                    <a href=\"../../../core/all.html\" title=\"show sidebar\"></a>\n                </div>\n                <input class=\"search-input\" name=\"search\" aria-label=\"Run search in the documentation\" autocomplete=\"off\" spellcheck=\"false\" placeholder=\"Type ‘S’ or ‘/’ to search, ‘?’ for more options…\" type=\"search\">\n                <div id=\"help-button\" tabindex=\"-1\">\n                    <a href=\"../../../help.html\" title=\"help\">?</a>\n                </div>\n                <div id=\"settings-menu\" tabindex=\"-1\">\n                    <a href=\"../../../settings.html\" title=\"settings\">\n                        Settings\n                    </a>\n                </div>\n            </form>\n        </nav></rustdoc-search><section id=\"main-content\" class=\"content\"><div class=\"example-wrap\"><div data-nosnippet=\"\"><pre class=\"src-line-numbers\"><a href=\"#1\" id=\"1\">1</a>\n<a href=\"#2\" id=\"2\">2</a>\n<a href=\"#3\" id=\"3\">3</a>\n<a href=\"#4\" id=\"4\">4</a>\n<a href=\"#5\" id=\"5\">5</a>\n<a href=\"#6\" id=\"6\">6</a>\n<a href=\"#7\" id=\"7\">7</a>\n<a href=\"#8\" id=\"8\">8</a>\n<a href=\"#9\" id=\"9\">9</a>\n<a href=\"#10\" id=\"10\">10</a>\n<a href=\"#11\" id=\"11\">11</a>\n<a href=\"#12\" id=\"12\">12</a>\n<a href=\"#13\" id=\"13\">13</a>\n<a href=\"#14\" id=\"14\">14</a>\n<a href=\"#15\" id=\"15\">15</a>\n<a href=\"#16\" id=\"16\">16</a>\n<a href=\"#17\" id=\"17\">17</a>\n<a href=\"#18\" id=\"18\">18</a>\n<a href=\"#19\" id=\"19\">19</a>\n<a href=\"#20\" id=\"20\">20</a>\n<a href=\"#21\" id=\"21\">21</a>\n<a href=\"#22\" id=\"22\">22</a>\n<a href=\"#23\" id=\"23\">23</a>\n<a href=\"#24\" id=\"24\">24</a>\n<a href=\"#25\" id=\"25\">25</a>\n<a href=\"#26\" id=\"26\">26</a>\n<a href=\"#27\" id=\"27\">27</a>\n<a href=\"#28\" id=\"28\">28</a>\n<a href=\"#29\" id=\"29\">29</a>\n<a href=\"#30\" id=\"30\">30</a>\n<a href=\"#31\" id=\"31\">31</a>\n<a href=\"#32\" id=\"32\">32</a>\n<a href=\"#33\" id=\"33\">33</a>\n<a href=\"#34\" id=\"34\">34</a>\n<a href=\"#35\" id=\"35\">35</a>\n<a href=\"#36\" id=\"36\">36</a>\n<a href=\"#37\" id=\"37\">37</a>\n<a href=\"#38\" id=\"38\">38</a>\n<a href=\"#39\" id=\"39\">39</a>\n<a href=\"#40\" id=\"40\">40</a>\n<a href=\"#41\" id=\"41\">41</a>\n<a href=\"#42\" id=\"42\">42</a>\n<a href=\"#43\" id=\"43\">43</a>\n<a href=\"#44\" id=\"44\">44</a>\n<a href=\"#45\" id=\"45\">45</a>\n<a href=\"#46\" id=\"46\">46</a>\n<a href=\"#47\" id=\"47\">47</a>\n<a href=\"#48\" id=\"48\">48</a>\n<a href=\"#49\" id=\"49\">49</a>\n<a href=\"#50\" id=\"50\">50</a>\n<a href=\"#51\" id=\"51\">51</a>\n<a href=\"#52\" id=\"52\">52</a>\n<a href=\"#53\" id=\"53\">53</a>\n<a href=\"#54\" id=\"54\">54</a>\n<a href=\"#55\" id=\"55\">55</a>\n<a href=\"#56\" id=\"56\">56</a>\n<a href=\"#57\" id=\"57\">57</a>\n<a href=\"#58\" id=\"58\">58</a>\n<a href=\"#59\" id=\"59\">59</a>\n<a href=\"#60\" id=\"60\">60</a>\n<a href=\"#61\" id=\"61\">61</a>\n<a href=\"#62\" id=\"62\">62</a>\n<a href=\"#63\" id=\"63\">63</a>\n<a href=\"#64\" id=\"64\">64</a>\n<a href=\"#65\" id=\"65\">65</a>\n<a href=\"#66\" id=\"66\">66</a>\n<a href=\"#67\" id=\"67\">67</a>\n<a href=\"#68\" id=\"68\">68</a>\n<a href=\"#69\" id=\"69\">69</a>\n<a href=\"#70\" id=\"70\">70</a>\n<a href=\"#71\" id=\"71\">71</a>\n<a href=\"#72\" id=\"72\">72</a>\n<a href=\"#73\" id=\"73\">73</a>\n<a href=\"#74\" id=\"74\">74</a>\n<a href=\"#75\" id=\"75\">75</a>\n<a href=\"#76\" id=\"76\">76</a>\n<a href=\"#77\" id=\"77\">77</a>\n<a href=\"#78\" id=\"78\">78</a>\n<a href=\"#79\" id=\"79\">79</a>\n<a href=\"#80\" id=\"80\">80</a>\n<a href=\"#81\" id=\"81\">81</a>\n<a href=\"#82\" id=\"82\">82</a>\n<a href=\"#83\" id=\"83\">83</a>\n<a href=\"#84\" id=\"84\">84</a>\n<a href=\"#85\" id=\"85\">85</a>\n<a href=\"#86\" id=\"86\">86</a>\n<a href=\"#87\" id=\"87\">87</a>\n<a href=\"#88\" id=\"88\">88</a>\n<a href=\"#89\" id=\"89\">89</a>\n<a href=\"#90\" id=\"90\">90</a>\n<a href=\"#91\" id=\"91\">91</a>\n<a href=\"#92\" id=\"92\">92</a>\n<a href=\"#93\" id=\"93\">93</a>\n<a href=\"#94\" id=\"94\">94</a>\n<a href=\"#95\" id=\"95\">95</a>\n<a href=\"#96\" id=\"96\">96</a>\n<a href=\"#97\" id=\"97\">97</a>\n<a href=\"#98\" id=\"98\">98</a>\n<a href=\"#99\" id=\"99\">99</a>\n<a href=\"#100\" id=\"100\">100</a>\n<a href=\"#101\" id=\"101\">101</a>\n<a href=\"#102\" id=\"102\">102</a>\n<a href=\"#103\" id=\"103\">103</a>\n<a href=\"#104\" id=\"104\">104</a>\n<a href=\"#105\" id=\"105\">105</a>\n<a href=\"#106\" id=\"106\">106</a>\n<a href=\"#107\" id=\"107\">107</a>\n<a href=\"#108\" id=\"108\">108</a>\n<a href=\"#109\" id=\"109\">109</a>\n<a href=\"#110\" id=\"110\">110</a>\n<a href=\"#111\" id=\"111\">111</a>\n<a href=\"#112\" id=\"112\">112</a>\n<a href=\"#113\" id=\"113\">113</a>\n<a href=\"#114\" id=\"114\">114</a>\n<a href=\"#115\" id=\"115\">115</a>\n<a href=\"#116\" id=\"116\">116</a>\n<a href=\"#117\" id=\"117\">117</a>\n<a href=\"#118\" id=\"118\">118</a>\n<a href=\"#119\" id=\"119\">119</a>\n<a href=\"#120\" id=\"120\">120</a>\n<a href=\"#121\" id=\"121\">121</a>\n<a href=\"#122\" id=\"122\">122</a>\n<a href=\"#123\" id=\"123\">123</a>\n<a href=\"#124\" id=\"124\">124</a>\n<a href=\"#125\" id=\"125\">125</a>\n<a href=\"#126\" id=\"126\">126</a>\n<a href=\"#127\" id=\"127\">127</a>\n<a href=\"#128\" id=\"128\">128</a>\n<a href=\"#129\" id=\"129\">129</a>\n<a href=\"#130\" id=\"130\">130</a>\n<a href=\"#131\" id=\"131\">131</a>\n<a href=\"#132\" id=\"132\">132</a>\n<a href=\"#133\" id=\"133\">133</a>\n<a href=\"#134\" id=\"134\">134</a>\n<a href=\"#135\" id=\"135\">135</a>\n<a href=\"#136\" id=\"136\">136</a>\n<a href=\"#137\" id=\"137\">137</a>\n<a href=\"#138\" id=\"138\">138</a>\n<a href=\"#139\" id=\"139\">139</a>\n<a href=\"#140\" id=\"140\">140</a>\n<a href=\"#141\" id=\"141\">141</a>\n<a href=\"#142\" id=\"142\">142</a>\n<a href=\"#143\" id=\"143\">143</a>\n<a href=\"#144\" id=\"144\">144</a>\n<a href=\"#145\" id=\"145\">145</a>\n<a href=\"#146\" id=\"146\">146</a>\n<a href=\"#147\" id=\"147\">147</a>\n<a href=\"#148\" id=\"148\">148</a>\n<a href=\"#149\" id=\"149\">149</a>\n<a href=\"#150\" id=\"150\">150</a>\n<a href=\"#151\" id=\"151\">151</a>\n<a href=\"#152\" id=\"152\">152</a>\n<a href=\"#153\" id=\"153\">153</a>\n<a href=\"#154\" id=\"154\">154</a>\n<a href=\"#155\" id=\"155\">155</a>\n<a href=\"#156\" id=\"156\">156</a>\n<a href=\"#157\" id=\"157\">157</a>\n<a href=\"#158\" id=\"158\">158</a>\n<a href=\"#159\" id=\"159\">159</a>\n<a href=\"#160\" id=\"160\">160</a>\n<a href=\"#161\" id=\"161\">161</a>\n<a href=\"#162\" id=\"162\">162</a>\n<a href=\"#163\" id=\"163\">163</a>\n<a href=\"#164\" id=\"164\">164</a>\n<a href=\"#165\" id=\"165\">165</a>\n<a href=\"#166\" id=\"166\">166</a>\n<a href=\"#167\" id=\"167\">167</a>\n<a href=\"#168\" id=\"168\">168</a>\n<a href=\"#169\" id=\"169\">169</a>\n<a href=\"#170\" id=\"170\">170</a>\n<a href=\"#171\" id=\"171\">171</a>\n<a href=\"#172\" id=\"172\">172</a>\n<a href=\"#173\" id=\"173\">173</a>\n<a href=\"#174\" id=\"174\">174</a>\n<a href=\"#175\" id=\"175\">175</a>\n<a href=\"#176\" id=\"176\">176</a>\n<a href=\"#177\" id=\"177\">177</a>\n<a href=\"#178\" id=\"178\">178</a>\n<a href=\"#179\" id=\"179\">179</a>\n<a href=\"#180\" id=\"180\">180</a>\n<a href=\"#181\" id=\"181\">181</a>\n<a href=\"#182\" id=\"182\">182</a>\n<a href=\"#183\" id=\"183\">183</a>\n<a href=\"#184\" id=\"184\">184</a>\n<a href=\"#185\" id=\"185\">185</a>\n<a href=\"#186\" id=\"186\">186</a>\n<a href=\"#187\" id=\"187\">187</a>\n<a href=\"#188\" id=\"188\">188</a>\n<a href=\"#189\" id=\"189\">189</a>\n<a href=\"#190\" id=\"190\">190</a>\n<a href=\"#191\" id=\"191\">191</a>\n<a href=\"#192\" id=\"192\">192</a>\n<a href=\"#193\" id=\"193\">193</a>\n<a href=\"#194\" id=\"194\">194</a>\n<a href=\"#195\" id=\"195\">195</a>\n<a href=\"#196\" id=\"196\">196</a>\n<a href=\"#197\" id=\"197\">197</a>\n<a href=\"#198\" id=\"198\">198</a>\n<a href=\"#199\" id=\"199\">199</a>\n<a href=\"#200\" id=\"200\">200</a>\n<a href=\"#201\" id=\"201\">201</a>\n<a href=\"#202\" id=\"202\">202</a>\n<a href=\"#203\" id=\"203\">203</a>\n<a href=\"#204\" id=\"204\">204</a>\n<a href=\"#205\" id=\"205\">205</a>\n<a href=\"#206\" id=\"206\">206</a>\n<a href=\"#207\" id=\"207\">207</a>\n<a href=\"#208\" id=\"208\">208</a>\n<a href=\"#209\" id=\"209\">209</a>\n<a href=\"#210\" id=\"210\">210</a>\n<a href=\"#211\" id=\"211\">211</a>\n<a href=\"#212\" id=\"212\">212</a>\n<a href=\"#213\" id=\"213\">213</a>\n<a href=\"#214\" id=\"214\">214</a>\n<a href=\"#215\" id=\"215\">215</a>\n<a href=\"#216\" id=\"216\">216</a>\n<a href=\"#217\" id=\"217\">217</a>\n<a href=\"#218\" id=\"218\">218</a>\n<a href=\"#219\" id=\"219\">219</a>\n<a href=\"#220\" id=\"220\">220</a>\n<a href=\"#221\" id=\"221\">221</a>\n<a href=\"#222\" id=\"222\">222</a>\n<a href=\"#223\" id=\"223\">223</a>\n<a href=\"#224\" id=\"224\">224</a>\n<a href=\"#225\" id=\"225\">225</a>\n<a href=\"#226\" id=\"226\">226</a>\n<a href=\"#227\" id=\"227\">227</a>\n<a href=\"#228\" id=\"228\">228</a>\n<a href=\"#229\" id=\"229\">229</a>\n<a href=\"#230\" id=\"230\">230</a>\n<a href=\"#231\" id=\"231\">231</a>\n<a href=\"#232\" id=\"232\">232</a>\n<a href=\"#233\" id=\"233\">233</a>\n<a href=\"#234\" id=\"234\">234</a>\n<a href=\"#235\" id=\"235\">235</a>\n<a href=\"#236\" id=\"236\">236</a>\n<a href=\"#237\" id=\"237\">237</a>\n<a href=\"#238\" id=\"238\">238</a>\n<a href=\"#239\" id=\"239\">239</a>\n<a href=\"#240\" id=\"240\">240</a>\n<a href=\"#241\" id=\"241\">241</a>\n<a href=\"#242\" id=\"242\">242</a>\n<a href=\"#243\" id=\"243\">243</a>\n<a href=\"#244\" id=\"244\">244</a>\n<a href=\"#245\" id=\"245\">245</a>\n<a href=\"#246\" id=\"246\">246</a>\n<a href=\"#247\" id=\"247\">247</a>\n<a href=\"#248\" id=\"248\">248</a>\n<a href=\"#249\" id=\"249\">249</a>\n<a href=\"#250\" id=\"250\">250</a>\n<a href=\"#251\" id=\"251\">251</a>\n<a href=\"#252\" id=\"252\">252</a>\n<a href=\"#253\" id=\"253\">253</a>\n<a href=\"#254\" id=\"254\">254</a>\n<a href=\"#255\" id=\"255\">255</a>\n<a href=\"#256\" id=\"256\">256</a>\n<a href=\"#257\" id=\"257\">257</a>\n<a href=\"#258\" id=\"258\">258</a>\n<a href=\"#259\" id=\"259\">259</a>\n<a href=\"#260\" id=\"260\">260</a>\n<a href=\"#261\" id=\"261\">261</a>\n<a href=\"#262\" id=\"262\">262</a>\n<a href=\"#263\" id=\"263\">263</a>\n<a href=\"#264\" id=\"264\">264</a>\n<a href=\"#265\" id=\"265\">265</a>\n<a href=\"#266\" id=\"266\">266</a>\n<a href=\"#267\" id=\"267\">267</a>\n<a href=\"#268\" id=\"268\">268</a>\n<a href=\"#269\" id=\"269\">269</a>\n<a href=\"#270\" id=\"270\">270</a>\n<a href=\"#271\" id=\"271\">271</a>\n<a href=\"#272\" id=\"272\">272</a>\n<a href=\"#273\" id=\"273\">273</a>\n<a href=\"#274\" id=\"274\">274</a>\n<a href=\"#275\" id=\"275\">275</a>\n<a href=\"#276\" id=\"276\">276</a>\n<a href=\"#277\" id=\"277\">277</a>\n<a href=\"#278\" id=\"278\">278</a>\n<a href=\"#279\" id=\"279\">279</a>\n<a href=\"#280\" id=\"280\">280</a>\n<a href=\"#281\" id=\"281\">281</a>\n<a href=\"#282\" id=\"282\">282</a>\n<a href=\"#283\" id=\"283\">283</a>\n<a href=\"#284\" id=\"284\">284</a>\n<a href=\"#285\" id=\"285\">285</a>\n<a href=\"#286\" id=\"286\">286</a>\n<a href=\"#287\" id=\"287\">287</a>\n<a href=\"#288\" id=\"288\">288</a>\n<a href=\"#289\" id=\"289\">289</a>\n<a href=\"#290\" id=\"290\">290</a>\n<a href=\"#291\" id=\"291\">291</a>\n<a href=\"#292\" id=\"292\">292</a>\n<a href=\"#293\" id=\"293\">293</a>\n<a href=\"#294\" id=\"294\">294</a>\n<a href=\"#295\" id=\"295\">295</a>\n<a href=\"#296\" id=\"296\">296</a>\n<a href=\"#297\" id=\"297\">297</a>\n<a href=\"#298\" id=\"298\">298</a>\n<a href=\"#299\" id=\"299\">299</a>\n<a href=\"#300\" id=\"300\">300</a>\n<a href=\"#301\" id=\"301\">301</a>\n<a href=\"#302\" id=\"302\">302</a>\n<a href=\"#303\" id=\"303\">303</a>\n<a href=\"#304\" id=\"304\">304</a>\n<a href=\"#305\" id=\"305\">305</a>\n<a href=\"#306\" id=\"306\">306</a>\n<a href=\"#307\" id=\"307\">307</a>\n<a href=\"#308\" id=\"308\">308</a>\n<a href=\"#309\" id=\"309\">309</a>\n<a href=\"#310\" id=\"310\">310</a>\n<a href=\"#311\" id=\"311\">311</a>\n<a href=\"#312\" id=\"312\">312</a>\n<a href=\"#313\" id=\"313\">313</a>\n<a href=\"#314\" id=\"314\">314</a>\n<a href=\"#315\" id=\"315\">315</a>\n<a href=\"#316\" id=\"316\">316</a>\n<a href=\"#317\" id=\"317\">317</a>\n<a href=\"#318\" id=\"318\">318</a>\n<a href=\"#319\" id=\"319\">319</a>\n<a href=\"#320\" id=\"320\">320</a>\n<a href=\"#321\" id=\"321\">321</a>\n<a href=\"#322\" id=\"322\">322</a>\n<a href=\"#323\" id=\"323\">323</a>\n<a href=\"#324\" id=\"324\">324</a>\n<a href=\"#325\" id=\"325\">325</a>\n<a href=\"#326\" id=\"326\">326</a>\n<a href=\"#327\" id=\"327\">327</a>\n<a href=\"#328\" id=\"328\">328</a>\n<a href=\"#329\" id=\"329\">329</a>\n<a href=\"#330\" id=\"330\">330</a>\n<a href=\"#331\" id=\"331\">331</a>\n<a href=\"#332\" id=\"332\">332</a>\n<a href=\"#333\" id=\"333\">333</a>\n<a href=\"#334\" id=\"334\">334</a>\n<a href=\"#335\" id=\"335\">335</a>\n<a href=\"#336\" id=\"336\">336</a>\n<a href=\"#337\" id=\"337\">337</a>\n<a href=\"#338\" id=\"338\">338</a>\n<a href=\"#339\" id=\"339\">339</a>\n<a href=\"#340\" id=\"340\">340</a>\n<a href=\"#341\" id=\"341\">341</a>\n<a href=\"#342\" id=\"342\">342</a>\n<a href=\"#343\" id=\"343\">343</a>\n<a href=\"#344\" id=\"344\">344</a>\n<a href=\"#345\" id=\"345\">345</a>\n<a href=\"#346\" id=\"346\">346</a>\n<a href=\"#347\" id=\"347\">347</a>\n<a href=\"#348\" id=\"348\">348</a>\n<a href=\"#349\" id=\"349\">349</a>\n<a href=\"#350\" id=\"350\">350</a>\n<a href=\"#351\" id=\"351\">351</a>\n<a href=\"#352\" id=\"352\">352</a>\n<a href=\"#353\" id=\"353\">353</a>\n<a href=\"#354\" id=\"354\">354</a>\n<a href=\"#355\" id=\"355\">355</a>\n<a href=\"#356\" id=\"356\">356</a>\n<a href=\"#357\" id=\"357\">357</a>\n<a href=\"#358\" id=\"358\">358</a>\n<a href=\"#359\" id=\"359\">359</a>\n<a href=\"#360\" id=\"360\">360</a>\n<a href=\"#361\" id=\"361\">361</a>\n<a href=\"#362\" id=\"362\">362</a>\n<a href=\"#363\" id=\"363\">363</a>\n<a href=\"#364\" id=\"364\">364</a>\n<a href=\"#365\" id=\"365\">365</a>\n<a href=\"#366\" id=\"366\">366</a>\n<a href=\"#367\" id=\"367\">367</a>\n<a href=\"#368\" id=\"368\">368</a>\n<a href=\"#369\" id=\"369\">369</a>\n<a href=\"#370\" id=\"370\">370</a>\n<a href=\"#371\" id=\"371\">371</a>\n<a href=\"#372\" id=\"372\">372</a>\n<a href=\"#373\" id=\"373\">373</a>\n<a href=\"#374\" id=\"374\">374</a>\n<a href=\"#375\" id=\"375\">375</a>\n<a href=\"#376\" id=\"376\">376</a>\n<a href=\"#377\" id=\"377\">377</a>\n<a href=\"#378\" id=\"378\">378</a>\n<a href=\"#379\" id=\"379\">379</a>\n<a href=\"#380\" id=\"380\">380</a>\n<a href=\"#381\" id=\"381\">381</a>\n<a href=\"#382\" id=\"382\">382</a>\n<a href=\"#383\" id=\"383\">383</a>\n<a href=\"#384\" id=\"384\">384</a>\n<a href=\"#385\" id=\"385\">385</a>\n<a href=\"#386\" id=\"386\">386</a>\n<a href=\"#387\" id=\"387\">387</a>\n<a href=\"#388\" id=\"388\">388</a>\n<a href=\"#389\" id=\"389\">389</a>\n<a href=\"#390\" id=\"390\">390</a>\n<a href=\"#391\" id=\"391\">391</a>\n<a href=\"#392\" id=\"392\">392</a>\n<a href=\"#393\" id=\"393\">393</a>\n<a href=\"#394\" id=\"394\">394</a>\n<a href=\"#395\" id=\"395\">395</a>\n<a href=\"#396\" id=\"396\">396</a>\n<a href=\"#397\" id=\"397\">397</a>\n<a href=\"#398\" id=\"398\">398</a>\n<a href=\"#399\" id=\"399\">399</a>\n<a href=\"#400\" id=\"400\">400</a>\n<a href=\"#401\" id=\"401\">401</a>\n<a href=\"#402\" id=\"402\">402</a>\n<a href=\"#403\" id=\"403\">403</a>\n<a href=\"#404\" id=\"404\">404</a>\n<a href=\"#405\" id=\"405\">405</a>\n<a href=\"#406\" id=\"406\">406</a>\n<a href=\"#407\" id=\"407\">407</a>\n<a href=\"#408\" id=\"408\">408</a>\n<a href=\"#409\" id=\"409\">409</a>\n<a href=\"#410\" id=\"410\">410</a>\n<a href=\"#411\" id=\"411\">411</a>\n<a href=\"#412\" id=\"412\">412</a>\n<a href=\"#413\" id=\"413\">413</a>\n<a href=\"#414\" id=\"414\">414</a>\n<a href=\"#415\" id=\"415\">415</a>\n<a href=\"#416\" id=\"416\">416</a>\n<a href=\"#417\" id=\"417\">417</a>\n<a href=\"#418\" id=\"418\">418</a>\n<a href=\"#419\" id=\"419\">419</a>\n<a href=\"#420\" id=\"420\">420</a>\n<a href=\"#421\" id=\"421\">421</a>\n<a href=\"#422\" id=\"422\">422</a>\n<a href=\"#423\" id=\"423\">423</a>\n<a href=\"#424\" id=\"424\">424</a>\n<a href=\"#425\" id=\"425\">425</a>\n<a href=\"#426\" id=\"426\">426</a>\n<a href=\"#427\" id=\"427\">427</a>\n<a href=\"#428\" id=\"428\">428</a>\n<a href=\"#429\" id=\"429\">429</a>\n<a href=\"#430\" id=\"430\">430</a>\n<a href=\"#431\" id=\"431\">431</a>\n<a href=\"#432\" id=\"432\">432</a>\n<a href=\"#433\" id=\"433\">433</a>\n<a href=\"#434\" id=\"434\">434</a>\n<a href=\"#435\" id=\"435\">435</a>\n<a href=\"#436\" id=\"436\">436</a>\n<a href=\"#437\" id=\"437\">437</a>\n<a href=\"#438\" id=\"438\">438</a>\n<a href=\"#439\" id=\"439\">439</a>\n<a href=\"#440\" id=\"440\">440</a>\n<a href=\"#441\" id=\"441\">441</a>\n<a href=\"#442\" id=\"442\">442</a>\n<a href=\"#443\" id=\"443\">443</a>\n<a href=\"#444\" id=\"444\">444</a>\n<a href=\"#445\" id=\"445\">445</a>\n<a href=\"#446\" id=\"446\">446</a>\n<a href=\"#447\" id=\"447\">447</a>\n<a href=\"#448\" id=\"448\">448</a>\n<a href=\"#449\" id=\"449\">449</a>\n<a href=\"#450\" id=\"450\">450</a>\n<a href=\"#451\" id=\"451\">451</a>\n<a href=\"#452\" id=\"452\">452</a>\n<a href=\"#453\" id=\"453\">453</a>\n<a href=\"#454\" id=\"454\">454</a>\n<a href=\"#455\" id=\"455\">455</a>\n<a href=\"#456\" id=\"456\">456</a>\n<a href=\"#457\" id=\"457\">457</a>\n<a href=\"#458\" id=\"458\">458</a>\n<a href=\"#459\" id=\"459\">459</a>\n<a href=\"#460\" id=\"460\">460</a>\n<a href=\"#461\" id=\"461\">461</a>\n<a href=\"#462\" id=\"462\">462</a>\n<a href=\"#463\" id=\"463\">463</a>\n<a href=\"#464\" id=\"464\">464</a>\n<a href=\"#465\" id=\"465\">465</a>\n<a href=\"#466\" id=\"466\">466</a>\n<a href=\"#467\" id=\"467\">467</a>\n<a href=\"#468\" id=\"468\">468</a>\n<a href=\"#469\" id=\"469\">469</a>\n<a href=\"#470\" id=\"470\">470</a>\n<a href=\"#471\" id=\"471\">471</a>\n<a href=\"#472\" id=\"472\">472</a>\n<a href=\"#473\" id=\"473\">473</a>\n<a href=\"#474\" id=\"474\">474</a>\n<a href=\"#475\" id=\"475\">475</a>\n<a href=\"#476\" id=\"476\">476</a>\n<a href=\"#477\" id=\"477\">477</a>\n<a href=\"#478\" id=\"478\">478</a>\n<a href=\"#479\" id=\"479\">479</a>\n<a href=\"#480\" id=\"480\">480</a>\n<a href=\"#481\" id=\"481\">481</a>\n<a href=\"#482\" id=\"482\">482</a>\n<a href=\"#483\" id=\"483\">483</a>\n<a href=\"#484\" id=\"484\">484</a>\n<a href=\"#485\" id=\"485\">485</a>\n<a href=\"#486\" id=\"486\">486</a>\n<a href=\"#487\" id=\"487\">487</a>\n<a href=\"#488\" id=\"488\">488</a>\n<a href=\"#489\" id=\"489\">489</a>\n<a href=\"#490\" id=\"490\">490</a>\n<a href=\"#491\" id=\"491\">491</a>\n<a href=\"#492\" id=\"492\">492</a>\n<a href=\"#493\" id=\"493\">493</a>\n<a href=\"#494\" id=\"494\">494</a>\n</pre></div><pre class=\"rust\"><code><span class=\"comment\">// Seemingly inconsequential code changes to this file can lead to measurable\n// performance impact on compilation times, due at least in part to the fact\n// that the layout code gets called from many instantiations of the various\n// collections, resulting in having to optimize down excess IR multiple times.\n// Your performance intuition is useless. Run perf.\n\n</span><span class=\"kw\">use </span><span class=\"kw\">crate</span>::cmp;\n<span class=\"kw\">use </span><span class=\"kw\">crate</span>::error::Error;\n<span class=\"kw\">use </span><span class=\"kw\">crate</span>::fmt;\n<span class=\"kw\">use </span><span class=\"kw\">crate</span>::mem;\n<span class=\"kw\">use </span><span class=\"kw\">crate</span>::ptr::{Alignment, NonNull};\n\n<span class=\"comment\">// While this function is used in one place and its implementation\n// could be inlined, the previous attempts to do so made rustc\n// slower:\n//\n// * https://github.com/rust-lang/rust/pull/72189\n// * https://github.com/rust-lang/rust/pull/79827\n</span><span class=\"kw\">const fn </span>size_align&lt;T&gt;() -&gt; (usize, usize) {\n    (mem::size_of::&lt;T&gt;(), mem::align_of::&lt;T&gt;())\n}\n\n<span class=\"doccomment\">/// Layout of a block of memory.\n///\n/// An instance of `Layout` describes a particular layout of memory.\n/// You build a `Layout` up as an input to give to an allocator.\n///\n/// All layouts have an associated size and a power-of-two alignment. The size, when rounded up to\n/// the nearest multiple of `align`, does not overflow isize (i.e., the rounded value will always be\n/// less than or equal to `isize::MAX`).\n///\n/// (Note that layouts are *not* required to have non-zero size,\n/// even though `GlobalAlloc` requires that all memory requests\n/// be non-zero in size. A caller must either ensure that conditions\n/// like this are met, use specific allocators with looser\n/// requirements, or use the more lenient `Allocator` interface.)\n</span><span class=\"attr\">#[stable(feature = <span class=\"string\">\"alloc_layout\"</span>, since = <span class=\"string\">\"1.28.0\"</span>)]\n#[derive(Copy, Clone, Debug, PartialEq, Eq, Hash)]\n#[lang = <span class=\"string\">\"alloc_layout\"</span>]\n</span><span class=\"kw\">pub struct </span>Layout {\n    <span class=\"comment\">// size of the requested block of memory, measured in bytes.\n    </span>size: usize,\n\n    <span class=\"comment\">// alignment of the requested block of memory, measured in bytes.\n    // we ensure that this is always a power-of-two, because API's\n    // like `posix_memalign` require it and it is a reasonable\n    // constraint to impose on Layout constructors.\n    //\n    // (However, we do not analogously require `align &gt;= sizeof(void*)`,\n    //  even though that is *also* a requirement of `posix_memalign`.)\n    </span>align: Alignment,\n}\n\n<span class=\"kw\">impl </span>Layout {\n    <span class=\"doccomment\">/// Constructs a `Layout` from a given `size` and `align`,\n    /// or returns `LayoutError` if any of the following conditions\n    /// are not met:\n    ///\n    /// * `align` must not be zero,\n    ///\n    /// * `align` must be a power of two,\n    ///\n    /// * `size`, when rounded up to the nearest multiple of `align`,\n    ///    must not overflow isize (i.e., the rounded value must be\n    ///    less than or equal to `isize::MAX`).\n    </span><span class=\"attr\">#[stable(feature = <span class=\"string\">\"alloc_layout\"</span>, since = <span class=\"string\">\"1.28.0\"</span>)]\n    #[rustc_const_stable(feature = <span class=\"string\">\"const_alloc_layout_size_align\"</span>, since = <span class=\"string\">\"1.50.0\"</span>)]\n    #[inline]\n    #[rustc_allow_const_fn_unstable(ptr_alignment_type)]\n    </span><span class=\"kw\">pub const fn </span>from_size_align(size: usize, align: usize) -&gt; <span class=\"prelude-ty\">Result</span>&lt;<span class=\"self\">Self</span>, LayoutError&gt; {\n        <span class=\"kw\">if </span>!align.is_power_of_two() {\n            <span class=\"kw\">return </span><span class=\"prelude-val\">Err</span>(LayoutError);\n        }\n\n        <span class=\"comment\">// SAFETY: just checked that align is a power of two.\n        </span>Layout::from_size_alignment(size, <span class=\"kw\">unsafe </span>{ Alignment::new_unchecked(align) })\n    }\n\n    <span class=\"attr\">#[inline(always)]\n    </span><span class=\"kw\">const fn </span>max_size_for_align(align: Alignment) -&gt; usize {\n        <span class=\"comment\">// (power-of-two implies align != 0.)\n\n        // Rounded up size is:\n        //   size_rounded_up = (size + align - 1) &amp; !(align - 1);\n        //\n        // We know from above that align != 0. If adding (align - 1)\n        // does not overflow, then rounding up will be fine.\n        //\n        // Conversely, &amp;-masking with !(align - 1) will subtract off\n        // only low-order-bits. Thus if overflow occurs with the sum,\n        // the &amp;-mask cannot subtract enough to undo that overflow.\n        //\n        // Above implies that checking for summation overflow is both\n        // necessary and sufficient.\n        </span>isize::MAX <span class=\"kw\">as </span>usize - (align.as_usize() - <span class=\"number\">1</span>)\n    }\n\n    <span class=\"doccomment\">/// Internal helper constructor to skip revalidating alignment validity.\n    </span><span class=\"attr\">#[inline]\n    </span><span class=\"kw\">const fn </span>from_size_alignment(size: usize, align: Alignment) -&gt; <span class=\"prelude-ty\">Result</span>&lt;<span class=\"self\">Self</span>, LayoutError&gt; {\n        <span class=\"kw\">if </span>size &gt; <span class=\"self\">Self</span>::max_size_for_align(align) {\n            <span class=\"kw\">return </span><span class=\"prelude-val\">Err</span>(LayoutError);\n        }\n\n        <span class=\"comment\">// SAFETY: Layout::size invariants checked above.\n        </span><span class=\"prelude-val\">Ok</span>(Layout { size, align })\n    }\n\n    <span class=\"doccomment\">/// Creates a layout, bypassing all checks.\n    ///\n    /// # Safety\n    ///\n    /// This function is unsafe as it does not verify the preconditions from\n    /// [`Layout::from_size_align`].\n    </span><span class=\"attr\">#[stable(feature = <span class=\"string\">\"alloc_layout\"</span>, since = <span class=\"string\">\"1.28.0\"</span>)]\n    #[rustc_const_stable(feature = <span class=\"string\">\"const_alloc_layout_unchecked\"</span>, since = <span class=\"string\">\"1.36.0\"</span>)]\n    #[must_use]\n    #[inline]\n    #[rustc_allow_const_fn_unstable(ptr_alignment_type)]\n    </span><span class=\"kw\">pub const unsafe fn </span>from_size_align_unchecked(size: usize, align: usize) -&gt; <span class=\"self\">Self </span>{\n        <span class=\"comment\">// SAFETY: the caller is required to uphold the preconditions.\n        </span><span class=\"kw\">unsafe </span>{ Layout { size, align: Alignment::new_unchecked(align) } }\n    }\n\n    <span class=\"doccomment\">/// The minimum size in bytes for a memory block of this layout.\n    </span><span class=\"attr\">#[stable(feature = <span class=\"string\">\"alloc_layout\"</span>, since = <span class=\"string\">\"1.28.0\"</span>)]\n    #[rustc_const_stable(feature = <span class=\"string\">\"const_alloc_layout_size_align\"</span>, since = <span class=\"string\">\"1.50.0\"</span>)]\n    #[must_use]\n    #[inline]\n    </span><span class=\"kw\">pub const fn </span>size(<span class=\"kw-2\">&amp;</span><span class=\"self\">self</span>) -&gt; usize {\n        <span class=\"self\">self</span>.size\n    }\n\n    <span class=\"doccomment\">/// The minimum byte alignment for a memory block of this layout.\n    ///\n    /// The returned alignment is guaranteed to be a power of two.\n    </span><span class=\"attr\">#[stable(feature = <span class=\"string\">\"alloc_layout\"</span>, since = <span class=\"string\">\"1.28.0\"</span>)]\n    #[rustc_const_stable(feature = <span class=\"string\">\"const_alloc_layout_size_align\"</span>, since = <span class=\"string\">\"1.50.0\"</span>)]\n    #[must_use = <span class=\"string\">\"this returns the minimum alignment, \\\n                  without modifying the layout\"</span>]\n    #[inline]\n    #[rustc_allow_const_fn_unstable(ptr_alignment_type)]\n    </span><span class=\"kw\">pub const fn </span>align(<span class=\"kw-2\">&amp;</span><span class=\"self\">self</span>) -&gt; usize {\n        <span class=\"self\">self</span>.align.as_usize()\n    }\n\n    <span class=\"doccomment\">/// Constructs a `Layout` suitable for holding a value of type `T`.\n    </span><span class=\"attr\">#[stable(feature = <span class=\"string\">\"alloc_layout\"</span>, since = <span class=\"string\">\"1.28.0\"</span>)]\n    #[rustc_const_stable(feature = <span class=\"string\">\"alloc_layout_const_new\"</span>, since = <span class=\"string\">\"1.42.0\"</span>)]\n    #[must_use]\n    #[inline]\n    </span><span class=\"kw\">pub const fn </span>new&lt;T&gt;() -&gt; <span class=\"self\">Self </span>{\n        <span class=\"kw\">let </span>(size, align) = size_align::&lt;T&gt;();\n        <span class=\"comment\">// SAFETY: if the type is instantiated, rustc already ensures that its\n        // layout is valid. Use the unchecked constructor to avoid inserting a\n        // panicking codepath that needs to be optimized out.\n        </span><span class=\"kw\">unsafe </span>{ Layout::from_size_align_unchecked(size, align) }\n    }\n\n    <span class=\"doccomment\">/// Produces layout describing a record that could be used to\n    /// allocate backing structure for `T` (which could be a trait\n    /// or other unsized type like a slice).\n    </span><span class=\"attr\">#[stable(feature = <span class=\"string\">\"alloc_layout\"</span>, since = <span class=\"string\">\"1.28.0\"</span>)]\n    #[rustc_const_unstable(feature = <span class=\"string\">\"const_alloc_layout\"</span>, issue = <span class=\"string\">\"67521\"</span>)]\n    #[must_use]\n    #[inline]\n    </span><span class=\"kw\">pub const fn </span>for_value&lt;T: <span class=\"question-mark\">?</span>Sized&gt;(t: <span class=\"kw-2\">&amp;</span>T) -&gt; <span class=\"self\">Self </span>{\n        <span class=\"kw\">let </span>(size, align) = (mem::size_of_val(t), mem::align_of_val(t));\n        <span class=\"comment\">// SAFETY: see rationale in `new` for why this is using the unsafe variant\n        </span><span class=\"kw\">unsafe </span>{ Layout::from_size_align_unchecked(size, align) }\n    }\n\n    <span class=\"doccomment\">/// Produces layout describing a record that could be used to\n    /// allocate backing structure for `T` (which could be a trait\n    /// or other unsized type like a slice).\n    ///\n    /// # Safety\n    ///\n    /// This function is only safe to call if the following conditions hold:\n    ///\n    /// - If `T` is `Sized`, this function is always safe to call.\n    /// - If the unsized tail of `T` is:\n    ///     - a [slice], then the length of the slice tail must be an initialized\n    ///       integer, and the size of the *entire value*\n    ///       (dynamic tail length + statically sized prefix) must fit in `isize`.\n    ///     - a [trait object], then the vtable part of the pointer must point\n    ///       to a valid vtable for the type `T` acquired by an unsizing coercion,\n    ///       and the size of the *entire value*\n    ///       (dynamic tail length + statically sized prefix) must fit in `isize`.\n    ///     - an (unstable) [extern type], then this function is always safe to\n    ///       call, but may panic or otherwise return the wrong value, as the\n    ///       extern type's layout is not known. This is the same behavior as\n    ///       [`Layout::for_value`] on a reference to an extern type tail.\n    ///     - otherwise, it is conservatively not allowed to call this function.\n    ///\n    /// [trait object]: ../../book/ch17-02-trait-objects.html\n    /// [extern type]: ../../unstable-book/language-features/extern-types.html\n    </span><span class=\"attr\">#[unstable(feature = <span class=\"string\">\"layout_for_ptr\"</span>, issue = <span class=\"string\">\"69835\"</span>)]\n    #[rustc_const_unstable(feature = <span class=\"string\">\"const_alloc_layout\"</span>, issue = <span class=\"string\">\"67521\"</span>)]\n    #[must_use]\n    </span><span class=\"kw\">pub const unsafe fn </span>for_value_raw&lt;T: <span class=\"question-mark\">?</span>Sized&gt;(t: <span class=\"kw-2\">*const </span>T) -&gt; <span class=\"self\">Self </span>{\n        <span class=\"comment\">// SAFETY: we pass along the prerequisites of these functions to the caller\n        </span><span class=\"kw\">let </span>(size, align) = <span class=\"kw\">unsafe </span>{ (mem::size_of_val_raw(t), mem::align_of_val_raw(t)) };\n        <span class=\"comment\">// SAFETY: see rationale in `new` for why this is using the unsafe variant\n        </span><span class=\"kw\">unsafe </span>{ Layout::from_size_align_unchecked(size, align) }\n    }\n\n    <span class=\"doccomment\">/// Creates a `NonNull` that is dangling, but well-aligned for this Layout.\n    ///\n    /// Note that the pointer value may potentially represent a valid pointer,\n    /// which means this must not be used as a \"not yet initialized\"\n    /// sentinel value. Types that lazily allocate must track initialization by\n    /// some other means.\n    </span><span class=\"attr\">#[unstable(feature = <span class=\"string\">\"alloc_layout_extra\"</span>, issue = <span class=\"string\">\"55724\"</span>)]\n    #[rustc_const_unstable(feature = <span class=\"string\">\"alloc_layout_extra\"</span>, issue = <span class=\"string\">\"55724\"</span>)]\n    #[must_use]\n    #[inline]\n    </span><span class=\"kw\">pub const fn </span>dangling(<span class=\"kw-2\">&amp;</span><span class=\"self\">self</span>) -&gt; NonNull&lt;u8&gt; {\n        <span class=\"comment\">// SAFETY: align is guaranteed to be non-zero\n        </span><span class=\"kw\">unsafe </span>{ NonNull::new_unchecked(<span class=\"kw\">crate</span>::ptr::without_provenance_mut::&lt;u8&gt;(<span class=\"self\">self</span>.align())) }\n    }\n\n    <span class=\"doccomment\">/// Creates a layout describing the record that can hold a value\n    /// of the same layout as `self`, but that also is aligned to\n    /// alignment `align` (measured in bytes).\n    ///\n    /// If `self` already meets the prescribed alignment, then returns\n    /// `self`.\n    ///\n    /// Note that this method does not add any padding to the overall\n    /// size, regardless of whether the returned layout has a different\n    /// alignment. In other words, if `K` has size 16, `K.align_to(32)`\n    /// will *still* have size 16.\n    ///\n    /// Returns an error if the combination of `self.size()` and the given\n    /// `align` violates the conditions listed in [`Layout::from_size_align`].\n    </span><span class=\"attr\">#[stable(feature = <span class=\"string\">\"alloc_layout_manipulation\"</span>, since = <span class=\"string\">\"1.44.0\"</span>)]\n    #[inline]\n    </span><span class=\"kw\">pub fn </span>align_to(<span class=\"kw-2\">&amp;</span><span class=\"self\">self</span>, align: usize) -&gt; <span class=\"prelude-ty\">Result</span>&lt;<span class=\"self\">Self</span>, LayoutError&gt; {\n        Layout::from_size_align(<span class=\"self\">self</span>.size(), cmp::max(<span class=\"self\">self</span>.align(), align))\n    }\n\n    <span class=\"doccomment\">/// Returns the amount of padding we must insert after `self`\n    /// to ensure that the following address will satisfy `align`\n    /// (measured in bytes).\n    ///\n    /// e.g., if `self.size()` is 9, then `self.padding_needed_for(4)`\n    /// returns 3, because that is the minimum number of bytes of\n    /// padding required to get a 4-aligned address (assuming that the\n    /// corresponding memory block starts at a 4-aligned address).\n    ///\n    /// The return value of this function has no meaning if `align` is\n    /// not a power-of-two.\n    ///\n    /// Note that the utility of the returned value requires `align`\n    /// to be less than or equal to the alignment of the starting\n    /// address for the whole allocated block of memory. One way to\n    /// satisfy this constraint is to ensure `align &lt;= self.align()`.\n    </span><span class=\"attr\">#[unstable(feature = <span class=\"string\">\"alloc_layout_extra\"</span>, issue = <span class=\"string\">\"55724\"</span>)]\n    #[rustc_const_unstable(feature = <span class=\"string\">\"const_alloc_layout\"</span>, issue = <span class=\"string\">\"67521\"</span>)]\n    #[must_use = <span class=\"string\">\"this returns the padding needed, \\\n                  without modifying the `Layout`\"</span>]\n    #[inline]\n    </span><span class=\"kw\">pub const fn </span>padding_needed_for(<span class=\"kw-2\">&amp;</span><span class=\"self\">self</span>, align: usize) -&gt; usize {\n        <span class=\"kw\">let </span>len = <span class=\"self\">self</span>.size();\n\n        <span class=\"comment\">// Rounded up value is:\n        //   len_rounded_up = (len + align - 1) &amp; !(align - 1);\n        // and then we return the padding difference: `len_rounded_up - len`.\n        //\n        // We use modular arithmetic throughout:\n        //\n        // 1. align is guaranteed to be &gt; 0, so align - 1 is always\n        //    valid.\n        //\n        // 2. `len + align - 1` can overflow by at most `align - 1`,\n        //    so the &amp;-mask with `!(align - 1)` will ensure that in the\n        //    case of overflow, `len_rounded_up` will itself be 0.\n        //    Thus the returned padding, when added to `len`, yields 0,\n        //    which trivially satisfies the alignment `align`.\n        //\n        // (Of course, attempts to allocate blocks of memory whose\n        // size and padding overflow in the above manner should cause\n        // the allocator to yield an error anyway.)\n\n        </span><span class=\"kw\">let </span>len_rounded_up = len.wrapping_add(align).wrapping_sub(<span class=\"number\">1</span>) &amp; !align.wrapping_sub(<span class=\"number\">1</span>);\n        len_rounded_up.wrapping_sub(len)\n    }\n\n    <span class=\"doccomment\">/// Creates a layout by rounding the size of this layout up to a multiple\n    /// of the layout's alignment.\n    ///\n    /// This is equivalent to adding the result of `padding_needed_for`\n    /// to the layout's current size.\n    </span><span class=\"attr\">#[stable(feature = <span class=\"string\">\"alloc_layout_manipulation\"</span>, since = <span class=\"string\">\"1.44.0\"</span>)]\n    #[rustc_const_unstable(feature = <span class=\"string\">\"const_alloc_layout\"</span>, issue = <span class=\"string\">\"67521\"</span>)]\n    #[must_use = <span class=\"string\">\"this returns a new `Layout`, \\\n                  without modifying the original\"</span>]\n    #[inline]\n    </span><span class=\"kw\">pub const fn </span>pad_to_align(<span class=\"kw-2\">&amp;</span><span class=\"self\">self</span>) -&gt; Layout {\n        <span class=\"kw\">let </span>pad = <span class=\"self\">self</span>.padding_needed_for(<span class=\"self\">self</span>.align());\n        <span class=\"comment\">// This cannot overflow. Quoting from the invariant of Layout:\n        // &gt; `size`, when rounded up to the nearest multiple of `align`,\n        // &gt; must not overflow isize (i.e., the rounded value must be\n        // &gt; less than or equal to `isize::MAX`)\n        </span><span class=\"kw\">let </span>new_size = <span class=\"self\">self</span>.size() + pad;\n\n        <span class=\"comment\">// SAFETY: padded size is guaranteed to not exceed `isize::MAX`.\n        </span><span class=\"kw\">unsafe </span>{ Layout::from_size_align_unchecked(new_size, <span class=\"self\">self</span>.align()) }\n    }\n\n    <span class=\"doccomment\">/// Creates a layout describing the record for `n` instances of\n    /// `self`, with a suitable amount of padding between each to\n    /// ensure that each instance is given its requested size and\n    /// alignment. On success, returns `(k, offs)` where `k` is the\n    /// layout of the array and `offs` is the distance between the start\n    /// of each element in the array.\n    ///\n    /// On arithmetic overflow, returns `LayoutError`.\n    </span><span class=\"attr\">#[unstable(feature = <span class=\"string\">\"alloc_layout_extra\"</span>, issue = <span class=\"string\">\"55724\"</span>)]\n    #[inline]\n    </span><span class=\"kw\">pub fn </span>repeat(<span class=\"kw-2\">&amp;</span><span class=\"self\">self</span>, n: usize) -&gt; <span class=\"prelude-ty\">Result</span>&lt;(<span class=\"self\">Self</span>, usize), LayoutError&gt; {\n        <span class=\"comment\">// This cannot overflow. Quoting from the invariant of Layout:\n        // &gt; `size`, when rounded up to the nearest multiple of `align`,\n        // &gt; must not overflow isize (i.e., the rounded value must be\n        // &gt; less than or equal to `isize::MAX`)\n        </span><span class=\"kw\">let </span>padded_size = <span class=\"self\">self</span>.size() + <span class=\"self\">self</span>.padding_needed_for(<span class=\"self\">self</span>.align());\n        <span class=\"kw\">let </span>alloc_size = padded_size.checked_mul(n).ok_or(LayoutError)<span class=\"question-mark\">?</span>;\n\n        <span class=\"comment\">// The safe constructor is called here to enforce the isize size limit.\n        </span><span class=\"kw\">let </span>layout = Layout::from_size_alignment(alloc_size, <span class=\"self\">self</span>.align)<span class=\"question-mark\">?</span>;\n        <span class=\"prelude-val\">Ok</span>((layout, padded_size))\n    }\n\n    <span class=\"doccomment\">/// Creates a layout describing the record for `self` followed by\n    /// `next`, including any necessary padding to ensure that `next`\n    /// will be properly aligned, but *no trailing padding*.\n    ///\n    /// In order to match C representation layout `repr(C)`, you should\n    /// call `pad_to_align` after extending the layout with all fields.\n    /// (There is no way to match the default Rust representation\n    /// layout `repr(Rust)`, as it is unspecified.)\n    ///\n    /// Note that the alignment of the resulting layout will be the maximum of\n    /// those of `self` and `next`, in order to ensure alignment of both parts.\n    ///\n    /// Returns `Ok((k, offset))`, where `k` is layout of the concatenated\n    /// record and `offset` is the relative location, in bytes, of the\n    /// start of the `next` embedded within the concatenated record\n    /// (assuming that the record itself starts at offset 0).\n    ///\n    /// On arithmetic overflow, returns `LayoutError`.\n    ///\n    /// # Examples\n    ///\n    /// To calculate the layout of a `#[repr(C)]` structure and the offsets of\n    /// the fields from its fields' layouts:\n    ///\n    /// ```rust\n    /// # use std::alloc::{Layout, LayoutError};\n    /// pub fn repr_c(fields: &amp;[Layout]) -&gt; Result&lt;(Layout, Vec&lt;usize&gt;), LayoutError&gt; {\n    ///     let mut offsets = Vec::new();\n    ///     let mut layout = Layout::from_size_align(0, 1)?;\n    ///     for &amp;field in fields {\n    ///         let (new_layout, offset) = layout.extend(field)?;\n    ///         layout = new_layout;\n    ///         offsets.push(offset);\n    ///     }\n    ///     // Remember to finalize with `pad_to_align`!\n    ///     Ok((layout.pad_to_align(), offsets))\n    /// }\n    /// # // test that it works\n    /// # #[repr(C)] struct S { a: u64, b: u32, c: u16, d: u32 }\n    /// # let s = Layout::new::&lt;S&gt;();\n    /// # let u16 = Layout::new::&lt;u16&gt;();\n    /// # let u32 = Layout::new::&lt;u32&gt;();\n    /// # let u64 = Layout::new::&lt;u64&gt;();\n    /// # assert_eq!(repr_c(&amp;[u64, u32, u16, u32]), Ok((s, vec![0, 8, 12, 16])));\n    /// ```\n    </span><span class=\"attr\">#[stable(feature = <span class=\"string\">\"alloc_layout_manipulation\"</span>, since = <span class=\"string\">\"1.44.0\"</span>)]\n    #[inline]\n    </span><span class=\"kw\">pub fn </span>extend(<span class=\"kw-2\">&amp;</span><span class=\"self\">self</span>, next: <span class=\"self\">Self</span>) -&gt; <span class=\"prelude-ty\">Result</span>&lt;(<span class=\"self\">Self</span>, usize), LayoutError&gt; {\n        <span class=\"kw\">let </span>new_align = cmp::max(<span class=\"self\">self</span>.align, next.align);\n        <span class=\"kw\">let </span>pad = <span class=\"self\">self</span>.padding_needed_for(next.align());\n\n        <span class=\"kw\">let </span>offset = <span class=\"self\">self</span>.size().checked_add(pad).ok_or(LayoutError)<span class=\"question-mark\">?</span>;\n        <span class=\"kw\">let </span>new_size = offset.checked_add(next.size()).ok_or(LayoutError)<span class=\"question-mark\">?</span>;\n\n        <span class=\"comment\">// The safe constructor is called here to enforce the isize size limit.\n        </span><span class=\"kw\">let </span>layout = Layout::from_size_alignment(new_size, new_align)<span class=\"question-mark\">?</span>;\n        <span class=\"prelude-val\">Ok</span>((layout, offset))\n    }\n\n    <span class=\"doccomment\">/// Creates a layout describing the record for `n` instances of\n    /// `self`, with no padding between each instance.\n    ///\n    /// Note that, unlike `repeat`, `repeat_packed` does not guarantee\n    /// that the repeated instances of `self` will be properly\n    /// aligned, even if a given instance of `self` is properly\n    /// aligned. In other words, if the layout returned by\n    /// `repeat_packed` is used to allocate an array, it is not\n    /// guaranteed that all elements in the array will be properly\n    /// aligned.\n    ///\n    /// On arithmetic overflow, returns `LayoutError`.\n    </span><span class=\"attr\">#[unstable(feature = <span class=\"string\">\"alloc_layout_extra\"</span>, issue = <span class=\"string\">\"55724\"</span>)]\n    #[inline]\n    </span><span class=\"kw\">pub fn </span>repeat_packed(<span class=\"kw-2\">&amp;</span><span class=\"self\">self</span>, n: usize) -&gt; <span class=\"prelude-ty\">Result</span>&lt;<span class=\"self\">Self</span>, LayoutError&gt; {\n        <span class=\"kw\">let </span>size = <span class=\"self\">self</span>.size().checked_mul(n).ok_or(LayoutError)<span class=\"question-mark\">?</span>;\n        <span class=\"comment\">// The safe constructor is called here to enforce the isize size limit.\n        </span>Layout::from_size_alignment(size, <span class=\"self\">self</span>.align)\n    }\n\n    <span class=\"doccomment\">/// Creates a layout describing the record for `self` followed by\n    /// `next` with no additional padding between the two. Since no\n    /// padding is inserted, the alignment of `next` is irrelevant,\n    /// and is not incorporated *at all* into the resulting layout.\n    ///\n    /// On arithmetic overflow, returns `LayoutError`.\n    </span><span class=\"attr\">#[unstable(feature = <span class=\"string\">\"alloc_layout_extra\"</span>, issue = <span class=\"string\">\"55724\"</span>)]\n    #[inline]\n    </span><span class=\"kw\">pub fn </span>extend_packed(<span class=\"kw-2\">&amp;</span><span class=\"self\">self</span>, next: <span class=\"self\">Self</span>) -&gt; <span class=\"prelude-ty\">Result</span>&lt;<span class=\"self\">Self</span>, LayoutError&gt; {\n        <span class=\"kw\">let </span>new_size = <span class=\"self\">self</span>.size().checked_add(next.size()).ok_or(LayoutError)<span class=\"question-mark\">?</span>;\n        <span class=\"comment\">// The safe constructor is called here to enforce the isize size limit.\n        </span>Layout::from_size_alignment(new_size, <span class=\"self\">self</span>.align)\n    }\n\n    <span class=\"doccomment\">/// Creates a layout describing the record for a `[T; n]`.\n    ///\n    /// On arithmetic overflow or when the total size would exceed\n    /// `isize::MAX`, returns `LayoutError`.\n    </span><span class=\"attr\">#[stable(feature = <span class=\"string\">\"alloc_layout_manipulation\"</span>, since = <span class=\"string\">\"1.44.0\"</span>)]\n    #[rustc_const_unstable(feature = <span class=\"string\">\"const_alloc_layout\"</span>, issue = <span class=\"string\">\"67521\"</span>)]\n    #[inline]\n    </span><span class=\"kw\">pub const fn </span>array&lt;T&gt;(n: usize) -&gt; <span class=\"prelude-ty\">Result</span>&lt;<span class=\"self\">Self</span>, LayoutError&gt; {\n        <span class=\"comment\">// Reduce the amount of code we need to monomorphize per `T`.\n        </span><span class=\"kw\">return </span>inner(mem::size_of::&lt;T&gt;(), Alignment::of::&lt;T&gt;(), n);\n\n        <span class=\"attr\">#[inline]\n        </span><span class=\"kw\">const fn </span>inner(\n            element_size: usize,\n            align: Alignment,\n            n: usize,\n        ) -&gt; <span class=\"prelude-ty\">Result</span>&lt;Layout, LayoutError&gt; {\n            <span class=\"comment\">// We need to check two things about the size:\n            //  - That the total size won't overflow a `usize`, and\n            //  - That the total size still fits in an `isize`.\n            // By using division we can check them both with a single threshold.\n            // That'd usually be a bad idea, but thankfully here the element size\n            // and alignment are constants, so the compiler will fold all of it.\n            </span><span class=\"kw\">if </span>element_size != <span class=\"number\">0 </span>&amp;&amp; n &gt; Layout::max_size_for_align(align) / element_size {\n                <span class=\"kw\">return </span><span class=\"prelude-val\">Err</span>(LayoutError);\n            }\n\n            <span class=\"comment\">// SAFETY: We just checked that we won't overflow `usize` when we multiply.\n            // This is a useless hint inside this function, but after inlining this helps\n            // deduplicate checks for whether the overall capacity is zero (e.g., in RawVec's\n            // allocation path) before/after this multiplication.\n            </span><span class=\"kw\">let </span>array_size = <span class=\"kw\">unsafe </span>{ element_size.unchecked_mul(n) };\n\n            <span class=\"comment\">// SAFETY: We just checked above that the `array_size` will not\n            // exceed `isize::MAX` even when rounded up to the alignment.\n            // And `Alignment` guarantees it's a power of two.\n            </span><span class=\"kw\">unsafe </span>{ <span class=\"prelude-val\">Ok</span>(Layout::from_size_align_unchecked(array_size, align.as_usize())) }\n        }\n    }\n}\n\n<span class=\"attr\">#[stable(feature = <span class=\"string\">\"alloc_layout\"</span>, since = <span class=\"string\">\"1.28.0\"</span>)]\n#[deprecated(\n    since = <span class=\"string\">\"1.52.0\"</span>,\n    note = <span class=\"string\">\"Name does not follow std convention, use LayoutError\"</span>,\n    suggestion = <span class=\"string\">\"LayoutError\"\n</span>)]\n</span><span class=\"kw\">pub type </span>LayoutErr = LayoutError;\n\n<span class=\"doccomment\">/// The parameters given to `Layout::from_size_align`\n/// or some other `Layout` constructor\n/// do not satisfy its documented constraints.\n</span><span class=\"attr\">#[stable(feature = <span class=\"string\">\"alloc_layout_error\"</span>, since = <span class=\"string\">\"1.50.0\"</span>)]\n#[non_exhaustive]\n#[derive(Clone, PartialEq, Eq, Debug)]\n</span><span class=\"kw\">pub struct </span>LayoutError;\n\n<span class=\"attr\">#[stable(feature = <span class=\"string\">\"alloc_layout\"</span>, since = <span class=\"string\">\"1.28.0\"</span>)]\n</span><span class=\"kw\">impl </span>Error <span class=\"kw\">for </span>LayoutError {}\n\n<span class=\"comment\">// (we need this for downstream impl of trait Error)\n</span><span class=\"attr\">#[stable(feature = <span class=\"string\">\"alloc_layout\"</span>, since = <span class=\"string\">\"1.28.0\"</span>)]\n</span><span class=\"kw\">impl </span>fmt::Display <span class=\"kw\">for </span>LayoutError {\n    <span class=\"kw\">fn </span>fmt(<span class=\"kw-2\">&amp;</span><span class=\"self\">self</span>, f: <span class=\"kw-2\">&amp;mut </span>fmt::Formatter&lt;<span class=\"lifetime\">'_</span>&gt;) -&gt; fmt::Result {\n        f.write_str(<span class=\"string\">\"invalid parameters to Layout::from_size_align\"</span>)\n    }\n}\n</code></pre></div></section></main></body></html>",
	"crawlDate": "2024-07-28T05:28:54.482Z"
}