{
	"title": "std::simd - Rust",
	"url": "https://doc.rust-lang.org/stable/std/simd/index.html",
	"markdown": "# std::simd - Rust\n\nExpand description\n\nPortable SIMD module.\n\nThis module offers a portable abstraction for SIMD operations that is not bound to any particular hardware architecture.\n\n## [§](#what-is-portable)What is “portable”?\n\nThis module provides a SIMD implementation that is fast and predictable on any target.\n\n#### [§](#portable-simd-works-on-every-target)Portable SIMD works on every target\n\nUnlike target-specific SIMD in `std::arch`, portable SIMD compiles for every target. In this regard, it is just like “regular” Rust.\n\n#### [§](#portable-simd-is-consistent-between-targets)Portable SIMD is consistent between targets\n\nA program using portable SIMD can expect identical behavior on any target. In most regards, [`Simd<T, N>`](prelude/struct.Simd.html \"struct std::simd::prelude::Simd\") can be thought of as a parallelized `[T; N]` and operates like a sequence of `T`.\n\nThis has one notable exception: a handful of older architectures (e.g. `armv7` and `powerpc`) flush [subnormal](about:blank/primitive.f32.html#method.is_subnormal \"method f32::is_subnormal\") `f32` values to zero. On these architectures, subnormal `f32` input values are replaced with zeros, and any operation producing subnormal `f32` values produces zeros instead. This doesn’t affect most architectures or programs.\n\n#### [§](#operations-use-the-best-instructions-available)Operations use the best instructions available\n\nOperations provided by this module compile to the best available SIMD instructions.\n\nPortable SIMD is not a low-level vendor library, and operations in portable SIMD _do not_ necessarily map to a single instruction. Instead, they map to a reasonable implementation of the operation for the target.\n\nConsistency between targets is not compromised to use faster or fewer instructions. In some cases, `std::arch` will provide a faster function that has slightly different behavior than the `std::simd` equivalent. For example, `_mm_min_ps`[1](#fn1) can be slightly faster than [`SimdFloat::simd_min`](about:blank/prelude/trait.SimdFloat.html#tymethod.simd_min \"method std::simd::prelude::SimdFloat::simd_min\"), but does not conform to the IEEE standard also used by [`f32::min`](about:blank/primitive.f32.html#method.min \"method f32::min\"). When necessary, [`Simd<T, N>`](prelude/struct.Simd.html \"struct std::simd::prelude::Simd\") can be converted to the types provided by `std::arch` to make use of target-specific functions.\n\nMany targets simply don’t have SIMD, or don’t support SIMD for a particular element type. In those cases, regular scalar operations are generated instead.\n\n-   [cmp](cmp/index.html \"mod std::simd::cmp\")Experimental\n    \n    Traits for comparing and ordering vectors.\n    \n-   [num](num/index.html \"mod std::simd::num\")Experimental\n    \n    Traits for vectors with numeric elements.\n    \n-   The portable SIMD prelude.\n    \n-   [ptr](ptr/index.html \"mod std::simd::ptr\")Experimental\n    \n    Traits for vectors of pointers.\n    \n\n-   Specifies the number of lanes in a SIMD vector as a type.\n    \n-   A SIMD vector mask for `N` elements of width specified by `Element`.\n    \n-   A SIMD vector with the shape of `[T; N]` but the operations of `T`.\n    \n\n-   Marker trait for types that may be used as SIMD mask elements.\n    \n-   Supporting trait for `Simd::cast`. Typically doesn’t need to be used directly.\n    \n-   Marker trait for types that may be used as SIMD vector elements.\n    \n-   This trait provides a possibly-temporary implementation of float functions that may, in the absence of hardware support, canonicalize to calling an operating system’s `math.h` dynamically-loaded library (also known as a shared object). As these conditionally require runtime support, they should only appear in binaries built assuming OS support: `std`.\n    \n-   Statically guarantees that a lane count is marked as supported.\n    \n-   Create a vector from the elements of another vector.\n    \n-   Convert SIMD vectors to vectors of bytes\n    \n\n-   A SIMD vector with one element of type [`f32`](../primitive.f32.html \"primitive f32\").\n    \n-   A SIMD vector with two elements of type [`f32`](../primitive.f32.html \"primitive f32\").\n    \n-   A SIMD vector with four elements of type [`f32`](../primitive.f32.html \"primitive f32\").\n    \n-   A SIMD vector with eight elements of type [`f32`](../primitive.f32.html \"primitive f32\").\n    \n-   A SIMD vector with 16 elements of type [`f32`](../primitive.f32.html \"primitive f32\").\n    \n-   A SIMD vector with 32 elements of type [`f32`](../primitive.f32.html \"primitive f32\").\n    \n-   A SIMD vector with 64 elements of type [`f32`](../primitive.f32.html \"primitive f32\").\n    \n-   A SIMD vector with one element of type [`f64`](../primitive.f64.html \"primitive f64\").\n    \n-   A SIMD vector with two elements of type [`f64`](../primitive.f64.html \"primitive f64\").\n    \n-   A SIMD vector with four elements of type [`f64`](../primitive.f64.html \"primitive f64\").\n    \n-   A SIMD vector with eight elements of type [`f64`](../primitive.f64.html \"primitive f64\").\n    \n-   A SIMD vector with 16 elements of type [`f64`](../primitive.f64.html \"primitive f64\").\n    \n-   A SIMD vector with 32 elements of type [`f64`](../primitive.f64.html \"primitive f64\").\n    \n-   A SIMD vector with 64 elements of type [`f64`](../primitive.f64.html \"primitive f64\").\n    \n-   A SIMD vector with one element of type [`i8`](../primitive.i8.html \"primitive i8\").\n    \n-   A SIMD vector with two elements of type [`i8`](../primitive.i8.html \"primitive i8\").\n    \n-   A SIMD vector with four elements of type [`i8`](../primitive.i8.html \"primitive i8\").\n    \n-   A SIMD vector with eight elements of type [`i8`](../primitive.i8.html \"primitive i8\").\n    \n-   A SIMD vector with 16 elements of type [`i8`](../primitive.i8.html \"primitive i8\").\n    \n-   A SIMD vector with 32 elements of type [`i8`](../primitive.i8.html \"primitive i8\").\n    \n-   A SIMD vector with 64 elements of type [`i8`](../primitive.i8.html \"primitive i8\").\n    \n-   A SIMD vector with one element of type [`i16`](../primitive.i16.html \"primitive i16\").\n    \n-   A SIMD vector with two elements of type [`i16`](../primitive.i16.html \"primitive i16\").\n    \n-   A SIMD vector with four elements of type [`i16`](../primitive.i16.html \"primitive i16\").\n    \n-   A SIMD vector with eight elements of type [`i16`](../primitive.i16.html \"primitive i16\").\n    \n-   A SIMD vector with 16 elements of type [`i16`](../primitive.i16.html \"primitive i16\").\n    \n-   A SIMD vector with 32 elements of type [`i16`](../primitive.i16.html \"primitive i16\").\n    \n-   A SIMD vector with 64 elements of type [`i16`](../primitive.i16.html \"primitive i16\").\n    \n-   A SIMD vector with one element of type [`i32`](../primitive.i32.html \"primitive i32\").\n    \n-   A SIMD vector with two elements of type [`i32`](../primitive.i32.html \"primitive i32\").\n    \n-   A SIMD vector with four elements of type [`i32`](../primitive.i32.html \"primitive i32\").\n    \n-   A SIMD vector with eight elements of type [`i32`](../primitive.i32.html \"primitive i32\").\n    \n-   A SIMD vector with 16 elements of type [`i32`](../primitive.i32.html \"primitive i32\").\n    \n-   A SIMD vector with 32 elements of type [`i32`](../primitive.i32.html \"primitive i32\").\n    \n-   A SIMD vector with 64 elements of type [`i32`](../primitive.i32.html \"primitive i32\").\n    \n-   A SIMD vector with one element of type [`i64`](../primitive.i64.html \"primitive i64\").\n    \n-   A SIMD vector with two elements of type [`i64`](../primitive.i64.html \"primitive i64\").\n    \n-   A SIMD vector with four elements of type [`i64`](../primitive.i64.html \"primitive i64\").\n    \n-   A SIMD vector with eight elements of type [`i64`](../primitive.i64.html \"primitive i64\").\n    \n-   A SIMD vector with 16 elements of type [`i64`](../primitive.i64.html \"primitive i64\").\n    \n-   A SIMD vector with 32 elements of type [`i64`](../primitive.i64.html \"primitive i64\").\n    \n-   A SIMD vector with 64 elements of type [`i64`](../primitive.i64.html \"primitive i64\").\n    \n-   A SIMD vector with one element of type [`isize`](../primitive.isize.html \"primitive isize\").\n    \n-   A SIMD vector with two elements of type [`isize`](../primitive.isize.html \"primitive isize\").\n    \n-   A SIMD vector with four elements of type [`isize`](../primitive.isize.html \"primitive isize\").\n    \n-   A SIMD vector with eight elements of type [`isize`](../primitive.isize.html \"primitive isize\").\n    \n-   A SIMD vector with 16 elements of type [`isize`](../primitive.isize.html \"primitive isize\").\n    \n-   A SIMD vector with 32 elements of type [`isize`](../primitive.isize.html \"primitive isize\").\n    \n-   A SIMD vector with 64 elements of type [`isize`](../primitive.isize.html \"primitive isize\").\n    \n-   A SIMD mask with one element for vectors with 8-bit element types.\n    \n-   A SIMD mask with two elements for vectors with 8-bit element types.\n    \n-   A SIMD mask with four elements for vectors with 8-bit element types.\n    \n-   A SIMD mask with eight elements for vectors with 8-bit element types.\n    \n-   A SIMD mask with 16 elements for vectors with 8-bit element types.\n    \n-   A SIMD mask with 32 elements for vectors with 8-bit element types.\n    \n-   A SIMD mask with 64 elements for vectors with 8-bit element types.\n    \n-   A SIMD mask with one element for vectors with 16-bit element types.\n    \n-   A SIMD mask with two elements for vectors with 16-bit element types.\n    \n-   A SIMD mask with four elements for vectors with 16-bit element types.\n    \n-   A SIMD mask with eight elements for vectors with 16-bit element types.\n    \n-   A SIMD mask with 16 elements for vectors with 16-bit element types.\n    \n-   A SIMD mask with 32 elements for vectors with 16-bit element types.\n    \n-   A SIMD mask with 64 elements for vectors with 16-bit element types.\n    \n-   A SIMD mask with one element for vectors with 32-bit element types.\n    \n-   A SIMD mask with two elements for vectors with 32-bit element types.\n    \n-   A SIMD mask with four elements for vectors with 32-bit element types.\n    \n-   A SIMD mask with eight elements for vectors with 32-bit element types.\n    \n-   A SIMD mask with 16 elements for vectors with 32-bit element types.\n    \n-   A SIMD mask with 32 elements for vectors with 32-bit element types.\n    \n-   A SIMD mask with 64 elements for vectors with 32-bit element types.\n    \n-   A SIMD mask with one element for vectors with 64-bit element types.\n    \n-   A SIMD mask with two elements for vectors with 64-bit element types.\n    \n-   A SIMD mask with four elements for vectors with 64-bit element types.\n    \n-   A SIMD mask with eight elements for vectors with 64-bit element types.\n    \n-   A SIMD mask with 16 elements for vectors with 64-bit element types.\n    \n-   A SIMD mask with 32 elements for vectors with 64-bit element types.\n    \n-   A SIMD mask with 64 elements for vectors with 64-bit element types.\n    \n-   A SIMD mask with one element for vectors with pointer-sized element types.\n    \n-   A SIMD mask with two elements for vectors with pointer-sized element types.\n    \n-   A SIMD mask with four elements for vectors with pointer-sized element types.\n    \n-   A SIMD mask with eight elements for vectors with pointer-sized element types.\n    \n-   A SIMD mask with 16 elements for vectors with pointer-sized element types.\n    \n-   A SIMD mask with 32 elements for vectors with pointer-sized element types.\n    \n-   A SIMD mask with 64 elements for vectors with pointer-sized element types.\n    \n-   A SIMD vector with one element of type [`u8`](../primitive.u8.html \"primitive u8\").\n    \n-   A SIMD vector with two elements of type [`u8`](../primitive.u8.html \"primitive u8\").\n    \n-   A SIMD vector with four elements of type [`u8`](../primitive.u8.html \"primitive u8\").\n    \n-   A SIMD vector with eight elements of type [`u8`](../primitive.u8.html \"primitive u8\").\n    \n-   A SIMD vector with 16 elements of type [`u8`](../primitive.u8.html \"primitive u8\").\n    \n-   A SIMD vector with 32 elements of type [`u8`](../primitive.u8.html \"primitive u8\").\n    \n-   A SIMD vector with 64 elements of type [`u8`](../primitive.u8.html \"primitive u8\").\n    \n-   A SIMD vector with one element of type [`u16`](../primitive.u16.html \"primitive u16\").\n    \n-   A SIMD vector with two elements of type [`u16`](../primitive.u16.html \"primitive u16\").\n    \n-   A SIMD vector with four elements of type [`u16`](../primitive.u16.html \"primitive u16\").\n    \n-   A SIMD vector with eight elements of type [`u16`](../primitive.u16.html \"primitive u16\").\n    \n-   A SIMD vector with 16 elements of type [`u16`](../primitive.u16.html \"primitive u16\").\n    \n-   A SIMD vector with 32 elements of type [`u16`](../primitive.u16.html \"primitive u16\").\n    \n-   A SIMD vector with 64 elements of type [`u16`](../primitive.u16.html \"primitive u16\").\n    \n-   A SIMD vector with one element of type [`u32`](../primitive.u32.html \"primitive u32\").\n    \n-   A SIMD vector with two elements of type [`u32`](../primitive.u32.html \"primitive u32\").\n    \n-   A SIMD vector with four elements of type [`u32`](../primitive.u32.html \"primitive u32\").\n    \n-   A SIMD vector with eight elements of type [`u32`](../primitive.u32.html \"primitive u32\").\n    \n-   A SIMD vector with 16 elements of type [`u32`](../primitive.u32.html \"primitive u32\").\n    \n-   A SIMD vector with 32 elements of type [`u32`](../primitive.u32.html \"primitive u32\").\n    \n-   A SIMD vector with 64 elements of type [`u32`](../primitive.u32.html \"primitive u32\").\n    \n-   A SIMD vector with one element of type [`u64`](../primitive.u64.html \"primitive u64\").\n    \n-   A SIMD vector with two elements of type [`u64`](../primitive.u64.html \"primitive u64\").\n    \n-   A SIMD vector with four elements of type [`u64`](../primitive.u64.html \"primitive u64\").\n    \n-   A SIMD vector with eight elements of type [`u64`](../primitive.u64.html \"primitive u64\").\n    \n-   A SIMD vector with 16 elements of type [`u64`](../primitive.u64.html \"primitive u64\").\n    \n-   A SIMD vector with 32 elements of type [`u64`](../primitive.u64.html \"primitive u64\").\n    \n-   A SIMD vector with 64 elements of type [`u64`](../primitive.u64.html \"primitive u64\").\n    \n-   A SIMD vector with one element of type [`usize`](../primitive.usize.html \"primitive usize\").\n    \n-   A SIMD vector with two elements of type [`usize`](../primitive.usize.html \"primitive usize\").\n    \n-   A SIMD vector with four elements of type [`usize`](../primitive.usize.html \"primitive usize\").\n    \n-   A SIMD vector with eight elements of type [`usize`](../primitive.usize.html \"primitive usize\").\n    \n-   A SIMD vector with 16 elements of type [`usize`](../primitive.usize.html \"primitive usize\").\n    \n-   A SIMD vector with 32 elements of type [`usize`](../primitive.usize.html \"primitive usize\").\n    \n-   A SIMD vector with 64 elements of type [`usize`](../primitive.usize.html \"primitive usize\").",
	"html": "<!DOCTYPE html><html lang=\"en\" data-theme=\"light\"><head><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><meta name=\"generator\" content=\"rustdoc\"><meta name=\"description\" content=\"Portable SIMD module.\"><title>std::simd - Rust</title><script>if(window.location.protocol!==\"file:\")document.head.insertAdjacentHTML(\"beforeend\",\"SourceSerif4-Regular-46f98efaafac5295.ttf.woff2,FiraSans-Regular-018c141bf0843ffd.woff2,FiraSans-Medium-8f9a781e4970d388.woff2,SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2,SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\".split(\",\").map(f=>`<link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin href=\"../../static.files/${f}\">`).join(\"\"))</script><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceSerif4-Regular-46f98efaafac5295.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/FiraSans-Regular-018c141bf0843ffd.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/FiraSans-Medium-8f9a781e4970d388.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\"><link rel=\"stylesheet\" href=\"../../static.files/normalize-76eba96aa4d2e634.css\"><link rel=\"stylesheet\" href=\"../../static.files/rustdoc-dd39b87e5fcfba68.css\"><meta name=\"rustdoc-vars\" data-root-path=\"../../\" data-static-root-path=\"../../static.files/\" data-current-crate=\"std\" data-themes=\"\" data-resource-suffix=\"1.80.0\" data-rustdoc-version=\"1.80.0 (051478957 2024-07-21)\" data-channel=\"1.80.0\" data-search-js=\"search-d52510db62a78183.js\" data-settings-js=\"settings-4313503d2e1961c2.js\"><script src=\"../../static.files/storage-118b08c4c78b968e.js\"></script><script defer=\"\" src=\"../sidebar-items1.80.0.js\"></script><script defer=\"\" src=\"../../static.files/main-20a3ad099b048cf2.js\"></script><noscript><link rel=\"stylesheet\" href=\"../../static.files/noscript-df360f571f6edeae.css\"></noscript><link rel=\"alternate icon\" type=\"image/png\" href=\"../../static.files/favicon-32x32-422f7d1d52889060.png\"><link rel=\"icon\" type=\"image/svg+xml\" href=\"../../static.files/favicon-2c020d218678b618.svg\"></head><body class=\"rustdoc mod\"><!--[if lte IE 11]><div class=\"warning\">This old browser is unsupported and will most likely display funky things.</div><![endif]--><nav class=\"mobile-topbar\"><button class=\"sidebar-menu-toggle\" title=\"show sidebar\"></button><a class=\"logo-container\" href=\"../../std/index.html\"><img class=\"rust-logo\" src=\"../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"\"></a><h2 class=\"location\"><a href=\"#\">Module simd</a></h2></nav><nav class=\"sidebar\"><div class=\"sidebar-crate\"><a class=\"logo-container\" href=\"../../std/index.html\"><img class=\"rust-logo\" src=\"../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"logo\"></a><h2><a href=\"../../std/index.html\">std</a><span class=\"version\">1.80.0</span></h2></div><div class=\"version\">(051478957\t2024-07-21)</div><h2 class=\"location\"><a href=\"#\">Module simd</a></h2><div class=\"sidebar-elems\"><section><ul class=\"block\"><li><a href=\"#modules\">Modules</a></li><li><a href=\"#macros\">Macros</a></li><li><a href=\"#structs\">Structs</a></li><li><a href=\"#traits\">Traits</a></li><li><a href=\"#types\">Type Aliases</a></li></ul></section><h2><a href=\"../index.html\">In crate std</a></h2><h3><a href=\"../index.html#primitives\">Primitive Types</a></h3><ul class=\"block primitive\"><li><a href=\"../primitive.array.html\">array</a></li><li><a href=\"../primitive.bool.html\">bool</a></li><li><a href=\"../primitive.char.html\">char</a></li><li><a href=\"../primitive.f128.html\">f128</a></li><li><a href=\"../primitive.f16.html\">f16</a></li><li><a href=\"../primitive.f32.html\">f32</a></li><li><a href=\"../primitive.f64.html\">f64</a></li><li><a href=\"../primitive.fn.html\">fn</a></li><li><a href=\"../primitive.i128.html\">i128</a></li><li><a href=\"../primitive.i16.html\">i16</a></li><li><a href=\"../primitive.i32.html\">i32</a></li><li><a href=\"../primitive.i64.html\">i64</a></li><li><a href=\"../primitive.i8.html\">i8</a></li><li><a href=\"../primitive.isize.html\">isize</a></li><li><a href=\"../primitive.never.html\">never</a></li><li><a href=\"../primitive.pointer.html\">pointer</a></li><li><a href=\"../primitive.reference.html\">reference</a></li><li><a href=\"../primitive.slice.html\">slice</a></li><li><a href=\"../primitive.str.html\">str</a></li><li><a href=\"../primitive.tuple.html\">tuple</a></li><li><a href=\"../primitive.u128.html\">u128</a></li><li><a href=\"../primitive.u16.html\">u16</a></li><li><a href=\"../primitive.u32.html\">u32</a></li><li><a href=\"../primitive.u64.html\">u64</a></li><li><a href=\"../primitive.u8.html\">u8</a></li><li><a href=\"../primitive.unit.html\">unit</a></li><li><a href=\"../primitive.usize.html\">usize</a></li></ul><h3><a href=\"../index.html#modules\">Modules</a></h3><ul class=\"block mod\"><li><a href=\"../alloc/index.html\">alloc</a></li><li><a href=\"../any/index.html\">any</a></li><li><a href=\"../arch/index.html\">arch</a></li><li><a href=\"../array/index.html\">array</a></li><li><a href=\"../ascii/index.html\">ascii</a></li><li><a href=\"../assert_matches/index.html\">assert_matches</a></li><li><a href=\"../async_iter/index.html\">async_iter</a></li><li><a href=\"../backtrace/index.html\">backtrace</a></li><li><a href=\"../borrow/index.html\">borrow</a></li><li><a href=\"../boxed/index.html\">boxed</a></li><li><a href=\"../cell/index.html\">cell</a></li><li><a href=\"../char/index.html\">char</a></li><li><a href=\"../clone/index.html\">clone</a></li><li><a href=\"../cmp/index.html\">cmp</a></li><li><a href=\"../collections/index.html\">collections</a></li><li><a href=\"../convert/index.html\">convert</a></li><li><a href=\"../default/index.html\">default</a></li><li><a href=\"../env/index.html\">env</a></li><li><a href=\"../error/index.html\">error</a></li><li><a href=\"../f128/index.html\">f128</a></li><li><a href=\"../f16/index.html\">f16</a></li><li><a href=\"../f32/index.html\">f32</a></li><li><a href=\"../f64/index.html\">f64</a></li><li><a href=\"../ffi/index.html\">ffi</a></li><li><a href=\"../fmt/index.html\">fmt</a></li><li><a href=\"../fs/index.html\">fs</a></li><li><a href=\"../future/index.html\">future</a></li><li><a href=\"../hash/index.html\">hash</a></li><li><a href=\"../hint/index.html\">hint</a></li><li><a href=\"../i128/index.html\">i128</a></li><li><a href=\"../i16/index.html\">i16</a></li><li><a href=\"../i32/index.html\">i32</a></li><li><a href=\"../i64/index.html\">i64</a></li><li><a href=\"../i8/index.html\">i8</a></li><li><a href=\"../intrinsics/index.html\">intrinsics</a></li><li><a href=\"../io/index.html\">io</a></li><li><a href=\"../isize/index.html\">isize</a></li><li><a href=\"../iter/index.html\">iter</a></li><li><a href=\"../marker/index.html\">marker</a></li><li><a href=\"../mem/index.html\">mem</a></li><li><a href=\"../net/index.html\">net</a></li><li><a href=\"../num/index.html\">num</a></li><li><a href=\"../ops/index.html\">ops</a></li><li><a href=\"../option/index.html\">option</a></li><li><a href=\"../os/index.html\">os</a></li><li><a href=\"../panic/index.html\">panic</a></li><li><a href=\"../pat/index.html\">pat</a></li><li><a href=\"../path/index.html\">path</a></li><li><a href=\"../pin/index.html\">pin</a></li><li><a href=\"../prelude/index.html\">prelude</a></li><li><a href=\"../primitive/index.html\">primitive</a></li><li><a href=\"../process/index.html\">process</a></li><li><a href=\"../ptr/index.html\">ptr</a></li><li><a href=\"../rc/index.html\">rc</a></li><li><a href=\"../result/index.html\">result</a></li><li><a href=\"../simd/index.html\">simd</a></li><li><a href=\"../slice/index.html\">slice</a></li><li><a href=\"../str/index.html\">str</a></li><li><a href=\"../string/index.html\">string</a></li><li><a href=\"../sync/index.html\">sync</a></li><li><a href=\"../task/index.html\">task</a></li><li><a href=\"../thread/index.html\">thread</a></li><li><a href=\"../time/index.html\">time</a></li><li><a href=\"../u128/index.html\">u128</a></li><li><a href=\"../u16/index.html\">u16</a></li><li><a href=\"../u32/index.html\">u32</a></li><li><a href=\"../u64/index.html\">u64</a></li><li><a href=\"../u8/index.html\">u8</a></li><li><a href=\"../usize/index.html\">usize</a></li><li><a href=\"../vec/index.html\">vec</a></li></ul><h3><a href=\"../index.html#macros\">Macros</a></h3><ul class=\"block macro\"><li><a href=\"../macro.assert.html\">assert</a></li><li><a href=\"../macro.assert_eq.html\">assert_eq</a></li><li><a href=\"../macro.assert_ne.html\">assert_ne</a></li><li><a href=\"../macro.cfg.html\">cfg</a></li><li><a href=\"../macro.cfg_match.html\">cfg_match</a></li><li><a href=\"../macro.column.html\">column</a></li><li><a href=\"../macro.compile_error.html\">compile_error</a></li><li><a href=\"../macro.concat.html\">concat</a></li><li><a href=\"../macro.concat_bytes.html\">concat_bytes</a></li><li><a href=\"../macro.concat_idents.html\">concat_idents</a></li><li><a href=\"../macro.const_format_args.html\">const_format_args</a></li><li><a href=\"../macro.dbg.html\">dbg</a></li><li><a href=\"../macro.debug_assert.html\">debug_assert</a></li><li><a href=\"../macro.debug_assert_eq.html\">debug_assert_eq</a></li><li><a href=\"../macro.debug_assert_ne.html\">debug_assert_ne</a></li><li><a href=\"../macro.env.html\">env</a></li><li><a href=\"../macro.eprint.html\">eprint</a></li><li><a href=\"../macro.eprintln.html\">eprintln</a></li><li><a href=\"../macro.file.html\">file</a></li><li><a href=\"../macro.format.html\">format</a></li><li><a href=\"../macro.format_args.html\">format_args</a></li><li><a href=\"../macro.format_args_nl.html\">format_args_nl</a></li><li><a href=\"../macro.include.html\">include</a></li><li><a href=\"../macro.include_bytes.html\">include_bytes</a></li><li><a href=\"../macro.include_str.html\">include_str</a></li><li><a href=\"../macro.is_x86_feature_detected.html\">is_x86_feature_detected</a></li><li><a href=\"../macro.line.html\">line</a></li><li><a href=\"../macro.log_syntax.html\">log_syntax</a></li><li><a href=\"../macro.matches.html\">matches</a></li><li><a href=\"../macro.module_path.html\">module_path</a></li><li><a href=\"../macro.option_env.html\">option_env</a></li><li><a href=\"../macro.panic.html\">panic</a></li><li><a href=\"../macro.print.html\">print</a></li><li><a href=\"../macro.println.html\">println</a></li><li><a href=\"../macro.stringify.html\">stringify</a></li><li><a href=\"../macro.thread_local.html\">thread_local</a></li><li><a href=\"../macro.todo.html\">todo</a></li><li><a href=\"../macro.trace_macros.html\">trace_macros</a></li><li><a href=\"../macro.try.html\">try</a></li><li><a href=\"../macro.unimplemented.html\">unimplemented</a></li><li><a href=\"../macro.unreachable.html\">unreachable</a></li><li><a href=\"../macro.vec.html\">vec</a></li><li><a href=\"../macro.write.html\">write</a></li><li><a href=\"../macro.writeln.html\">writeln</a></li></ul><h3><a href=\"../index.html#keywords\">Keywords</a></h3><ul class=\"block keyword\"><li><a href=\"../keyword.SelfTy.html\">SelfTy</a></li><li><a href=\"../keyword.as.html\">as</a></li><li><a href=\"../keyword.async.html\">async</a></li><li><a href=\"../keyword.await.html\">await</a></li><li><a href=\"../keyword.break.html\">break</a></li><li><a href=\"../keyword.const.html\">const</a></li><li><a href=\"../keyword.continue.html\">continue</a></li><li><a href=\"../keyword.crate.html\">crate</a></li><li><a href=\"../keyword.dyn.html\">dyn</a></li><li><a href=\"../keyword.else.html\">else</a></li><li><a href=\"../keyword.enum.html\">enum</a></li><li><a href=\"../keyword.extern.html\">extern</a></li><li><a href=\"../keyword.false.html\">false</a></li><li><a href=\"../keyword.fn.html\">fn</a></li><li><a href=\"../keyword.for.html\">for</a></li><li><a href=\"../keyword.if.html\">if</a></li><li><a href=\"../keyword.impl.html\">impl</a></li><li><a href=\"../keyword.in.html\">in</a></li><li><a href=\"../keyword.let.html\">let</a></li><li><a href=\"../keyword.loop.html\">loop</a></li><li><a href=\"../keyword.match.html\">match</a></li><li><a href=\"../keyword.mod.html\">mod</a></li><li><a href=\"../keyword.move.html\">move</a></li><li><a href=\"../keyword.mut.html\">mut</a></li><li><a href=\"../keyword.pub.html\">pub</a></li><li><a href=\"../keyword.ref.html\">ref</a></li><li><a href=\"../keyword.return.html\">return</a></li><li><a href=\"../keyword.self.html\">self</a></li><li><a href=\"../keyword.static.html\">static</a></li><li><a href=\"../keyword.struct.html\">struct</a></li><li><a href=\"../keyword.super.html\">super</a></li><li><a href=\"../keyword.trait.html\">trait</a></li><li><a href=\"../keyword.true.html\">true</a></li><li><a href=\"../keyword.type.html\">type</a></li><li><a href=\"../keyword.union.html\">union</a></li><li><a href=\"../keyword.unsafe.html\">unsafe</a></li><li><a href=\"../keyword.use.html\">use</a></li><li><a href=\"../keyword.where.html\">where</a></li><li><a href=\"../keyword.while.html\">while</a></li></ul></div></nav><div class=\"sidebar-resizer\"></div><main><div class=\"width-limiter\"><rustdoc-search><nav class=\"sub\">\n            <form class=\"search-form\">\n                <span></span> <!-- This empty span is a hacky fix for Safari - See #93184 -->\n                <div id=\"sidebar-button\" tabindex=\"-1\">\n                    <a href=\"../../std/all.html\" title=\"show sidebar\"></a>\n                </div>\n                <input class=\"search-input\" name=\"search\" aria-label=\"Run search in the documentation\" autocomplete=\"off\" spellcheck=\"false\" placeholder=\"Type ‘S’ or ‘/’ to search, ‘?’ for more options…\" type=\"search\">\n                <div id=\"help-button\" tabindex=\"-1\">\n                    <a href=\"../../help.html\" title=\"help\">?</a>\n                </div>\n                <div id=\"settings-menu\" tabindex=\"-1\">\n                    <a href=\"../../settings.html\" title=\"settings\">\n                        Settings\n                    </a>\n                </div>\n            </form>\n        </nav></rustdoc-search><section id=\"main-content\" class=\"content\"><div class=\"main-heading\"><h1>Module <a href=\"../index.html\">std</a>::<wbr><a class=\"mod\" href=\"#\">simd</a><button id=\"copy-path\" title=\"Copy item path to clipboard\">Copy item path</button></h1><span class=\"out-of-band\"><a class=\"src\" href=\"../../src/std/lib.rs.html#611\">source</a> · <button id=\"toggle-all-docs\" title=\"collapse all docs\">[<span>−</span>]</button></span></div><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>portable_simd</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/86656\">#86656</a>)</span></div></span><details class=\"toggle top-doc\" open=\"\"><summary class=\"hideme\"><span>Expand description</span></summary><div class=\"docblock\"><p>Portable SIMD module.</p>\n<p>This module offers a portable abstraction for SIMD operations\nthat is not bound to any particular hardware architecture.</p>\n<h2 id=\"what-is-portable\"><a class=\"doc-anchor\" href=\"#what-is-portable\">§</a>What is “portable”?</h2>\n<p>This module provides a SIMD implementation that is fast and predictable on any target.</p>\n<h4 id=\"portable-simd-works-on-every-target\"><a class=\"doc-anchor\" href=\"#portable-simd-works-on-every-target\">§</a>Portable SIMD works on every target</h4>\n<p>Unlike target-specific SIMD in <code>std::arch</code>, portable SIMD compiles for every target.\nIn this regard, it is just like “regular” Rust.</p>\n<h4 id=\"portable-simd-is-consistent-between-targets\"><a class=\"doc-anchor\" href=\"#portable-simd-is-consistent-between-targets\">§</a>Portable SIMD is consistent between targets</h4>\n<p>A program using portable SIMD can expect identical behavior on any target.\nIn most regards, <a href=\"prelude/struct.Simd.html\" title=\"struct std::simd::prelude::Simd\"><code>Simd&lt;T, N&gt;</code></a> can be thought of as a parallelized <code>[T; N]</code> and operates like a sequence of <code>T</code>.</p>\n<p>This has one notable exception: a handful of older architectures (e.g. <code>armv7</code> and <code>powerpc</code>) flush <a href=\"../primitive.f32.html#method.is_subnormal\" title=\"method f32::is_subnormal\">subnormal</a> <code>f32</code> values to zero.\nOn these architectures, subnormal <code>f32</code> input values are replaced with zeros, and any operation producing subnormal <code>f32</code> values produces zeros instead.\nThis doesn’t affect most architectures or programs.</p>\n<h4 id=\"operations-use-the-best-instructions-available\"><a class=\"doc-anchor\" href=\"#operations-use-the-best-instructions-available\">§</a>Operations use the best instructions available</h4>\n<p>Operations provided by this module compile to the best available SIMD instructions.</p>\n<p>Portable SIMD is not a low-level vendor library, and operations in portable SIMD <em>do not</em> necessarily map to a single instruction.\nInstead, they map to a reasonable implementation of the operation for the target.</p>\n<p>Consistency between targets is not compromised to use faster or fewer instructions.\nIn some cases, <code>std::arch</code> will provide a faster function that has slightly different behavior than the <code>std::simd</code> equivalent.\nFor example, <code>_mm_min_ps</code><sup id=\"fnref1\"><a href=\"#fn1\">1</a></sup> can be slightly faster than <a href=\"prelude/trait.SimdFloat.html#tymethod.simd_min\" title=\"method std::simd::prelude::SimdFloat::simd_min\"><code>SimdFloat::simd_min</code></a>, but does not conform to the IEEE standard also used by <a href=\"../primitive.f32.html#method.min\" title=\"method f32::min\"><code>f32::min</code></a>.\nWhen necessary, <a href=\"prelude/struct.Simd.html\" title=\"struct std::simd::prelude::Simd\"><code>Simd&lt;T, N&gt;</code></a> can be converted to the types provided by <code>std::arch</code> to make use of target-specific functions.</p>\n<p>Many targets simply don’t have SIMD, or don’t support SIMD for a particular element type.\nIn those cases, regular scalar operations are generated instead.</p>\n<div class=\"footnotes\"><hr><ol><li id=\"fn1\"><p><code>_mm_min_ps(x, y)</code> is equivalent to <code>x.simd_lt(y).select(x, y)</code>&nbsp;<a href=\"#fnref1\">↩</a></p></li></ol></div></div></details><h2 id=\"modules\" class=\"section-header\">Modules<a href=\"#modules\" class=\"anchor\">§</a></h2><ul class=\"item-table\"><li><div class=\"item-name\"><a class=\"mod\" href=\"cmp/index.html\" title=\"mod std::simd::cmp\">cmp</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Traits for comparing and ordering vectors.</div></li><li><div class=\"item-name\"><a class=\"mod\" href=\"num/index.html\" title=\"mod std::simd::num\">num</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Traits for vectors with numeric elements.</div></li><li><div class=\"item-name\"><a class=\"mod\" href=\"prelude/index.html\" title=\"mod std::simd::prelude\">prelude</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">The portable SIMD prelude.</div></li><li><div class=\"item-name\"><a class=\"mod\" href=\"ptr/index.html\" title=\"mod std::simd::ptr\">ptr</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Traits for vectors of pointers.</div></li></ul><h2 id=\"macros\" class=\"section-header\">Macros<a href=\"#macros\" class=\"anchor\">§</a></h2><ul class=\"item-table\"><li><div class=\"item-name\"><a class=\"macro\" href=\"macro.simd_swizzle.html\" title=\"macro std::simd::simd_swizzle\">simd_swizzle</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Constructs a new SIMD vector by copying elements from selected elements in other vectors.</div></li></ul><h2 id=\"structs\" class=\"section-header\">Structs<a href=\"#structs\" class=\"anchor\">§</a></h2><ul class=\"item-table\"><li><div class=\"item-name\"><a class=\"struct\" href=\"struct.LaneCount.html\" title=\"struct std::simd::LaneCount\">LaneCount</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Specifies the number of lanes in a SIMD vector as a type.</div></li><li><div class=\"item-name\"><a class=\"struct\" href=\"struct.Mask.html\" title=\"struct std::simd::Mask\">Mask</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector mask for <code>N</code> elements of width specified by <code>Element</code>.</div></li><li><div class=\"item-name\"><a class=\"struct\" href=\"struct.Simd.html\" title=\"struct std::simd::Simd\">Simd</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with the shape of <code>[T; N]</code> but the operations of <code>T</code>.</div></li></ul><h2 id=\"traits\" class=\"section-header\">Traits<a href=\"#traits\" class=\"anchor\">§</a></h2><ul class=\"item-table\"><li><div class=\"item-name\"><a class=\"trait\" href=\"trait.MaskElement.html\" title=\"trait std::simd::MaskElement\">MaskElement</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Marker trait for types that may be used as SIMD mask elements.</div></li><li><div class=\"item-name\"><a class=\"trait\" href=\"trait.SimdCast.html\" title=\"trait std::simd::SimdCast\">SimdCast</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Supporting trait for <code>Simd::cast</code>.  Typically doesn’t need to be used directly.</div></li><li><div class=\"item-name\"><a class=\"trait\" href=\"trait.SimdElement.html\" title=\"trait std::simd::SimdElement\">SimdElement</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Marker trait for types that may be used as SIMD vector elements.</div></li><li><div class=\"item-name\"><a class=\"trait\" href=\"trait.StdFloat.html\" title=\"trait std::simd::StdFloat\">StdFloat</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">This trait provides a possibly-temporary implementation of float functions\nthat may, in the absence of hardware support, canonicalize to calling an\noperating system’s <code>math.h</code> dynamically-loaded library (also known as a\nshared object). As these conditionally require runtime support, they\nshould only appear in binaries built assuming OS support: <code>std</code>.</div></li><li><div class=\"item-name\"><a class=\"trait\" href=\"trait.SupportedLaneCount.html\" title=\"trait std::simd::SupportedLaneCount\">SupportedLaneCount</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Statically guarantees that a lane count is marked as supported.</div></li><li><div class=\"item-name\"><a class=\"trait\" href=\"trait.Swizzle.html\" title=\"trait std::simd::Swizzle\">Swizzle</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Create a vector from the elements of another vector.</div></li><li><div class=\"item-name\"><a class=\"trait\" href=\"trait.ToBytes.html\" title=\"trait std::simd::ToBytes\">ToBytes</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Convert SIMD vectors to vectors of bytes</div></li></ul><h2 id=\"types\" class=\"section-header\">Type Aliases<a href=\"#types\" class=\"anchor\">§</a></h2><ul class=\"item-table\"><li><div class=\"item-name\"><a class=\"type\" href=\"type.f32x1.html\" title=\"type std::simd::f32x1\">f32x1</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with one element of type <a href=\"../primitive.f32.html\" title=\"primitive f32\"><code>f32</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.f32x2.html\" title=\"type std::simd::f32x2\">f32x2</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with two elements of type <a href=\"../primitive.f32.html\" title=\"primitive f32\"><code>f32</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.f32x4.html\" title=\"type std::simd::f32x4\">f32x4</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with four elements of type <a href=\"../primitive.f32.html\" title=\"primitive f32\"><code>f32</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.f32x8.html\" title=\"type std::simd::f32x8\">f32x8</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with eight elements of type <a href=\"../primitive.f32.html\" title=\"primitive f32\"><code>f32</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.f32x16.html\" title=\"type std::simd::f32x16\">f32x16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with 16 elements of type <a href=\"../primitive.f32.html\" title=\"primitive f32\"><code>f32</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.f32x32.html\" title=\"type std::simd::f32x32\">f32x32</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with 32 elements of type <a href=\"../primitive.f32.html\" title=\"primitive f32\"><code>f32</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.f32x64.html\" title=\"type std::simd::f32x64\">f32x64</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with 64 elements of type <a href=\"../primitive.f32.html\" title=\"primitive f32\"><code>f32</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.f64x1.html\" title=\"type std::simd::f64x1\">f64x1</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with one element of type <a href=\"../primitive.f64.html\" title=\"primitive f64\"><code>f64</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.f64x2.html\" title=\"type std::simd::f64x2\">f64x2</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with two elements of type <a href=\"../primitive.f64.html\" title=\"primitive f64\"><code>f64</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.f64x4.html\" title=\"type std::simd::f64x4\">f64x4</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with four elements of type <a href=\"../primitive.f64.html\" title=\"primitive f64\"><code>f64</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.f64x8.html\" title=\"type std::simd::f64x8\">f64x8</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with eight elements of type <a href=\"../primitive.f64.html\" title=\"primitive f64\"><code>f64</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.f64x16.html\" title=\"type std::simd::f64x16\">f64x16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with 16 elements of type <a href=\"../primitive.f64.html\" title=\"primitive f64\"><code>f64</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.f64x32.html\" title=\"type std::simd::f64x32\">f64x32</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with 32 elements of type <a href=\"../primitive.f64.html\" title=\"primitive f64\"><code>f64</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.f64x64.html\" title=\"type std::simd::f64x64\">f64x64</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with 64 elements of type <a href=\"../primitive.f64.html\" title=\"primitive f64\"><code>f64</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.i8x1.html\" title=\"type std::simd::i8x1\">i8x1</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with one element of type <a href=\"../primitive.i8.html\" title=\"primitive i8\"><code>i8</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.i8x2.html\" title=\"type std::simd::i8x2\">i8x2</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with two elements of type <a href=\"../primitive.i8.html\" title=\"primitive i8\"><code>i8</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.i8x4.html\" title=\"type std::simd::i8x4\">i8x4</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with four elements of type <a href=\"../primitive.i8.html\" title=\"primitive i8\"><code>i8</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.i8x8.html\" title=\"type std::simd::i8x8\">i8x8</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with eight elements of type <a href=\"../primitive.i8.html\" title=\"primitive i8\"><code>i8</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.i8x16.html\" title=\"type std::simd::i8x16\">i8x16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with 16 elements of type <a href=\"../primitive.i8.html\" title=\"primitive i8\"><code>i8</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.i8x32.html\" title=\"type std::simd::i8x32\">i8x32</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with 32 elements of type <a href=\"../primitive.i8.html\" title=\"primitive i8\"><code>i8</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.i8x64.html\" title=\"type std::simd::i8x64\">i8x64</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with 64 elements of type <a href=\"../primitive.i8.html\" title=\"primitive i8\"><code>i8</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.i16x1.html\" title=\"type std::simd::i16x1\">i16x1</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with one element of type <a href=\"../primitive.i16.html\" title=\"primitive i16\"><code>i16</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.i16x2.html\" title=\"type std::simd::i16x2\">i16x2</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with two elements of type <a href=\"../primitive.i16.html\" title=\"primitive i16\"><code>i16</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.i16x4.html\" title=\"type std::simd::i16x4\">i16x4</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with four elements of type <a href=\"../primitive.i16.html\" title=\"primitive i16\"><code>i16</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.i16x8.html\" title=\"type std::simd::i16x8\">i16x8</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with eight elements of type <a href=\"../primitive.i16.html\" title=\"primitive i16\"><code>i16</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.i16x16.html\" title=\"type std::simd::i16x16\">i16x16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with 16 elements of type <a href=\"../primitive.i16.html\" title=\"primitive i16\"><code>i16</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.i16x32.html\" title=\"type std::simd::i16x32\">i16x32</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with 32 elements of type <a href=\"../primitive.i16.html\" title=\"primitive i16\"><code>i16</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.i16x64.html\" title=\"type std::simd::i16x64\">i16x64</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with 64 elements of type <a href=\"../primitive.i16.html\" title=\"primitive i16\"><code>i16</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.i32x1.html\" title=\"type std::simd::i32x1\">i32x1</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with one element of type <a href=\"../primitive.i32.html\" title=\"primitive i32\"><code>i32</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.i32x2.html\" title=\"type std::simd::i32x2\">i32x2</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with two elements of type <a href=\"../primitive.i32.html\" title=\"primitive i32\"><code>i32</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.i32x4.html\" title=\"type std::simd::i32x4\">i32x4</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with four elements of type <a href=\"../primitive.i32.html\" title=\"primitive i32\"><code>i32</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.i32x8.html\" title=\"type std::simd::i32x8\">i32x8</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with eight elements of type <a href=\"../primitive.i32.html\" title=\"primitive i32\"><code>i32</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.i32x16.html\" title=\"type std::simd::i32x16\">i32x16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with 16 elements of type <a href=\"../primitive.i32.html\" title=\"primitive i32\"><code>i32</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.i32x32.html\" title=\"type std::simd::i32x32\">i32x32</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with 32 elements of type <a href=\"../primitive.i32.html\" title=\"primitive i32\"><code>i32</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.i32x64.html\" title=\"type std::simd::i32x64\">i32x64</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with 64 elements of type <a href=\"../primitive.i32.html\" title=\"primitive i32\"><code>i32</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.i64x1.html\" title=\"type std::simd::i64x1\">i64x1</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with one element of type <a href=\"../primitive.i64.html\" title=\"primitive i64\"><code>i64</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.i64x2.html\" title=\"type std::simd::i64x2\">i64x2</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with two elements of type <a href=\"../primitive.i64.html\" title=\"primitive i64\"><code>i64</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.i64x4.html\" title=\"type std::simd::i64x4\">i64x4</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with four elements of type <a href=\"../primitive.i64.html\" title=\"primitive i64\"><code>i64</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.i64x8.html\" title=\"type std::simd::i64x8\">i64x8</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with eight elements of type <a href=\"../primitive.i64.html\" title=\"primitive i64\"><code>i64</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.i64x16.html\" title=\"type std::simd::i64x16\">i64x16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with 16 elements of type <a href=\"../primitive.i64.html\" title=\"primitive i64\"><code>i64</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.i64x32.html\" title=\"type std::simd::i64x32\">i64x32</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with 32 elements of type <a href=\"../primitive.i64.html\" title=\"primitive i64\"><code>i64</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.i64x64.html\" title=\"type std::simd::i64x64\">i64x64</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with 64 elements of type <a href=\"../primitive.i64.html\" title=\"primitive i64\"><code>i64</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.isizex1.html\" title=\"type std::simd::isizex1\">isizex1</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with one element of type <a href=\"../primitive.isize.html\" title=\"primitive isize\"><code>isize</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.isizex2.html\" title=\"type std::simd::isizex2\">isizex2</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with two elements of type <a href=\"../primitive.isize.html\" title=\"primitive isize\"><code>isize</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.isizex4.html\" title=\"type std::simd::isizex4\">isizex4</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with four elements of type <a href=\"../primitive.isize.html\" title=\"primitive isize\"><code>isize</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.isizex8.html\" title=\"type std::simd::isizex8\">isizex8</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with eight elements of type <a href=\"../primitive.isize.html\" title=\"primitive isize\"><code>isize</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.isizex16.html\" title=\"type std::simd::isizex16\">isizex16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with 16 elements of type <a href=\"../primitive.isize.html\" title=\"primitive isize\"><code>isize</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.isizex32.html\" title=\"type std::simd::isizex32\">isizex32</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with 32 elements of type <a href=\"../primitive.isize.html\" title=\"primitive isize\"><code>isize</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.isizex64.html\" title=\"type std::simd::isizex64\">isizex64</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with 64 elements of type <a href=\"../primitive.isize.html\" title=\"primitive isize\"><code>isize</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.mask8x1.html\" title=\"type std::simd::mask8x1\">mask8x1</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD mask with one element for vectors with 8-bit element types.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.mask8x2.html\" title=\"type std::simd::mask8x2\">mask8x2</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD mask with two elements for vectors with 8-bit element types.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.mask8x4.html\" title=\"type std::simd::mask8x4\">mask8x4</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD mask with four elements for vectors with 8-bit element types.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.mask8x8.html\" title=\"type std::simd::mask8x8\">mask8x8</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD mask with eight elements for vectors with 8-bit element types.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.mask8x16.html\" title=\"type std::simd::mask8x16\">mask8x16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD mask with 16 elements for vectors with 8-bit element types.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.mask8x32.html\" title=\"type std::simd::mask8x32\">mask8x32</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD mask with 32 elements for vectors with 8-bit element types.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.mask8x64.html\" title=\"type std::simd::mask8x64\">mask8x64</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD mask with 64 elements for vectors with 8-bit element types.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.mask16x1.html\" title=\"type std::simd::mask16x1\">mask16x1</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD mask with one element for vectors with 16-bit element types.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.mask16x2.html\" title=\"type std::simd::mask16x2\">mask16x2</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD mask with two elements for vectors with 16-bit element types.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.mask16x4.html\" title=\"type std::simd::mask16x4\">mask16x4</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD mask with four elements for vectors with 16-bit element types.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.mask16x8.html\" title=\"type std::simd::mask16x8\">mask16x8</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD mask with eight elements for vectors with 16-bit element types.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.mask16x16.html\" title=\"type std::simd::mask16x16\">mask16x16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD mask with 16 elements for vectors with 16-bit element types.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.mask16x32.html\" title=\"type std::simd::mask16x32\">mask16x32</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD mask with 32 elements for vectors with 16-bit element types.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.mask16x64.html\" title=\"type std::simd::mask16x64\">mask16x64</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD mask with 64 elements for vectors with 16-bit element types.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.mask32x1.html\" title=\"type std::simd::mask32x1\">mask32x1</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD mask with one element for vectors with 32-bit element types.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.mask32x2.html\" title=\"type std::simd::mask32x2\">mask32x2</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD mask with two elements for vectors with 32-bit element types.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.mask32x4.html\" title=\"type std::simd::mask32x4\">mask32x4</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD mask with four elements for vectors with 32-bit element types.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.mask32x8.html\" title=\"type std::simd::mask32x8\">mask32x8</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD mask with eight elements for vectors with 32-bit element types.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.mask32x16.html\" title=\"type std::simd::mask32x16\">mask32x16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD mask with 16 elements for vectors with 32-bit element types.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.mask32x32.html\" title=\"type std::simd::mask32x32\">mask32x32</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD mask with 32 elements for vectors with 32-bit element types.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.mask32x64.html\" title=\"type std::simd::mask32x64\">mask32x64</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD mask with 64 elements for vectors with 32-bit element types.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.mask64x1.html\" title=\"type std::simd::mask64x1\">mask64x1</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD mask with one element for vectors with 64-bit element types.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.mask64x2.html\" title=\"type std::simd::mask64x2\">mask64x2</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD mask with two elements for vectors with 64-bit element types.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.mask64x4.html\" title=\"type std::simd::mask64x4\">mask64x4</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD mask with four elements for vectors with 64-bit element types.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.mask64x8.html\" title=\"type std::simd::mask64x8\">mask64x8</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD mask with eight elements for vectors with 64-bit element types.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.mask64x16.html\" title=\"type std::simd::mask64x16\">mask64x16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD mask with 16 elements for vectors with 64-bit element types.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.mask64x32.html\" title=\"type std::simd::mask64x32\">mask64x32</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD mask with 32 elements for vectors with 64-bit element types.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.mask64x64.html\" title=\"type std::simd::mask64x64\">mask64x64</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD mask with 64 elements for vectors with 64-bit element types.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.masksizex1.html\" title=\"type std::simd::masksizex1\">masksizex1</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD mask with one element for vectors with pointer-sized element types.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.masksizex2.html\" title=\"type std::simd::masksizex2\">masksizex2</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD mask with two elements for vectors with pointer-sized element types.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.masksizex4.html\" title=\"type std::simd::masksizex4\">masksizex4</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD mask with four elements for vectors with pointer-sized element types.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.masksizex8.html\" title=\"type std::simd::masksizex8\">masksizex8</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD mask with eight elements for vectors with pointer-sized element types.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.masksizex16.html\" title=\"type std::simd::masksizex16\">masksizex16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD mask with 16 elements for vectors with pointer-sized element types.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.masksizex32.html\" title=\"type std::simd::masksizex32\">masksizex32</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD mask with 32 elements for vectors with pointer-sized element types.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.masksizex64.html\" title=\"type std::simd::masksizex64\">masksizex64</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD mask with 64 elements for vectors with pointer-sized element types.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.u8x1.html\" title=\"type std::simd::u8x1\">u8x1</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with one element of type <a href=\"../primitive.u8.html\" title=\"primitive u8\"><code>u8</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.u8x2.html\" title=\"type std::simd::u8x2\">u8x2</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with two elements of type <a href=\"../primitive.u8.html\" title=\"primitive u8\"><code>u8</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.u8x4.html\" title=\"type std::simd::u8x4\">u8x4</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with four elements of type <a href=\"../primitive.u8.html\" title=\"primitive u8\"><code>u8</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.u8x8.html\" title=\"type std::simd::u8x8\">u8x8</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with eight elements of type <a href=\"../primitive.u8.html\" title=\"primitive u8\"><code>u8</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.u8x16.html\" title=\"type std::simd::u8x16\">u8x16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with 16 elements of type <a href=\"../primitive.u8.html\" title=\"primitive u8\"><code>u8</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.u8x32.html\" title=\"type std::simd::u8x32\">u8x32</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with 32 elements of type <a href=\"../primitive.u8.html\" title=\"primitive u8\"><code>u8</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.u8x64.html\" title=\"type std::simd::u8x64\">u8x64</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with 64 elements of type <a href=\"../primitive.u8.html\" title=\"primitive u8\"><code>u8</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.u16x1.html\" title=\"type std::simd::u16x1\">u16x1</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with one element of type <a href=\"../primitive.u16.html\" title=\"primitive u16\"><code>u16</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.u16x2.html\" title=\"type std::simd::u16x2\">u16x2</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with two elements of type <a href=\"../primitive.u16.html\" title=\"primitive u16\"><code>u16</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.u16x4.html\" title=\"type std::simd::u16x4\">u16x4</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with four elements of type <a href=\"../primitive.u16.html\" title=\"primitive u16\"><code>u16</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.u16x8.html\" title=\"type std::simd::u16x8\">u16x8</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with eight elements of type <a href=\"../primitive.u16.html\" title=\"primitive u16\"><code>u16</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.u16x16.html\" title=\"type std::simd::u16x16\">u16x16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with 16 elements of type <a href=\"../primitive.u16.html\" title=\"primitive u16\"><code>u16</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.u16x32.html\" title=\"type std::simd::u16x32\">u16x32</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with 32 elements of type <a href=\"../primitive.u16.html\" title=\"primitive u16\"><code>u16</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.u16x64.html\" title=\"type std::simd::u16x64\">u16x64</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with 64 elements of type <a href=\"../primitive.u16.html\" title=\"primitive u16\"><code>u16</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.u32x1.html\" title=\"type std::simd::u32x1\">u32x1</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with one element of type <a href=\"../primitive.u32.html\" title=\"primitive u32\"><code>u32</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.u32x2.html\" title=\"type std::simd::u32x2\">u32x2</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with two elements of type <a href=\"../primitive.u32.html\" title=\"primitive u32\"><code>u32</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.u32x4.html\" title=\"type std::simd::u32x4\">u32x4</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with four elements of type <a href=\"../primitive.u32.html\" title=\"primitive u32\"><code>u32</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.u32x8.html\" title=\"type std::simd::u32x8\">u32x8</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with eight elements of type <a href=\"../primitive.u32.html\" title=\"primitive u32\"><code>u32</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.u32x16.html\" title=\"type std::simd::u32x16\">u32x16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with 16 elements of type <a href=\"../primitive.u32.html\" title=\"primitive u32\"><code>u32</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.u32x32.html\" title=\"type std::simd::u32x32\">u32x32</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with 32 elements of type <a href=\"../primitive.u32.html\" title=\"primitive u32\"><code>u32</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.u32x64.html\" title=\"type std::simd::u32x64\">u32x64</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with 64 elements of type <a href=\"../primitive.u32.html\" title=\"primitive u32\"><code>u32</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.u64x1.html\" title=\"type std::simd::u64x1\">u64x1</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with one element of type <a href=\"../primitive.u64.html\" title=\"primitive u64\"><code>u64</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.u64x2.html\" title=\"type std::simd::u64x2\">u64x2</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with two elements of type <a href=\"../primitive.u64.html\" title=\"primitive u64\"><code>u64</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.u64x4.html\" title=\"type std::simd::u64x4\">u64x4</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with four elements of type <a href=\"../primitive.u64.html\" title=\"primitive u64\"><code>u64</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.u64x8.html\" title=\"type std::simd::u64x8\">u64x8</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with eight elements of type <a href=\"../primitive.u64.html\" title=\"primitive u64\"><code>u64</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.u64x16.html\" title=\"type std::simd::u64x16\">u64x16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with 16 elements of type <a href=\"../primitive.u64.html\" title=\"primitive u64\"><code>u64</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.u64x32.html\" title=\"type std::simd::u64x32\">u64x32</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with 32 elements of type <a href=\"../primitive.u64.html\" title=\"primitive u64\"><code>u64</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.u64x64.html\" title=\"type std::simd::u64x64\">u64x64</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with 64 elements of type <a href=\"../primitive.u64.html\" title=\"primitive u64\"><code>u64</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.usizex1.html\" title=\"type std::simd::usizex1\">usizex1</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with one element of type <a href=\"../primitive.usize.html\" title=\"primitive usize\"><code>usize</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.usizex2.html\" title=\"type std::simd::usizex2\">usizex2</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with two elements of type <a href=\"../primitive.usize.html\" title=\"primitive usize\"><code>usize</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.usizex4.html\" title=\"type std::simd::usizex4\">usizex4</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with four elements of type <a href=\"../primitive.usize.html\" title=\"primitive usize\"><code>usize</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.usizex8.html\" title=\"type std::simd::usizex8\">usizex8</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with eight elements of type <a href=\"../primitive.usize.html\" title=\"primitive usize\"><code>usize</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.usizex16.html\" title=\"type std::simd::usizex16\">usizex16</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with 16 elements of type <a href=\"../primitive.usize.html\" title=\"primitive usize\"><code>usize</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.usizex32.html\" title=\"type std::simd::usizex32\">usizex32</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with 32 elements of type <a href=\"../primitive.usize.html\" title=\"primitive usize\"><code>usize</code></a>.</div></li><li><div class=\"item-name\"><a class=\"type\" href=\"type.usizex64.html\" title=\"type std::simd::usizex64\">usizex64</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">A SIMD vector with 64 elements of type <a href=\"../primitive.usize.html\" title=\"primitive usize\"><code>usize</code></a>.</div></li></ul></section></div></main></body></html>",
	"crawlDate": "2024-07-28T05:11:06.974Z"
}