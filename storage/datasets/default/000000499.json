{
	"title": "IntoIterator in std::iter - Rust",
	"url": "https://doc.rust-lang.org/stable/std/iter/trait.IntoIterator.html",
	"markdown": "# IntoIterator in std::iter - Rust\n\n```\npub trait IntoIterator {\n    type Item;\n    type IntoIter: Iterator<Item = Self::Item>;\n\n    // Required method\n    fn into_iter(self) -> Self::IntoIter;\n}\n```\n\nExpand description\n\nConversion into an [`Iterator`](trait.Iterator.html \"trait std::iter::Iterator\").\n\nBy implementing `IntoIterator` for a type, you define how it will be converted to an iterator. This is common for types which describe a collection of some kind.\n\nOne benefit of implementing `IntoIterator` is that your type will [work with Rust’s `for` loop syntax](about:blank/index.html#for-loops-and-intoiterator \"mod std::iter\").\n\nSee also: [`FromIterator`](trait.FromIterator.html \"trait std::iter::FromIterator\").\n\n## [§](#examples)Examples\n\nBasic usage:\n\n```\nlet v = [1, 2, 3];\nlet mut iter = v.into_iter();\n\nassert_eq!(Some(1), iter.next());\nassert_eq!(Some(2), iter.next());\nassert_eq!(Some(3), iter.next());\nassert_eq!(None, iter.next());\n```\n\n[Run](https://play.rust-lang.org/?code=%23!%5Ballow(unused)%5D%0Afn+main()+%7B%0A++++let+v+=+%5B1,+2,+3%5D;%0A++++let+mut+iter+=+v.into_iter();%0A++++%0A++++assert_eq!(Some(1),+iter.next());%0A++++assert_eq!(Some(2),+iter.next());%0A++++assert_eq!(Some(3),+iter.next());%0A++++assert_eq!(None,+iter.next());%0A%7D&edition=2021)\n\nImplementing `IntoIterator` for your type:\n\n```\n// A sample collection, that's just a wrapper over Vec<T>\n#[derive(Debug)]\nstruct MyCollection(Vec<i32>);\n\n// Let's give it some methods so we can create one and add things\n// to it.\nimpl MyCollection {\n    fn new() -> MyCollection {\n        MyCollection(Vec::new())\n    }\n\n    fn add(&mut self, elem: i32) {\n        self.0.push(elem);\n    }\n}\n\n// and we'll implement IntoIterator\nimpl IntoIterator for MyCollection {\n    type Item = i32;\n    type IntoIter = std::vec::IntoIter<Self::Item>;\n\n    fn into_iter(self) -> Self::IntoIter {\n        self.0.into_iter()\n    }\n}\n\n// Now we can make a new collection...\nlet mut c = MyCollection::new();\n\n// ... add some stuff to it ...\nc.add(0);\nc.add(1);\nc.add(2);\n\n// ... and then turn it into an Iterator:\nfor (i, n) in c.into_iter().enumerate() {\n    assert_eq!(i as i32, n);\n}\n```\n\n[Run](https://play.rust-lang.org/?code=%23!%5Ballow(unused)%5D%0A//+A+sample+collection,+that%27s+just+a+wrapper+over+Vec%3CT%3E%0Afn+main()+%7B%0A++++%23%5Bderive(Debug)%5D%0A++++struct+MyCollection(Vec%3Ci32%3E);%0A++++%0A++++//+Let%27s+give+it+some+methods+so+we+can+create+one+and+add+things%0A++++//+to+it.%0A++++impl+MyCollection+%7B%0A++++++++fn+new()+-%3E+MyCollection+%7B%0A++++++++++++MyCollection(Vec::new())%0A++++++++%7D%0A++++%0A++++++++fn+add(%26mut+self,+elem:+i32)+%7B%0A++++++++++++self.0.push(elem);%0A++++++++%7D%0A++++%7D%0A++++%0A++++//+and+we%27ll+implement+IntoIterator%0A++++impl+IntoIterator+for+MyCollection+%7B%0A++++++++type+Item+=+i32;%0A++++++++type+IntoIter+=+std::vec::IntoIter%3CSelf::Item%3E;%0A++++%0A++++++++fn+into_iter(self)+-%3E+Self::IntoIter+%7B%0A++++++++++++self.0.into_iter()%0A++++++++%7D%0A++++%7D%0A++++%0A++++//+Now+we+can+make+a+new+collection...%0A++++let+mut+c+=+MyCollection::new();%0A++++%0A++++//+...+add+some+stuff+to+it+...%0A++++c.add(0);%0A++++c.add(1);%0A++++c.add(2);%0A++++%0A++++//+...+and+then+turn+it+into+an+Iterator:%0A++++for+(i,+n)+in+c.into_iter().enumerate()+%7B%0A++++++++assert_eq!(i+as+i32,+n);%0A++++%7D%0A%7D&edition=2021)\n\nIt is common to use `IntoIterator` as a trait bound. This allows the input collection type to change, so long as it is still an iterator. Additional bounds can be specified by restricting on `Item`:\n\n```\nfn collect_as_strings<T>(collection: T) -> Vec<String>\nwhere\n    T: IntoIterator,\n    T::Item: std::fmt::Debug,\n{\n    collection\n        .into_iter()\n        .map(|item| format!(\"{item:?}\"))\n        .collect()\n}\n```\n\n[Run](https://play.rust-lang.org/?code=%23!%5Ballow(unused)%5D%0Afn+main()+%7B%0A++++fn+collect_as_strings%3CT%3E(collection:+T)+-%3E+Vec%3CString%3E%0A++++where%0A++++++++T:+IntoIterator,%0A++++++++T::Item:+std::fmt::Debug,%0A++++%7B%0A++++++++collection%0A++++++++++++.into_iter()%0A++++++++++++.map(%7Citem%7C+format!(%22%7Bitem:?%7D%22))%0A++++++++++++.collect()%0A++++%7D%0A%7D&edition=2021)\n\n1.0.0 · [source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/collect.rs.html#320)\n\nThe type of the elements being iterated over.\n\n1.0.0 · [source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/collect.rs.html#324)\n\nWhich kind of iterator are we turning this into?\n\n1.0.0 · [source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/collect.rs.html#345)\n\nCreates an iterator from a value.\n\nSee the [module-level documentation](index.html \"mod std::iter\") for more.\n\n##### [§](#examples-1)Examples\n\n```\nlet v = [1, 2, 3];\nlet mut iter = v.into_iter();\n\nassert_eq!(Some(1), iter.next());\nassert_eq!(Some(2), iter.next());\nassert_eq!(Some(3), iter.next());\nassert_eq!(None, iter.next());\n```\n\n[Run](https://play.rust-lang.org/?code=%23!%5Ballow(unused)%5D%0Afn+main()+%7B%0A++++let+v+=+%5B1,+2,+3%5D;%0A++++let+mut+iter+=+v.into_iter();%0A++++%0A++++assert_eq!(Some(1),+iter.next());%0A++++assert_eq!(Some(2),+iter.next());%0A++++assert_eq!(Some(3),+iter.next());%0A++++assert_eq!(None,+iter.next());%0A%7D&edition=2021)",
	"html": "<!DOCTYPE html><html lang=\"en\" data-theme=\"light\"><head><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><meta name=\"generator\" content=\"rustdoc\"><meta name=\"description\" content=\"Conversion into an `Iterator`.\"><title>IntoIterator in std::iter - Rust</title><script>if(window.location.protocol!==\"file:\")document.head.insertAdjacentHTML(\"beforeend\",\"SourceSerif4-Regular-46f98efaafac5295.ttf.woff2,FiraSans-Regular-018c141bf0843ffd.woff2,FiraSans-Medium-8f9a781e4970d388.woff2,SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2,SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\".split(\",\").map(f=>`<link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin href=\"../../static.files/${f}\">`).join(\"\"))</script><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceSerif4-Regular-46f98efaafac5295.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/FiraSans-Regular-018c141bf0843ffd.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/FiraSans-Medium-8f9a781e4970d388.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\"><link rel=\"stylesheet\" href=\"../../static.files/normalize-76eba96aa4d2e634.css\"><link rel=\"stylesheet\" href=\"../../static.files/rustdoc-dd39b87e5fcfba68.css\"><meta name=\"rustdoc-vars\" data-root-path=\"../../\" data-static-root-path=\"../../static.files/\" data-current-crate=\"std\" data-themes=\"\" data-resource-suffix=\"1.80.0\" data-rustdoc-version=\"1.80.0 (051478957 2024-07-21)\" data-channel=\"1.80.0\" data-search-js=\"search-d52510db62a78183.js\" data-settings-js=\"settings-4313503d2e1961c2.js\"><script src=\"../../static.files/storage-118b08c4c78b968e.js\"></script><script defer=\"\" src=\"sidebar-items1.80.0.js\"></script><script defer=\"\" src=\"../../static.files/main-20a3ad099b048cf2.js\"></script><noscript><link rel=\"stylesheet\" href=\"../../static.files/noscript-df360f571f6edeae.css\"></noscript><link rel=\"alternate icon\" type=\"image/png\" href=\"../../static.files/favicon-32x32-422f7d1d52889060.png\"><link rel=\"icon\" type=\"image/svg+xml\" href=\"../../static.files/favicon-2c020d218678b618.svg\"></head><body class=\"rustdoc trait\"><!--[if lte IE 11]><div class=\"warning\">This old browser is unsupported and will most likely display funky things.</div><![endif]--><nav class=\"mobile-topbar\"><button class=\"sidebar-menu-toggle\" title=\"show sidebar\"></button><a class=\"logo-container\" href=\"../../std/index.html\"><img class=\"rust-logo\" src=\"../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"\"></a><h2 class=\"location\"><a href=\"#\">IntoIterator</a></h2></nav><nav class=\"sidebar\"><div class=\"sidebar-crate\"><a class=\"logo-container\" href=\"../../std/index.html\"><img class=\"rust-logo\" src=\"../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"logo\"></a><h2><a href=\"../../std/index.html\">std</a><span class=\"version\">1.80.0</span></h2></div><div class=\"version\">(051478957\t2024-07-21)</div><h2 class=\"location\"><a href=\"#\">IntoIterator</a></h2><div class=\"sidebar-elems\"><section><h3><a href=\"#required-associated-types\">Required Associated Types</a></h3><ul class=\"block\"><li><a href=\"#associatedtype.IntoIter\">IntoIter</a></li><li><a href=\"#associatedtype.Item\">Item</a></li></ul><h3><a href=\"#required-methods\">Required Methods</a></h3><ul class=\"block\"><li><a href=\"#tymethod.into_iter\">into_iter</a></li></ul><h3><a href=\"#implementors\">Implementors</a></h3></section><h2><a href=\"index.html\">In std::iter</a></h2><h3><a href=\"index.html#structs\">Structs</a></h3><ul class=\"block struct\"><li><a href=\"struct.ArrayChunks.html\">ArrayChunks</a></li><li><a href=\"struct.ByRefSized.html\">ByRefSized</a></li><li><a href=\"struct.Chain.html\">Chain</a></li><li><a href=\"struct.Cloned.html\">Cloned</a></li><li><a href=\"struct.Copied.html\">Copied</a></li><li><a href=\"struct.Cycle.html\">Cycle</a></li><li><a href=\"struct.Empty.html\">Empty</a></li><li><a href=\"struct.Enumerate.html\">Enumerate</a></li><li><a href=\"struct.Filter.html\">Filter</a></li><li><a href=\"struct.FilterMap.html\">FilterMap</a></li><li><a href=\"struct.FlatMap.html\">FlatMap</a></li><li><a href=\"struct.Flatten.html\">Flatten</a></li><li><a href=\"struct.FromFn.html\">FromFn</a></li><li><a href=\"struct.Fuse.html\">Fuse</a></li><li><a href=\"struct.Inspect.html\">Inspect</a></li><li><a href=\"struct.Intersperse.html\">Intersperse</a></li><li><a href=\"struct.IntersperseWith.html\">IntersperseWith</a></li><li><a href=\"struct.Map.html\">Map</a></li><li><a href=\"struct.MapWhile.html\">MapWhile</a></li><li><a href=\"struct.MapWindows.html\">MapWindows</a></li><li><a href=\"struct.Once.html\">Once</a></li><li><a href=\"struct.OnceWith.html\">OnceWith</a></li><li><a href=\"struct.Peekable.html\">Peekable</a></li><li><a href=\"struct.Repeat.html\">Repeat</a></li><li><a href=\"struct.RepeatN.html\">RepeatN</a></li><li><a href=\"struct.RepeatWith.html\">RepeatWith</a></li><li><a href=\"struct.Rev.html\">Rev</a></li><li><a href=\"struct.Scan.html\">Scan</a></li><li><a href=\"struct.Skip.html\">Skip</a></li><li><a href=\"struct.SkipWhile.html\">SkipWhile</a></li><li><a href=\"struct.StepBy.html\">StepBy</a></li><li><a href=\"struct.Successors.html\">Successors</a></li><li><a href=\"struct.Take.html\">Take</a></li><li><a href=\"struct.TakeWhile.html\">TakeWhile</a></li><li><a href=\"struct.Zip.html\">Zip</a></li></ul><h3><a href=\"index.html#traits\">Traits</a></h3><ul class=\"block trait\"><li><a href=\"trait.DoubleEndedIterator.html\">DoubleEndedIterator</a></li><li><a href=\"trait.ExactSizeIterator.html\">ExactSizeIterator</a></li><li><a href=\"trait.Extend.html\">Extend</a></li><li><a href=\"trait.FromIterator.html\">FromIterator</a></li><li><a href=\"trait.FusedIterator.html\">FusedIterator</a></li><li><a href=\"trait.IntoIterator.html\">IntoIterator</a></li><li><a href=\"trait.Iterator.html\">Iterator</a></li><li><a href=\"trait.Product.html\">Product</a></li><li><a href=\"trait.Step.html\">Step</a></li><li><a href=\"trait.Sum.html\">Sum</a></li><li><a href=\"trait.TrustedLen.html\">TrustedLen</a></li><li><a href=\"trait.TrustedStep.html\">TrustedStep</a></li></ul><h3><a href=\"index.html#functions\">Functions</a></h3><ul class=\"block fn\"><li><a href=\"fn.chain.html\">chain</a></li><li><a href=\"fn.empty.html\">empty</a></li><li><a href=\"fn.from_coroutine.html\">from_coroutine</a></li><li><a href=\"fn.from_fn.html\">from_fn</a></li><li><a href=\"fn.once.html\">once</a></li><li><a href=\"fn.once_with.html\">once_with</a></li><li><a href=\"fn.repeat.html\">repeat</a></li><li><a href=\"fn.repeat_n.html\">repeat_n</a></li><li><a href=\"fn.repeat_with.html\">repeat_with</a></li><li><a href=\"fn.successors.html\">successors</a></li><li><a href=\"fn.zip.html\">zip</a></li></ul></div></nav><div class=\"sidebar-resizer\"></div><main><div class=\"width-limiter\"><rustdoc-search><nav class=\"sub\">\n            <form class=\"search-form\">\n                <span></span> <!-- This empty span is a hacky fix for Safari - See #93184 -->\n                <div id=\"sidebar-button\" tabindex=\"-1\">\n                    <a href=\"../../std/all.html\" title=\"show sidebar\"></a>\n                </div>\n                <input class=\"search-input\" name=\"search\" aria-label=\"Run search in the documentation\" autocomplete=\"off\" spellcheck=\"false\" placeholder=\"Type ‘S’ or ‘/’ to search, ‘?’ for more options…\" type=\"search\">\n                <div id=\"help-button\" tabindex=\"-1\">\n                    <a href=\"../../help.html\" title=\"help\">?</a>\n                </div>\n                <div id=\"settings-menu\" tabindex=\"-1\">\n                    <a href=\"../../settings.html\" title=\"settings\">\n                        Settings\n                    </a>\n                </div>\n            </form>\n        </nav></rustdoc-search><section id=\"main-content\" class=\"content\"><div class=\"main-heading\"><h1>Trait <a href=\"../index.html\">std</a>::<wbr><a href=\"index.html\">iter</a>::<wbr><a class=\"trait\" href=\"#\">IntoIterator</a><button id=\"copy-path\" title=\"Copy item path to clipboard\">Copy item path</button></h1><span class=\"out-of-band\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/collect.rs.html#317\">source</a> · <button id=\"toggle-all-docs\" title=\"collapse all docs\">[<span>−</span>]</button></span></div><pre class=\"rust item-decl\"><code>pub trait IntoIterator {\n    type <a href=\"#associatedtype.Item\" class=\"associatedtype\">Item</a>;\n    type <a href=\"#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a>: <a class=\"trait\" href=\"trait.Iterator.html\" title=\"trait std::iter::Iterator\">Iterator</a>&lt;Item = Self::<a class=\"associatedtype\" href=\"trait.IntoIterator.html#associatedtype.Item\" title=\"type std::iter::IntoIterator::Item\">Item</a>&gt;;\n\n    // Required method\n    fn <a href=\"#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type std::iter::IntoIterator::IntoIter\">IntoIter</a>;\n}</code></pre><details class=\"toggle top-doc\" open=\"\"><summary class=\"hideme\"><span>Expand description</span></summary><div class=\"docblock\"><p>Conversion into an <a href=\"trait.Iterator.html\" title=\"trait std::iter::Iterator\"><code>Iterator</code></a>.</p>\n<p>By implementing <code>IntoIterator</code> for a type, you define how it will be\nconverted to an iterator. This is common for types which describe a\ncollection of some kind.</p>\n<p>One benefit of implementing <code>IntoIterator</code> is that your type will <a href=\"index.html#for-loops-and-intoiterator\" title=\"mod std::iter\">work\nwith Rust’s <code>for</code> loop syntax</a>.</p>\n<p>See also: <a href=\"trait.FromIterator.html\" title=\"trait std::iter::FromIterator\"><code>FromIterator</code></a>.</p>\n<h2 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h2>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>v = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>iter = v.into_iter();\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(<span class=\"number\">1</span>), iter.next());\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>), iter.next());\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(<span class=\"number\">3</span>), iter.next());\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, iter.next());</code></pre><a class=\"test-arrow\" target=\"_blank\" href=\"https://play.rust-lang.org/?code=%23!%5Ballow(unused)%5D%0Afn+main()+%7B%0A++++let+v+=+%5B1,+2,+3%5D;%0A++++let+mut+iter+=+v.into_iter();%0A++++%0A++++assert_eq!(Some(1),+iter.next());%0A++++assert_eq!(Some(2),+iter.next());%0A++++assert_eq!(Some(3),+iter.next());%0A++++assert_eq!(None,+iter.next());%0A%7D&amp;edition=2021\">Run</a></div>\n<p>Implementing <code>IntoIterator</code> for your type:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"comment\">// A sample collection, that's just a wrapper over Vec&lt;T&gt;\n</span><span class=\"attr\">#[derive(Debug)]\n</span><span class=\"kw\">struct </span>MyCollection(Vec&lt;i32&gt;);\n\n<span class=\"comment\">// Let's give it some methods so we can create one and add things\n// to it.\n</span><span class=\"kw\">impl </span>MyCollection {\n    <span class=\"kw\">fn </span>new() -&gt; MyCollection {\n        MyCollection(Vec::new())\n    }\n\n    <span class=\"kw\">fn </span>add(<span class=\"kw-2\">&amp;mut </span><span class=\"self\">self</span>, elem: i32) {\n        <span class=\"self\">self</span>.<span class=\"number\">0</span>.push(elem);\n    }\n}\n\n<span class=\"comment\">// and we'll implement IntoIterator\n</span><span class=\"kw\">impl </span>IntoIterator <span class=\"kw\">for </span>MyCollection {\n    <span class=\"kw\">type </span>Item = i32;\n    <span class=\"kw\">type </span>IntoIter = std::vec::IntoIter&lt;<span class=\"self\">Self</span>::Item&gt;;\n\n    <span class=\"kw\">fn </span>into_iter(<span class=\"self\">self</span>) -&gt; <span class=\"self\">Self</span>::IntoIter {\n        <span class=\"self\">self</span>.<span class=\"number\">0</span>.into_iter()\n    }\n}\n\n<span class=\"comment\">// Now we can make a new collection...\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>c = MyCollection::new();\n\n<span class=\"comment\">// ... add some stuff to it ...\n</span>c.add(<span class=\"number\">0</span>);\nc.add(<span class=\"number\">1</span>);\nc.add(<span class=\"number\">2</span>);\n\n<span class=\"comment\">// ... and then turn it into an Iterator:\n</span><span class=\"kw\">for </span>(i, n) <span class=\"kw\">in </span>c.into_iter().enumerate() {\n    <span class=\"macro\">assert_eq!</span>(i <span class=\"kw\">as </span>i32, n);\n}</code></pre><a class=\"test-arrow\" target=\"_blank\" href=\"https://play.rust-lang.org/?code=%23!%5Ballow(unused)%5D%0A//+A+sample+collection,+that's+just+a+wrapper+over+Vec%3CT%3E%0Afn+main()+%7B%0A++++%23%5Bderive(Debug)%5D%0A++++struct+MyCollection(Vec%3Ci32%3E);%0A++++%0A++++//+Let's+give+it+some+methods+so+we+can+create+one+and+add+things%0A++++//+to+it.%0A++++impl+MyCollection+%7B%0A++++++++fn+new()+-%3E+MyCollection+%7B%0A++++++++++++MyCollection(Vec::new())%0A++++++++%7D%0A++++%0A++++++++fn+add(%26mut+self,+elem:+i32)+%7B%0A++++++++++++self.0.push(elem);%0A++++++++%7D%0A++++%7D%0A++++%0A++++//+and+we'll+implement+IntoIterator%0A++++impl+IntoIterator+for+MyCollection+%7B%0A++++++++type+Item+=+i32;%0A++++++++type+IntoIter+=+std::vec::IntoIter%3CSelf::Item%3E;%0A++++%0A++++++++fn+into_iter(self)+-%3E+Self::IntoIter+%7B%0A++++++++++++self.0.into_iter()%0A++++++++%7D%0A++++%7D%0A++++%0A++++//+Now+we+can+make+a+new+collection...%0A++++let+mut+c+=+MyCollection::new();%0A++++%0A++++//+...+add+some+stuff+to+it+...%0A++++c.add(0);%0A++++c.add(1);%0A++++c.add(2);%0A++++%0A++++//+...+and+then+turn+it+into+an+Iterator:%0A++++for+(i,+n)+in+c.into_iter().enumerate()+%7B%0A++++++++assert_eq!(i+as+i32,+n);%0A++++%7D%0A%7D&amp;edition=2021\">Run</a></div>\n<p>It is common to use <code>IntoIterator</code> as a trait bound. This allows\nthe input collection type to change, so long as it is still an\niterator. Additional bounds can be specified by restricting on\n<code>Item</code>:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">fn </span>collect_as_strings&lt;T&gt;(collection: T) -&gt; Vec&lt;String&gt;\n<span class=\"kw\">where\n    </span>T: IntoIterator,\n    T::Item: std::fmt::Debug,\n{\n    collection\n        .into_iter()\n        .map(|item| <span class=\"macro\">format!</span>(<span class=\"string\">\"{item:?}\"</span>))\n        .collect()\n}</code></pre><a class=\"test-arrow\" target=\"_blank\" href=\"https://play.rust-lang.org/?code=%23!%5Ballow(unused)%5D%0Afn+main()+%7B%0A++++fn+collect_as_strings%3CT%3E(collection:+T)+-%3E+Vec%3CString%3E%0A++++where%0A++++++++T:+IntoIterator,%0A++++++++T::Item:+std::fmt::Debug,%0A++++%7B%0A++++++++collection%0A++++++++++++.into_iter()%0A++++++++++++.map(%7Citem%7C+format!(%22%7Bitem:?%7D%22))%0A++++++++++++.collect()%0A++++%7D%0A%7D&amp;edition=2021\">Run</a></div>\n</div></details><h2 id=\"required-associated-types\" class=\"section-header\">Required Associated Types<a href=\"#required-associated-types\" class=\"anchor\">§</a></h2><div class=\"methods\"><details class=\"toggle\" open=\"\"><summary><section id=\"associatedtype.Item\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/collect.rs.html#320\">source</a></span><h4 class=\"code-header\">type <a href=\"#associatedtype.Item\" class=\"associatedtype\">Item</a></h4></section></summary><div class=\"docblock\"><p>The type of the elements being iterated over.</p>\n</div></details><details class=\"toggle\" open=\"\"><summary><section id=\"associatedtype.IntoIter\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/collect.rs.html#324\">source</a></span><h4 class=\"code-header\">type <a href=\"#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a>: <a class=\"trait\" href=\"trait.Iterator.html\" title=\"trait std::iter::Iterator\">Iterator</a>&lt;Item = Self::<a class=\"associatedtype\" href=\"trait.IntoIterator.html#associatedtype.Item\" title=\"type std::iter::IntoIterator::Item\">Item</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Which kind of iterator are we turning this into?</p>\n</div></details></div><h2 id=\"required-methods\" class=\"section-header\">Required Methods<a href=\"#required-methods\" class=\"anchor\">§</a></h2><div class=\"methods\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"tymethod.into_iter\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/collect.rs.html#345\">source</a></span><h4 class=\"code-header\">fn <a href=\"#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type std::iter::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class=\"docblock\"><p>Creates an iterator from a value.</p>\n<p>See the <a href=\"index.html\" title=\"mod std::iter\">module-level documentation</a> for more.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>v = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>iter = v.into_iter();\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(<span class=\"number\">1</span>), iter.next());\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>), iter.next());\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(<span class=\"number\">3</span>), iter.next());\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, iter.next());</code></pre><a class=\"test-arrow\" target=\"_blank\" href=\"https://play.rust-lang.org/?code=%23!%5Ballow(unused)%5D%0Afn+main()+%7B%0A++++let+v+=+%5B1,+2,+3%5D;%0A++++let+mut+iter+=+v.into_iter();%0A++++%0A++++assert_eq!(Some(1),+iter.next());%0A++++assert_eq!(Some(2),+iter.next());%0A++++assert_eq!(Some(3),+iter.next());%0A++++assert_eq!(None,+iter.next());%0A%7D&amp;edition=2021\">Run</a></div>\n</div></details></div><h2 id=\"implementors\" class=\"section-header\">Implementors<a href=\"#implementors\" class=\"anchor\">§</a></h2><div id=\"implementors-list\"><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-IntoIterator-for-%26UnixListener\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.10.0\">1.10.0</span> · <a class=\"src\" href=\"../../src/std/os/unix/net/listener.rs.html#365-372\">source</a></span><a href=\"#impl-IntoIterator-for-%26UnixListener\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a> for &amp;'a <a class=\"struct\" href=\"../os/unix/net/struct.UnixListener.html\" title=\"struct std::os::unix::net::UnixListener\">UnixListener</a></h3><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>Unix</strong> only.</div></span></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Item-1\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item-1\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"enum\" href=\"../result/enum.Result.html\" title=\"enum std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"../os/unix/net/struct.UnixStream.html\" title=\"struct std::os::unix::net::UnixStream\">UnixStream</a>, <a class=\"struct\" href=\"../io/struct.Error.html\" title=\"struct std::io::Error\">Error</a>&gt;</h4></section><section id=\"associatedtype.IntoIter-1\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter-1\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"../os/unix/net/struct.Incoming.html\" title=\"struct std::os::unix::net::Incoming\">Incoming</a>&lt;'a&gt;</h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-IntoIterator-for-%26Path\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.6.0\">1.6.0</span> · <a class=\"src\" href=\"../../src/std/path.rs.html#3208-3215\">source</a></span><a href=\"#impl-IntoIterator-for-%26Path\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a> for &amp;'a <a class=\"struct\" href=\"../path/struct.Path.html\" title=\"struct std::path::Path\">Path</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Item-2\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item-2\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Item\" class=\"associatedtype\">Item</a> = &amp;'a <a class=\"struct\" href=\"../ffi/struct.OsStr.html\" title=\"struct std::ffi::OsStr\">OsStr</a></h4></section><section id=\"associatedtype.IntoIter-2\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter-2\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"../path/struct.Iter.html\" title=\"struct std::path::Iter\">Iter</a>&lt;'a&gt;</h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-IntoIterator-for-%26PathBuf\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.6.0\">1.6.0</span> · <a class=\"src\" href=\"../../src/std/path.rs.html#3198-3205\">source</a></span><a href=\"#impl-IntoIterator-for-%26PathBuf\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a> for &amp;'a <a class=\"struct\" href=\"../path/struct.PathBuf.html\" title=\"struct std::path::PathBuf\">PathBuf</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Item-3\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item-3\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Item\" class=\"associatedtype\">Item</a> = &amp;'a <a class=\"struct\" href=\"../ffi/struct.OsStr.html\" title=\"struct std::ffi::OsStr\">OsStr</a></h4></section><section id=\"associatedtype.IntoIter-3\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter-3\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"../path/struct.Iter.html\" title=\"struct std::path::Iter\">Iter</a>&lt;'a&gt;</h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-IntoIterator-for-%26Box%3C%5BI%5D,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.80.0\">1.80.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/alloc/boxed.rs.html#2152\">source</a></span><a href=\"#impl-IntoIterator-for-%26Box%3C%5BI%5D,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, I, A&gt; <a class=\"trait\" href=\"trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a> for &amp;'a <a class=\"struct\" href=\"../boxed/struct.Box.html\" title=\"struct std::boxed::Box\">Box</a>&lt;<a class=\"primitive\" href=\"../primitive.slice.html\">[I]</a>, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"../alloc/trait.Allocator.html\" title=\"trait std::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.IntoIter-4\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter-4\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"../slice/struct.Iter.html\" title=\"struct std::slice::Iter\">Iter</a>&lt;'a, I&gt;</h4></section><section id=\"associatedtype.Item-4\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item-4\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"primitive\" href=\"../primitive.reference.html\">&amp;'a I</a></h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-IntoIterator-for-%26mut+Box%3C%5BI%5D,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.80.0\">1.80.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/alloc/boxed.rs.html#2161\">source</a></span><a href=\"#impl-IntoIterator-for-%26mut+Box%3C%5BI%5D,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, I, A&gt; <a class=\"trait\" href=\"trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a> for &amp;'a mut <a class=\"struct\" href=\"../boxed/struct.Box.html\" title=\"struct std::boxed::Box\">Box</a>&lt;<a class=\"primitive\" href=\"../primitive.slice.html\">[I]</a>, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"../alloc/trait.Allocator.html\" title=\"trait std::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.IntoIter-5\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter-5\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"../slice/struct.IterMut.html\" title=\"struct std::slice::IterMut\">IterMut</a>&lt;'a, I&gt;</h4></section><section id=\"associatedtype.Item-5\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item-5\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"primitive\" href=\"../primitive.reference.html\">&amp;'a mut I</a></h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-IntoIterator-for-%26BTreeMap%3CK,+V,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/alloc/collections/btree/map.rs.html#1485\">source</a></span><a href=\"#impl-IntoIterator-for-%26BTreeMap%3CK,+V,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, K, V, A&gt; <a class=\"trait\" href=\"trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a> for &amp;'a <a class=\"struct\" href=\"../collections/struct.BTreeMap.html\" title=\"struct std::collections::BTreeMap\">BTreeMap</a>&lt;K, V, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"../alloc/trait.Allocator.html\" title=\"trait std::alloc::Allocator\">Allocator</a> + <a class=\"trait\" href=\"../clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Item-6\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item-6\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Item\" class=\"associatedtype\">Item</a> = (<a class=\"primitive\" href=\"../primitive.reference.html\">&amp;'a K</a>, <a class=\"primitive\" href=\"../primitive.reference.html\">&amp;'a V</a>)</h4></section><section id=\"associatedtype.IntoIter-6\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter-6\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"../collections/btree_map/struct.Iter.html\" title=\"struct std::collections::btree_map::Iter\">Iter</a>&lt;'a, K, V&gt;</h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-IntoIterator-for-%26mut+BTreeMap%3CK,+V,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/alloc/collections/btree/map.rs.html#1560\">source</a></span><a href=\"#impl-IntoIterator-for-%26mut+BTreeMap%3CK,+V,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, K, V, A&gt; <a class=\"trait\" href=\"trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a> for &amp;'a mut <a class=\"struct\" href=\"../collections/struct.BTreeMap.html\" title=\"struct std::collections::BTreeMap\">BTreeMap</a>&lt;K, V, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"../alloc/trait.Allocator.html\" title=\"trait std::alloc::Allocator\">Allocator</a> + <a class=\"trait\" href=\"../clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Item-7\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item-7\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Item\" class=\"associatedtype\">Item</a> = (<a class=\"primitive\" href=\"../primitive.reference.html\">&amp;'a K</a>, <a class=\"primitive\" href=\"../primitive.reference.html\">&amp;'a mut V</a>)</h4></section><section id=\"associatedtype.IntoIter-7\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter-7\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"../collections/btree_map/struct.IterMut.html\" title=\"struct std::collections::btree_map::IterMut\">IterMut</a>&lt;'a, K, V&gt;</h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-IntoIterator-for-%26HashMap%3CK,+V,+S%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"../../src/std/collections/hash/map.rs.html#2175-2184\">source</a></span><a href=\"#impl-IntoIterator-for-%26HashMap%3CK,+V,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, K, V, S&gt; <a class=\"trait\" href=\"trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a> for &amp;'a <a class=\"struct\" href=\"../collections/hash_map/struct.HashMap.html\" title=\"struct std::collections::hash_map::HashMap\">HashMap</a>&lt;K, V, S&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Item-8\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item-8\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Item\" class=\"associatedtype\">Item</a> = (<a class=\"primitive\" href=\"../primitive.reference.html\">&amp;'a K</a>, <a class=\"primitive\" href=\"../primitive.reference.html\">&amp;'a V</a>)</h4></section><section id=\"associatedtype.IntoIter-8\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter-8\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"../collections/hash_map/struct.Iter.html\" title=\"struct std::collections::hash_map::Iter\">Iter</a>&lt;'a, K, V&gt;</h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-IntoIterator-for-%26mut+HashMap%3CK,+V,+S%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"../../src/std/collections/hash/map.rs.html#2187-2196\">source</a></span><a href=\"#impl-IntoIterator-for-%26mut+HashMap%3CK,+V,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, K, V, S&gt; <a class=\"trait\" href=\"trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a> for &amp;'a mut <a class=\"struct\" href=\"../collections/hash_map/struct.HashMap.html\" title=\"struct std::collections::hash_map::HashMap\">HashMap</a>&lt;K, V, S&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Item-9\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item-9\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Item\" class=\"associatedtype\">Item</a> = (<a class=\"primitive\" href=\"../primitive.reference.html\">&amp;'a K</a>, <a class=\"primitive\" href=\"../primitive.reference.html\">&amp;'a mut V</a>)</h4></section><section id=\"associatedtype.IntoIter-9\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter-9\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"../collections/hash_map/struct.IterMut.html\" title=\"struct std::collections::hash_map::IterMut\">IterMut</a>&lt;'a, K, V&gt;</h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-IntoIterator-for-%26Option%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/option.rs.html#2065\">source</a></span><a href=\"#impl-IntoIterator-for-%26Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a> for &amp;'a <a class=\"enum\" href=\"../option/enum.Option.html\" title=\"enum std::option::Option\">Option</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Item-10\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item-10\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"primitive\" href=\"../primitive.reference.html\">&amp;'a T</a></h4></section><section id=\"associatedtype.IntoIter-10\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter-10\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"../option/struct.Iter.html\" title=\"struct std::option::Iter\">Iter</a>&lt;'a, T&gt;</h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-IntoIterator-for-%26%5BT%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/slice/iter.rs.html#23\">source</a></span><a href=\"#impl-IntoIterator-for-%26%5BT%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a> for &amp;'a <a class=\"primitive\" href=\"../primitive.slice.html\">[T]</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Item-11\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item-11\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"primitive\" href=\"../primitive.reference.html\">&amp;'a T</a></h4></section><section id=\"associatedtype.IntoIter-11\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter-11\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"../slice/struct.Iter.html\" title=\"struct std::slice::Iter\">Iter</a>&lt;'a, T&gt;</h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-IntoIterator-for-%26Receiver%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.1.0\">1.1.0</span> · <a class=\"src\" href=\"../../src/std/sync/mpsc/mod.rs.html#1062-1069\">source</a></span><a href=\"#impl-IntoIterator-for-%26Receiver%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a> for &amp;'a <a class=\"struct\" href=\"../sync/mpsc/struct.Receiver.html\" title=\"struct std::sync::mpsc::Receiver\">Receiver</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Item-12\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item-12\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Item\" class=\"associatedtype\">Item</a> = T</h4></section><section id=\"associatedtype.IntoIter-12\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter-12\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"../sync/mpsc/struct.Iter.html\" title=\"struct std::sync::mpsc::Iter\">Iter</a>&lt;'a, T&gt;</h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-IntoIterator-for-%26mut+Option%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/option.rs.html#2075\">source</a></span><a href=\"#impl-IntoIterator-for-%26mut+Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a> for &amp;'a mut <a class=\"enum\" href=\"../option/enum.Option.html\" title=\"enum std::option::Option\">Option</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Item-13\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item-13\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"primitive\" href=\"../primitive.reference.html\">&amp;'a mut T</a></h4></section><section id=\"associatedtype.IntoIter-13\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter-13\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"../option/struct.IterMut.html\" title=\"struct std::option::IterMut\">IterMut</a>&lt;'a, T&gt;</h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-IntoIterator-for-%26mut+%5BT%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/slice/iter.rs.html#33\">source</a></span><a href=\"#impl-IntoIterator-for-%26mut+%5BT%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a> for &amp;'a mut <a class=\"primitive\" href=\"../primitive.slice.html\">[T]</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Item-14\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item-14\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"primitive\" href=\"../primitive.reference.html\">&amp;'a mut T</a></h4></section><section id=\"associatedtype.IntoIter-14\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter-14\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"../slice/struct.IterMut.html\" title=\"struct std::slice::IterMut\">IterMut</a>&lt;'a, T&gt;</h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-IntoIterator-for-%26BTreeSet%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/alloc/collections/btree/set.rs.html#1258\">source</a></span><a href=\"#impl-IntoIterator-for-%26BTreeSet%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T, A&gt; <a class=\"trait\" href=\"trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a> for &amp;'a <a class=\"struct\" href=\"../collections/struct.BTreeSet.html\" title=\"struct std::collections::BTreeSet\">BTreeSet</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"../alloc/trait.Allocator.html\" title=\"trait std::alloc::Allocator\">Allocator</a> + <a class=\"trait\" href=\"../clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Item-15\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item-15\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"primitive\" href=\"../primitive.reference.html\">&amp;'a T</a></h4></section><section id=\"associatedtype.IntoIter-15\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter-15\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"../collections/btree_set/struct.Iter.html\" title=\"struct std::collections::btree_set::Iter\">Iter</a>&lt;'a, T&gt;</h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-IntoIterator-for-%26BinaryHeap%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/alloc/collections/binary_heap/mod.rs.html#1842\">source</a></span><a href=\"#impl-IntoIterator-for-%26BinaryHeap%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T, A&gt; <a class=\"trait\" href=\"trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a> for &amp;'a <a class=\"struct\" href=\"../collections/struct.BinaryHeap.html\" title=\"struct std::collections::BinaryHeap\">BinaryHeap</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"../alloc/trait.Allocator.html\" title=\"trait std::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Item-16\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item-16\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"primitive\" href=\"../primitive.reference.html\">&amp;'a T</a></h4></section><section id=\"associatedtype.IntoIter-16\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter-16\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"../collections/binary_heap/struct.Iter.html\" title=\"struct std::collections::binary_heap::Iter\">Iter</a>&lt;'a, T&gt;</h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-IntoIterator-for-%26LinkedList%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/alloc/collections/linked_list.rs.html#2037\">source</a></span><a href=\"#impl-IntoIterator-for-%26LinkedList%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T, A&gt; <a class=\"trait\" href=\"trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a> for &amp;'a <a class=\"struct\" href=\"../collections/struct.LinkedList.html\" title=\"struct std::collections::LinkedList\">LinkedList</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"../alloc/trait.Allocator.html\" title=\"trait std::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Item-17\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item-17\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"primitive\" href=\"../primitive.reference.html\">&amp;'a T</a></h4></section><section id=\"associatedtype.IntoIter-17\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter-17\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"../collections/linked_list/struct.Iter.html\" title=\"struct std::collections::linked_list::Iter\">Iter</a>&lt;'a, T&gt;</h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-IntoIterator-for-%26VecDeque%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/alloc/collections/vec_deque/mod.rs.html#2880\">source</a></span><a href=\"#impl-IntoIterator-for-%26VecDeque%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T, A&gt; <a class=\"trait\" href=\"trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a> for &amp;'a <a class=\"struct\" href=\"../collections/struct.VecDeque.html\" title=\"struct std::collections::VecDeque\">VecDeque</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"../alloc/trait.Allocator.html\" title=\"trait std::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Item-18\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item-18\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"primitive\" href=\"../primitive.reference.html\">&amp;'a T</a></h4></section><section id=\"associatedtype.IntoIter-18\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter-18\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"../collections/vec_deque/struct.Iter.html\" title=\"struct std::collections::vec_deque::Iter\">Iter</a>&lt;'a, T&gt;</h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-IntoIterator-for-%26Vec%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/alloc/vec/mod.rs.html#3014\">source</a></span><a href=\"#impl-IntoIterator-for-%26Vec%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T, A&gt; <a class=\"trait\" href=\"trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a> for &amp;'a <a class=\"struct\" href=\"../vec/struct.Vec.html\" title=\"struct std::vec::Vec\">Vec</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"../alloc/trait.Allocator.html\" title=\"trait std::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Item-19\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item-19\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"primitive\" href=\"../primitive.reference.html\">&amp;'a T</a></h4></section><section id=\"associatedtype.IntoIter-19\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter-19\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"../slice/struct.Iter.html\" title=\"struct std::slice::Iter\">Iter</a>&lt;'a, T&gt;</h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-IntoIterator-for-%26mut+LinkedList%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/alloc/collections/linked_list.rs.html#2047\">source</a></span><a href=\"#impl-IntoIterator-for-%26mut+LinkedList%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T, A&gt; <a class=\"trait\" href=\"trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a> for &amp;'a mut <a class=\"struct\" href=\"../collections/struct.LinkedList.html\" title=\"struct std::collections::LinkedList\">LinkedList</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"../alloc/trait.Allocator.html\" title=\"trait std::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Item-20\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item-20\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"primitive\" href=\"../primitive.reference.html\">&amp;'a mut T</a></h4></section><section id=\"associatedtype.IntoIter-20\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter-20\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"../collections/linked_list/struct.IterMut.html\" title=\"struct std::collections::linked_list::IterMut\">IterMut</a>&lt;'a, T&gt;</h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-IntoIterator-for-%26mut+VecDeque%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/alloc/collections/vec_deque/mod.rs.html#2890\">source</a></span><a href=\"#impl-IntoIterator-for-%26mut+VecDeque%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T, A&gt; <a class=\"trait\" href=\"trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a> for &amp;'a mut <a class=\"struct\" href=\"../collections/struct.VecDeque.html\" title=\"struct std::collections::VecDeque\">VecDeque</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"../alloc/trait.Allocator.html\" title=\"trait std::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Item-21\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item-21\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"primitive\" href=\"../primitive.reference.html\">&amp;'a mut T</a></h4></section><section id=\"associatedtype.IntoIter-21\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter-21\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"../collections/vec_deque/struct.IterMut.html\" title=\"struct std::collections::vec_deque::IterMut\">IterMut</a>&lt;'a, T&gt;</h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-IntoIterator-for-%26mut+Vec%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/alloc/vec/mod.rs.html#3024\">source</a></span><a href=\"#impl-IntoIterator-for-%26mut+Vec%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T, A&gt; <a class=\"trait\" href=\"trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a> for &amp;'a mut <a class=\"struct\" href=\"../vec/struct.Vec.html\" title=\"struct std::vec::Vec\">Vec</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"../alloc/trait.Allocator.html\" title=\"trait std::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Item-22\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item-22\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"primitive\" href=\"../primitive.reference.html\">&amp;'a mut T</a></h4></section><section id=\"associatedtype.IntoIter-22\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter-22\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"../slice/struct.IterMut.html\" title=\"struct std::slice::IterMut\">IterMut</a>&lt;'a, T&gt;</h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-IntoIterator-for-%26Result%3CT,+E%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/result.rs.html#1749\">source</a></span><a href=\"#impl-IntoIterator-for-%26Result%3CT,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T, E&gt; <a class=\"trait\" href=\"trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a> for &amp;'a <a class=\"enum\" href=\"../result/enum.Result.html\" title=\"enum std::result::Result\">Result</a>&lt;T, E&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Item-23\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item-23\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"primitive\" href=\"../primitive.reference.html\">&amp;'a T</a></h4></section><section id=\"associatedtype.IntoIter-23\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter-23\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"../result/struct.Iter.html\" title=\"struct std::result::Iter\">Iter</a>&lt;'a, T&gt;</h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-IntoIterator-for-%26mut+Result%3CT,+E%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/result.rs.html#1759\">source</a></span><a href=\"#impl-IntoIterator-for-%26mut+Result%3CT,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T, E&gt; <a class=\"trait\" href=\"trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a> for &amp;'a mut <a class=\"enum\" href=\"../result/enum.Result.html\" title=\"enum std::result::Result\">Result</a>&lt;T, E&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Item-24\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item-24\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"primitive\" href=\"../primitive.reference.html\">&amp;'a mut T</a></h4></section><section id=\"associatedtype.IntoIter-24\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter-24\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"../result/struct.IterMut.html\" title=\"struct std::result::IterMut\">IterMut</a>&lt;'a, T&gt;</h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-IntoIterator-for-%26HashSet%3CT,+S%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"../../src/std/collections/hash/set.rs.html#1448-1457\">source</a></span><a href=\"#impl-IntoIterator-for-%26HashSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T, S&gt; <a class=\"trait\" href=\"trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a> for &amp;'a <a class=\"struct\" href=\"../collections/hash_set/struct.HashSet.html\" title=\"struct std::collections::hash_set::HashSet\">HashSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Item-25\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item-25\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"primitive\" href=\"../primitive.reference.html\">&amp;'a T</a></h4></section><section id=\"associatedtype.IntoIter-25\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter-25\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"../collections/hash_set/struct.Iter.html\" title=\"struct std::collections::hash_set::Iter\">Iter</a>&lt;'a, T&gt;</h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-IntoIterator-for-%26%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/array/mod.rs.html#320\">source</a></span><a href=\"#impl-IntoIterator-for-%26%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T, const N: <a class=\"primitive\" href=\"../primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a> for &amp;'a <a class=\"primitive\" href=\"../primitive.array.html\">[T; N]</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Item-26\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item-26\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"primitive\" href=\"../primitive.reference.html\">&amp;'a T</a></h4></section><section id=\"associatedtype.IntoIter-26\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter-26\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"../slice/struct.Iter.html\" title=\"struct std::slice::Iter\">Iter</a>&lt;'a, T&gt;</h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-IntoIterator-for-%26mut+%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/array/mod.rs.html#330\">source</a></span><a href=\"#impl-IntoIterator-for-%26mut+%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T, const N: <a class=\"primitive\" href=\"../primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a> for &amp;'a mut <a class=\"primitive\" href=\"../primitive.array.html\">[T; N]</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Item-27\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item-27\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"primitive\" href=\"../primitive.reference.html\">&amp;'a mut T</a></h4></section><section id=\"associatedtype.IntoIter-27\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter-27\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"../slice/struct.IterMut.html\" title=\"struct std::slice::IterMut\">IterMut</a>&lt;'a, T&gt;</h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-IntoIterator-for-I\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/90603\" title=\"Tracking issue for const_intoiterator_identity\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/collect.rs.html#350\">source</a></span><a href=\"#impl-IntoIterator-for-I\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a> for I<div class=\"where\">where\n    I: <a class=\"trait\" href=\"trait.Iterator.html\" title=\"trait std::iter::Iterator\">Iterator</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Item-28\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item-28\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Item\" class=\"associatedtype\">Item</a> = &lt;I as <a class=\"trait\" href=\"trait.Iterator.html\" title=\"trait std::iter::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a></h4></section><section id=\"associatedtype.IntoIter-28\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter-28\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = I</h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-IntoIterator-for-Box%3C%5BI%5D,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.80.0\">1.80.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/alloc/boxed.rs.html#2143\">source</a></span><a href=\"#impl-IntoIterator-for-Box%3C%5BI%5D,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, A&gt; <a class=\"trait\" href=\"trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"../boxed/struct.Box.html\" title=\"struct std::boxed::Box\">Box</a>&lt;<a class=\"primitive\" href=\"../primitive.slice.html\">[I]</a>, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"../alloc/trait.Allocator.html\" title=\"trait std::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.IntoIter-29\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter-29\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"../vec/struct.IntoIter.html\" title=\"struct std::vec::IntoIter\">IntoIter</a>&lt;I, A&gt;</h4></section><section id=\"associatedtype.Item-29\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item-29\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Item\" class=\"associatedtype\">Item</a> = I</h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-IntoIterator-for-BTreeMap%3CK,+V,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/alloc/collections/btree/map.rs.html#1636\">source</a></span><a href=\"#impl-IntoIterator-for-BTreeMap%3CK,+V,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, V, A&gt; <a class=\"trait\" href=\"trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"../collections/struct.BTreeMap.html\" title=\"struct std::collections::BTreeMap\">BTreeMap</a>&lt;K, V, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"../alloc/trait.Allocator.html\" title=\"trait std::alloc::Allocator\">Allocator</a> + <a class=\"trait\" href=\"../clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Item-30\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item-30\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"primitive\" href=\"../primitive.tuple.html\">(K, V)</a></h4></section><section id=\"associatedtype.IntoIter-30\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter-30\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"../collections/btree_map/struct.IntoIter.html\" title=\"struct std::collections::btree_map::IntoIter\">IntoIter</a>&lt;K, V, A&gt;</h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-IntoIterator-for-HashMap%3CK,+V,+S%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"../../src/std/collections/hash/map.rs.html#2199-2226\">source</a></span><a href=\"#impl-IntoIterator-for-HashMap%3CK,+V,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, V, S&gt; <a class=\"trait\" href=\"trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"../collections/hash_map/struct.HashMap.html\" title=\"struct std::collections::hash_map::HashMap\">HashMap</a>&lt;K, V, S&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Item-31\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item-31\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"primitive\" href=\"../primitive.tuple.html\">(K, V)</a></h4></section><section id=\"associatedtype.IntoIter-31\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter-31\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"../collections/hash_map/struct.IntoIter.html\" title=\"struct std::collections::hash_map::IntoIter\">IntoIter</a>&lt;K, V&gt;</h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-IntoIterator-for-Option%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/option.rs.html#2041\">source</a></span><a href=\"#impl-IntoIterator-for-Option%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a> for <a class=\"enum\" href=\"../option/enum.Option.html\" title=\"enum std::option::Option\">Option</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Item-32\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item-32\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Item\" class=\"associatedtype\">Item</a> = T</h4></section><section id=\"associatedtype.IntoIter-32\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter-32\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"../option/struct.IntoIter.html\" title=\"struct std::option::IntoIter\">IntoIter</a>&lt;T&gt;</h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-IntoIterator-for-Receiver%3CT%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.1.0\">1.1.0</span> · <a class=\"src\" href=\"../../src/std/sync/mpsc/mod.rs.html#1080-1087\">source</a></span><a href=\"#impl-IntoIterator-for-Receiver%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"../sync/mpsc/struct.Receiver.html\" title=\"struct std::sync::mpsc::Receiver\">Receiver</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Item-33\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item-33\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Item\" class=\"associatedtype\">Item</a> = T</h4></section><section id=\"associatedtype.IntoIter-33\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter-33\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"../sync/mpsc/struct.IntoIter.html\" title=\"struct std::sync::mpsc::IntoIter\">IntoIter</a>&lt;T&gt;</h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-IntoIterator-for-BTreeSet%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/alloc/collections/btree/set.rs.html#1236\">source</a></span><a href=\"#impl-IntoIterator-for-BTreeSet%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"../collections/struct.BTreeSet.html\" title=\"struct std::collections::BTreeSet\">BTreeSet</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"../alloc/trait.Allocator.html\" title=\"trait std::alloc::Allocator\">Allocator</a> + <a class=\"trait\" href=\"../clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Item-34\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item-34\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Item\" class=\"associatedtype\">Item</a> = T</h4></section><section id=\"associatedtype.IntoIter-34\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter-34\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"../collections/btree_set/struct.IntoIter.html\" title=\"struct std::collections::btree_set::IntoIter\">IntoIter</a>&lt;T, A&gt;</h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-IntoIterator-for-BinaryHeap%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/alloc/collections/binary_heap/mod.rs.html#1814\">source</a></span><a href=\"#impl-IntoIterator-for-BinaryHeap%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"../collections/struct.BinaryHeap.html\" title=\"struct std::collections::BinaryHeap\">BinaryHeap</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"../alloc/trait.Allocator.html\" title=\"trait std::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Item-35\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item-35\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Item\" class=\"associatedtype\">Item</a> = T</h4></section><section id=\"associatedtype.IntoIter-35\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter-35\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"../collections/binary_heap/struct.IntoIter.html\" title=\"struct std::collections::binary_heap::IntoIter\">IntoIter</a>&lt;T, A&gt;</h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-IntoIterator-for-LinkedList%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/alloc/collections/linked_list.rs.html#2025\">source</a></span><a href=\"#impl-IntoIterator-for-LinkedList%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"../collections/struct.LinkedList.html\" title=\"struct std::collections::LinkedList\">LinkedList</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"../alloc/trait.Allocator.html\" title=\"trait std::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Item-36\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item-36\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Item\" class=\"associatedtype\">Item</a> = T</h4></section><section id=\"associatedtype.IntoIter-36\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter-36\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"../collections/linked_list/struct.IntoIter.html\" title=\"struct std::collections::linked_list::IntoIter\">IntoIter</a>&lt;T, A&gt;</h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-IntoIterator-for-VecDeque%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/alloc/collections/vec_deque/mod.rs.html#2868\">source</a></span><a href=\"#impl-IntoIterator-for-VecDeque%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"../collections/struct.VecDeque.html\" title=\"struct std::collections::VecDeque\">VecDeque</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"../alloc/trait.Allocator.html\" title=\"trait std::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Item-37\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item-37\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Item\" class=\"associatedtype\">Item</a> = T</h4></section><section id=\"associatedtype.IntoIter-37\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter-37\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"../collections/vec_deque/struct.IntoIter.html\" title=\"struct std::collections::vec_deque::IntoIter\">IntoIter</a>&lt;T, A&gt;</h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-IntoIterator-for-Vec%3CT,+A%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/alloc/vec/mod.rs.html#2975\">source</a></span><a href=\"#impl-IntoIterator-for-Vec%3CT,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"trait\" href=\"trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"../vec/struct.Vec.html\" title=\"struct std::vec::Vec\">Vec</a>&lt;T, A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"../alloc/trait.Allocator.html\" title=\"trait std::alloc::Allocator\">Allocator</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Item-38\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item-38\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Item\" class=\"associatedtype\">Item</a> = T</h4></section><section id=\"associatedtype.IntoIter-38\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter-38\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"../vec/struct.IntoIter.html\" title=\"struct std::vec::IntoIter\">IntoIter</a>&lt;T, A&gt;</h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-IntoIterator-for-Result%3CT,+E%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/result.rs.html#1723\">source</a></span><a href=\"#impl-IntoIterator-for-Result%3CT,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, E&gt; <a class=\"trait\" href=\"trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a> for <a class=\"enum\" href=\"../result/enum.Result.html\" title=\"enum std::result::Result\">Result</a>&lt;T, E&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Item-39\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item-39\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Item\" class=\"associatedtype\">Item</a> = T</h4></section><section id=\"associatedtype.IntoIter-39\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter-39\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"../result/struct.IntoIter.html\" title=\"struct std::result::IntoIter\">IntoIter</a>&lt;T&gt;</h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-IntoIterator-for-HashSet%3CT,+S%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"../../src/std/collections/hash/set.rs.html#1460-1489\">source</a></span><a href=\"#impl-IntoIterator-for-HashSet%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"../collections/hash_set/struct.HashSet.html\" title=\"struct std::collections::hash_set::HashSet\">HashSet</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Item-40\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item-40\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Item\" class=\"associatedtype\">Item</a> = T</h4></section><section id=\"associatedtype.IntoIter-40\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter-40\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"../collections/hash_set/struct.IntoIter.html\" title=\"struct std::collections::hash_set::IntoIter\">IntoIter</a>&lt;T&gt;</h4></section></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-IntoIterator-for-%5BT;+N%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.53.0\">1.53.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/array/iter.rs.html#45\">source</a></span><a href=\"#impl-IntoIterator-for-%5BT;+N%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"../primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a> for <a class=\"primitive\" href=\"../primitive.array.html\">[T; N]</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Item-41\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item-41\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Item\" class=\"associatedtype\">Item</a> = T</h4></section><section id=\"associatedtype.IntoIter-41\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter-41\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"../array/struct.IntoIter.html\" title=\"struct std::array::IntoIter\">IntoIter</a>&lt;T, N&gt;</h4></section></div></details><div id=\"impl-IntoIterator-41\" class=\"impl\"><a href=\"#impl-IntoIterator-41\" class=\"anchor\"></a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"../../proc_macro/struct.TokenStream.html\" title=\"struct proc_macro::TokenStream\">TokenStream</a></h3></div></div><script src=\"../../trait.impl/core/iter/traits/collect/trait.IntoIterator.js\" data-ignore-extern-crates=\"alloc,core\" async=\"\"></script></section></div></main></body></html>",
	"crawlDate": "2024-07-28T05:11:55.914Z"
}