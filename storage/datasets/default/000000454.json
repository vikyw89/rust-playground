{
	"title": "Sized in std::marker - Rust",
	"url": "https://doc.rust-lang.org/stable/std/marker/trait.Sized.html",
	"markdown": "# Sized in std::marker - Rust\n\n## Trait [std](../index.html)::[marker](index.html)::[Sized](#)\n\n1.0.0 · [source](https://doc.rust-lang.org/1.80.0/src/core/marker.rs.html#145) ·\n\n```\npub trait Sized { }\n```\n\nExpand description\n\nTypes with a constant size known at compile time.\n\nAll type parameters have an implicit bound of `Sized`. The special syntax `?Sized` can be used to remove this bound if it’s not appropriate.\n\n```\nstruct Foo<T>(T);\nstruct Bar<T: ?Sized>(T);\n\n// struct FooUse(Foo<[i32]>); // error: Sized is not implemented for [i32]\nstruct BarUse(Bar<[i32]>); // OK\n```\n\n[Run](https://play.rust-lang.org/?code=%23!%5Ballow(unused)%5D%0A%23!%5Ballow(dead_code)%5D%0Afn+main()+%7B%0A++++struct+Foo%3CT%3E(T);%0A++++struct+Bar%3CT:+?Sized%3E(T);%0A++++%0A++++//+struct+FooUse(Foo%3C%5Bi32%5D%3E);+//+error:+Sized+is+not+implemented+for+%5Bi32%5D%0A++++struct+BarUse(Bar%3C%5Bi32%5D%3E);+//+OK%0A%7D&edition=2021)\n\nThe one exception is the implicit `Self` type of a trait. A trait does not have an implicit `Sized` bound as this is incompatible with [trait object](../../book/ch17-02-trait-objects.html)s where, by definition, the trait needs to work with all possible implementors, and thus could be any size.\n\nAlthough Rust will let you bind `Sized` to a trait, you won’t be able to use it to form a trait object later:\n\n```\ntrait Foo { }\ntrait Bar: Sized { }\n\nstruct Impl;\nimpl Foo for Impl { }\nimpl Bar for Impl { }\n\nlet x: &dyn Foo = &Impl;    // OK\n// let y: &dyn Bar = &Impl; // error: the trait `Bar` cannot\n                            // be made into an object\n```\n\n[Run](https://play.rust-lang.org/?code=%23!%5Ballow(unused)%5D%0A%23!%5Ballow(unused_variables)%5D%0Afn+main()+%7B%0A++++trait+Foo+%7B+%7D%0A++++trait+Bar:+Sized+%7B+%7D%0A++++%0A++++struct+Impl;%0A++++impl+Foo+for+Impl+%7B+%7D%0A++++impl+Bar+for+Impl+%7B+%7D%0A++++%0A++++let+x:+%26dyn+Foo+=+%26Impl;++++//+OK%0A++++//+let+y:+%26dyn+Bar+=+%26Impl;+//+error:+the+trait+%60Bar%60+cannot%0A++++++++++++++++++++++++++++++++//+be+made+into+an+object%0A%7D&edition=2021)",
	"html": "<!DOCTYPE html><html lang=\"en\" data-theme=\"light\"><head><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><meta name=\"generator\" content=\"rustdoc\"><meta name=\"description\" content=\"Types with a constant size known at compile time.\"><title>Sized in std::marker - Rust</title><script>if(window.location.protocol!==\"file:\")document.head.insertAdjacentHTML(\"beforeend\",\"SourceSerif4-Regular-46f98efaafac5295.ttf.woff2,FiraSans-Regular-018c141bf0843ffd.woff2,FiraSans-Medium-8f9a781e4970d388.woff2,SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2,SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\".split(\",\").map(f=>`<link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin href=\"../../static.files/${f}\">`).join(\"\"))</script><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceSerif4-Regular-46f98efaafac5295.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/FiraSans-Regular-018c141bf0843ffd.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/FiraSans-Medium-8f9a781e4970d388.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\"><link rel=\"stylesheet\" href=\"../../static.files/normalize-76eba96aa4d2e634.css\"><link rel=\"stylesheet\" href=\"../../static.files/rustdoc-dd39b87e5fcfba68.css\"><meta name=\"rustdoc-vars\" data-root-path=\"../../\" data-static-root-path=\"../../static.files/\" data-current-crate=\"std\" data-themes=\"\" data-resource-suffix=\"1.80.0\" data-rustdoc-version=\"1.80.0 (051478957 2024-07-21)\" data-channel=\"1.80.0\" data-search-js=\"search-d52510db62a78183.js\" data-settings-js=\"settings-4313503d2e1961c2.js\"><script src=\"../../static.files/storage-118b08c4c78b968e.js\"></script><script defer=\"\" src=\"sidebar-items1.80.0.js\"></script><script defer=\"\" src=\"../../static.files/main-20a3ad099b048cf2.js\"></script><noscript><link rel=\"stylesheet\" href=\"../../static.files/noscript-df360f571f6edeae.css\"></noscript><link rel=\"alternate icon\" type=\"image/png\" href=\"../../static.files/favicon-32x32-422f7d1d52889060.png\"><link rel=\"icon\" type=\"image/svg+xml\" href=\"../../static.files/favicon-2c020d218678b618.svg\"></head><body class=\"rustdoc trait\"><!--[if lte IE 11]><div class=\"warning\">This old browser is unsupported and will most likely display funky things.</div><![endif]--><nav class=\"mobile-topbar\"><button class=\"sidebar-menu-toggle\" title=\"show sidebar\"></button><a class=\"logo-container\" href=\"../../std/index.html\"><img class=\"rust-logo\" src=\"../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"\"></a><h2 class=\"location\"><a href=\"#\">Sized</a></h2></nav><nav class=\"sidebar\"><div class=\"sidebar-crate\"><a class=\"logo-container\" href=\"../../std/index.html\"><img class=\"rust-logo\" src=\"../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"logo\"></a><h2><a href=\"../../std/index.html\">std</a><span class=\"version\">1.80.0</span></h2></div><div class=\"version\">(051478957\t2024-07-21)</div><h2 class=\"location\"><a href=\"#\">Sized</a></h2><div class=\"sidebar-elems\"><section><h3><a href=\"#object-safety\">Object Safety</a></h3><h3><a href=\"#implementors\">Implementors</a></h3></section><h2><a href=\"index.html\">In std::marker</a></h2><h3><a href=\"index.html#structs\">Structs</a></h3><ul class=\"block struct\"><li><a href=\"struct.PhantomData.html\">PhantomData</a></li><li><a href=\"struct.PhantomPinned.html\">PhantomPinned</a></li></ul><h3><a href=\"index.html#traits\">Traits</a></h3><ul class=\"block trait\"><li><a href=\"trait.ConstParamTy.html\">ConstParamTy</a></li><li><a href=\"trait.Copy.html\">Copy</a></li><li><a href=\"trait.Destruct.html\">Destruct</a></li><li><a href=\"trait.DiscriminantKind.html\">DiscriminantKind</a></li><li><a href=\"trait.FnPtr.html\">FnPtr</a></li><li><a href=\"trait.Freeze.html\">Freeze</a></li><li><a href=\"trait.PointerLike.html\">PointerLike</a></li><li><a href=\"trait.Send.html\">Send</a></li><li><a href=\"trait.Sized.html\">Sized</a></li><li><a href=\"trait.StructuralPartialEq.html\">StructuralPartialEq</a></li><li><a href=\"trait.Sync.html\">Sync</a></li><li><a href=\"trait.Tuple.html\">Tuple</a></li><li><a href=\"trait.Unpin.html\">Unpin</a></li><li><a href=\"trait.Unsize.html\">Unsize</a></li></ul><h3><a href=\"index.html#derives\">Derive Macros</a></h3><ul class=\"block derive\"><li><a href=\"derive.ConstParamTy.html\">ConstParamTy</a></li><li><a href=\"derive.Copy.html\">Copy</a></li></ul></div></nav><div class=\"sidebar-resizer\"></div><main><div class=\"width-limiter\"><rustdoc-search><nav class=\"sub\">\n            <form class=\"search-form\">\n                <span></span> <!-- This empty span is a hacky fix for Safari - See #93184 -->\n                <div id=\"sidebar-button\" tabindex=\"-1\">\n                    <a href=\"../../std/all.html\" title=\"show sidebar\"></a>\n                </div>\n                <input class=\"search-input\" name=\"search\" aria-label=\"Run search in the documentation\" autocomplete=\"off\" spellcheck=\"false\" placeholder=\"Type ‘S’ or ‘/’ to search, ‘?’ for more options…\" type=\"search\">\n                <div id=\"help-button\" tabindex=\"-1\">\n                    <a href=\"../../help.html\" title=\"help\">?</a>\n                </div>\n                <div id=\"settings-menu\" tabindex=\"-1\">\n                    <a href=\"../../settings.html\" title=\"settings\">\n                        Settings\n                    </a>\n                </div>\n            </form>\n        </nav></rustdoc-search><section id=\"main-content\" class=\"content\"><div class=\"main-heading\"><h1>Trait <a href=\"../index.html\">std</a>::<wbr><a href=\"index.html\">marker</a>::<wbr><a class=\"trait\" href=\"#\">Sized</a><button id=\"copy-path\" title=\"Copy item path to clipboard\">Copy item path</button></h1><span class=\"out-of-band\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/marker.rs.html#145\">source</a> · <button id=\"toggle-all-docs\" title=\"collapse all docs\">[<span>−</span>]</button></span></div><pre class=\"rust item-decl\"><code>pub trait Sized { }</code></pre><details class=\"toggle top-doc\" open=\"\"><summary class=\"hideme\"><span>Expand description</span></summary><div class=\"docblock\"><p>Types with a constant size known at compile time.</p>\n<p>All type parameters have an implicit bound of <code>Sized</code>. The special syntax\n<code>?Sized</code> can be used to remove this bound if it’s not appropriate.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">struct </span>Foo&lt;T&gt;(T);\n<span class=\"kw\">struct </span>Bar&lt;T: <span class=\"question-mark\">?</span>Sized&gt;(T);\n\n<span class=\"comment\">// struct FooUse(Foo&lt;[i32]&gt;); // error: Sized is not implemented for [i32]\n</span><span class=\"kw\">struct </span>BarUse(Bar&lt;[i32]&gt;); <span class=\"comment\">// OK</span></code></pre><a class=\"test-arrow\" target=\"_blank\" href=\"https://play.rust-lang.org/?code=%23!%5Ballow(unused)%5D%0A%23!%5Ballow(dead_code)%5D%0Afn+main()+%7B%0A++++struct+Foo%3CT%3E(T);%0A++++struct+Bar%3CT:+?Sized%3E(T);%0A++++%0A++++//+struct+FooUse(Foo%3C%5Bi32%5D%3E);+//+error:+Sized+is+not+implemented+for+%5Bi32%5D%0A++++struct+BarUse(Bar%3C%5Bi32%5D%3E);+//+OK%0A%7D&amp;edition=2021\">Run</a></div>\n<p>The one exception is the implicit <code>Self</code> type of a trait. A trait does not\nhave an implicit <code>Sized</code> bound as this is incompatible with <a href=\"../../book/ch17-02-trait-objects.html\">trait object</a>s\nwhere, by definition, the trait needs to work with all possible implementors,\nand thus could be any size.</p>\n<p>Although Rust will let you bind <code>Sized</code> to a trait, you won’t\nbe able to use it to form a trait object later:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">trait </span>Foo { }\n<span class=\"kw\">trait </span>Bar: Sized { }\n\n<span class=\"kw\">struct </span>Impl;\n<span class=\"kw\">impl </span>Foo <span class=\"kw\">for </span>Impl { }\n<span class=\"kw\">impl </span>Bar <span class=\"kw\">for </span>Impl { }\n\n<span class=\"kw\">let </span>x: <span class=\"kw-2\">&amp;</span><span class=\"kw\">dyn </span>Foo = <span class=\"kw-2\">&amp;</span>Impl;    <span class=\"comment\">// OK\n// let y: &amp;dyn Bar = &amp;Impl; // error: the trait `Bar` cannot\n                            // be made into an object</span></code></pre><a class=\"test-arrow\" target=\"_blank\" href=\"https://play.rust-lang.org/?code=%23!%5Ballow(unused)%5D%0A%23!%5Ballow(unused_variables)%5D%0Afn+main()+%7B%0A++++trait+Foo+%7B+%7D%0A++++trait+Bar:+Sized+%7B+%7D%0A++++%0A++++struct+Impl;%0A++++impl+Foo+for+Impl+%7B+%7D%0A++++impl+Bar+for+Impl+%7B+%7D%0A++++%0A++++let+x:+%26dyn+Foo+=+%26Impl;++++//+OK%0A++++//+let+y:+%26dyn+Bar+=+%26Impl;+//+error:+the+trait+%60Bar%60+cannot%0A++++++++++++++++++++++++++++++++//+be+made+into+an+object%0A%7D&amp;edition=2021\">Run</a></div>\n</div></details><h2 id=\"object-safety\" class=\"section-header\">Object Safety<a href=\"#object-safety\" class=\"anchor\">§</a></h2><div class=\"object-safety-info\">This trait is <b>not</b> <a href=\"https://doc.rust-lang.org/1.80.0/reference/items/traits.html#object-safety\">object safe</a>.</div><h2 id=\"implementors\" class=\"section-header\">Implementors<a href=\"#implementors\" class=\"anchor\">§</a></h2><div id=\"implementors-list\"></div><script src=\"../../trait.impl/core/marker/trait.Sized.js\" data-ignore-extern-crates=\"core\" async=\"\"></script></section></div></main></body></html>",
	"crawlDate": "2024-07-28T05:11:39.110Z"
}