{
	"title": "BorrowedBuf in std::io - Rust",
	"url": "https://doc.rust-lang.org/stable/std/io/struct.BorrowedBuf.html",
	"markdown": "# BorrowedBuf in std::io - Rust\n\n```\npub struct BorrowedBuf<'data> { /* private fields */ }\n```\n\n🔬This is a nightly-only experimental API. (`core_io_borrowed_buf` [#117693](https://github.com/rust-lang/rust/issues/117693))\n\nExpand description\n\nA borrowed byte buffer which is incrementally filled and initialized.\n\nThis type is a sort of “double cursor”. It tracks three regions in the buffer: a region at the beginning of the buffer that has been logically filled with data, a region that has been initialized at some point but not yet logically filled, and a region at the end that is fully uninitialized. The filled region is guaranteed to be a subset of the initialized region.\n\nIn summary, the contents of the buffer can be visualized as:\n\n```not\n[             capacity              ]\n[ filled |         unfilled         ]\n[    initialized    | uninitialized ]\n\n```\n\nA `BorrowedBuf` is created around some existing data (or capacity for data) via a unique reference (`&mut`). The `BorrowedBuf` can be configured (e.g., using `clear` or `set_init`), but cannot be directly written. To write into the buffer, use `unfilled` to create a `BorrowedCursor`. The cursor has write-only access to the unfilled portion of the buffer (you can think of it as a write-only iterator).\n\nThe lifetime `'data` is a bound on the lifetime of the underlying data.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/io/borrowed_buf.rs.html#72)[§](#impl-BorrowedBuf%3C'data%3E)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/io/borrowed_buf.rs.html#75)\n\n🔬This is a nightly-only experimental API. (`core_io_borrowed_buf` [#117693](https://github.com/rust-lang/rust/issues/117693))\n\nReturns the total capacity of the buffer.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/io/borrowed_buf.rs.html#81)\n\n🔬This is a nightly-only experimental API. (`core_io_borrowed_buf` [#117693](https://github.com/rust-lang/rust/issues/117693))\n\nReturns the length of the filled part of the buffer.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/io/borrowed_buf.rs.html#87)\n\n🔬This is a nightly-only experimental API. (`core_io_borrowed_buf` [#117693](https://github.com/rust-lang/rust/issues/117693))\n\nReturns the length of the initialized part of the buffer.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/io/borrowed_buf.rs.html#93)\n\n🔬This is a nightly-only experimental API. (`core_io_borrowed_buf` [#117693](https://github.com/rust-lang/rust/issues/117693))\n\nReturns a shared reference to the filled portion of the buffer.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/io/borrowed_buf.rs.html#103)\n\n🔬This is a nightly-only experimental API. (`core_io_borrowed_buf` [#117693](https://github.com/rust-lang/rust/issues/117693))\n\nReturns a mutable reference to the filled portion of the buffer.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/io/borrowed_buf.rs.html#113)\n\n🔬This is a nightly-only experimental API. (`core_io_borrowed_buf` [#117693](https://github.com/rust-lang/rust/issues/117693))\n\nReturns a cursor over the unfilled part of the buffer.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/io/borrowed_buf.rs.html#128)\n\n🔬This is a nightly-only experimental API. (`core_io_borrowed_buf` [#117693](https://github.com/rust-lang/rust/issues/117693))\n\nClears the buffer, resetting the filled region to empty.\n\nThe number of initialized bytes is not changed, and the contents of the buffer are not modified.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/io/borrowed_buf.rs.html#142)\n\n🔬This is a nightly-only experimental API. (`core_io_borrowed_buf` [#117693](https://github.com/rust-lang/rust/issues/117693))\n\nAsserts that the first `n` bytes of the buffer are initialized.\n\n`BorrowedBuf` assumes that bytes are never de-initialized, so this method does nothing when called with fewer bytes than are already known to be initialized.\n\n##### [§](#safety)Safety\n\nThe caller must ensure that the first `n` unfilled bytes of the buffer have already been initialized.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/io/borrowed_buf.rs.html#37)[§](#impl-Debug-for-BorrowedBuf%3C'_%3E)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/io/borrowed_buf.rs.html#65)[§](#impl-From%3C%26mut+%5BMaybeUninit%3Cu8%3E%5D%3E-for-BorrowedBuf%3C'data%3E)\n\nCreate a new `BorrowedBuf` from an uninitialized buffer.\n\nUse `set_init` if part of the buffer is known to be already initialized.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/io/borrowed_buf.rs.html#67)[§](#method.from-1)\n\nConverts to this type from the input type.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/io/borrowed_buf.rs.html#48)[§](#impl-From%3C%26mut+%5Bu8%5D%3E-for-BorrowedBuf%3C'data%3E)\n\nCreate a new `BorrowedBuf` from a fully initialized slice.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/io/borrowed_buf.rs.html#50)[§](#method.from)\n\nConverts to this type from the input type.\n\n[§](#impl-Freeze-for-BorrowedBuf%3C'data%3E)\n\n[§](#impl-RefUnwindSafe-for-BorrowedBuf%3C'data%3E)\n\n[§](#impl-Send-for-BorrowedBuf%3C'data%3E)\n\n[§](#impl-Sync-for-BorrowedBuf%3C'data%3E)\n\n[§](#impl-Unpin-for-BorrowedBuf%3C'data%3E)\n\n[§](#impl-UnwindSafe-for-BorrowedBuf%3C'data%3E)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/any.rs.html#140)[§](#impl-Any-for-T)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/borrow.rs.html#208)[§](#impl-Borrow%3CT%3E-for-T)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/borrow.rs.html#216)[§](#impl-BorrowMut%3CT%3E-for-T)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#765)[§](#impl-From%3CT%3E-for-T)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#768)[§](#method.from-2)\n\nReturns the argument unchanged.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#748-750)[§](#impl-Into%3CU%3E-for-T)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#758)[§](#method.into)\n\nCalls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of `[From](../convert/trait.From.html \"trait std::convert::From\")<T> for U` chooses to do.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#805-807)[§](#impl-TryFrom%3CU%3E-for-T)\n\n[§](#associatedtype.Error-1)\n\nThe type returned in the event of a conversion error.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#812)[§](#method.try_from)\n\nPerforms the conversion.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#790-792)[§](#impl-TryInto%3CU%3E-for-T)\n\n[§](#associatedtype.Error)\n\nThe type returned in the event of a conversion error.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#797)[§](#method.try_into)\n\nPerforms the conversion.",
	"html": "<!DOCTYPE html><html lang=\"en\" data-theme=\"light\"><head><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><meta name=\"generator\" content=\"rustdoc\"><meta name=\"description\" content=\"A borrowed byte buffer which is incrementally filled and initialized.\"><title>BorrowedBuf in std::io - Rust</title><script>if(window.location.protocol!==\"file:\")document.head.insertAdjacentHTML(\"beforeend\",\"SourceSerif4-Regular-46f98efaafac5295.ttf.woff2,FiraSans-Regular-018c141bf0843ffd.woff2,FiraSans-Medium-8f9a781e4970d388.woff2,SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2,SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\".split(\",\").map(f=>`<link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin href=\"../../static.files/${f}\">`).join(\"\"))</script><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceSerif4-Regular-46f98efaafac5295.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/FiraSans-Regular-018c141bf0843ffd.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/FiraSans-Medium-8f9a781e4970d388.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\"><link rel=\"stylesheet\" href=\"../../static.files/normalize-76eba96aa4d2e634.css\"><link rel=\"stylesheet\" href=\"../../static.files/rustdoc-dd39b87e5fcfba68.css\"><meta name=\"rustdoc-vars\" data-root-path=\"../../\" data-static-root-path=\"../../static.files/\" data-current-crate=\"std\" data-themes=\"\" data-resource-suffix=\"1.80.0\" data-rustdoc-version=\"1.80.0 (051478957 2024-07-21)\" data-channel=\"1.80.0\" data-search-js=\"search-d52510db62a78183.js\" data-settings-js=\"settings-4313503d2e1961c2.js\"><script src=\"../../static.files/storage-118b08c4c78b968e.js\"></script><script defer=\"\" src=\"sidebar-items1.80.0.js\"></script><script defer=\"\" src=\"../../static.files/main-20a3ad099b048cf2.js\"></script><noscript><link rel=\"stylesheet\" href=\"../../static.files/noscript-df360f571f6edeae.css\"></noscript><link rel=\"alternate icon\" type=\"image/png\" href=\"../../static.files/favicon-32x32-422f7d1d52889060.png\"><link rel=\"icon\" type=\"image/svg+xml\" href=\"../../static.files/favicon-2c020d218678b618.svg\"></head><body class=\"rustdoc struct\"><!--[if lte IE 11]><div class=\"warning\">This old browser is unsupported and will most likely display funky things.</div><![endif]--><nav class=\"mobile-topbar\"><button class=\"sidebar-menu-toggle\" title=\"show sidebar\"></button><a class=\"logo-container\" href=\"../../std/index.html\"><img class=\"rust-logo\" src=\"../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"\"></a><h2 class=\"location\"><a href=\"#\">BorrowedBuf</a></h2></nav><nav class=\"sidebar\"><div class=\"sidebar-crate\"><a class=\"logo-container\" href=\"../../std/index.html\"><img class=\"rust-logo\" src=\"../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"logo\"></a><h2><a href=\"../../std/index.html\">std</a><span class=\"version\">1.80.0</span></h2></div><div class=\"version\">(051478957\t2024-07-21)</div><h2 class=\"location\"><a href=\"#\">BorrowedBuf</a></h2><div class=\"sidebar-elems\"><section><h3><a href=\"#implementations\">Methods</a></h3><ul class=\"block method\"><li><a href=\"#method.capacity\">capacity</a></li><li><a href=\"#method.clear\">clear</a></li><li><a href=\"#method.filled\">filled</a></li><li><a href=\"#method.filled_mut\">filled_mut</a></li><li><a href=\"#method.init_len\">init_len</a></li><li><a href=\"#method.len\">len</a></li><li><a href=\"#method.set_init\">set_init</a></li><li><a href=\"#method.unfilled\">unfilled</a></li></ul><h3><a href=\"#trait-implementations\">Trait Implementations</a></h3><ul class=\"block trait-implementation\"><li><a href=\"#impl-Debug-for-BorrowedBuf%3C'_%3E\">Debug</a></li><li><a href=\"#impl-From%3C%26mut+%5BMaybeUninit%3Cu8%3E%5D%3E-for-BorrowedBuf%3C'data%3E\">From&lt;&amp;'data mut [MaybeUninit&lt;u8&gt;]&gt;</a></li><li><a href=\"#impl-From%3C%26mut+%5Bu8%5D%3E-for-BorrowedBuf%3C'data%3E\">From&lt;&amp;'data mut [u8]&gt;</a></li></ul><h3><a href=\"#synthetic-implementations\">Auto Trait Implementations</a></h3><ul class=\"block synthetic-implementation\"><li><a href=\"#impl-UnwindSafe-for-BorrowedBuf%3C'data%3E\">!UnwindSafe</a></li><li><a href=\"#impl-Freeze-for-BorrowedBuf%3C'data%3E\">Freeze</a></li><li><a href=\"#impl-RefUnwindSafe-for-BorrowedBuf%3C'data%3E\">RefUnwindSafe</a></li><li><a href=\"#impl-Send-for-BorrowedBuf%3C'data%3E\">Send</a></li><li><a href=\"#impl-Sync-for-BorrowedBuf%3C'data%3E\">Sync</a></li><li><a href=\"#impl-Unpin-for-BorrowedBuf%3C'data%3E\">Unpin</a></li></ul><h3><a href=\"#blanket-implementations\">Blanket Implementations</a></h3><ul class=\"block blanket-implementation\"><li><a href=\"#impl-Any-for-T\">Any</a></li><li><a href=\"#impl-Borrow%3CT%3E-for-T\">Borrow&lt;T&gt;</a></li><li><a href=\"#impl-BorrowMut%3CT%3E-for-T\">BorrowMut&lt;T&gt;</a></li><li><a href=\"#impl-From%3CT%3E-for-T\">From&lt;T&gt;</a></li><li><a href=\"#impl-Into%3CU%3E-for-T\">Into&lt;U&gt;</a></li><li><a href=\"#impl-TryFrom%3CU%3E-for-T\">TryFrom&lt;U&gt;</a></li><li><a href=\"#impl-TryInto%3CU%3E-for-T\">TryInto&lt;U&gt;</a></li></ul></section><h2><a href=\"index.html\">In std::io</a></h2><h3><a href=\"index.html#modules\">Modules</a></h3><ul class=\"block mod\"><li><a href=\"prelude/index.html\">prelude</a></li></ul><h3><a href=\"index.html#structs\">Structs</a></h3><ul class=\"block struct\"><li><a href=\"struct.BorrowedBuf.html\">BorrowedBuf</a></li><li><a href=\"struct.BorrowedCursor.html\">BorrowedCursor</a></li><li><a href=\"struct.BufReader.html\">BufReader</a></li><li><a href=\"struct.BufWriter.html\">BufWriter</a></li><li><a href=\"struct.Bytes.html\">Bytes</a></li><li><a href=\"struct.Chain.html\">Chain</a></li><li><a href=\"struct.Cursor.html\">Cursor</a></li><li><a href=\"struct.Empty.html\">Empty</a></li><li><a href=\"struct.Error.html\">Error</a></li><li><a href=\"struct.IntoInnerError.html\">IntoInnerError</a></li><li><a href=\"struct.IoSlice.html\">IoSlice</a></li><li><a href=\"struct.IoSliceMut.html\">IoSliceMut</a></li><li><a href=\"struct.LineWriter.html\">LineWriter</a></li><li><a href=\"struct.Lines.html\">Lines</a></li><li><a href=\"struct.Repeat.html\">Repeat</a></li><li><a href=\"struct.Sink.html\">Sink</a></li><li><a href=\"struct.Split.html\">Split</a></li><li><a href=\"struct.Stderr.html\">Stderr</a></li><li><a href=\"struct.StderrLock.html\">StderrLock</a></li><li><a href=\"struct.Stdin.html\">Stdin</a></li><li><a href=\"struct.StdinLock.html\">StdinLock</a></li><li><a href=\"struct.Stdout.html\">Stdout</a></li><li><a href=\"struct.StdoutLock.html\">StdoutLock</a></li><li><a href=\"struct.Take.html\">Take</a></li><li><a href=\"struct.WriterPanicked.html\">WriterPanicked</a></li></ul><h3><a href=\"index.html#enums\">Enums</a></h3><ul class=\"block enum\"><li><a href=\"enum.ErrorKind.html\">ErrorKind</a></li><li><a href=\"enum.SeekFrom.html\">SeekFrom</a></li></ul><h3><a href=\"index.html#traits\">Traits</a></h3><ul class=\"block trait\"><li><a href=\"trait.BufRead.html\">BufRead</a></li><li><a href=\"trait.IsTerminal.html\">IsTerminal</a></li><li><a href=\"trait.Read.html\">Read</a></li><li><a href=\"trait.Seek.html\">Seek</a></li><li><a href=\"trait.Write.html\">Write</a></li></ul><h3><a href=\"index.html#functions\">Functions</a></h3><ul class=\"block fn\"><li><a href=\"fn.copy.html\">copy</a></li><li><a href=\"fn.empty.html\">empty</a></li><li><a href=\"fn.read_to_string.html\">read_to_string</a></li><li><a href=\"fn.repeat.html\">repeat</a></li><li><a href=\"fn.sink.html\">sink</a></li><li><a href=\"fn.stderr.html\">stderr</a></li><li><a href=\"fn.stdin.html\">stdin</a></li><li><a href=\"fn.stdout.html\">stdout</a></li></ul><h3><a href=\"index.html#types\">Type Aliases</a></h3><ul class=\"block type\"><li><a href=\"type.RawOsError.html\">RawOsError</a></li><li><a href=\"type.Result.html\">Result</a></li></ul></div></nav><div class=\"sidebar-resizer\"></div><main><div class=\"width-limiter\"><rustdoc-search><nav class=\"sub\">\n            <form class=\"search-form\">\n                <span></span> <!-- This empty span is a hacky fix for Safari - See #93184 -->\n                <div id=\"sidebar-button\" tabindex=\"-1\">\n                    <a href=\"../../std/all.html\" title=\"show sidebar\"></a>\n                </div>\n                <input class=\"search-input\" name=\"search\" aria-label=\"Run search in the documentation\" autocomplete=\"off\" spellcheck=\"false\" placeholder=\"Type ‘S’ or ‘/’ to search, ‘?’ for more options…\" type=\"search\">\n                <div id=\"help-button\" tabindex=\"-1\">\n                    <a href=\"../../help.html\" title=\"help\">?</a>\n                </div>\n                <div id=\"settings-menu\" tabindex=\"-1\">\n                    <a href=\"../../settings.html\" title=\"settings\">\n                        Settings\n                    </a>\n                </div>\n            </form>\n        </nav></rustdoc-search><section id=\"main-content\" class=\"content\"><div class=\"main-heading\"><h1>Struct <a href=\"../index.html\">std</a>::<wbr><a href=\"index.html\">io</a>::<wbr><a class=\"struct\" href=\"#\">BorrowedBuf</a><button id=\"copy-path\" title=\"Copy item path to clipboard\">Copy item path</button></h1><span class=\"out-of-band\"><a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/io/borrowed_buf.rs.html#28\">source</a> · <button id=\"toggle-all-docs\" title=\"collapse all docs\">[<span>−</span>]</button></span></div><pre class=\"rust item-decl\"><code>pub struct BorrowedBuf&lt;'data&gt; { <span class=\"comment\">/* private fields */</span> }</code></pre><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>core_io_borrowed_buf</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/117693\">#117693</a>)</span></div></span><details class=\"toggle top-doc\" open=\"\"><summary class=\"hideme\"><span>Expand description</span></summary><div class=\"docblock\"><p>A borrowed byte buffer which is incrementally filled and initialized.</p>\n<p>This type is a sort of “double cursor”. It tracks three regions in the buffer: a region at the beginning of the\nbuffer that has been logically filled with data, a region that has been initialized at some point but not yet\nlogically filled, and a region at the end that is fully uninitialized. The filled region is guaranteed to be a\nsubset of the initialized region.</p>\n<p>In summary, the contents of the buffer can be visualized as:</p>\n<div class=\"example-wrap\"><pre class=\"language-not_rust\"><code>[             capacity              ]\n[ filled |         unfilled         ]\n[    initialized    | uninitialized ]\n</code></pre></div>\n<p>A <code>BorrowedBuf</code> is created around some existing data (or capacity for data) via a unique reference\n(<code>&amp;mut</code>). The <code>BorrowedBuf</code> can be configured (e.g., using <code>clear</code> or <code>set_init</code>), but cannot be\ndirectly written. To write into the buffer, use <code>unfilled</code> to create a <code>BorrowedCursor</code>. The cursor\nhas write-only access to the unfilled portion of the buffer (you can think of it as a\nwrite-only iterator).</p>\n<p>The lifetime <code>'data</code> is a bound on the lifetime of the underlying data.</p>\n</div></details><h2 id=\"implementations\" class=\"section-header\">Implementations<a href=\"#implementations\" class=\"anchor\">§</a></h2><div id=\"implementations-list\"><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-BorrowedBuf%3C'data%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/io/borrowed_buf.rs.html#72\">source</a><a href=\"#impl-BorrowedBuf%3C'data%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'data&gt; <a class=\"struct\" href=\"struct.BorrowedBuf.html\" title=\"struct std::io::BorrowedBuf\">BorrowedBuf</a>&lt;'data&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.capacity\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/io/borrowed_buf.rs.html#75\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.capacity\" class=\"fn\">capacity</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"../primitive.usize.html\">usize</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>core_io_borrowed_buf</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/117693\">#117693</a>)</span></div></span></summary><div class=\"docblock\"><p>Returns the total capacity of the buffer.</p>\n</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.len\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/io/borrowed_buf.rs.html#81\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.len\" class=\"fn\">len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"../primitive.usize.html\">usize</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>core_io_borrowed_buf</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/117693\">#117693</a>)</span></div></span></summary><div class=\"docblock\"><p>Returns the length of the filled part of the buffer.</p>\n</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.init_len\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/io/borrowed_buf.rs.html#87\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.init_len\" class=\"fn\">init_len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"../primitive.usize.html\">usize</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>core_io_borrowed_buf</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/117693\">#117693</a>)</span></div></span></summary><div class=\"docblock\"><p>Returns the length of the initialized part of the buffer.</p>\n</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.filled\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/io/borrowed_buf.rs.html#93\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.filled\" class=\"fn\">filled</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"../primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>core_io_borrowed_buf</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/117693\">#117693</a>)</span></div></span></summary><div class=\"docblock\"><p>Returns a shared reference to the filled portion of the buffer.</p>\n</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.filled_mut\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/io/borrowed_buf.rs.html#103\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.filled_mut\" class=\"fn\">filled_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"../primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>core_io_borrowed_buf</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/117693\">#117693</a>)</span></div></span></summary><div class=\"docblock\"><p>Returns a mutable reference to the filled portion of the buffer.</p>\n</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.unfilled\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/io/borrowed_buf.rs.html#113\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.unfilled\" class=\"fn\">unfilled</a>&lt;'this&gt;(&amp;'this mut self) -&gt; <a class=\"struct\" href=\"struct.BorrowedCursor.html\" title=\"struct std::io::BorrowedCursor\">BorrowedCursor</a>&lt;'this&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"BorrowedCursor<'this>\">ⓘ</a></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>core_io_borrowed_buf</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/117693\">#117693</a>)</span></div></span></summary><div class=\"docblock\"><p>Returns a cursor over the unfilled part of the buffer.</p>\n</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.clear\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/io/borrowed_buf.rs.html#128\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.clear\" class=\"fn\">clear</a>(&amp;mut self) -&gt; &amp;mut <a class=\"struct\" href=\"struct.BorrowedBuf.html\" title=\"struct std::io::BorrowedBuf\">BorrowedBuf</a>&lt;'data&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>core_io_borrowed_buf</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/117693\">#117693</a>)</span></div></span></summary><div class=\"docblock\"><p>Clears the buffer, resetting the filled region to empty.</p>\n<p>The number of initialized bytes is not changed, and the contents of the buffer are not modified.</p>\n</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.set_init\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/io/borrowed_buf.rs.html#142\">source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"#method.set_init\" class=\"fn\">set_init</a>(&amp;mut self, n: <a class=\"primitive\" href=\"../primitive.usize.html\">usize</a>) -&gt; &amp;mut <a class=\"struct\" href=\"struct.BorrowedBuf.html\" title=\"struct std::io::BorrowedBuf\">BorrowedBuf</a>&lt;'data&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>core_io_borrowed_buf</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/117693\">#117693</a>)</span></div></span></summary><div class=\"docblock\"><p>Asserts that the first <code>n</code> bytes of the buffer are initialized.</p>\n<p><code>BorrowedBuf</code> assumes that bytes are never de-initialized, so this method does nothing when called with fewer\nbytes than are already known to be initialized.</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h5>\n<p>The caller must ensure that the first <code>n</code> unfilled bytes of the buffer have already been initialized.</p>\n</div></details></div></details></div><h2 id=\"trait-implementations\" class=\"section-header\">Trait Implementations<a href=\"#trait-implementations\" class=\"anchor\">§</a></h2><div id=\"trait-implementations-list\"><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-Debug-for-BorrowedBuf%3C'_%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/io/borrowed_buf.rs.html#37\">source</a><a href=\"#impl-Debug-for-BorrowedBuf%3C'_%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"../fmt/trait.Debug.html\" title=\"trait std::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"struct.BorrowedBuf.html\" title=\"struct std::io::BorrowedBuf\">BorrowedBuf</a>&lt;'_&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/io/borrowed_buf.rs.html#38\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"../fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"../fmt/struct.Formatter.html\" title=\"struct std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"../result/enum.Result.html\" title=\"enum std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"../primitive.unit.html\">()</a>, <a class=\"struct\" href=\"../fmt/struct.Error.html\" title=\"struct std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\">Formats the value using the given formatter. <a href=\"../fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-From%3C%26mut+%5BMaybeUninit%3Cu8%3E%5D%3E-for-BorrowedBuf%3C'data%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/io/borrowed_buf.rs.html#65\">source</a><a href=\"#impl-From%3C%26mut+%5BMaybeUninit%3Cu8%3E%5D%3E-for-BorrowedBuf%3C'data%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'data&gt; <a class=\"trait\" href=\"../convert/trait.From.html\" title=\"trait std::convert::From\">From</a>&lt;&amp;'data mut [<a class=\"union\" href=\"../mem/union.MaybeUninit.html\" title=\"union std::mem::MaybeUninit\">MaybeUninit</a>&lt;<a class=\"primitive\" href=\"../primitive.u8.html\">u8</a>&gt;]&gt; for <a class=\"struct\" href=\"struct.BorrowedBuf.html\" title=\"struct std::io::BorrowedBuf\">BorrowedBuf</a>&lt;'data&gt;</h3></section></summary><div class=\"docblock\"><p>Create a new <code>BorrowedBuf</code> from an uninitialized buffer.</p>\n<p>Use <code>set_init</code> if part of the buffer is known to be already initialized.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.from-1\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/io/borrowed_buf.rs.html#67\">source</a><a href=\"#method.from-1\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"../convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(buf: &amp;'data mut [<a class=\"union\" href=\"../mem/union.MaybeUninit.html\" title=\"union std::mem::MaybeUninit\">MaybeUninit</a>&lt;<a class=\"primitive\" href=\"../primitive.u8.html\">u8</a>&gt;]) -&gt; <a class=\"struct\" href=\"struct.BorrowedBuf.html\" title=\"struct std::io::BorrowedBuf\">BorrowedBuf</a>&lt;'data&gt;</h4></section></summary><div class=\"docblock\">Converts to this type from the input type.</div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-From%3C%26mut+%5Bu8%5D%3E-for-BorrowedBuf%3C'data%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/io/borrowed_buf.rs.html#48\">source</a><a href=\"#impl-From%3C%26mut+%5Bu8%5D%3E-for-BorrowedBuf%3C'data%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'data&gt; <a class=\"trait\" href=\"../convert/trait.From.html\" title=\"trait std::convert::From\">From</a>&lt;&amp;'data mut [<a class=\"primitive\" href=\"../primitive.u8.html\">u8</a>]&gt; for <a class=\"struct\" href=\"struct.BorrowedBuf.html\" title=\"struct std::io::BorrowedBuf\">BorrowedBuf</a>&lt;'data&gt;</h3></section></summary><div class=\"docblock\"><p>Create a new <code>BorrowedBuf</code> from a fully initialized slice.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/io/borrowed_buf.rs.html#50\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"../convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(slice: &amp;'data mut [<a class=\"primitive\" href=\"../primitive.u8.html\">u8</a>]) -&gt; <a class=\"struct\" href=\"struct.BorrowedBuf.html\" title=\"struct std::io::BorrowedBuf\">BorrowedBuf</a>&lt;'data&gt;</h4></section></summary><div class=\"docblock\">Converts to this type from the input type.</div></details></div></details></div><h2 id=\"synthetic-implementations\" class=\"section-header\">Auto Trait Implementations<a href=\"#synthetic-implementations\" class=\"anchor\">§</a></h2><div id=\"synthetic-implementations-list\"><section id=\"impl-Freeze-for-BorrowedBuf%3C'data%3E\" class=\"impl\"><a href=\"#impl-Freeze-for-BorrowedBuf%3C'data%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'data&gt; <a class=\"trait\" href=\"../marker/trait.Freeze.html\" title=\"trait std::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"struct.BorrowedBuf.html\" title=\"struct std::io::BorrowedBuf\">BorrowedBuf</a>&lt;'data&gt;</h3></section><section id=\"impl-RefUnwindSafe-for-BorrowedBuf%3C'data%3E\" class=\"impl\"><a href=\"#impl-RefUnwindSafe-for-BorrowedBuf%3C'data%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'data&gt; <a class=\"trait\" href=\"../panic/trait.RefUnwindSafe.html\" title=\"trait std::panic::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"struct\" href=\"struct.BorrowedBuf.html\" title=\"struct std::io::BorrowedBuf\">BorrowedBuf</a>&lt;'data&gt;</h3></section><section id=\"impl-Send-for-BorrowedBuf%3C'data%3E\" class=\"impl\"><a href=\"#impl-Send-for-BorrowedBuf%3C'data%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'data&gt; <a class=\"trait\" href=\"../marker/trait.Send.html\" title=\"trait std::marker::Send\">Send</a> for <a class=\"struct\" href=\"struct.BorrowedBuf.html\" title=\"struct std::io::BorrowedBuf\">BorrowedBuf</a>&lt;'data&gt;</h3></section><section id=\"impl-Sync-for-BorrowedBuf%3C'data%3E\" class=\"impl\"><a href=\"#impl-Sync-for-BorrowedBuf%3C'data%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'data&gt; <a class=\"trait\" href=\"../marker/trait.Sync.html\" title=\"trait std::marker::Sync\">Sync</a> for <a class=\"struct\" href=\"struct.BorrowedBuf.html\" title=\"struct std::io::BorrowedBuf\">BorrowedBuf</a>&lt;'data&gt;</h3></section><section id=\"impl-Unpin-for-BorrowedBuf%3C'data%3E\" class=\"impl\"><a href=\"#impl-Unpin-for-BorrowedBuf%3C'data%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'data&gt; <a class=\"trait\" href=\"../marker/trait.Unpin.html\" title=\"trait std::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"struct.BorrowedBuf.html\" title=\"struct std::io::BorrowedBuf\">BorrowedBuf</a>&lt;'data&gt;</h3></section><section id=\"impl-UnwindSafe-for-BorrowedBuf%3C'data%3E\" class=\"impl\"><a href=\"#impl-UnwindSafe-for-BorrowedBuf%3C'data%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'data&gt; !<a class=\"trait\" href=\"../panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"struct.BorrowedBuf.html\" title=\"struct std::io::BorrowedBuf\">BorrowedBuf</a>&lt;'data&gt;</h3></section></div><h2 id=\"blanket-implementations\" class=\"section-header\">Blanket Implementations<a href=\"#blanket-implementations\" class=\"anchor\">§</a></h2><div id=\"blanket-implementations-list\"><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-Any-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/any.rs.html#140\">source</a><a href=\"#impl-Any-for-T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"../any/trait.Any.html\" title=\"trait std::any::Any\">Any</a> for T<div class=\"where\">where\n    T: 'static + ?<a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.type_id\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/any.rs.html#141\">source</a><a href=\"#method.type_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"../any/trait.Any.html#tymethod.type_id\" class=\"fn\">type_id</a>(&amp;self) -&gt; <a class=\"struct\" href=\"../any/struct.TypeId.html\" title=\"struct std::any::TypeId\">TypeId</a></h4></section></summary><div class=\"docblock\">Gets the <code>TypeId</code> of <code>self</code>. <a href=\"../any/trait.Any.html#tymethod.type_id\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-Borrow%3CT%3E-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/borrow.rs.html#208\">source</a><a href=\"#impl-Borrow%3CT%3E-for-T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"../borrow/trait.Borrow.html\" title=\"trait std::borrow::Borrow\">Borrow</a>&lt;T&gt; for T<div class=\"where\">where\n    T: ?<a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.borrow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/borrow.rs.html#210\">source</a><a href=\"#method.borrow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"../borrow/trait.Borrow.html#tymethod.borrow\" class=\"fn\">borrow</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"../primitive.reference.html\">&amp;T</a></h4></section></summary><div class=\"docblock\">Immutably borrows from an owned value. <a href=\"../borrow/trait.Borrow.html#tymethod.borrow\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-BorrowMut%3CT%3E-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/borrow.rs.html#216\">source</a><a href=\"#impl-BorrowMut%3CT%3E-for-T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"../borrow/trait.BorrowMut.html\" title=\"trait std::borrow::BorrowMut\">BorrowMut</a>&lt;T&gt; for T<div class=\"where\">where\n    T: ?<a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.borrow_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/borrow.rs.html#217\">source</a><a href=\"#method.borrow_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"../borrow/trait.BorrowMut.html#tymethod.borrow_mut\" class=\"fn\">borrow_mut</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"../primitive.reference.html\">&amp;mut T</a></h4></section></summary><div class=\"docblock\">Mutably borrows from an owned value. <a href=\"../borrow/trait.BorrowMut.html#tymethod.borrow_mut\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-From%3CT%3E-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#765\">source</a><a href=\"#impl-From%3CT%3E-for-T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"../convert/trait.From.html\" title=\"trait std::convert::From\">From</a>&lt;T&gt; for T</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.from-2\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#768\">source</a><a href=\"#method.from-2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"../convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(t: T) -&gt; T</h4></section></summary><div class=\"docblock\"><p>Returns the argument unchanged.</p>\n</div></details></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-Into%3CU%3E-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#748-750\">source</a><a href=\"#impl-Into%3CU%3E-for-T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"../convert/trait.Into.html\" title=\"trait std::convert::Into\">Into</a>&lt;U&gt; for T<div class=\"where\">where\n    U: <a class=\"trait\" href=\"../convert/trait.From.html\" title=\"trait std::convert::From\">From</a>&lt;T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#758\">source</a><a href=\"#method.into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"../convert/trait.Into.html#tymethod.into\" class=\"fn\">into</a>(self) -&gt; U</h4></section></summary><div class=\"docblock\"><p>Calls <code>U::from(self)</code>.</p>\n<p>That is, this conversion is whatever the implementation of\n<code><a href=\"../convert/trait.From.html\" title=\"trait std::convert::From\">From</a>&lt;T&gt; for U</code> chooses to do.</p>\n</div></details></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-TryFrom%3CU%3E-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#805-807\">source</a><a href=\"#impl-TryFrom%3CU%3E-for-T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"../convert/trait.TryFrom.html\" title=\"trait std::convert::TryFrom\">TryFrom</a>&lt;U&gt; for T<div class=\"where\">where\n    U: <a class=\"trait\" href=\"../convert/trait.Into.html\" title=\"trait std::convert::Into\">Into</a>&lt;T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open=\"\"><summary><section id=\"associatedtype.Error-1\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error-1\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"../convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"../convert/enum.Infallible.html\" title=\"enum std::convert::Infallible\">Infallible</a></h4></section></summary><div class=\"docblock\">The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#812\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"../convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(value: U) -&gt; <a class=\"enum\" href=\"../result/enum.Result.html\" title=\"enum std::result::Result\">Result</a>&lt;T, &lt;T as <a class=\"trait\" href=\"../convert/trait.TryFrom.html\" title=\"trait std::convert::TryFrom\">TryFrom</a>&lt;U&gt;&gt;::<a class=\"associatedtype\" href=\"../convert/trait.TryFrom.html#associatedtype.Error\" title=\"type std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\">Performs the conversion.</div></details></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-TryInto%3CU%3E-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#790-792\">source</a><a href=\"#impl-TryInto%3CU%3E-for-T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"../convert/trait.TryInto.html\" title=\"trait std::convert::TryInto\">TryInto</a>&lt;U&gt; for T<div class=\"where\">where\n    U: <a class=\"trait\" href=\"../convert/trait.TryFrom.html\" title=\"trait std::convert::TryFrom\">TryFrom</a>&lt;T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open=\"\"><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"../convert/trait.TryInto.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = &lt;U as <a class=\"trait\" href=\"../convert/trait.TryFrom.html\" title=\"trait std::convert::TryFrom\">TryFrom</a>&lt;T&gt;&gt;::<a class=\"associatedtype\" href=\"../convert/trait.TryFrom.html#associatedtype.Error\" title=\"type std::convert::TryFrom::Error\">Error</a></h4></section></summary><div class=\"docblock\">The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.try_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#797\">source</a><a href=\"#method.try_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"../convert/trait.TryInto.html#tymethod.try_into\" class=\"fn\">try_into</a>(self) -&gt; <a class=\"enum\" href=\"../result/enum.Result.html\" title=\"enum std::result::Result\">Result</a>&lt;U, &lt;U as <a class=\"trait\" href=\"../convert/trait.TryFrom.html\" title=\"trait std::convert::TryFrom\">TryFrom</a>&lt;T&gt;&gt;::<a class=\"associatedtype\" href=\"../convert/trait.TryFrom.html#associatedtype.Error\" title=\"type std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\">Performs the conversion.</div></details></div></details></div><script type=\"text/json\" id=\"notable-traits-data\">{\"&[u8]\":\"<h3>Notable traits for <code>&amp;[<a class=\\\"primitive\\\" href=\\\"../primitive.u8.html\\\">u8</a>]</code></h3><pre><code><div class=\\\"where\\\">impl <a class=\\\"trait\\\" href=\\\"trait.Read.html\\\" title=\\\"trait std::io::Read\\\">Read</a> for &amp;[<a class=\\\"primitive\\\" href=\\\"../primitive.u8.html\\\">u8</a>]</div>\",\"&mut [u8]\":\"<h3>Notable traits for <code>&amp;mut [<a class=\\\"primitive\\\" href=\\\"../primitive.u8.html\\\">u8</a>]</code></h3><pre><code><div class=\\\"where\\\">impl <a class=\\\"trait\\\" href=\\\"trait.Write.html\\\" title=\\\"trait std::io::Write\\\">Write</a> for &amp;mut [<a class=\\\"primitive\\\" href=\\\"../primitive.u8.html\\\">u8</a>]</div>\",\"BorrowedCursor<'this>\":\"<h3>Notable traits for <code><a class=\\\"struct\\\" href=\\\"struct.BorrowedCursor.html\\\" title=\\\"struct std::io::BorrowedCursor\\\">BorrowedCursor</a>&lt;'a&gt;</code></h3><pre><code><div class=\\\"where\\\">impl&lt;'a&gt; <a class=\\\"trait\\\" href=\\\"trait.Write.html\\\" title=\\\"trait std::io::Write\\\">Write</a> for <a class=\\\"struct\\\" href=\\\"struct.BorrowedCursor.html\\\" title=\\\"struct std::io::BorrowedCursor\\\">BorrowedCursor</a>&lt;'a&gt;</div>\"}</script></section></div></main></body></html>",
	"crawlDate": "2024-07-28T05:11:19.515Z"
}