{
	"title": "symlink_dir in std::os::windows::fs - Rust",
	"url": "https://doc.rust-lang.org/stable/std/os/windows/fs/fn.symlink_dir.html",
	"markdown": "# symlink\\_dir in std::os::windows::fs - Rust\n\n```\npub fn symlink_dir<P: AsRef<Path>, Q: AsRef<Path>>(\n    original: P,\n    link: Q,\n) -> Result<()>\n```\n\nAvailable on **Windows** only.\n\nExpand description\n\nCreates a new symlink to a directory on the filesystem.\n\nThe `link` path will be a directory symbolic link pointing to the `original` path.\n\nThe `original` path must be a directory or a symlink to a directory, otherwise the symlink will be broken. Use [`symlink_file`](fn.symlink_file.html \"fn std::os::windows::fs::symlink_file\") for other files.\n\nThis function currently corresponds to [`CreateSymbolicLinkW`](https://docs.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-createsymboliclinkw). Note that this [may change in the future](about:blank/io/index.html#platform-specific-behavior \"mod std::io\").\n\n## [§](#examples)Examples\n\n```\nuse std::os::windows::fs;\n\nfn main() -> std::io::Result<()> {\n    fs::symlink_dir(\"a\", \"b\")?;\n    Ok(())\n}\n```\n\n[Run](https://play.rust-lang.org/?code=%23!%5Ballow(unused)%5D%0Ause+std::os::windows::fs;%0A%0Afn+main()+-%3E+std::io::Result%3C()%3E+%7B%0A++++fs::symlink_dir(%22a%22,+%22b%22)?;%0A++++Ok(())%0A%7D&edition=2021)\n\n## [§](#limitations)Limitations\n\nWindows treats symlink creation as a [privileged action](https://docs.microsoft.com/en-us/windows/security/threat-protection/security-policy-settings/create-symbolic-links), therefore this function is likely to fail unless the user makes changes to their system to permit symlink creation. Users can try enabling Developer Mode, granting the `SeCreateSymbolicLinkPrivilege` privilege, or running the process as an administrator.",
	"html": "<!DOCTYPE html><html lang=\"en\" data-theme=\"light\"><head><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><meta name=\"generator\" content=\"rustdoc\"><meta name=\"description\" content=\"Creates a new symlink to a directory on the filesystem.\"><title>symlink_dir in std::os::windows::fs - Rust</title><script>if(window.location.protocol!==\"file:\")document.head.insertAdjacentHTML(\"beforeend\",\"SourceSerif4-Regular-46f98efaafac5295.ttf.woff2,FiraSans-Regular-018c141bf0843ffd.woff2,FiraSans-Medium-8f9a781e4970d388.woff2,SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2,SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\".split(\",\").map(f=>`<link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin href=\"../../../../static.files/${f}\">`).join(\"\"))</script><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../../../static.files/SourceSerif4-Regular-46f98efaafac5295.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../../../static.files/FiraSans-Regular-018c141bf0843ffd.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../../../static.files/FiraSans-Medium-8f9a781e4970d388.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../../../static.files/SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../../../static.files/SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\"><link rel=\"stylesheet\" href=\"../../../../static.files/normalize-76eba96aa4d2e634.css\"><link rel=\"stylesheet\" href=\"../../../../static.files/rustdoc-dd39b87e5fcfba68.css\"><meta name=\"rustdoc-vars\" data-root-path=\"../../../../\" data-static-root-path=\"../../../../static.files/\" data-current-crate=\"std\" data-themes=\"\" data-resource-suffix=\"1.80.0\" data-rustdoc-version=\"1.80.0 (051478957 2024-07-21)\" data-channel=\"1.80.0\" data-search-js=\"search-d52510db62a78183.js\" data-settings-js=\"settings-4313503d2e1961c2.js\"><script src=\"../../../../static.files/storage-118b08c4c78b968e.js\"></script><script defer=\"\" src=\"sidebar-items1.80.0.js\"></script><script defer=\"\" src=\"../../../../static.files/main-20a3ad099b048cf2.js\"></script><noscript><link rel=\"stylesheet\" href=\"../../../../static.files/noscript-df360f571f6edeae.css\"></noscript><link rel=\"alternate icon\" type=\"image/png\" href=\"../../../../static.files/favicon-32x32-422f7d1d52889060.png\"><link rel=\"icon\" type=\"image/svg+xml\" href=\"../../../../static.files/favicon-2c020d218678b618.svg\"></head><body class=\"rustdoc fn\"><!--[if lte IE 11]><div class=\"warning\">This old browser is unsupported and will most likely display funky things.</div><![endif]--><nav class=\"mobile-topbar\"><button class=\"sidebar-menu-toggle\" title=\"show sidebar\"></button><a class=\"logo-container\" href=\"../../../../std/index.html\"><img class=\"rust-logo\" src=\"../../../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"\"></a><h2 class=\"location\"></h2></nav><nav class=\"sidebar\"><div class=\"sidebar-crate\"><a class=\"logo-container\" href=\"../../../../std/index.html\"><img class=\"rust-logo\" src=\"../../../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"logo\"></a><h2><a href=\"../../../../std/index.html\">std</a><span class=\"version\">1.80.0</span></h2></div><div class=\"version\">(051478957\t2024-07-21)</div><div class=\"sidebar-elems\"><h2><a href=\"index.html\">In std::os::windows::fs</a></h2><h3><a href=\"index.html#traits\">Traits</a></h3><ul class=\"block trait\"><li><a href=\"trait.FileExt.html\">FileExt</a></li><li><a href=\"trait.FileTimesExt.html\">FileTimesExt</a></li><li><a href=\"trait.FileTypeExt.html\">FileTypeExt</a></li><li><a href=\"trait.MetadataExt.html\">MetadataExt</a></li><li><a href=\"trait.OpenOptionsExt.html\">OpenOptionsExt</a></li></ul><h3><a href=\"index.html#functions\">Functions</a></h3><ul class=\"block fn\"><li><a href=\"fn.junction_point.html\">junction_point</a></li><li><a href=\"fn.symlink_dir.html\">symlink_dir</a></li><li><a href=\"fn.symlink_file.html\">symlink_file</a></li></ul></div></nav><div class=\"sidebar-resizer\"></div><main><div class=\"width-limiter\"><rustdoc-search><nav class=\"sub\">\n            <form class=\"search-form\">\n                <span></span> <!-- This empty span is a hacky fix for Safari - See #93184 -->\n                <div id=\"sidebar-button\" tabindex=\"-1\">\n                    <a href=\"../../../../std/all.html\" title=\"show sidebar\"></a>\n                </div>\n                <input class=\"search-input\" name=\"search\" aria-label=\"Run search in the documentation\" autocomplete=\"off\" spellcheck=\"false\" placeholder=\"Type ‘S’ or ‘/’ to search, ‘?’ for more options…\" type=\"search\">\n                <div id=\"help-button\" tabindex=\"-1\">\n                    <a href=\"../../../../help.html\" title=\"help\">?</a>\n                </div>\n                <div id=\"settings-menu\" tabindex=\"-1\">\n                    <a href=\"../../../../settings.html\" title=\"settings\">\n                        Settings\n                    </a>\n                </div>\n            </form>\n        </nav></rustdoc-search><section id=\"main-content\" class=\"content\"><div class=\"main-heading\"><h1>Function <a href=\"../../../index.html\">std</a>::<wbr><a href=\"../../index.html\">os</a>::<wbr><a href=\"../index.html\">windows</a>::<wbr><a href=\"index.html\">fs</a>::<wbr><a class=\"fn\" href=\"#\">symlink_dir</a><button id=\"copy-path\" title=\"Copy item path to clipboard\">Copy item path</button></h1><span class=\"out-of-band\"><span class=\"since\" title=\"Stable since Rust version 1.1.0\">1.1.0</span> · <a class=\"src\" href=\"../../../../src/std/os/windows/fs.rs.html#620-622\">source</a> · <button id=\"toggle-all-docs\" title=\"collapse all docs\">[<span>−</span>]</button></span></div><pre class=\"rust item-decl\"><code>pub fn symlink_dir&lt;P: <a class=\"trait\" href=\"../../../convert/trait.AsRef.html\" title=\"trait std::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"../../../path/struct.Path.html\" title=\"struct std::path::Path\">Path</a>&gt;, Q: <a class=\"trait\" href=\"../../../convert/trait.AsRef.html\" title=\"trait std::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"../../../path/struct.Path.html\" title=\"struct std::path::Path\">Path</a>&gt;&gt;(\n    original: P,\n    link: Q,\n) -&gt; <a class=\"type\" href=\"../../../io/type.Result.html\" title=\"type std::io::Result\">Result</a>&lt;<a class=\"primitive\" href=\"../../../primitive.unit.html\">()</a>&gt;</code></pre><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>Windows</strong> only.</div></span><details class=\"toggle top-doc\" open=\"\"><summary class=\"hideme\"><span>Expand description</span></summary><div class=\"docblock\"><p>Creates a new symlink to a directory on the filesystem.</p>\n<p>The <code>link</code> path will be a directory symbolic link pointing to the <code>original</code>\npath.</p>\n<p>The <code>original</code> path must be a directory or a symlink to a directory,\notherwise the symlink will be broken. Use <a href=\"fn.symlink_file.html\" title=\"fn std::os::windows::fs::symlink_file\"><code>symlink_file</code></a> for other files.</p>\n<p>This function currently corresponds to <a href=\"https://docs.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-createsymboliclinkw\"><code>CreateSymbolicLinkW</code></a>.\nNote that this <a href=\"../../../io/index.html#platform-specific-behavior\" title=\"mod std::io\">may change in the future</a>.</p>\n<h2 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h2>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::os::windows::fs;\n\n<span class=\"kw\">fn </span>main() -&gt; std::io::Result&lt;()&gt; {\n    fs::symlink_dir(<span class=\"string\">\"a\"</span>, <span class=\"string\">\"b\"</span>)<span class=\"question-mark\">?</span>;\n    <span class=\"prelude-val\">Ok</span>(())\n}</code></pre><a class=\"test-arrow\" target=\"_blank\" href=\"https://play.rust-lang.org/?code=%23!%5Ballow(unused)%5D%0Ause+std::os::windows::fs;%0A%0Afn+main()+-%3E+std::io::Result%3C()%3E+%7B%0A++++fs::symlink_dir(%22a%22,+%22b%22)?;%0A++++Ok(())%0A%7D&amp;edition=2021\">Run</a></div>\n<h2 id=\"limitations\"><a class=\"doc-anchor\" href=\"#limitations\">§</a>Limitations</h2>\n<p>Windows treats symlink creation as a <a href=\"https://docs.microsoft.com/en-us/windows/security/threat-protection/security-policy-settings/create-symbolic-links\">privileged action</a>,\ntherefore this function is likely to fail unless the user makes changes to\ntheir system to permit symlink creation. Users can try enabling Developer\nMode, granting the <code>SeCreateSymbolicLinkPrivilege</code> privilege, or running\nthe process as an administrator.</p>\n</div></details></section></div></main></body></html>",
	"crawlDate": "2024-07-28T05:26:50.191Z"
}