{
	"title": "RSplitTerminator in std::str - Rust",
	"url": "https://doc.rust-lang.org/stable/std/str/struct.RSplitTerminator.html",
	"markdown": "# RSplitTerminator in std::str - Rust\n\n[Â§](#associatedtype.Item)\n\nThe type of the elements being iterated over.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/str/iter.rs.html#845-861)[Â§](#method.next)\n\nAdvances the iterator and returns the next value. [Read more](about:blank/iter/trait.Iterator.html#tymethod.next)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#115-119)[Â§](#method.next_chunk)\n\nðŸ”¬This is a nightly-only experimental API. (`iter_next_chunk`Â [#98326](https://github.com/rust-lang/rust/issues/98326))\n\nAdvances the iterator and returns an array containing the next `N` values. [Read more](about:blank/iter/trait.Iterator.html#method.next_chunk)\n\n1.0.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#193)[Â§](#method.size_hint)\n\nReturns the bounds on the remaining length of the iterator. [Read more](about:blank/iter/trait.Iterator.html#method.size_hint)\n\n1.0.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#229-231)[Â§](#method.count)\n\nConsumes the iterator, counting the number of iterations and returning it. [Read more](about:blank/iter/trait.Iterator.html#method.count)\n\n1.0.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#258-260)[Â§](#method.last)\n\nConsumes the iterator, returning the last element. [Read more](about:blank/iter/trait.Iterator.html#method.last)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#306)[Â§](#method.advance_by)\n\nðŸ”¬This is a nightly-only experimental API. (`iter_advance_by`Â [#77404](https://github.com/rust-lang/rust/issues/77404))\n\nAdvances the iterator by `n` elements. [Read more](about:blank/iter/trait.Iterator.html#method.advance_by)\n\n1.0.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#358)[Â§](#method.nth)\n\nReturns the `n`th element of the iterator. [Read more](about:blank/iter/trait.Iterator.html#method.nth)\n\n1.28.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#409-411)[Â§](#method.step_by)\n\nCreates an iterator starting at the same point, but stepping by the given amount at each iteration. [Read more](about:blank/iter/trait.Iterator.html#method.step_by)\n\n1.0.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#481-484)[Â§](#method.chain)\n\nTakes two iterators and creates a new iterator over both in sequence. [Read more](about:blank/iter/trait.Iterator.html#method.chain)\n\n1.0.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#600-603)[Â§](#method.zip)\n\nâ€˜Zips upâ€™ two iterators into a single iterator of pairs. [Read more](about:blank/iter/trait.Iterator.html#method.zip)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#702-705)[Â§](#method.intersperse_with)\n\nðŸ”¬This is a nightly-only experimental API. (`iter_intersperse`Â [#79524](https://github.com/rust-lang/rust/issues/79524))\n\nCreates a new iterator which places an item generated by `separator` between adjacent items of the original iterator. [Read more](about:blank/iter/trait.Iterator.html#method.intersperse_with)\n\n1.0.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#762-765)[Â§](#method.map)\n\nTakes a closure and creates an iterator which calls that closure on each element. [Read more](about:blank/iter/trait.Iterator.html#method.map)\n\n1.21.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#808-811)[Â§](#method.for_each)\n\nCalls a closure on each element of an iterator. [Read more](about:blank/iter/trait.Iterator.html#method.for_each)\n\n1.0.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#884-887)[Â§](#method.filter)\n\nCreates an iterator which uses a closure to determine if an element should be yielded. [Read more](about:blank/iter/trait.Iterator.html#method.filter)\n\n1.0.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#930-933)[Â§](#method.filter_map)\n\nCreates an iterator that both filters and maps. [Read more](about:blank/iter/trait.Iterator.html#method.filter_map)\n\n1.0.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#978-980)[Â§](#method.enumerate)\n\nCreates an iterator which gives the current iteration count as well as the next value. [Read more](about:blank/iter/trait.Iterator.html#method.enumerate)\n\n1.0.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#1050-1052)[Â§](#method.peekable)\n\nCreates an iterator which can use the [`peek`](about:blank/iter/struct.Peekable.html#method.peek \"method std::iter::Peekable::peek\") and [`peek_mut`](about:blank/iter/struct.Peekable.html#method.peek_mut \"method std::iter::Peekable::peek_mut\") methods to look at the next element of the iterator without consuming it. See their documentation for more information. [Read more](about:blank/iter/trait.Iterator.html#method.peekable)\n\n1.0.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#1116-1119)[Â§](#method.skip_while)\n\nCreates an iterator that [`skip`](about:blank/iter/trait.Iterator.html#method.skip \"method std::iter::Iterator::skip\")s elements based on a predicate. [Read more](about:blank/iter/trait.Iterator.html#method.skip_while)\n\n1.0.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#1198-1201)[Â§](#method.take_while)\n\nCreates an iterator that yields elements based on a predicate. [Read more](about:blank/iter/trait.Iterator.html#method.take_while)\n\n1.57.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#1287-1290)[Â§](#method.map_while)\n\nCreates an iterator that both yields elements based on a predicate and maps. [Read more](about:blank/iter/trait.Iterator.html#method.map_while)\n\n1.0.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#1317-1319)[Â§](#method.skip)\n\nCreates an iterator that skips the first `n` elements. [Read more](about:blank/iter/trait.Iterator.html#method.skip)\n\n1.0.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#1371-1373)[Â§](#method.take)\n\nCreates an iterator that yields the first `n` elements, or fewer if the underlying iterator ends sooner. [Read more](about:blank/iter/trait.Iterator.html#method.take)\n\n1.0.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#1419-1422)[Â§](#method.scan)\n\nAn iterator adapter which, like [`fold`](about:blank/iter/trait.Iterator.html#method.fold \"method std::iter::Iterator::fold\"), holds internal state, but unlike [`fold`](about:blank/iter/trait.Iterator.html#method.fold \"method std::iter::Iterator::fold\"), produces a new iterator. [Read more](about:blank/iter/trait.Iterator.html#method.scan)\n\n1.0.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#1458-1462)[Â§](#method.flat_map)\n\nCreates an iterator that works like map, but flattens nested structure. [Read more](about:blank/iter/trait.Iterator.html#method.flat_map)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#1700-1703)[Â§](#method.map_windows)\n\nðŸ”¬This is a nightly-only experimental API. (`iter_map_windows`Â [#87155](https://github.com/rust-lang/rust/issues/87155))\n\nCalls the given function `f` for each contiguous window of size `N` over `self` and returns an iterator over the outputs of `f`. Like [`slice::windows()`](about:blank/primitive.slice.html#method.windows \"method slice::windows\"), the windows during mapping overlap as well. [Read more](about:blank/iter/trait.Iterator.html#method.map_windows)\n\n1.0.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#1767-1769)[Â§](#method.fuse)\n\nCreates an iterator which ends after the first [`None`](about:blank/option/enum.Option.html#variant.None \"variant std::option::Option::None\"). [Read more](about:blank/iter/trait.Iterator.html#method.fuse)\n\n1.0.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#1852-1855)[Â§](#method.inspect)\n\nDoes something with each element of an iterator, passing the value on. [Read more](about:blank/iter/trait.Iterator.html#method.inspect)\n\n1.0.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#1881-1883)[Â§](#method.by_ref)\n\nBorrows an iterator, rather than consuming it. [Read more](about:blank/iter/trait.Iterator.html#method.by_ref)\n\n1.0.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#2001-2003)[Â§](#method.collect)\n\nTransforms an iterator into a collection. [Read more](about:blank/iter/trait.Iterator.html#method.collect)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#2154-2156)[Â§](#method.collect_into)\n\nðŸ”¬This is a nightly-only experimental API. (`iter_collect_into`Â [#94780](https://github.com/rust-lang/rust/issues/94780))\n\nCollects all the items from an iterator into a collection. [Read more](about:blank/iter/trait.Iterator.html#method.collect_into)\n\n1.0.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#2187-2191)[Â§](#method.partition)\n\nConsumes an iterator, creating two collections from it. [Read more](about:blank/iter/trait.Iterator.html#method.partition)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#2308-2311)[Â§](#method.is_partitioned)\n\nðŸ”¬This is a nightly-only experimental API. (`iter_is_partitioned`Â [#62544](https://github.com/rust-lang/rust/issues/62544))\n\nChecks if the elements of this iterator are partitioned according to the given predicate, such that all those that return `true` precede all those that return `false`. [Read more](about:blank/iter/trait.Iterator.html#method.is_partitioned)\n\n1.27.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#2403-2407)[Â§](#method.try_fold)\n\nAn iterator method that applies a function as long as it returns successfully, producing a single, final value. [Read more](about:blank/iter/trait.Iterator.html#method.try_fold)\n\n1.27.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#2462-2466)[Â§](#method.try_for_each)\n\nAn iterator method that applies a fallible function to each item in the iterator, stopping at the first error and returning that error. [Read more](about:blank/iter/trait.Iterator.html#method.try_for_each)\n\n1.0.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#2582-2585)[Â§](#method.fold)\n\nFolds every element into an accumulator by applying an operation, returning the final result. [Read more](about:blank/iter/trait.Iterator.html#method.fold)\n\n1.51.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#2620-2623)[Â§](#method.reduce)\n\nReduces the elements to a single one, by repeatedly applying a reducing operation. [Read more](about:blank/iter/trait.Iterator.html#method.reduce)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#2692-2697)[Â§](#method.try_reduce)\n\nðŸ”¬This is a nightly-only experimental API. (`iterator_try_reduce`Â [#87053](https://github.com/rust-lang/rust/issues/87053))\n\nReduces the elements to a single one by repeatedly applying a reducing operation. If the closure returns a failure, the failure is propagated back to the caller immediately. [Read more](about:blank/iter/trait.Iterator.html#method.try_reduce)\n\n1.0.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#2750-2753)[Â§](#method.all)\n\nTests if every element of the iterator matches a predicate. [Read more](about:blank/iter/trait.Iterator.html#method.all)\n\n1.0.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#2804-2807)[Â§](#method.any)\n\nTests if any element of the iterator matches a predicate. [Read more](about:blank/iter/trait.Iterator.html#method.any)\n\n1.0.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#2868-2871)[Â§](#method.find)\n\nSearches for an element of an iterator that satisfies a predicate. [Read more](about:blank/iter/trait.Iterator.html#method.find)\n\n1.30.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#2900-2903)[Â§](#method.find_map)\n\nApplies function to the elements of iterator and returns the first non-none result. [Read more](about:blank/iter/trait.Iterator.html#method.find_map)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#2959-2964)[Â§](#method.try_find)\n\nðŸ”¬This is a nightly-only experimental API. (`try_find`Â [#63178](https://github.com/rust-lang/rust/issues/63178))\n\nApplies function to the elements of iterator and returns the first true result or the first error. [Read more](about:blank/iter/trait.Iterator.html#method.try_find)\n\n1.0.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#3042-3045)[Â§](#method.position)\n\nSearches for an element in an iterator, returning its index. [Read more](about:blank/iter/trait.Iterator.html#method.position)\n\n1.6.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#3217-3220)[Â§](#method.max_by_key)\n\nReturns the element that gives the maximum value from the specified function. [Read more](about:blank/iter/trait.Iterator.html#method.max_by_key)\n\n1.15.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#3251-3254)[Â§](#method.max_by)\n\nReturns the element that gives the maximum value with respect to the specified comparison function. [Read more](about:blank/iter/trait.Iterator.html#method.max_by)\n\n1.6.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#3279-3282)[Â§](#method.min_by_key)\n\nReturns the element that gives the minimum value from the specified function. [Read more](about:blank/iter/trait.Iterator.html#method.min_by_key)\n\n1.15.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#3313-3316)[Â§](#method.min_by)\n\nReturns the element that gives the minimum value with respect to the specified comparison function. [Read more](about:blank/iter/trait.Iterator.html#method.min_by)\n\n1.0.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#3388-3392)[Â§](#method.unzip)\n\nConverts an iterator of pairs into a pair of containers. [Read more](about:blank/iter/trait.Iterator.html#method.unzip)\n\n1.36.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#3419-3422)[Â§](#method.copied)\n\nCreates an iterator which copies all of its elements. [Read more](about:blank/iter/trait.Iterator.html#method.copied)\n\n1.0.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#3467-3470)[Â§](#method.cloned)\n\nCreates an iterator which [`clone`](about:blank/clone/trait.Clone.html#tymethod.clone \"method std::clone::Clone::clone\")s all of its elements. [Read more](about:blank/iter/trait.Iterator.html#method.cloned)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#3544-3546)[Â§](#method.array_chunks)\n\nðŸ”¬This is a nightly-only experimental API. (`iter_array_chunks`Â [#100450](https://github.com/rust-lang/rust/issues/100450))\n\nReturns an iterator over `N` elements of the iterator at a time. [Read more](about:blank/iter/trait.Iterator.html#method.array_chunks)\n\n1.11.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#3576-3579)[Â§](#method.sum)\n\nSums the elements of an iterator. [Read more](about:blank/iter/trait.Iterator.html#method.sum)\n\n1.11.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#3609-3612)[Â§](#method.product)\n\nIterates over the entire iterator, multiplying all the elements [Read more](about:blank/iter/trait.Iterator.html#method.product)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#3659-3663)[Â§](#method.cmp_by)\n\nðŸ”¬This is a nightly-only experimental API. (`iter_order_by`Â [#64295](https://github.com/rust-lang/rust/issues/64295))\n\n[Lexicographically](about:blank/cmp/trait.Ord.html#lexicographical-comparison \"trait std::cmp::Ord\") compares the elements of this [`Iterator`](../iter/trait.Iterator.html \"trait std::iter::Iterator\") with those of another with respect to the specified comparison function. [Read more](about:blank/iter/trait.Iterator.html#method.cmp_by)\n\n1.5.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#3716-3720)[Â§](#method.partial_cmp)\n\n[Lexicographically](about:blank/cmp/trait.Ord.html#lexicographical-comparison \"trait std::cmp::Ord\") compares the [`PartialOrd`](../cmp/trait.PartialOrd.html \"trait std::cmp::PartialOrd\") elements of this [`Iterator`](../iter/trait.Iterator.html \"trait std::iter::Iterator\") with those of another. The comparison works like short-circuit evaluation, returning a result without comparing the remaining elements. As soon as an order can be determined, the evaluation stops and a result is returned. [Read more](about:blank/iter/trait.Iterator.html#method.partial_cmp)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#3753-3757)[Â§](#method.partial_cmp_by)\n\nðŸ”¬This is a nightly-only experimental API. (`iter_order_by`Â [#64295](https://github.com/rust-lang/rust/issues/64295))\n\n[Lexicographically](about:blank/cmp/trait.Ord.html#lexicographical-comparison \"trait std::cmp::Ord\") compares the elements of this [`Iterator`](../iter/trait.Iterator.html \"trait std::iter::Iterator\") with those of another with respect to the specified comparison function. [Read more](about:blank/iter/trait.Iterator.html#method.partial_cmp_by)\n\n1.5.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#3787-3791)[Â§](#method.eq)\n\nDetermines if the elements of this [`Iterator`](../iter/trait.Iterator.html \"trait std::iter::Iterator\") are equal to those of another. [Read more](about:blank/iter/trait.Iterator.html#method.eq)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#3811-3815)[Â§](#method.eq_by)\n\nðŸ”¬This is a nightly-only experimental API. (`iter_order_by`Â [#64295](https://github.com/rust-lang/rust/issues/64295))\n\nDetermines if the elements of this [`Iterator`](../iter/trait.Iterator.html \"trait std::iter::Iterator\") are equal to those of another with respect to the specified equality function. [Read more](about:blank/iter/trait.Iterator.html#method.eq_by)\n\n1.5.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#3844-3848)[Â§](#method.ne)\n\nDetermines if the elements of this [`Iterator`](../iter/trait.Iterator.html \"trait std::iter::Iterator\") are not equal to those of another. [Read more](about:blank/iter/trait.Iterator.html#method.ne)\n\n1.5.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#3866-3870)[Â§](#method.lt)\n\n1.5.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#3888-3892)[Â§](#method.le)\n\n1.5.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#3910-3914)[Â§](#method.gt)\n\n1.5.0 Â· [source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#3932-3936)[Â§](#method.ge)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#3993-3996)[Â§](#method.is_sorted_by)\n\nðŸ”¬This is a nightly-only experimental API. (`is_sorted`Â [#53485](https://github.com/rust-lang/rust/issues/53485))\n\nChecks if the elements of this iterator are sorted using the given comparator function. [Read more](about:blank/iter/trait.Iterator.html#method.is_sorted_by)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#4040-4044)[Â§](#method.is_sorted_by_key)\n\nðŸ”¬This is a nightly-only experimental API. (`is_sorted`Â [#53485](https://github.com/rust-lang/rust/issues/53485))\n\nChecks if the elements of this iterator are sorted using the given key extraction function. [Read more](about:blank/iter/trait.Iterator.html#method.is_sorted_by_key)",
	"html": "<!DOCTYPE html><html lang=\"en\" data-theme=\"light\"><head><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><meta name=\"generator\" content=\"rustdoc\"><meta name=\"description\" content=\"Created with the method `rsplit_terminator`.\"><title>RSplitTerminator in std::str - Rust</title><script>if(window.location.protocol!==\"file:\")document.head.insertAdjacentHTML(\"beforeend\",\"SourceSerif4-Regular-46f98efaafac5295.ttf.woff2,FiraSans-Regular-018c141bf0843ffd.woff2,FiraSans-Medium-8f9a781e4970d388.woff2,SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2,SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\".split(\",\").map(f=>`<link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin href=\"../../static.files/${f}\">`).join(\"\"))</script><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceSerif4-Regular-46f98efaafac5295.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/FiraSans-Regular-018c141bf0843ffd.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/FiraSans-Medium-8f9a781e4970d388.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\"><link rel=\"stylesheet\" href=\"../../static.files/normalize-76eba96aa4d2e634.css\"><link rel=\"stylesheet\" href=\"../../static.files/rustdoc-dd39b87e5fcfba68.css\"><meta name=\"rustdoc-vars\" data-root-path=\"../../\" data-static-root-path=\"../../static.files/\" data-current-crate=\"std\" data-themes=\"\" data-resource-suffix=\"1.80.0\" data-rustdoc-version=\"1.80.0 (051478957 2024-07-21)\" data-channel=\"1.80.0\" data-search-js=\"search-d52510db62a78183.js\" data-settings-js=\"settings-4313503d2e1961c2.js\"><script src=\"../../static.files/storage-118b08c4c78b968e.js\"></script><script defer=\"\" src=\"sidebar-items1.80.0.js\"></script><script defer=\"\" src=\"../../static.files/main-20a3ad099b048cf2.js\"></script><noscript><link rel=\"stylesheet\" href=\"../../static.files/noscript-df360f571f6edeae.css\"></noscript><link rel=\"alternate icon\" type=\"image/png\" href=\"../../static.files/favicon-32x32-422f7d1d52889060.png\"><link rel=\"icon\" type=\"image/svg+xml\" href=\"../../static.files/favicon-2c020d218678b618.svg\"></head><body class=\"rustdoc struct\"><!--[if lte IE 11]><div class=\"warning\">This old browser is unsupported and will most likely display funky things.</div><![endif]--><nav class=\"mobile-topbar\"><button class=\"sidebar-menu-toggle\" title=\"show sidebar\"></button><a class=\"logo-container\" href=\"../../std/index.html\"><img class=\"rust-logo\" src=\"../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"\"></a><h2 class=\"location\"><a href=\"#\">RSplitTerminator</a></h2></nav><nav class=\"sidebar\"><div class=\"sidebar-crate\"><a class=\"logo-container\" href=\"../../std/index.html\"><img class=\"rust-logo\" src=\"../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"logo\"></a><h2><a href=\"../../std/index.html\">std</a><span class=\"version\">1.80.0</span></h2></div><div class=\"version\">(051478957\t2024-07-21)</div><h2 class=\"location\"><a href=\"#\">RSplitTerminator</a></h2><div class=\"sidebar-elems\"><section><h3><a href=\"#implementations\">Methods</a></h3><ul class=\"block method\"><li><a href=\"#method.remainder\">remainder</a></li></ul><h3><a href=\"#trait-implementations\">Trait Implementations</a></h3><ul class=\"block trait-implementation\"><li><a href=\"#impl-Clone-for-RSplitTerminator%3C'a,+P%3E\">Clone</a></li><li><a href=\"#impl-Debug-for-RSplitTerminator%3C'a,+P%3E\">Debug</a></li><li><a href=\"#impl-DoubleEndedIterator-for-RSplitTerminator%3C'a,+P%3E\">DoubleEndedIterator</a></li><li><a href=\"#impl-FusedIterator-for-RSplitTerminator%3C'a,+P%3E\">FusedIterator</a></li><li><a href=\"#impl-Iterator-for-RSplitTerminator%3C'a,+P%3E\">Iterator</a></li></ul><h3><a href=\"#synthetic-implementations\">Auto Trait Implementations</a></h3><ul class=\"block synthetic-implementation\"><li><a href=\"#impl-Freeze-for-RSplitTerminator%3C'a,+P%3E\">Freeze</a></li><li><a href=\"#impl-RefUnwindSafe-for-RSplitTerminator%3C'a,+P%3E\">RefUnwindSafe</a></li><li><a href=\"#impl-Send-for-RSplitTerminator%3C'a,+P%3E\">Send</a></li><li><a href=\"#impl-Sync-for-RSplitTerminator%3C'a,+P%3E\">Sync</a></li><li><a href=\"#impl-Unpin-for-RSplitTerminator%3C'a,+P%3E\">Unpin</a></li><li><a href=\"#impl-UnwindSafe-for-RSplitTerminator%3C'a,+P%3E\">UnwindSafe</a></li></ul><h3><a href=\"#blanket-implementations\">Blanket Implementations</a></h3><ul class=\"block blanket-implementation\"><li><a href=\"#impl-Any-for-T\">Any</a></li><li><a href=\"#impl-Borrow%3CT%3E-for-T\">Borrow&lt;T&gt;</a></li><li><a href=\"#impl-BorrowMut%3CT%3E-for-T\">BorrowMut&lt;T&gt;</a></li><li><a href=\"#impl-From%3CT%3E-for-T\">From&lt;T&gt;</a></li><li><a href=\"#impl-Into%3CU%3E-for-T\">Into&lt;U&gt;</a></li><li><a href=\"#impl-IntoIterator-for-I\">IntoIterator</a></li><li><a href=\"#impl-ToOwned-for-T\">ToOwned</a></li><li><a href=\"#impl-TryFrom%3CU%3E-for-T\">TryFrom&lt;U&gt;</a></li><li><a href=\"#impl-TryInto%3CU%3E-for-T\">TryInto&lt;U&gt;</a></li></ul></section><h2><a href=\"index.html\">In std::str</a></h2><h3><a href=\"index.html#modules\">Modules</a></h3><ul class=\"block mod\"><li><a href=\"pattern/index.html\">pattern</a></li></ul><h3><a href=\"index.html#structs\">Structs</a></h3><ul class=\"block struct\"><li><a href=\"struct.Bytes.html\">Bytes</a></li><li><a href=\"struct.CharIndices.html\">CharIndices</a></li><li><a href=\"struct.Chars.html\">Chars</a></li><li><a href=\"struct.EncodeUtf16.html\">EncodeUtf16</a></li><li><a href=\"struct.EscapeDebug.html\">EscapeDebug</a></li><li><a href=\"struct.EscapeDefault.html\">EscapeDefault</a></li><li><a href=\"struct.EscapeUnicode.html\">EscapeUnicode</a></li><li><a href=\"struct.Lines.html\">Lines</a></li><li><a href=\"struct.LinesAny.html\">LinesAny</a></li><li><a href=\"struct.MatchIndices.html\">MatchIndices</a></li><li><a href=\"struct.Matches.html\">Matches</a></li><li><a href=\"struct.ParseBoolError.html\">ParseBoolError</a></li><li><a href=\"struct.RMatchIndices.html\">RMatchIndices</a></li><li><a href=\"struct.RMatches.html\">RMatches</a></li><li><a href=\"struct.RSplit.html\">RSplit</a></li><li><a href=\"struct.RSplitN.html\">RSplitN</a></li><li><a href=\"struct.RSplitTerminator.html\">RSplitTerminator</a></li><li><a href=\"struct.Split.html\">Split</a></li><li><a href=\"struct.SplitAsciiWhitespace.html\">SplitAsciiWhitespace</a></li><li><a href=\"struct.SplitInclusive.html\">SplitInclusive</a></li><li><a href=\"struct.SplitN.html\">SplitN</a></li><li><a href=\"struct.SplitTerminator.html\">SplitTerminator</a></li><li><a href=\"struct.SplitWhitespace.html\">SplitWhitespace</a></li><li><a href=\"struct.Utf8Chunk.html\">Utf8Chunk</a></li><li><a href=\"struct.Utf8Chunks.html\">Utf8Chunks</a></li><li><a href=\"struct.Utf8Error.html\">Utf8Error</a></li></ul><h3><a href=\"index.html#traits\">Traits</a></h3><ul class=\"block trait\"><li><a href=\"trait.FromStr.html\">FromStr</a></li></ul><h3><a href=\"index.html#functions\">Functions</a></h3><ul class=\"block fn\"><li><a href=\"fn.from_boxed_utf8_unchecked.html\">from_boxed_utf8_unchecked</a></li><li><a href=\"fn.from_raw_parts.html\">from_raw_parts</a></li><li><a href=\"fn.from_raw_parts_mut.html\">from_raw_parts_mut</a></li><li><a href=\"fn.from_utf8.html\">from_utf8</a></li><li><a href=\"fn.from_utf8_mut.html\">from_utf8_mut</a></li><li><a href=\"fn.from_utf8_unchecked.html\">from_utf8_unchecked</a></li><li><a href=\"fn.from_utf8_unchecked_mut.html\">from_utf8_unchecked_mut</a></li></ul></div></nav><div class=\"sidebar-resizer\"></div><main><div class=\"width-limiter\"><rustdoc-search><nav class=\"sub\">\n            <form class=\"search-form\">\n                <span></span> <!-- This empty span is a hacky fix for Safari - See #93184 -->\n                <div id=\"sidebar-button\" tabindex=\"-1\">\n                    <a href=\"../../std/all.html\" title=\"show sidebar\"></a>\n                </div>\n                <input class=\"search-input\" name=\"search\" aria-label=\"Run search in the documentation\" autocomplete=\"off\" spellcheck=\"false\" placeholder=\"Type â€˜Sâ€™ or â€˜/â€™ to search, â€˜?â€™ for more optionsâ€¦\" type=\"search\">\n                <div id=\"help-button\" tabindex=\"-1\">\n                    <a href=\"../../help.html\" title=\"help\">?</a>\n                </div>\n                <div id=\"settings-menu\" tabindex=\"-1\">\n                    <a href=\"../../settings.html\" title=\"settings\">\n                        Settings\n                    </a>\n                </div>\n            </form>\n        </nav></rustdoc-search><section id=\"main-content\" class=\"content\"><div class=\"main-heading\"><h1>Struct <a href=\"../index.html\">std</a>::<wbr><a href=\"index.html\">str</a>::<wbr><a class=\"struct\" href=\"#\">RSplitTerminator</a><button id=\"copy-path\" title=\"Copy item path to clipboard\">Copy item path</button></h1><span class=\"out-of-band\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/str/iter.rs.html#845-861\">source</a> Â· <button id=\"toggle-all-docs\" title=\"collapse all docs\">[<span>âˆ’</span>]</button></span></div><pre class=\"rust item-decl\"><code>pub struct RSplitTerminator&lt;'a, P&gt;(<span class=\"comment\">/* private fields */</span>)\n<span class=\"where\">where\n    P: <a class=\"trait\" href=\"pattern/trait.Pattern.html\" title=\"trait std::str::pattern::Pattern\">Pattern</a>&lt;'a&gt;</span>;</code></pre><details class=\"toggle top-doc\" open=\"\"><summary class=\"hideme\"><span>Expand description</span></summary><div class=\"docblock\"><p>Created with the method <a href=\"../primitive.str.html#method.rsplit_terminator\" title=\"method str::rsplit_terminator\"><code>rsplit_terminator</code></a>.</p>\n</div></details><h2 id=\"implementations\" class=\"section-header\">Implementations<a href=\"#implementations\" class=\"anchor\">Â§</a></h2><div id=\"implementations-list\"><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-RSplitTerminator%3C'a,+P%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/str/iter.rs.html#886\">source</a><a href=\"#impl-RSplitTerminator%3C'a,+P%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;'a, P&gt; <a class=\"struct\" href=\"struct.RSplitTerminator.html\" title=\"struct std::str::RSplitTerminator\">RSplitTerminator</a>&lt;'a, P&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"pattern/trait.Pattern.html\" title=\"trait std::str::pattern::Pattern\">Pattern</a>&lt;'a&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.remainder\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/str/iter.rs.html#904\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.remainder\" class=\"fn\">remainder</a>(&amp;self) -&gt; <a class=\"enum\" href=\"../option/enum.Option.html\" title=\"enum std::option::Option\">Option</a>&lt;&amp;'a <a class=\"primitive\" href=\"../primitive.str.html\">str</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>str_split_remainder</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/77998\">#77998</a>)</span></div></span></summary><div class=\"docblock\"><p>Returns remainder of the split string.</p>\n<p>If the iterator is empty, returns <code>None</code>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">Â§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(str_split_remainder)]\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>split = <span class=\"string\">\"A..B..\"</span>.rsplit_terminator(<span class=\"string\">'.'</span>);\n<span class=\"macro\">assert_eq!</span>(split.remainder(), <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"A..B..\"</span>));\nsplit.next();\n<span class=\"macro\">assert_eq!</span>(split.remainder(), <span class=\"prelude-val\">Some</span>(<span class=\"string\">\"A..B\"</span>));\nsplit.by_ref().for_each(drop);\n<span class=\"macro\">assert_eq!</span>(split.remainder(), <span class=\"prelude-val\">None</span>);</code></pre><a class=\"test-arrow\" target=\"_blank\" href=\"https://play.rust-lang.org/?code=%23!%5Ballow(unused)%5D%0A%23!%5Bfeature(str_split_remainder)%5D%0Afn+main()+%7B%0A++++let+mut+split+=+%22A..B..%22.rsplit_terminator('.');%0A++++assert_eq!(split.remainder(),+Some(%22A..B..%22));%0A++++split.next();%0A++++assert_eq!(split.remainder(),+Some(%22A..B%22));%0A++++split.by_ref().for_each(drop);%0A++++assert_eq!(split.remainder(),+None);%0A%7D&amp;version=nightly&amp;edition=2021\">Run</a></div>\n</div></details></div></details></div><h2 id=\"trait-implementations\" class=\"section-header\">Trait Implementations<a href=\"#trait-implementations\" class=\"anchor\">Â§</a></h2><div id=\"trait-implementations-list\"><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-Clone-for-RSplitTerminator%3C'a,+P%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/str/iter.rs.html#845-861\">source</a></span><a href=\"#impl-Clone-for-RSplitTerminator%3C'a,+P%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;'a, P&gt; <a class=\"trait\" href=\"../clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"struct.RSplitTerminator.html\" title=\"struct std::str::RSplitTerminator\">RSplitTerminator</a>&lt;'a, P&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"pattern/trait.Pattern.html\" title=\"trait std::str::pattern::Pattern\">Pattern</a>&lt;'a&gt;,\n    &lt;P as <a class=\"trait\" href=\"pattern/trait.Pattern.html\" title=\"trait std::str::pattern::Pattern\">Pattern</a>&lt;'a&gt;&gt;::<a class=\"associatedtype\" href=\"pattern/trait.Pattern.html#associatedtype.Searcher\" title=\"type std::str::pattern::Pattern::Searcher\">Searcher</a>: <a class=\"trait\" href=\"../clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/str/iter.rs.html#845-861\">source</a><a href=\"#method.clone\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"struct.RSplitTerminator.html\" title=\"struct std::str::RSplitTerminator\">RSplitTerminator</a>&lt;'a, P&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"RSplitTerminator<'a, P>\">â“˜</a></h4></section></summary><div class=\"docblock\">Returns a copy of the value. <a href=\"../clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"../primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class=\"docblock\">Performs copy-assignment from <code>source</code>. <a href=\"../clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-Debug-for-RSplitTerminator%3C'a,+P%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/str/iter.rs.html#845-861\">source</a></span><a href=\"#impl-Debug-for-RSplitTerminator%3C'a,+P%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;'a, P&gt; <a class=\"trait\" href=\"../fmt/trait.Debug.html\" title=\"trait std::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"struct.RSplitTerminator.html\" title=\"struct std::str::RSplitTerminator\">RSplitTerminator</a>&lt;'a, P&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"pattern/trait.Pattern.html\" title=\"trait std::str::pattern::Pattern\">Pattern</a>&lt;'a&gt;,\n    &lt;P as <a class=\"trait\" href=\"pattern/trait.Pattern.html\" title=\"trait std::str::pattern::Pattern\">Pattern</a>&lt;'a&gt;&gt;::<a class=\"associatedtype\" href=\"pattern/trait.Pattern.html#associatedtype.Searcher\" title=\"type std::str::pattern::Pattern::Searcher\">Searcher</a>: <a class=\"trait\" href=\"../fmt/trait.Debug.html\" title=\"trait std::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/str/iter.rs.html#845-861\">source</a><a href=\"#method.fmt\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"../fmt/struct.Formatter.html\" title=\"struct std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"../result/enum.Result.html\" title=\"enum std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"../primitive.unit.html\">()</a>, <a class=\"struct\" href=\"../fmt/struct.Error.html\" title=\"struct std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\">Formats the value using the given formatter. <a href=\"../fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-DoubleEndedIterator-for-RSplitTerminator%3C'a,+P%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/str/iter.rs.html#845-861\">source</a></span><a href=\"#impl-DoubleEndedIterator-for-RSplitTerminator%3C'a,+P%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;'a, P&gt; <a class=\"trait\" href=\"../iter/trait.DoubleEndedIterator.html\" title=\"trait std::iter::DoubleEndedIterator\">DoubleEndedIterator</a> for <a class=\"struct\" href=\"struct.RSplitTerminator.html\" title=\"struct std::str::RSplitTerminator\">RSplitTerminator</a>&lt;'a, P&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"pattern/trait.Pattern.html\" title=\"trait std::str::pattern::Pattern\">Pattern</a>&lt;'a&gt;,\n    &lt;P as <a class=\"trait\" href=\"pattern/trait.Pattern.html\" title=\"trait std::str::pattern::Pattern\">Pattern</a>&lt;'a&gt;&gt;::<a class=\"associatedtype\" href=\"pattern/trait.Pattern.html#associatedtype.Searcher\" title=\"type std::str::pattern::Pattern::Searcher\">Searcher</a>: <a class=\"trait\" href=\"pattern/trait.DoubleEndedSearcher.html\" title=\"trait std::str::pattern::DoubleEndedSearcher\">DoubleEndedSearcher</a>&lt;'a&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.next_back\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/str/iter.rs.html#845-861\">source</a><a href=\"#method.next_back\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.DoubleEndedIterator.html#tymethod.next_back\" class=\"fn\">next_back</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"../option/enum.Option.html\" title=\"enum std::option::Option\">Option</a>&lt;&amp;'a <a class=\"primitive\" href=\"../primitive.str.html\">str</a>&gt;</h4></section></summary><div class=\"docblock\">Removes and returns an element from the end of the iterator. <a href=\"../iter/trait.DoubleEndedIterator.html#tymethod.next_back\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.advance_back_by\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/double_ended.rs.html#138\">source</a><a href=\"#method.advance_back_by\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.DoubleEndedIterator.html#method.advance_back_by\" class=\"fn\">advance_back_by</a>(&amp;mut self, n: <a class=\"primitive\" href=\"../primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"../result/enum.Result.html\" title=\"enum std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"../primitive.unit.html\">()</a>, <a class=\"struct\" href=\"../num/struct.NonZero.html\" title=\"struct std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"../primitive.usize.html\">usize</a>&gt;&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>iter_advance_by</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/77404\">#77404</a>)</span></div></span><div class=\"docblock\">Advances the iterator from the back by <code>n</code> elements. <a href=\"../iter/trait.DoubleEndedIterator.html#method.advance_back_by\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.nth_back\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.37.0\">1.37.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/double_ended.rs.html#191\">source</a></span><a href=\"#method.nth_back\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.DoubleEndedIterator.html#method.nth_back\" class=\"fn\">nth_back</a>(&amp;mut self, n: <a class=\"primitive\" href=\"../primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"../option/enum.Option.html\" title=\"enum std::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>&gt;</h4></section></summary><div class=\"docblock\">Returns the <code>n</code>th element from the end of the iterator. <a href=\"../iter/trait.DoubleEndedIterator.html#method.nth_back\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.try_rfold\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.27.0\">1.27.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/double_ended.rs.html#230-234\">source</a></span><a href=\"#method.try_rfold\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.DoubleEndedIterator.html#method.try_rfold\" class=\"fn\">try_rfold</a>&lt;B, F, R&gt;(&amp;mut self, init: B, f: F) -&gt; R<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"../ops/trait.FnMut.html\" title=\"trait std::ops::FnMut\">FnMut</a>(B, Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>) -&gt; R,\n    R: <a class=\"trait\" href=\"../ops/trait.Try.html\" title=\"trait std::ops::Try\">Try</a>&lt;Output = B&gt;,</div></h4></section></summary><div class=\"docblock\">This is the reverse version of <a href=\"../iter/trait.Iterator.html#method.try_fold\" title=\"method std::iter::Iterator::try_fold\"><code>Iterator::try_fold()</code></a>: it takes\nelements starting from the back of the iterator. <a href=\"../iter/trait.DoubleEndedIterator.html#method.try_rfold\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.rfold\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.27.0\">1.27.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/double_ended.rs.html#301-304\">source</a></span><a href=\"#method.rfold\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.DoubleEndedIterator.html#method.rfold\" class=\"fn\">rfold</a>&lt;B, F&gt;(self, init: B, f: F) -&gt; B<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"../ops/trait.FnMut.html\" title=\"trait std::ops::FnMut\">FnMut</a>(B, Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>) -&gt; B,</div></h4></section></summary><div class=\"docblock\">An iterator method that reduces the iteratorâ€™s elements to a single,\nfinal value, starting from the back. <a href=\"../iter/trait.DoubleEndedIterator.html#method.rfold\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.rfind\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.27.0\">1.27.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/double_ended.rs.html#356-359\">source</a></span><a href=\"#method.rfind\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.DoubleEndedIterator.html#method.rfind\" class=\"fn\">rfind</a>&lt;P&gt;(&amp;mut self, predicate: P) -&gt; <a class=\"enum\" href=\"../option/enum.Option.html\" title=\"enum std::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"../ops/trait.FnMut.html\" title=\"trait std::ops::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"../primitive.bool.html\">bool</a>,</div></h4></section></summary><div class=\"docblock\">Searches for an element of an iterator from the back that satisfies a predicate. <a href=\"../iter/trait.DoubleEndedIterator.html#method.rfind\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-Iterator-for-RSplitTerminator%3C'a,+P%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/str/iter.rs.html#845-861\">source</a></span><a href=\"#impl-Iterator-for-RSplitTerminator%3C'a,+P%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;'a, P&gt; <a class=\"trait\" href=\"../iter/trait.Iterator.html\" title=\"trait std::iter::Iterator\">Iterator</a> for <a class=\"struct\" href=\"struct.RSplitTerminator.html\" title=\"struct std::str::RSplitTerminator\">RSplitTerminator</a>&lt;'a, P&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"pattern/trait.Pattern.html\" title=\"trait std::str::pattern::Pattern\">Pattern</a>&lt;'a&gt;,\n    &lt;P as <a class=\"trait\" href=\"pattern/trait.Pattern.html\" title=\"trait std::str::pattern::Pattern\">Pattern</a>&lt;'a&gt;&gt;::<a class=\"associatedtype\" href=\"pattern/trait.Pattern.html#associatedtype.Searcher\" title=\"type std::str::pattern::Pattern::Searcher\">Searcher</a>: <a class=\"trait\" href=\"pattern/trait.ReverseSearcher.html\" title=\"trait std::str::pattern::ReverseSearcher\">ReverseSearcher</a>&lt;'a&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open=\"\"><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">Â§</a><h4 class=\"code-header\">type <a href=\"../iter/trait.Iterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = &amp;'a <a class=\"primitive\" href=\"../primitive.str.html\">str</a></h4></section></summary><div class=\"docblock\">The type of the elements being iterated over.</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.next\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/str/iter.rs.html#845-861\">source</a><a href=\"#method.next\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#tymethod.next\" class=\"fn\">next</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"../option/enum.Option.html\" title=\"enum std::option::Option\">Option</a>&lt;&amp;'a <a class=\"primitive\" href=\"../primitive.str.html\">str</a>&gt;</h4></section></summary><div class=\"docblock\">Advances the iterator and returns the next value. <a href=\"../iter/trait.Iterator.html#tymethod.next\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.next_chunk\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#115-119\">source</a><a href=\"#method.next_chunk\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.next_chunk\" class=\"fn\">next_chunk</a>&lt;const N: <a class=\"primitive\" href=\"../primitive.usize.html\">usize</a>&gt;(\n    &amp;mut self,\n) -&gt; <a class=\"enum\" href=\"../result/enum.Result.html\" title=\"enum std::result::Result\">Result</a>&lt;[Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>; <a class=\"primitive\" href=\"../primitive.array.html\">N</a>], <a class=\"struct\" href=\"../array/struct.IntoIter.html\" title=\"struct std::array::IntoIter\">IntoIter</a>&lt;Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>, N&gt;&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>iter_next_chunk</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/98326\">#98326</a>)</span></div></span><div class=\"docblock\">Advances the iterator and returns an array containing the next <code>N</code> values. <a href=\"../iter/trait.Iterator.html#method.next_chunk\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#193\">source</a></span><a href=\"#method.size_hint\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.size_hint\" class=\"fn\">size_hint</a>(&amp;self) -&gt; (<a class=\"primitive\" href=\"../primitive.usize.html\">usize</a>, <a class=\"enum\" href=\"../option/enum.Option.html\" title=\"enum std::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"../primitive.usize.html\">usize</a>&gt;)</h4></section></summary><div class=\"docblock\">Returns the bounds on the remaining length of the iterator. <a href=\"../iter/trait.Iterator.html#method.size_hint\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.count\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#229-231\">source</a></span><a href=\"#method.count\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.count\" class=\"fn\">count</a>(self) -&gt; <a class=\"primitive\" href=\"../primitive.usize.html\">usize</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\">Consumes the iterator, counting the number of iterations and returning it. <a href=\"../iter/trait.Iterator.html#method.count\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.last\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#258-260\">source</a></span><a href=\"#method.last\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.last\" class=\"fn\">last</a>(self) -&gt; <a class=\"enum\" href=\"../option/enum.Option.html\" title=\"enum std::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\">Consumes the iterator, returning the last element. <a href=\"../iter/trait.Iterator.html#method.last\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.advance_by\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#306\">source</a><a href=\"#method.advance_by\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.advance_by\" class=\"fn\">advance_by</a>(&amp;mut self, n: <a class=\"primitive\" href=\"../primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"../result/enum.Result.html\" title=\"enum std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"../primitive.unit.html\">()</a>, <a class=\"struct\" href=\"../num/struct.NonZero.html\" title=\"struct std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"../primitive.usize.html\">usize</a>&gt;&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>iter_advance_by</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/77404\">#77404</a>)</span></div></span><div class=\"docblock\">Advances the iterator by <code>n</code> elements. <a href=\"../iter/trait.Iterator.html#method.advance_by\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.nth\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#358\">source</a></span><a href=\"#method.nth\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.nth\" class=\"fn\">nth</a>(&amp;mut self, n: <a class=\"primitive\" href=\"../primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"../option/enum.Option.html\" title=\"enum std::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>&gt;</h4></section></summary><div class=\"docblock\">Returns the <code>n</code>th element of the iterator. <a href=\"../iter/trait.Iterator.html#method.nth\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.step_by\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#409-411\">source</a></span><a href=\"#method.step_by\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.step_by\" class=\"fn\">step_by</a>(self, step: <a class=\"primitive\" href=\"../primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"../iter/struct.StepBy.html\" title=\"struct std::iter::StepBy\">StepBy</a>&lt;Self&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"StepBy<Self>\">â“˜</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\">Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration. <a href=\"../iter/trait.Iterator.html#method.step_by\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.chain\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#481-484\">source</a></span><a href=\"#method.chain\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.chain\" class=\"fn\">chain</a>&lt;U&gt;(self, other: U) -&gt; <a class=\"struct\" href=\"../iter/struct.Chain.html\" title=\"struct std::iter::Chain\">Chain</a>&lt;Self, &lt;U as <a class=\"trait\" href=\"../iter/trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"../iter/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type std::iter::IntoIterator::IntoIter\">IntoIter</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Chain<Self, <U as IntoIterator>::IntoIter>\">â“˜</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,\n    U: <a class=\"trait\" href=\"../iter/trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a>&lt;Item = Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>&gt;,</div></h4></section></summary><div class=\"docblock\">Takes two iterators and creates a new iterator over both in sequence. <a href=\"../iter/trait.Iterator.html#method.chain\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.zip\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#600-603\">source</a></span><a href=\"#method.zip\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.zip\" class=\"fn\">zip</a>&lt;U&gt;(self, other: U) -&gt; <a class=\"struct\" href=\"../iter/struct.Zip.html\" title=\"struct std::iter::Zip\">Zip</a>&lt;Self, &lt;U as <a class=\"trait\" href=\"../iter/trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"../iter/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type std::iter::IntoIterator::IntoIter\">IntoIter</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Zip<Self, <U as IntoIterator>::IntoIter>\">â“˜</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,\n    U: <a class=\"trait\" href=\"../iter/trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a>,</div></h4></section></summary><div class=\"docblock\">â€˜Zips upâ€™ two iterators into a single iterator of pairs. <a href=\"../iter/trait.Iterator.html#method.zip\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.intersperse_with\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#702-705\">source</a><a href=\"#method.intersperse_with\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.intersperse_with\" class=\"fn\">intersperse_with</a>&lt;G&gt;(self, separator: G) -&gt; <a class=\"struct\" href=\"../iter/struct.IntersperseWith.html\" title=\"struct std::iter::IntersperseWith\">IntersperseWith</a>&lt;Self, G&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"IntersperseWith<Self, G>\">â“˜</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,\n    G: <a class=\"trait\" href=\"../ops/trait.FnMut.html\" title=\"trait std::ops::FnMut\">FnMut</a>() -&gt; Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>iter_intersperse</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/79524\">#79524</a>)</span></div></span><div class=\"docblock\">Creates a new iterator which places an item generated by <code>separator</code>\nbetween adjacent items of the original iterator. <a href=\"../iter/trait.Iterator.html#method.intersperse_with\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.map\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#762-765\">source</a></span><a href=\"#method.map\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.map\" class=\"fn\">map</a>&lt;B, F&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"../iter/struct.Map.html\" title=\"struct std::iter::Map\">Map</a>&lt;Self, F&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Map<Self, F>\">â“˜</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"../ops/trait.FnMut.html\" title=\"trait std::ops::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>) -&gt; B,</div></h4></section></summary><div class=\"docblock\">Takes a closure and creates an iterator which calls that closure on each\nelement. <a href=\"../iter/trait.Iterator.html#method.map\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.for_each\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#808-811\">source</a></span><a href=\"#method.for_each\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.for_each\" class=\"fn\">for_each</a>&lt;F&gt;(self, f: F)<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"../ops/trait.FnMut.html\" title=\"trait std::ops::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>),</div></h4></section></summary><div class=\"docblock\">Calls a closure on each element of an iterator. <a href=\"../iter/trait.Iterator.html#method.for_each\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.filter\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#884-887\">source</a></span><a href=\"#method.filter\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.filter\" class=\"fn\">filter</a>&lt;P&gt;(self, predicate: P) -&gt; <a class=\"struct\" href=\"../iter/struct.Filter.html\" title=\"struct std::iter::Filter\">Filter</a>&lt;Self, P&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Filter<Self, P>\">â“˜</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"../ops/trait.FnMut.html\" title=\"trait std::ops::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"../primitive.bool.html\">bool</a>,</div></h4></section></summary><div class=\"docblock\">Creates an iterator which uses a closure to determine if an element\nshould be yielded. <a href=\"../iter/trait.Iterator.html#method.filter\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.filter_map\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#930-933\">source</a></span><a href=\"#method.filter_map\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.filter_map\" class=\"fn\">filter_map</a>&lt;B, F&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"../iter/struct.FilterMap.html\" title=\"struct std::iter::FilterMap\">FilterMap</a>&lt;Self, F&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"FilterMap<Self, F>\">â“˜</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"../ops/trait.FnMut.html\" title=\"trait std::ops::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"../option/enum.Option.html\" title=\"enum std::option::Option\">Option</a>&lt;B&gt;,</div></h4></section></summary><div class=\"docblock\">Creates an iterator that both filters and maps. <a href=\"../iter/trait.Iterator.html#method.filter_map\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.enumerate\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#978-980\">source</a></span><a href=\"#method.enumerate\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.enumerate\" class=\"fn\">enumerate</a>(self) -&gt; <a class=\"struct\" href=\"../iter/struct.Enumerate.html\" title=\"struct std::iter::Enumerate\">Enumerate</a>&lt;Self&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Enumerate<Self>\">â“˜</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\">Creates an iterator which gives the current iteration count as well as\nthe next value. <a href=\"../iter/trait.Iterator.html#method.enumerate\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.peekable\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#1050-1052\">source</a></span><a href=\"#method.peekable\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.peekable\" class=\"fn\">peekable</a>(self) -&gt; <a class=\"struct\" href=\"../iter/struct.Peekable.html\" title=\"struct std::iter::Peekable\">Peekable</a>&lt;Self&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Peekable<Self>\">â“˜</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\">Creates an iterator which can use the <a href=\"../iter/struct.Peekable.html#method.peek\" title=\"method std::iter::Peekable::peek\"><code>peek</code></a> and <a href=\"../iter/struct.Peekable.html#method.peek_mut\" title=\"method std::iter::Peekable::peek_mut\"><code>peek_mut</code></a> methods\nto look at the next element of the iterator without consuming it. See\ntheir documentation for more information. <a href=\"../iter/trait.Iterator.html#method.peekable\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.skip_while\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#1116-1119\">source</a></span><a href=\"#method.skip_while\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.skip_while\" class=\"fn\">skip_while</a>&lt;P&gt;(self, predicate: P) -&gt; <a class=\"struct\" href=\"../iter/struct.SkipWhile.html\" title=\"struct std::iter::SkipWhile\">SkipWhile</a>&lt;Self, P&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"SkipWhile<Self, P>\">â“˜</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"../ops/trait.FnMut.html\" title=\"trait std::ops::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"../primitive.bool.html\">bool</a>,</div></h4></section></summary><div class=\"docblock\">Creates an iterator that <a href=\"../iter/trait.Iterator.html#method.skip\" title=\"method std::iter::Iterator::skip\"><code>skip</code></a>s elements based on a predicate. <a href=\"../iter/trait.Iterator.html#method.skip_while\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.take_while\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#1198-1201\">source</a></span><a href=\"#method.take_while\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.take_while\" class=\"fn\">take_while</a>&lt;P&gt;(self, predicate: P) -&gt; <a class=\"struct\" href=\"../iter/struct.TakeWhile.html\" title=\"struct std::iter::TakeWhile\">TakeWhile</a>&lt;Self, P&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"TakeWhile<Self, P>\">â“˜</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"../ops/trait.FnMut.html\" title=\"trait std::ops::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"../primitive.bool.html\">bool</a>,</div></h4></section></summary><div class=\"docblock\">Creates an iterator that yields elements based on a predicate. <a href=\"../iter/trait.Iterator.html#method.take_while\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.map_while\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.57.0\">1.57.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#1287-1290\">source</a></span><a href=\"#method.map_while\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.map_while\" class=\"fn\">map_while</a>&lt;B, P&gt;(self, predicate: P) -&gt; <a class=\"struct\" href=\"../iter/struct.MapWhile.html\" title=\"struct std::iter::MapWhile\">MapWhile</a>&lt;Self, P&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"MapWhile<Self, P>\">â“˜</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"../ops/trait.FnMut.html\" title=\"trait std::ops::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"../option/enum.Option.html\" title=\"enum std::option::Option\">Option</a>&lt;B&gt;,</div></h4></section></summary><div class=\"docblock\">Creates an iterator that both yields elements based on a predicate and maps. <a href=\"../iter/trait.Iterator.html#method.map_while\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.skip\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#1317-1319\">source</a></span><a href=\"#method.skip\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.skip\" class=\"fn\">skip</a>(self, n: <a class=\"primitive\" href=\"../primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"../iter/struct.Skip.html\" title=\"struct std::iter::Skip\">Skip</a>&lt;Self&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Skip<Self>\">â“˜</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\">Creates an iterator that skips the first <code>n</code> elements. <a href=\"../iter/trait.Iterator.html#method.skip\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.take\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#1371-1373\">source</a></span><a href=\"#method.take\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.take\" class=\"fn\">take</a>(self, n: <a class=\"primitive\" href=\"../primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"../iter/struct.Take.html\" title=\"struct std::iter::Take\">Take</a>&lt;Self&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Take<Self>\">â“˜</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\">Creates an iterator that yields the first <code>n</code> elements, or fewer\nif the underlying iterator ends sooner. <a href=\"../iter/trait.Iterator.html#method.take\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.scan\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#1419-1422\">source</a></span><a href=\"#method.scan\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.scan\" class=\"fn\">scan</a>&lt;St, B, F&gt;(self, initial_state: St, f: F) -&gt; <a class=\"struct\" href=\"../iter/struct.Scan.html\" title=\"struct std::iter::Scan\">Scan</a>&lt;Self, St, F&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Scan<Self, St, F>\">â“˜</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"../ops/trait.FnMut.html\" title=\"trait std::ops::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"../primitive.reference.html\">&amp;mut St</a>, Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"../option/enum.Option.html\" title=\"enum std::option::Option\">Option</a>&lt;B&gt;,</div></h4></section></summary><div class=\"docblock\">An iterator adapter which, like <a href=\"../iter/trait.Iterator.html#method.fold\" title=\"method std::iter::Iterator::fold\"><code>fold</code></a>, holds internal state, but\nunlike <a href=\"../iter/trait.Iterator.html#method.fold\" title=\"method std::iter::Iterator::fold\"><code>fold</code></a>, produces a new iterator. <a href=\"../iter/trait.Iterator.html#method.scan\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.flat_map\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#1458-1462\">source</a></span><a href=\"#method.flat_map\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.flat_map\" class=\"fn\">flat_map</a>&lt;U, F&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"../iter/struct.FlatMap.html\" title=\"struct std::iter::FlatMap\">FlatMap</a>&lt;Self, U, F&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"FlatMap<Self, U, F>\">â“˜</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,\n    U: <a class=\"trait\" href=\"../iter/trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a>,\n    F: <a class=\"trait\" href=\"../ops/trait.FnMut.html\" title=\"trait std::ops::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>) -&gt; U,</div></h4></section></summary><div class=\"docblock\">Creates an iterator that works like map, but flattens nested structure. <a href=\"../iter/trait.Iterator.html#method.flat_map\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.map_windows\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#1700-1703\">source</a><a href=\"#method.map_windows\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.map_windows\" class=\"fn\">map_windows</a>&lt;F, R, const N: <a class=\"primitive\" href=\"../primitive.usize.html\">usize</a>&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"../iter/struct.MapWindows.html\" title=\"struct std::iter::MapWindows\">MapWindows</a>&lt;Self, F, N&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"MapWindows<Self, F, N>\">â“˜</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"../ops/trait.FnMut.html\" title=\"trait std::ops::FnMut\">FnMut</a>(&amp;[Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>; <a class=\"primitive\" href=\"../primitive.array.html\">N</a>]) -&gt; R,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>iter_map_windows</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/87155\">#87155</a>)</span></div></span><div class=\"docblock\">Calls the given function <code>f</code> for each contiguous window of size <code>N</code> over\n<code>self</code> and returns an iterator over the outputs of <code>f</code>. Like <a href=\"../primitive.slice.html#method.windows\" title=\"method slice::windows\"><code>slice::windows()</code></a>,\nthe windows during mapping overlap as well. <a href=\"../iter/trait.Iterator.html#method.map_windows\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.fuse\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#1767-1769\">source</a></span><a href=\"#method.fuse\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.fuse\" class=\"fn\">fuse</a>(self) -&gt; <a class=\"struct\" href=\"../iter/struct.Fuse.html\" title=\"struct std::iter::Fuse\">Fuse</a>&lt;Self&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Fuse<Self>\">â“˜</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\">Creates an iterator which ends after the first <a href=\"../option/enum.Option.html#variant.None\" title=\"variant std::option::Option::None\"><code>None</code></a>. <a href=\"../iter/trait.Iterator.html#method.fuse\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.inspect\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#1852-1855\">source</a></span><a href=\"#method.inspect\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.inspect\" class=\"fn\">inspect</a>&lt;F&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"../iter/struct.Inspect.html\" title=\"struct std::iter::Inspect\">Inspect</a>&lt;Self, F&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Inspect<Self, F>\">â“˜</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"../ops/trait.FnMut.html\" title=\"trait std::ops::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>),</div></h4></section></summary><div class=\"docblock\">Does something with each element of an iterator, passing the value on. <a href=\"../iter/trait.Iterator.html#method.inspect\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.by_ref\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#1881-1883\">source</a></span><a href=\"#method.by_ref\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.by_ref\" class=\"fn\">by_ref</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"../primitive.reference.html\">&amp;mut Self</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\">Borrows an iterator, rather than consuming it. <a href=\"../iter/trait.Iterator.html#method.by_ref\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.collect\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#2001-2003\">source</a></span><a href=\"#method.collect\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.collect\" class=\"fn\">collect</a>&lt;B&gt;(self) -&gt; B<div class=\"where\">where\n    B: <a class=\"trait\" href=\"../iter/trait.FromIterator.html\" title=\"trait std::iter::FromIterator\">FromIterator</a>&lt;Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>&gt;,\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\">Transforms an iterator into a collection. <a href=\"../iter/trait.Iterator.html#method.collect\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.collect_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#2154-2156\">source</a><a href=\"#method.collect_into\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.collect_into\" class=\"fn\">collect_into</a>&lt;E&gt;(self, collection: <a class=\"primitive\" href=\"../primitive.reference.html\">&amp;mut E</a>) -&gt; <a class=\"primitive\" href=\"../primitive.reference.html\">&amp;mut E</a><div class=\"where\">where\n    E: <a class=\"trait\" href=\"../iter/trait.Extend.html\" title=\"trait std::iter::Extend\">Extend</a>&lt;Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>&gt;,\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>iter_collect_into</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/94780\">#94780</a>)</span></div></span><div class=\"docblock\">Collects all the items from an iterator into a collection. <a href=\"../iter/trait.Iterator.html#method.collect_into\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.partition\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#2187-2191\">source</a></span><a href=\"#method.partition\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.partition\" class=\"fn\">partition</a>&lt;B, F&gt;(self, f: F) -&gt; <a class=\"primitive\" href=\"../primitive.tuple.html\">(B, B)</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,\n    B: <a class=\"trait\" href=\"../default/trait.Default.html\" title=\"trait std::default::Default\">Default</a> + <a class=\"trait\" href=\"../iter/trait.Extend.html\" title=\"trait std::iter::Extend\">Extend</a>&lt;Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>&gt;,\n    F: <a class=\"trait\" href=\"../ops/trait.FnMut.html\" title=\"trait std::ops::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"../primitive.bool.html\">bool</a>,</div></h4></section></summary><div class=\"docblock\">Consumes an iterator, creating two collections from it. <a href=\"../iter/trait.Iterator.html#method.partition\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.is_partitioned\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#2308-2311\">source</a><a href=\"#method.is_partitioned\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.is_partitioned\" class=\"fn\">is_partitioned</a>&lt;P&gt;(self, predicate: P) -&gt; <a class=\"primitive\" href=\"../primitive.bool.html\">bool</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"../ops/trait.FnMut.html\" title=\"trait std::ops::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"../primitive.bool.html\">bool</a>,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>iter_is_partitioned</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/62544\">#62544</a>)</span></div></span><div class=\"docblock\">Checks if the elements of this iterator are partitioned according to the given predicate,\nsuch that all those that return <code>true</code> precede all those that return <code>false</code>. <a href=\"../iter/trait.Iterator.html#method.is_partitioned\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.try_fold\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.27.0\">1.27.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#2403-2407\">source</a></span><a href=\"#method.try_fold\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.try_fold\" class=\"fn\">try_fold</a>&lt;B, F, R&gt;(&amp;mut self, init: B, f: F) -&gt; R<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"../ops/trait.FnMut.html\" title=\"trait std::ops::FnMut\">FnMut</a>(B, Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>) -&gt; R,\n    R: <a class=\"trait\" href=\"../ops/trait.Try.html\" title=\"trait std::ops::Try\">Try</a>&lt;Output = B&gt;,</div></h4></section></summary><div class=\"docblock\">An iterator method that applies a function as long as it returns\nsuccessfully, producing a single, final value. <a href=\"../iter/trait.Iterator.html#method.try_fold\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.try_for_each\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.27.0\">1.27.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#2462-2466\">source</a></span><a href=\"#method.try_for_each\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.try_for_each\" class=\"fn\">try_for_each</a>&lt;F, R&gt;(&amp;mut self, f: F) -&gt; R<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"../ops/trait.FnMut.html\" title=\"trait std::ops::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>) -&gt; R,\n    R: <a class=\"trait\" href=\"../ops/trait.Try.html\" title=\"trait std::ops::Try\">Try</a>&lt;Output = <a class=\"primitive\" href=\"../primitive.unit.html\">()</a>&gt;,</div></h4></section></summary><div class=\"docblock\">An iterator method that applies a fallible function to each item in the\niterator, stopping at the first error and returning that error. <a href=\"../iter/trait.Iterator.html#method.try_for_each\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.fold\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#2582-2585\">source</a></span><a href=\"#method.fold\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.fold\" class=\"fn\">fold</a>&lt;B, F&gt;(self, init: B, f: F) -&gt; B<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"../ops/trait.FnMut.html\" title=\"trait std::ops::FnMut\">FnMut</a>(B, Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>) -&gt; B,</div></h4></section></summary><div class=\"docblock\">Folds every element into an accumulator by applying an operation,\nreturning the final result. <a href=\"../iter/trait.Iterator.html#method.fold\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.reduce\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.51.0\">1.51.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#2620-2623\">source</a></span><a href=\"#method.reduce\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.reduce\" class=\"fn\">reduce</a>&lt;F&gt;(self, f: F) -&gt; <a class=\"enum\" href=\"../option/enum.Option.html\" title=\"enum std::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"../ops/trait.FnMut.html\" title=\"trait std::ops::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>, Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>) -&gt; Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>,</div></h4></section></summary><div class=\"docblock\">Reduces the elements to a single one, by repeatedly applying a reducing\noperation. <a href=\"../iter/trait.Iterator.html#method.reduce\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.try_reduce\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#2692-2697\">source</a><a href=\"#method.try_reduce\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.try_reduce\" class=\"fn\">try_reduce</a>&lt;F, R&gt;(\n    &amp;mut self,\n    f: F,\n) -&gt; &lt;&lt;R as <a class=\"trait\" href=\"../ops/trait.Try.html\" title=\"trait std::ops::Try\">Try</a>&gt;::<a class=\"associatedtype\" href=\"../ops/trait.Try.html#associatedtype.Residual\" title=\"type std::ops::Try::Residual\">Residual</a> as <a class=\"trait\" href=\"../ops/trait.Residual.html\" title=\"trait std::ops::Residual\">Residual</a>&lt;<a class=\"enum\" href=\"../option/enum.Option.html\" title=\"enum std::option::Option\">Option</a>&lt;&lt;R as <a class=\"trait\" href=\"../ops/trait.Try.html\" title=\"trait std::ops::Try\">Try</a>&gt;::<a class=\"associatedtype\" href=\"../ops/trait.Try.html#associatedtype.Output\" title=\"type std::ops::Try::Output\">Output</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"../ops/trait.Residual.html#associatedtype.TryType\" title=\"type std::ops::Residual::TryType\">TryType</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"../ops/trait.FnMut.html\" title=\"trait std::ops::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>, Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>) -&gt; R,\n    R: <a class=\"trait\" href=\"../ops/trait.Try.html\" title=\"trait std::ops::Try\">Try</a>&lt;Output = Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>&gt;,\n    &lt;R as <a class=\"trait\" href=\"../ops/trait.Try.html\" title=\"trait std::ops::Try\">Try</a>&gt;::<a class=\"associatedtype\" href=\"../ops/trait.Try.html#associatedtype.Residual\" title=\"type std::ops::Try::Residual\">Residual</a>: <a class=\"trait\" href=\"../ops/trait.Residual.html\" title=\"trait std::ops::Residual\">Residual</a>&lt;<a class=\"enum\" href=\"../option/enum.Option.html\" title=\"enum std::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>&gt;&gt;,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>iterator_try_reduce</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/87053\">#87053</a>)</span></div></span><div class=\"docblock\">Reduces the elements to a single one by repeatedly applying a reducing operation. If the\nclosure returns a failure, the failure is propagated back to the caller immediately. <a href=\"../iter/trait.Iterator.html#method.try_reduce\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.all\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#2750-2753\">source</a></span><a href=\"#method.all\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.all\" class=\"fn\">all</a>&lt;F&gt;(&amp;mut self, f: F) -&gt; <a class=\"primitive\" href=\"../primitive.bool.html\">bool</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"../ops/trait.FnMut.html\" title=\"trait std::ops::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"../primitive.bool.html\">bool</a>,</div></h4></section></summary><div class=\"docblock\">Tests if every element of the iterator matches a predicate. <a href=\"../iter/trait.Iterator.html#method.all\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.any\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#2804-2807\">source</a></span><a href=\"#method.any\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.any\" class=\"fn\">any</a>&lt;F&gt;(&amp;mut self, f: F) -&gt; <a class=\"primitive\" href=\"../primitive.bool.html\">bool</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"../ops/trait.FnMut.html\" title=\"trait std::ops::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"../primitive.bool.html\">bool</a>,</div></h4></section></summary><div class=\"docblock\">Tests if any element of the iterator matches a predicate. <a href=\"../iter/trait.Iterator.html#method.any\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.find\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#2868-2871\">source</a></span><a href=\"#method.find\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.find\" class=\"fn\">find</a>&lt;P&gt;(&amp;mut self, predicate: P) -&gt; <a class=\"enum\" href=\"../option/enum.Option.html\" title=\"enum std::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"../ops/trait.FnMut.html\" title=\"trait std::ops::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"../primitive.bool.html\">bool</a>,</div></h4></section></summary><div class=\"docblock\">Searches for an element of an iterator that satisfies a predicate. <a href=\"../iter/trait.Iterator.html#method.find\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.find_map\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.30.0\">1.30.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#2900-2903\">source</a></span><a href=\"#method.find_map\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.find_map\" class=\"fn\">find_map</a>&lt;B, F&gt;(&amp;mut self, f: F) -&gt; <a class=\"enum\" href=\"../option/enum.Option.html\" title=\"enum std::option::Option\">Option</a>&lt;B&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"../ops/trait.FnMut.html\" title=\"trait std::ops::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"../option/enum.Option.html\" title=\"enum std::option::Option\">Option</a>&lt;B&gt;,</div></h4></section></summary><div class=\"docblock\">Applies function to the elements of iterator and returns\nthe first non-none result. <a href=\"../iter/trait.Iterator.html#method.find_map\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.try_find\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#2959-2964\">source</a><a href=\"#method.try_find\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.try_find\" class=\"fn\">try_find</a>&lt;F, R&gt;(\n    &amp;mut self,\n    f: F,\n) -&gt; &lt;&lt;R as <a class=\"trait\" href=\"../ops/trait.Try.html\" title=\"trait std::ops::Try\">Try</a>&gt;::<a class=\"associatedtype\" href=\"../ops/trait.Try.html#associatedtype.Residual\" title=\"type std::ops::Try::Residual\">Residual</a> as <a class=\"trait\" href=\"../ops/trait.Residual.html\" title=\"trait std::ops::Residual\">Residual</a>&lt;<a class=\"enum\" href=\"../option/enum.Option.html\" title=\"enum std::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"../ops/trait.Residual.html#associatedtype.TryType\" title=\"type std::ops::Residual::TryType\">TryType</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"../ops/trait.FnMut.html\" title=\"trait std::ops::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>) -&gt; R,\n    R: <a class=\"trait\" href=\"../ops/trait.Try.html\" title=\"trait std::ops::Try\">Try</a>&lt;Output = <a class=\"primitive\" href=\"../primitive.bool.html\">bool</a>&gt;,\n    &lt;R as <a class=\"trait\" href=\"../ops/trait.Try.html\" title=\"trait std::ops::Try\">Try</a>&gt;::<a class=\"associatedtype\" href=\"../ops/trait.Try.html#associatedtype.Residual\" title=\"type std::ops::Try::Residual\">Residual</a>: <a class=\"trait\" href=\"../ops/trait.Residual.html\" title=\"trait std::ops::Residual\">Residual</a>&lt;<a class=\"enum\" href=\"../option/enum.Option.html\" title=\"enum std::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>&gt;&gt;,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>try_find</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/63178\">#63178</a>)</span></div></span><div class=\"docblock\">Applies function to the elements of iterator and returns\nthe first true result or the first error. <a href=\"../iter/trait.Iterator.html#method.try_find\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.position\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#3042-3045\">source</a></span><a href=\"#method.position\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.position\" class=\"fn\">position</a>&lt;P&gt;(&amp;mut self, predicate: P) -&gt; <a class=\"enum\" href=\"../option/enum.Option.html\" title=\"enum std::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"../primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"../ops/trait.FnMut.html\" title=\"trait std::ops::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"../primitive.bool.html\">bool</a>,</div></h4></section></summary><div class=\"docblock\">Searches for an element in an iterator, returning its index. <a href=\"../iter/trait.Iterator.html#method.position\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.max_by_key\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.6.0\">1.6.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#3217-3220\">source</a></span><a href=\"#method.max_by_key\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.max_by_key\" class=\"fn\">max_by_key</a>&lt;B, F&gt;(self, f: F) -&gt; <a class=\"enum\" href=\"../option/enum.Option.html\" title=\"enum std::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"../cmp/trait.Ord.html\" title=\"trait std::cmp::Ord\">Ord</a>,\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"../ops/trait.FnMut.html\" title=\"trait std::ops::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>) -&gt; B,</div></h4></section></summary><div class=\"docblock\">Returns the element that gives the maximum value from the\nspecified function. <a href=\"../iter/trait.Iterator.html#method.max_by_key\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.max_by\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.15.0\">1.15.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#3251-3254\">source</a></span><a href=\"#method.max_by\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.max_by\" class=\"fn\">max_by</a>&lt;F&gt;(self, compare: F) -&gt; <a class=\"enum\" href=\"../option/enum.Option.html\" title=\"enum std::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"../ops/trait.FnMut.html\" title=\"trait std::ops::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>, &amp;Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"../cmp/enum.Ordering.html\" title=\"enum std::cmp::Ordering\">Ordering</a>,</div></h4></section></summary><div class=\"docblock\">Returns the element that gives the maximum value with respect to the\nspecified comparison function. <a href=\"../iter/trait.Iterator.html#method.max_by\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.min_by_key\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.6.0\">1.6.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#3279-3282\">source</a></span><a href=\"#method.min_by_key\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.min_by_key\" class=\"fn\">min_by_key</a>&lt;B, F&gt;(self, f: F) -&gt; <a class=\"enum\" href=\"../option/enum.Option.html\" title=\"enum std::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"../cmp/trait.Ord.html\" title=\"trait std::cmp::Ord\">Ord</a>,\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"../ops/trait.FnMut.html\" title=\"trait std::ops::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>) -&gt; B,</div></h4></section></summary><div class=\"docblock\">Returns the element that gives the minimum value from the\nspecified function. <a href=\"../iter/trait.Iterator.html#method.min_by_key\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.min_by\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.15.0\">1.15.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#3313-3316\">source</a></span><a href=\"#method.min_by\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.min_by\" class=\"fn\">min_by</a>&lt;F&gt;(self, compare: F) -&gt; <a class=\"enum\" href=\"../option/enum.Option.html\" title=\"enum std::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"../ops/trait.FnMut.html\" title=\"trait std::ops::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>, &amp;Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"../cmp/enum.Ordering.html\" title=\"enum std::cmp::Ordering\">Ordering</a>,</div></h4></section></summary><div class=\"docblock\">Returns the element that gives the minimum value with respect to the\nspecified comparison function. <a href=\"../iter/trait.Iterator.html#method.min_by\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.unzip\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#3388-3392\">source</a></span><a href=\"#method.unzip\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.unzip\" class=\"fn\">unzip</a>&lt;A, B, FromA, FromB&gt;(self) -&gt; <a class=\"primitive\" href=\"../primitive.tuple.html\">(FromA, FromB)</a><div class=\"where\">where\n    FromA: <a class=\"trait\" href=\"../default/trait.Default.html\" title=\"trait std::default::Default\">Default</a> + <a class=\"trait\" href=\"../iter/trait.Extend.html\" title=\"trait std::iter::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"../default/trait.Default.html\" title=\"trait std::default::Default\">Default</a> + <a class=\"trait\" href=\"../iter/trait.Extend.html\" title=\"trait std::iter::Extend\">Extend</a>&lt;B&gt;,\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"../iter/trait.Iterator.html\" title=\"trait std::iter::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"../primitive.tuple.html\">(A, B)</a>&gt;,</div></h4></section></summary><div class=\"docblock\">Converts an iterator of pairs into a pair of containers. <a href=\"../iter/trait.Iterator.html#method.unzip\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.copied\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.36.0\">1.36.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#3419-3422\">source</a></span><a href=\"#method.copied\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.copied\" class=\"fn\">copied</a>&lt;'a, T&gt;(self) -&gt; <a class=\"struct\" href=\"../iter/struct.Copied.html\" title=\"struct std::iter::Copied\">Copied</a>&lt;Self&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Copied<Self>\">â“˜</a><div class=\"where\">where\n    T: 'a + <a class=\"trait\" href=\"../marker/trait.Copy.html\" title=\"trait std::marker::Copy\">Copy</a>,\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"../iter/trait.Iterator.html\" title=\"trait std::iter::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"../primitive.reference.html\">&amp;'a T</a>&gt;,</div></h4></section></summary><div class=\"docblock\">Creates an iterator which copies all of its elements. <a href=\"../iter/trait.Iterator.html#method.copied\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.cloned\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#3467-3470\">source</a></span><a href=\"#method.cloned\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.cloned\" class=\"fn\">cloned</a>&lt;'a, T&gt;(self) -&gt; <a class=\"struct\" href=\"../iter/struct.Cloned.html\" title=\"struct std::iter::Cloned\">Cloned</a>&lt;Self&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Cloned<Self>\">â“˜</a><div class=\"where\">where\n    T: 'a + <a class=\"trait\" href=\"../clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a>,\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"../iter/trait.Iterator.html\" title=\"trait std::iter::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"../primitive.reference.html\">&amp;'a T</a>&gt;,</div></h4></section></summary><div class=\"docblock\">Creates an iterator which <a href=\"../clone/trait.Clone.html#tymethod.clone\" title=\"method std::clone::Clone::clone\"><code>clone</code></a>s all of its elements. <a href=\"../iter/trait.Iterator.html#method.cloned\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.array_chunks\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#3544-3546\">source</a><a href=\"#method.array_chunks\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.array_chunks\" class=\"fn\">array_chunks</a>&lt;const N: <a class=\"primitive\" href=\"../primitive.usize.html\">usize</a>&gt;(self) -&gt; <a class=\"struct\" href=\"../iter/struct.ArrayChunks.html\" title=\"struct std::iter::ArrayChunks\">ArrayChunks</a>&lt;Self, N&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"ArrayChunks<Self, N>\">â“˜</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>iter_array_chunks</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/100450\">#100450</a>)</span></div></span><div class=\"docblock\">Returns an iterator over <code>N</code> elements of the iterator at a time. <a href=\"../iter/trait.Iterator.html#method.array_chunks\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.sum\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.11.0\">1.11.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#3576-3579\">source</a></span><a href=\"#method.sum\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.sum\" class=\"fn\">sum</a>&lt;S&gt;(self) -&gt; S<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,\n    S: <a class=\"trait\" href=\"../iter/trait.Sum.html\" title=\"trait std::iter::Sum\">Sum</a>&lt;Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>&gt;,</div></h4></section></summary><div class=\"docblock\">Sums the elements of an iterator. <a href=\"../iter/trait.Iterator.html#method.sum\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.product\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.11.0\">1.11.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#3609-3612\">source</a></span><a href=\"#method.product\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.product\" class=\"fn\">product</a>&lt;P&gt;(self) -&gt; P<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"../iter/trait.Product.html\" title=\"trait std::iter::Product\">Product</a>&lt;Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>&gt;,</div></h4></section></summary><div class=\"docblock\">Iterates over the entire iterator, multiplying all the elements <a href=\"../iter/trait.Iterator.html#method.product\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.cmp_by\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#3659-3663\">source</a><a href=\"#method.cmp_by\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.cmp_by\" class=\"fn\">cmp_by</a>&lt;I, F&gt;(self, other: I, cmp: F) -&gt; <a class=\"enum\" href=\"../cmp/enum.Ordering.html\" title=\"enum std::cmp::Ordering\">Ordering</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,\n    I: <a class=\"trait\" href=\"../iter/trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a>,\n    F: <a class=\"trait\" href=\"../ops/trait.FnMut.html\" title=\"trait std::ops::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>, &lt;I as <a class=\"trait\" href=\"../iter/trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"../iter/trait.IntoIterator.html#associatedtype.Item\" title=\"type std::iter::IntoIterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"../cmp/enum.Ordering.html\" title=\"enum std::cmp::Ordering\">Ordering</a>,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>iter_order_by</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/64295\">#64295</a>)</span></div></span><div class=\"docblock\"><a href=\"../cmp/trait.Ord.html#lexicographical-comparison\" title=\"trait std::cmp::Ord\">Lexicographically</a> compares the elements of this <a href=\"../iter/trait.Iterator.html\" title=\"trait std::iter::Iterator\"><code>Iterator</code></a> with those\nof another with respect to the specified comparison function. <a href=\"../iter/trait.Iterator.html#method.cmp_by\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#3716-3720\">source</a></span><a href=\"#method.partial_cmp\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.partial_cmp\" class=\"fn\">partial_cmp</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"enum\" href=\"../option/enum.Option.html\" title=\"enum std::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"../cmp/enum.Ordering.html\" title=\"enum std::cmp::Ordering\">Ordering</a>&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"../iter/trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a>,\n    Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"../cmp/trait.PartialOrd.html\" title=\"trait std::cmp::PartialOrd\">PartialOrd</a>&lt;&lt;I as <a class=\"trait\" href=\"../iter/trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"../iter/trait.IntoIterator.html#associatedtype.Item\" title=\"type std::iter::IntoIterator::Item\">Item</a>&gt;,\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><a href=\"../cmp/trait.Ord.html#lexicographical-comparison\" title=\"trait std::cmp::Ord\">Lexicographically</a> compares the <a href=\"../cmp/trait.PartialOrd.html\" title=\"trait std::cmp::PartialOrd\"><code>PartialOrd</code></a> elements of\nthis <a href=\"../iter/trait.Iterator.html\" title=\"trait std::iter::Iterator\"><code>Iterator</code></a> with those of another. The comparison works like short-circuit\nevaluation, returning a result without comparing the remaining elements.\nAs soon as an order can be determined, the evaluation stops and a result is returned. <a href=\"../iter/trait.Iterator.html#method.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.partial_cmp_by\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#3753-3757\">source</a><a href=\"#method.partial_cmp_by\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.partial_cmp_by\" class=\"fn\">partial_cmp_by</a>&lt;I, F&gt;(self, other: I, partial_cmp: F) -&gt; <a class=\"enum\" href=\"../option/enum.Option.html\" title=\"enum std::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"../cmp/enum.Ordering.html\" title=\"enum std::cmp::Ordering\">Ordering</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,\n    I: <a class=\"trait\" href=\"../iter/trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a>,\n    F: <a class=\"trait\" href=\"../ops/trait.FnMut.html\" title=\"trait std::ops::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>, &lt;I as <a class=\"trait\" href=\"../iter/trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"../iter/trait.IntoIterator.html#associatedtype.Item\" title=\"type std::iter::IntoIterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"../option/enum.Option.html\" title=\"enum std::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"../cmp/enum.Ordering.html\" title=\"enum std::cmp::Ordering\">Ordering</a>&gt;,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>iter_order_by</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/64295\">#64295</a>)</span></div></span><div class=\"docblock\"><a href=\"../cmp/trait.Ord.html#lexicographical-comparison\" title=\"trait std::cmp::Ord\">Lexicographically</a> compares the elements of this <a href=\"../iter/trait.Iterator.html\" title=\"trait std::iter::Iterator\"><code>Iterator</code></a> with those\nof another with respect to the specified comparison function. <a href=\"../iter/trait.Iterator.html#method.partial_cmp_by\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.eq\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#3787-3791\">source</a></span><a href=\"#method.eq\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.eq\" class=\"fn\">eq</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"primitive\" href=\"../primitive.bool.html\">bool</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"../iter/trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a>,\n    Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"../cmp/trait.PartialEq.html\" title=\"trait std::cmp::PartialEq\">PartialEq</a>&lt;&lt;I as <a class=\"trait\" href=\"../iter/trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"../iter/trait.IntoIterator.html#associatedtype.Item\" title=\"type std::iter::IntoIterator::Item\">Item</a>&gt;,\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\">Determines if the elements of this <a href=\"../iter/trait.Iterator.html\" title=\"trait std::iter::Iterator\"><code>Iterator</code></a> are equal to those of\nanother. <a href=\"../iter/trait.Iterator.html#method.eq\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.eq_by\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#3811-3815\">source</a><a href=\"#method.eq_by\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.eq_by\" class=\"fn\">eq_by</a>&lt;I, F&gt;(self, other: I, eq: F) -&gt; <a class=\"primitive\" href=\"../primitive.bool.html\">bool</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,\n    I: <a class=\"trait\" href=\"../iter/trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a>,\n    F: <a class=\"trait\" href=\"../ops/trait.FnMut.html\" title=\"trait std::ops::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>, &lt;I as <a class=\"trait\" href=\"../iter/trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"../iter/trait.IntoIterator.html#associatedtype.Item\" title=\"type std::iter::IntoIterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"../primitive.bool.html\">bool</a>,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>iter_order_by</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/64295\">#64295</a>)</span></div></span><div class=\"docblock\">Determines if the elements of this <a href=\"../iter/trait.Iterator.html\" title=\"trait std::iter::Iterator\"><code>Iterator</code></a> are equal to those of\nanother with respect to the specified equality function. <a href=\"../iter/trait.Iterator.html#method.eq_by\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#3844-3848\">source</a></span><a href=\"#method.ne\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.ne\" class=\"fn\">ne</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"primitive\" href=\"../primitive.bool.html\">bool</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"../iter/trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a>,\n    Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"../cmp/trait.PartialEq.html\" title=\"trait std::cmp::PartialEq\">PartialEq</a>&lt;&lt;I as <a class=\"trait\" href=\"../iter/trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"../iter/trait.IntoIterator.html#associatedtype.Item\" title=\"type std::iter::IntoIterator::Item\">Item</a>&gt;,\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\">Determines if the elements of this <a href=\"../iter/trait.Iterator.html\" title=\"trait std::iter::Iterator\"><code>Iterator</code></a> are not equal to those of\nanother. <a href=\"../iter/trait.Iterator.html#method.ne\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#3866-3870\">source</a></span><a href=\"#method.lt\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.lt\" class=\"fn\">lt</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"primitive\" href=\"../primitive.bool.html\">bool</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"../iter/trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a>,\n    Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"../cmp/trait.PartialOrd.html\" title=\"trait std::cmp::PartialOrd\">PartialOrd</a>&lt;&lt;I as <a class=\"trait\" href=\"../iter/trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"../iter/trait.IntoIterator.html#associatedtype.Item\" title=\"type std::iter::IntoIterator::Item\">Item</a>&gt;,\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\">Determines if the elements of this <a href=\"../iter/trait.Iterator.html\" title=\"trait std::iter::Iterator\"><code>Iterator</code></a> are <a href=\"../cmp/trait.Ord.html#lexicographical-comparison\" title=\"trait std::cmp::Ord\">lexicographically</a>\nless than those of another. <a href=\"../iter/trait.Iterator.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#3888-3892\">source</a></span><a href=\"#method.le\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.le\" class=\"fn\">le</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"primitive\" href=\"../primitive.bool.html\">bool</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"../iter/trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a>,\n    Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"../cmp/trait.PartialOrd.html\" title=\"trait std::cmp::PartialOrd\">PartialOrd</a>&lt;&lt;I as <a class=\"trait\" href=\"../iter/trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"../iter/trait.IntoIterator.html#associatedtype.Item\" title=\"type std::iter::IntoIterator::Item\">Item</a>&gt;,\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\">Determines if the elements of this <a href=\"../iter/trait.Iterator.html\" title=\"trait std::iter::Iterator\"><code>Iterator</code></a> are <a href=\"../cmp/trait.Ord.html#lexicographical-comparison\" title=\"trait std::cmp::Ord\">lexicographically</a>\nless or equal to those of another. <a href=\"../iter/trait.Iterator.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#3910-3914\">source</a></span><a href=\"#method.gt\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.gt\" class=\"fn\">gt</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"primitive\" href=\"../primitive.bool.html\">bool</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"../iter/trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a>,\n    Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"../cmp/trait.PartialOrd.html\" title=\"trait std::cmp::PartialOrd\">PartialOrd</a>&lt;&lt;I as <a class=\"trait\" href=\"../iter/trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"../iter/trait.IntoIterator.html#associatedtype.Item\" title=\"type std::iter::IntoIterator::Item\">Item</a>&gt;,\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\">Determines if the elements of this <a href=\"../iter/trait.Iterator.html\" title=\"trait std::iter::Iterator\"><code>Iterator</code></a> are <a href=\"../cmp/trait.Ord.html#lexicographical-comparison\" title=\"trait std::cmp::Ord\">lexicographically</a>\ngreater than those of another. <a href=\"../iter/trait.Iterator.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#3932-3936\">source</a></span><a href=\"#method.ge\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.ge\" class=\"fn\">ge</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"primitive\" href=\"../primitive.bool.html\">bool</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"../iter/trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a>,\n    Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"../cmp/trait.PartialOrd.html\" title=\"trait std::cmp::PartialOrd\">PartialOrd</a>&lt;&lt;I as <a class=\"trait\" href=\"../iter/trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"../iter/trait.IntoIterator.html#associatedtype.Item\" title=\"type std::iter::IntoIterator::Item\">Item</a>&gt;,\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\">Determines if the elements of this <a href=\"../iter/trait.Iterator.html\" title=\"trait std::iter::Iterator\"><code>Iterator</code></a> are <a href=\"../cmp/trait.Ord.html#lexicographical-comparison\" title=\"trait std::cmp::Ord\">lexicographically</a>\ngreater than or equal to those of another. <a href=\"../iter/trait.Iterator.html#method.ge\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.is_sorted_by\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#3993-3996\">source</a><a href=\"#method.is_sorted_by\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.is_sorted_by\" class=\"fn\">is_sorted_by</a>&lt;F&gt;(self, compare: F) -&gt; <a class=\"primitive\" href=\"../primitive.bool.html\">bool</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"../ops/trait.FnMut.html\" title=\"trait std::ops::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>, &amp;Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"../primitive.bool.html\">bool</a>,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>is_sorted</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/53485\">#53485</a>)</span></div></span><div class=\"docblock\">Checks if the elements of this iterator are sorted using the given comparator function. <a href=\"../iter/trait.Iterator.html#method.is_sorted_by\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.is_sorted_by_key\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/iterator.rs.html#4040-4044\">source</a><a href=\"#method.is_sorted_by_key\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.Iterator.html#method.is_sorted_by_key\" class=\"fn\">is_sorted_by_key</a>&lt;F, K&gt;(self, f: F) -&gt; <a class=\"primitive\" href=\"../primitive.bool.html\">bool</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"../ops/trait.FnMut.html\" title=\"trait std::ops::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a>) -&gt; K,\n    K: <a class=\"trait\" href=\"../cmp/trait.PartialOrd.html\" title=\"trait std::cmp::PartialOrd\">PartialOrd</a>,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>is_sorted</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/53485\">#53485</a>)</span></div></span><div class=\"docblock\">Checks if the elements of this iterator are sorted using the given key extraction\nfunction. <a href=\"../iter/trait.Iterator.html#method.is_sorted_by_key\">Read more</a></div></details></div></details><section id=\"impl-FusedIterator-for-RSplitTerminator%3C'a,+P%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.26.0\">1.26.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/str/iter.rs.html#845-861\">source</a></span><a href=\"#impl-FusedIterator-for-RSplitTerminator%3C'a,+P%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;'a, P&gt; <a class=\"trait\" href=\"../iter/trait.FusedIterator.html\" title=\"trait std::iter::FusedIterator\">FusedIterator</a> for <a class=\"struct\" href=\"struct.RSplitTerminator.html\" title=\"struct std::str::RSplitTerminator\">RSplitTerminator</a>&lt;'a, P&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"pattern/trait.Pattern.html\" title=\"trait std::str::pattern::Pattern\">Pattern</a>&lt;'a&gt;,\n    &lt;P as <a class=\"trait\" href=\"pattern/trait.Pattern.html\" title=\"trait std::str::pattern::Pattern\">Pattern</a>&lt;'a&gt;&gt;::<a class=\"associatedtype\" href=\"pattern/trait.Pattern.html#associatedtype.Searcher\" title=\"type std::str::pattern::Pattern::Searcher\">Searcher</a>: <a class=\"trait\" href=\"pattern/trait.ReverseSearcher.html\" title=\"trait std::str::pattern::ReverseSearcher\">ReverseSearcher</a>&lt;'a&gt;,</div></h3></section></div><h2 id=\"synthetic-implementations\" class=\"section-header\">Auto Trait Implementations<a href=\"#synthetic-implementations\" class=\"anchor\">Â§</a></h2><div id=\"synthetic-implementations-list\"><section id=\"impl-Freeze-for-RSplitTerminator%3C'a,+P%3E\" class=\"impl\"><a href=\"#impl-Freeze-for-RSplitTerminator%3C'a,+P%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;'a, P&gt; <a class=\"trait\" href=\"../marker/trait.Freeze.html\" title=\"trait std::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"struct.RSplitTerminator.html\" title=\"struct std::str::RSplitTerminator\">RSplitTerminator</a>&lt;'a, P&gt;<div class=\"where\">where\n    &lt;P as <a class=\"trait\" href=\"pattern/trait.Pattern.html\" title=\"trait std::str::pattern::Pattern\">Pattern</a>&lt;'a&gt;&gt;::<a class=\"associatedtype\" href=\"pattern/trait.Pattern.html#associatedtype.Searcher\" title=\"type std::str::pattern::Pattern::Searcher\">Searcher</a>: <a class=\"trait\" href=\"../marker/trait.Freeze.html\" title=\"trait std::marker::Freeze\">Freeze</a>,</div></h3></section><section id=\"impl-RefUnwindSafe-for-RSplitTerminator%3C'a,+P%3E\" class=\"impl\"><a href=\"#impl-RefUnwindSafe-for-RSplitTerminator%3C'a,+P%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;'a, P&gt; <a class=\"trait\" href=\"../panic/trait.RefUnwindSafe.html\" title=\"trait std::panic::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"struct\" href=\"struct.RSplitTerminator.html\" title=\"struct std::str::RSplitTerminator\">RSplitTerminator</a>&lt;'a, P&gt;<div class=\"where\">where\n    &lt;P as <a class=\"trait\" href=\"pattern/trait.Pattern.html\" title=\"trait std::str::pattern::Pattern\">Pattern</a>&lt;'a&gt;&gt;::<a class=\"associatedtype\" href=\"pattern/trait.Pattern.html#associatedtype.Searcher\" title=\"type std::str::pattern::Pattern::Searcher\">Searcher</a>: <a class=\"trait\" href=\"../panic/trait.RefUnwindSafe.html\" title=\"trait std::panic::RefUnwindSafe\">RefUnwindSafe</a>,</div></h3></section><section id=\"impl-Send-for-RSplitTerminator%3C'a,+P%3E\" class=\"impl\"><a href=\"#impl-Send-for-RSplitTerminator%3C'a,+P%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;'a, P&gt; <a class=\"trait\" href=\"../marker/trait.Send.html\" title=\"trait std::marker::Send\">Send</a> for <a class=\"struct\" href=\"struct.RSplitTerminator.html\" title=\"struct std::str::RSplitTerminator\">RSplitTerminator</a>&lt;'a, P&gt;<div class=\"where\">where\n    &lt;P as <a class=\"trait\" href=\"pattern/trait.Pattern.html\" title=\"trait std::str::pattern::Pattern\">Pattern</a>&lt;'a&gt;&gt;::<a class=\"associatedtype\" href=\"pattern/trait.Pattern.html#associatedtype.Searcher\" title=\"type std::str::pattern::Pattern::Searcher\">Searcher</a>: <a class=\"trait\" href=\"../marker/trait.Send.html\" title=\"trait std::marker::Send\">Send</a>,</div></h3></section><section id=\"impl-Sync-for-RSplitTerminator%3C'a,+P%3E\" class=\"impl\"><a href=\"#impl-Sync-for-RSplitTerminator%3C'a,+P%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;'a, P&gt; <a class=\"trait\" href=\"../marker/trait.Sync.html\" title=\"trait std::marker::Sync\">Sync</a> for <a class=\"struct\" href=\"struct.RSplitTerminator.html\" title=\"struct std::str::RSplitTerminator\">RSplitTerminator</a>&lt;'a, P&gt;<div class=\"where\">where\n    &lt;P as <a class=\"trait\" href=\"pattern/trait.Pattern.html\" title=\"trait std::str::pattern::Pattern\">Pattern</a>&lt;'a&gt;&gt;::<a class=\"associatedtype\" href=\"pattern/trait.Pattern.html#associatedtype.Searcher\" title=\"type std::str::pattern::Pattern::Searcher\">Searcher</a>: <a class=\"trait\" href=\"../marker/trait.Sync.html\" title=\"trait std::marker::Sync\">Sync</a>,</div></h3></section><section id=\"impl-Unpin-for-RSplitTerminator%3C'a,+P%3E\" class=\"impl\"><a href=\"#impl-Unpin-for-RSplitTerminator%3C'a,+P%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;'a, P&gt; <a class=\"trait\" href=\"../marker/trait.Unpin.html\" title=\"trait std::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"struct.RSplitTerminator.html\" title=\"struct std::str::RSplitTerminator\">RSplitTerminator</a>&lt;'a, P&gt;<div class=\"where\">where\n    &lt;P as <a class=\"trait\" href=\"pattern/trait.Pattern.html\" title=\"trait std::str::pattern::Pattern\">Pattern</a>&lt;'a&gt;&gt;::<a class=\"associatedtype\" href=\"pattern/trait.Pattern.html#associatedtype.Searcher\" title=\"type std::str::pattern::Pattern::Searcher\">Searcher</a>: <a class=\"trait\" href=\"../marker/trait.Unpin.html\" title=\"trait std::marker::Unpin\">Unpin</a>,</div></h3></section><section id=\"impl-UnwindSafe-for-RSplitTerminator%3C'a,+P%3E\" class=\"impl\"><a href=\"#impl-UnwindSafe-for-RSplitTerminator%3C'a,+P%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;'a, P&gt; <a class=\"trait\" href=\"../panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"struct.RSplitTerminator.html\" title=\"struct std::str::RSplitTerminator\">RSplitTerminator</a>&lt;'a, P&gt;<div class=\"where\">where\n    &lt;P as <a class=\"trait\" href=\"pattern/trait.Pattern.html\" title=\"trait std::str::pattern::Pattern\">Pattern</a>&lt;'a&gt;&gt;::<a class=\"associatedtype\" href=\"pattern/trait.Pattern.html#associatedtype.Searcher\" title=\"type std::str::pattern::Pattern::Searcher\">Searcher</a>: <a class=\"trait\" href=\"../panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a>,</div></h3></section></div><h2 id=\"blanket-implementations\" class=\"section-header\">Blanket Implementations<a href=\"#blanket-implementations\" class=\"anchor\">Â§</a></h2><div id=\"blanket-implementations-list\"><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-Any-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/any.rs.html#140\">source</a><a href=\"#impl-Any-for-T\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"../any/trait.Any.html\" title=\"trait std::any::Any\">Any</a> for T<div class=\"where\">where\n    T: 'static + ?<a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.type_id\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/any.rs.html#141\">source</a><a href=\"#method.type_id\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../any/trait.Any.html#tymethod.type_id\" class=\"fn\">type_id</a>(&amp;self) -&gt; <a class=\"struct\" href=\"../any/struct.TypeId.html\" title=\"struct std::any::TypeId\">TypeId</a></h4></section></summary><div class=\"docblock\">Gets the <code>TypeId</code> of <code>self</code>. <a href=\"../any/trait.Any.html#tymethod.type_id\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-Borrow%3CT%3E-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/borrow.rs.html#208\">source</a><a href=\"#impl-Borrow%3CT%3E-for-T\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"../borrow/trait.Borrow.html\" title=\"trait std::borrow::Borrow\">Borrow</a>&lt;T&gt; for T<div class=\"where\">where\n    T: ?<a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.borrow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/borrow.rs.html#210\">source</a><a href=\"#method.borrow\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../borrow/trait.Borrow.html#tymethod.borrow\" class=\"fn\">borrow</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"../primitive.reference.html\">&amp;T</a></h4></section></summary><div class=\"docblock\">Immutably borrows from an owned value. <a href=\"../borrow/trait.Borrow.html#tymethod.borrow\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-BorrowMut%3CT%3E-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/borrow.rs.html#216\">source</a><a href=\"#impl-BorrowMut%3CT%3E-for-T\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"../borrow/trait.BorrowMut.html\" title=\"trait std::borrow::BorrowMut\">BorrowMut</a>&lt;T&gt; for T<div class=\"where\">where\n    T: ?<a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.borrow_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/borrow.rs.html#217\">source</a><a href=\"#method.borrow_mut\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../borrow/trait.BorrowMut.html#tymethod.borrow_mut\" class=\"fn\">borrow_mut</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"../primitive.reference.html\">&amp;mut T</a></h4></section></summary><div class=\"docblock\">Mutably borrows from an owned value. <a href=\"../borrow/trait.BorrowMut.html#tymethod.borrow_mut\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-From%3CT%3E-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#765\">source</a><a href=\"#impl-From%3CT%3E-for-T\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"../convert/trait.From.html\" title=\"trait std::convert::From\">From</a>&lt;T&gt; for T</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#768\">source</a><a href=\"#method.from\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(t: T) -&gt; T</h4></section></summary><div class=\"docblock\"><p>Returns the argument unchanged.</p>\n</div></details></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-Into%3CU%3E-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#748-750\">source</a><a href=\"#impl-Into%3CU%3E-for-T\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"../convert/trait.Into.html\" title=\"trait std::convert::Into\">Into</a>&lt;U&gt; for T<div class=\"where\">where\n    U: <a class=\"trait\" href=\"../convert/trait.From.html\" title=\"trait std::convert::From\">From</a>&lt;T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#758\">source</a><a href=\"#method.into\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../convert/trait.Into.html#tymethod.into\" class=\"fn\">into</a>(self) -&gt; U</h4></section></summary><div class=\"docblock\"><p>Calls <code>U::from(self)</code>.</p>\n<p>That is, this conversion is whatever the implementation of\n<code><a href=\"../convert/trait.From.html\" title=\"trait std::convert::From\">From</a>&lt;T&gt; for U</code> chooses to do.</p>\n</div></details></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-IntoIterator-for-I\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/collect.rs.html#350\">source</a><a href=\"#impl-IntoIterator-for-I\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"trait\" href=\"../iter/trait.IntoIterator.html\" title=\"trait std::iter::IntoIterator\">IntoIterator</a> for I<div class=\"where\">where\n    I: <a class=\"trait\" href=\"../iter/trait.Iterator.html\" title=\"trait std::iter::Iterator\">Iterator</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open=\"\"><summary><section id=\"associatedtype.Item-1\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item-1\" class=\"anchor\">Â§</a><h4 class=\"code-header\">type <a href=\"../iter/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = &lt;I as <a class=\"trait\" href=\"../iter/trait.Iterator.html\" title=\"trait std::iter::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"../iter/trait.Iterator.html#associatedtype.Item\" title=\"type std::iter::Iterator::Item\">Item</a></h4></section></summary><div class=\"docblock\">The type of the elements being iterated over.</div></details><details class=\"toggle\" open=\"\"><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">Â§</a><h4 class=\"code-header\">type <a href=\"../iter/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = I</h4></section></summary><div class=\"docblock\">Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/collect.rs.html#355\">source</a><a href=\"#method.into_iter\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../iter/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; I</h4></section></summary><div class=\"docblock\">Creates an iterator from a value. <a href=\"../iter/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-ToOwned-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/alloc/borrow.rs.html#83-85\">source</a><a href=\"#impl-ToOwned-for-T\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"../borrow/trait.ToOwned.html\" title=\"trait std::borrow::ToOwned\">ToOwned</a> for T<div class=\"where\">where\n    T: <a class=\"trait\" href=\"../clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open=\"\"><summary><section id=\"associatedtype.Owned\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Owned\" class=\"anchor\">Â§</a><h4 class=\"code-header\">type <a href=\"../borrow/trait.ToOwned.html#associatedtype.Owned\" class=\"associatedtype\">Owned</a> = T</h4></section></summary><div class=\"docblock\">The resulting type after obtaining ownership.</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.to_owned\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/alloc/borrow.rs.html#88\">source</a><a href=\"#method.to_owned\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../borrow/trait.ToOwned.html#tymethod.to_owned\" class=\"fn\">to_owned</a>(&amp;self) -&gt; T</h4></section></summary><div class=\"docblock\">Creates owned data from borrowed data, usually by cloning. <a href=\"../borrow/trait.ToOwned.html#tymethod.to_owned\">Read more</a></div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.clone_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/alloc/borrow.rs.html#92\">source</a><a href=\"#method.clone_into\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../borrow/trait.ToOwned.html#method.clone_into\" class=\"fn\">clone_into</a>(&amp;self, target: <a class=\"primitive\" href=\"../primitive.reference.html\">&amp;mut T</a>)</h4></section></summary><div class=\"docblock\">Uses borrowed data to replace owned data, usually by cloning. <a href=\"../borrow/trait.ToOwned.html#method.clone_into\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-TryFrom%3CU%3E-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#805-807\">source</a><a href=\"#impl-TryFrom%3CU%3E-for-T\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"../convert/trait.TryFrom.html\" title=\"trait std::convert::TryFrom\">TryFrom</a>&lt;U&gt; for T<div class=\"where\">where\n    U: <a class=\"trait\" href=\"../convert/trait.Into.html\" title=\"trait std::convert::Into\">Into</a>&lt;T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open=\"\"><summary><section id=\"associatedtype.Error-1\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error-1\" class=\"anchor\">Â§</a><h4 class=\"code-header\">type <a href=\"../convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"../convert/enum.Infallible.html\" title=\"enum std::convert::Infallible\">Infallible</a></h4></section></summary><div class=\"docblock\">The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#812\">source</a><a href=\"#method.try_from\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(value: U) -&gt; <a class=\"enum\" href=\"../result/enum.Result.html\" title=\"enum std::result::Result\">Result</a>&lt;T, &lt;T as <a class=\"trait\" href=\"../convert/trait.TryFrom.html\" title=\"trait std::convert::TryFrom\">TryFrom</a>&lt;U&gt;&gt;::<a class=\"associatedtype\" href=\"../convert/trait.TryFrom.html#associatedtype.Error\" title=\"type std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\">Performs the conversion.</div></details></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-TryInto%3CU%3E-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#790-792\">source</a><a href=\"#impl-TryInto%3CU%3E-for-T\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"../convert/trait.TryInto.html\" title=\"trait std::convert::TryInto\">TryInto</a>&lt;U&gt; for T<div class=\"where\">where\n    U: <a class=\"trait\" href=\"../convert/trait.TryFrom.html\" title=\"trait std::convert::TryFrom\">TryFrom</a>&lt;T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open=\"\"><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">Â§</a><h4 class=\"code-header\">type <a href=\"../convert/trait.TryInto.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = &lt;U as <a class=\"trait\" href=\"../convert/trait.TryFrom.html\" title=\"trait std::convert::TryFrom\">TryFrom</a>&lt;T&gt;&gt;::<a class=\"associatedtype\" href=\"../convert/trait.TryFrom.html#associatedtype.Error\" title=\"type std::convert::TryFrom::Error\">Error</a></h4></section></summary><div class=\"docblock\">The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.try_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#797\">source</a><a href=\"#method.try_into\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"../convert/trait.TryInto.html#tymethod.try_into\" class=\"fn\">try_into</a>(self) -&gt; <a class=\"enum\" href=\"../result/enum.Result.html\" title=\"enum std::result::Result\">Result</a>&lt;U, &lt;U as <a class=\"trait\" href=\"../convert/trait.TryFrom.html\" title=\"trait std::convert::TryFrom\">TryFrom</a>&lt;T&gt;&gt;::<a class=\"associatedtype\" href=\"../convert/trait.TryFrom.html#associatedtype.Error\" title=\"type std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\">Performs the conversion.</div></details></div></details></div><script type=\"text/json\" id=\"notable-traits-data\">{\"ArrayChunks<Self, N>\":\"<h3>Notable traits for <code><a class=\\\"struct\\\" href=\\\"../iter/struct.ArrayChunks.html\\\" title=\\\"struct std::iter::ArrayChunks\\\">ArrayChunks</a>&lt;I, N&gt;</code></h3><pre><code><div class=\\\"where\\\">impl&lt;I, const N: <a class=\\\"primitive\\\" href=\\\"../primitive.usize.html\\\">usize</a>&gt; <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a> for <a class=\\\"struct\\\" href=\\\"../iter/struct.ArrayChunks.html\\\" title=\\\"struct std::iter::ArrayChunks\\\">ArrayChunks</a>&lt;I, N&gt;<div class=\\\"where\\\">where\\n    I: <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a>,</div></div><div class=\\\"where\\\">    type <a href=\\\"../iter/trait.Iterator.html#associatedtype.Item\\\" class=\\\"associatedtype\\\">Item</a> = [&lt;I as <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a>&gt;::<a class=\\\"associatedtype\\\" href=\\\"../iter/trait.Iterator.html#associatedtype.Item\\\" title=\\\"type std::iter::Iterator::Item\\\">Item</a>; <a class=\\\"primitive\\\" href=\\\"../primitive.array.html\\\">N</a>];</div>\",\"Chain<Self, <U as IntoIterator>::IntoIter>\":\"<h3>Notable traits for <code><a class=\\\"struct\\\" href=\\\"../iter/struct.Chain.html\\\" title=\\\"struct std::iter::Chain\\\">Chain</a>&lt;A, B&gt;</code></h3><pre><code><div class=\\\"where\\\">impl&lt;A, B&gt; <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a> for <a class=\\\"struct\\\" href=\\\"../iter/struct.Chain.html\\\" title=\\\"struct std::iter::Chain\\\">Chain</a>&lt;A, B&gt;<div class=\\\"where\\\">where\\n    A: <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a>,\\n    B: <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a>&lt;Item = &lt;A as <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a>&gt;::<a class=\\\"associatedtype\\\" href=\\\"../iter/trait.Iterator.html#associatedtype.Item\\\" title=\\\"type std::iter::Iterator::Item\\\">Item</a>&gt;,</div></div><div class=\\\"where\\\">    type <a href=\\\"../iter/trait.Iterator.html#associatedtype.Item\\\" class=\\\"associatedtype\\\">Item</a> = &lt;A as <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a>&gt;::<a class=\\\"associatedtype\\\" href=\\\"../iter/trait.Iterator.html#associatedtype.Item\\\" title=\\\"type std::iter::Iterator::Item\\\">Item</a>;</div>\",\"Cloned<Self>\":\"<h3>Notable traits for <code><a class=\\\"struct\\\" href=\\\"../iter/struct.Cloned.html\\\" title=\\\"struct std::iter::Cloned\\\">Cloned</a>&lt;I&gt;</code></h3><pre><code><div class=\\\"where\\\">impl&lt;'a, I, T&gt; <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a> for <a class=\\\"struct\\\" href=\\\"../iter/struct.Cloned.html\\\" title=\\\"struct std::iter::Cloned\\\">Cloned</a>&lt;I&gt;<div class=\\\"where\\\">where\\n    T: 'a + <a class=\\\"trait\\\" href=\\\"../clone/trait.Clone.html\\\" title=\\\"trait std::clone::Clone\\\">Clone</a>,\\n    I: <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a>&lt;Item = <a class=\\\"primitive\\\" href=\\\"../primitive.reference.html\\\">&amp;'a T</a>&gt;,</div></div><div class=\\\"where\\\">    type <a href=\\\"../iter/trait.Iterator.html#associatedtype.Item\\\" class=\\\"associatedtype\\\">Item</a> = T;</div>\",\"Copied<Self>\":\"<h3>Notable traits for <code><a class=\\\"struct\\\" href=\\\"../iter/struct.Copied.html\\\" title=\\\"struct std::iter::Copied\\\">Copied</a>&lt;I&gt;</code></h3><pre><code><div class=\\\"where\\\">impl&lt;'a, I, T&gt; <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a> for <a class=\\\"struct\\\" href=\\\"../iter/struct.Copied.html\\\" title=\\\"struct std::iter::Copied\\\">Copied</a>&lt;I&gt;<div class=\\\"where\\\">where\\n    T: 'a + <a class=\\\"trait\\\" href=\\\"../marker/trait.Copy.html\\\" title=\\\"trait std::marker::Copy\\\">Copy</a>,\\n    I: <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a>&lt;Item = <a class=\\\"primitive\\\" href=\\\"../primitive.reference.html\\\">&amp;'a T</a>&gt;,</div></div><div class=\\\"where\\\">    type <a href=\\\"../iter/trait.Iterator.html#associatedtype.Item\\\" class=\\\"associatedtype\\\">Item</a> = T;</div>\",\"Enumerate<Self>\":\"<h3>Notable traits for <code><a class=\\\"struct\\\" href=\\\"../iter/struct.Enumerate.html\\\" title=\\\"struct std::iter::Enumerate\\\">Enumerate</a>&lt;I&gt;</code></h3><pre><code><div class=\\\"where\\\">impl&lt;I&gt; <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a> for <a class=\\\"struct\\\" href=\\\"../iter/struct.Enumerate.html\\\" title=\\\"struct std::iter::Enumerate\\\">Enumerate</a>&lt;I&gt;<div class=\\\"where\\\">where\\n    I: <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a>,</div></div><div class=\\\"where\\\">    type <a href=\\\"../iter/trait.Iterator.html#associatedtype.Item\\\" class=\\\"associatedtype\\\">Item</a> = (<a class=\\\"primitive\\\" href=\\\"../primitive.usize.html\\\">usize</a>, &lt;I as <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a>&gt;::<a class=\\\"associatedtype\\\" href=\\\"../iter/trait.Iterator.html#associatedtype.Item\\\" title=\\\"type std::iter::Iterator::Item\\\">Item</a>);</div>\",\"Filter<Self, P>\":\"<h3>Notable traits for <code><a class=\\\"struct\\\" href=\\\"../iter/struct.Filter.html\\\" title=\\\"struct std::iter::Filter\\\">Filter</a>&lt;I, P&gt;</code></h3><pre><code><div class=\\\"where\\\">impl&lt;I, P&gt; <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a> for <a class=\\\"struct\\\" href=\\\"../iter/struct.Filter.html\\\" title=\\\"struct std::iter::Filter\\\">Filter</a>&lt;I, P&gt;<div class=\\\"where\\\">where\\n    I: <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a>,\\n    P: <a class=\\\"trait\\\" href=\\\"../ops/trait.FnMut.html\\\" title=\\\"trait std::ops::FnMut\\\">FnMut</a>(&amp;&lt;I as <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a>&gt;::<a class=\\\"associatedtype\\\" href=\\\"../iter/trait.Iterator.html#associatedtype.Item\\\" title=\\\"type std::iter::Iterator::Item\\\">Item</a>) -&gt; <a class=\\\"primitive\\\" href=\\\"../primitive.bool.html\\\">bool</a>,</div></div><div class=\\\"where\\\">    type <a href=\\\"../iter/trait.Iterator.html#associatedtype.Item\\\" class=\\\"associatedtype\\\">Item</a> = &lt;I as <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a>&gt;::<a class=\\\"associatedtype\\\" href=\\\"../iter/trait.Iterator.html#associatedtype.Item\\\" title=\\\"type std::iter::Iterator::Item\\\">Item</a>;</div>\",\"FilterMap<Self, F>\":\"<h3>Notable traits for <code><a class=\\\"struct\\\" href=\\\"../iter/struct.FilterMap.html\\\" title=\\\"struct std::iter::FilterMap\\\">FilterMap</a>&lt;I, F&gt;</code></h3><pre><code><div class=\\\"where\\\">impl&lt;B, I, F&gt; <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a> for <a class=\\\"struct\\\" href=\\\"../iter/struct.FilterMap.html\\\" title=\\\"struct std::iter::FilterMap\\\">FilterMap</a>&lt;I, F&gt;<div class=\\\"where\\\">where\\n    I: <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a>,\\n    F: <a class=\\\"trait\\\" href=\\\"../ops/trait.FnMut.html\\\" title=\\\"trait std::ops::FnMut\\\">FnMut</a>(&lt;I as <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a>&gt;::<a class=\\\"associatedtype\\\" href=\\\"../iter/trait.Iterator.html#associatedtype.Item\\\" title=\\\"type std::iter::Iterator::Item\\\">Item</a>) -&gt; <a class=\\\"enum\\\" href=\\\"../option/enum.Option.html\\\" title=\\\"enum std::option::Option\\\">Option</a>&lt;B&gt;,</div></div><div class=\\\"where\\\">    type <a href=\\\"../iter/trait.Iterator.html#associatedtype.Item\\\" class=\\\"associatedtype\\\">Item</a> = B;</div>\",\"FlatMap<Self, U, F>\":\"<h3>Notable traits for <code><a class=\\\"struct\\\" href=\\\"../iter/struct.FlatMap.html\\\" title=\\\"struct std::iter::FlatMap\\\">FlatMap</a>&lt;I, U, F&gt;</code></h3><pre><code><div class=\\\"where\\\">impl&lt;I, U, F&gt; <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a> for <a class=\\\"struct\\\" href=\\\"../iter/struct.FlatMap.html\\\" title=\\\"struct std::iter::FlatMap\\\">FlatMap</a>&lt;I, U, F&gt;<div class=\\\"where\\\">where\\n    I: <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a>,\\n    U: <a class=\\\"trait\\\" href=\\\"../iter/trait.IntoIterator.html\\\" title=\\\"trait std::iter::IntoIterator\\\">IntoIterator</a>,\\n    F: <a class=\\\"trait\\\" href=\\\"../ops/trait.FnMut.html\\\" title=\\\"trait std::ops::FnMut\\\">FnMut</a>(&lt;I as <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a>&gt;::<a class=\\\"associatedtype\\\" href=\\\"../iter/trait.Iterator.html#associatedtype.Item\\\" title=\\\"type std::iter::Iterator::Item\\\">Item</a>) -&gt; U,</div></div><div class=\\\"where\\\">    type <a href=\\\"../iter/trait.Iterator.html#associatedtype.Item\\\" class=\\\"associatedtype\\\">Item</a> = &lt;U as <a class=\\\"trait\\\" href=\\\"../iter/trait.IntoIterator.html\\\" title=\\\"trait std::iter::IntoIterator\\\">IntoIterator</a>&gt;::<a class=\\\"associatedtype\\\" href=\\\"../iter/trait.IntoIterator.html#associatedtype.Item\\\" title=\\\"type std::iter::IntoIterator::Item\\\">Item</a>;</div>\",\"Fuse<Self>\":\"<h3>Notable traits for <code><a class=\\\"struct\\\" href=\\\"../iter/struct.Fuse.html\\\" title=\\\"struct std::iter::Fuse\\\">Fuse</a>&lt;I&gt;</code></h3><pre><code><div class=\\\"where\\\">impl&lt;I&gt; <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a> for <a class=\\\"struct\\\" href=\\\"../iter/struct.Fuse.html\\\" title=\\\"struct std::iter::Fuse\\\">Fuse</a>&lt;I&gt;<div class=\\\"where\\\">where\\n    I: <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a>,</div></div><div class=\\\"where\\\">    type <a href=\\\"../iter/trait.Iterator.html#associatedtype.Item\\\" class=\\\"associatedtype\\\">Item</a> = &lt;I as <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a>&gt;::<a class=\\\"associatedtype\\\" href=\\\"../iter/trait.Iterator.html#associatedtype.Item\\\" title=\\\"type std::iter::Iterator::Item\\\">Item</a>;</div>\",\"Inspect<Self, F>\":\"<h3>Notable traits for <code><a class=\\\"struct\\\" href=\\\"../iter/struct.Inspect.html\\\" title=\\\"struct std::iter::Inspect\\\">Inspect</a>&lt;I, F&gt;</code></h3><pre><code><div class=\\\"where\\\">impl&lt;I, F&gt; <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a> for <a class=\\\"struct\\\" href=\\\"../iter/struct.Inspect.html\\\" title=\\\"struct std::iter::Inspect\\\">Inspect</a>&lt;I, F&gt;<div class=\\\"where\\\">where\\n    I: <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a>,\\n    F: <a class=\\\"trait\\\" href=\\\"../ops/trait.FnMut.html\\\" title=\\\"trait std::ops::FnMut\\\">FnMut</a>(&amp;&lt;I as <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a>&gt;::<a class=\\\"associatedtype\\\" href=\\\"../iter/trait.Iterator.html#associatedtype.Item\\\" title=\\\"type std::iter::Iterator::Item\\\">Item</a>),</div></div><div class=\\\"where\\\">    type <a href=\\\"../iter/trait.Iterator.html#associatedtype.Item\\\" class=\\\"associatedtype\\\">Item</a> = &lt;I as <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a>&gt;::<a class=\\\"associatedtype\\\" href=\\\"../iter/trait.Iterator.html#associatedtype.Item\\\" title=\\\"type std::iter::Iterator::Item\\\">Item</a>;</div>\",\"IntersperseWith<Self, G>\":\"<h3>Notable traits for <code><a class=\\\"struct\\\" href=\\\"../iter/struct.IntersperseWith.html\\\" title=\\\"struct std::iter::IntersperseWith\\\">IntersperseWith</a>&lt;I, G&gt;</code></h3><pre><code><div class=\\\"where\\\">impl&lt;I, G&gt; <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a> for <a class=\\\"struct\\\" href=\\\"../iter/struct.IntersperseWith.html\\\" title=\\\"struct std::iter::IntersperseWith\\\">IntersperseWith</a>&lt;I, G&gt;<div class=\\\"where\\\">where\\n    I: <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a>,\\n    G: <a class=\\\"trait\\\" href=\\\"../ops/trait.FnMut.html\\\" title=\\\"trait std::ops::FnMut\\\">FnMut</a>() -&gt; &lt;I as <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a>&gt;::<a class=\\\"associatedtype\\\" href=\\\"../iter/trait.Iterator.html#associatedtype.Item\\\" title=\\\"type std::iter::Iterator::Item\\\">Item</a>,</div></div><div class=\\\"where\\\">    type <a href=\\\"../iter/trait.Iterator.html#associatedtype.Item\\\" class=\\\"associatedtype\\\">Item</a> = &lt;I as <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a>&gt;::<a class=\\\"associatedtype\\\" href=\\\"../iter/trait.Iterator.html#associatedtype.Item\\\" title=\\\"type std::iter::Iterator::Item\\\">Item</a>;</div>\",\"Map<Self, F>\":\"<h3>Notable traits for <code><a class=\\\"struct\\\" href=\\\"../iter/struct.Map.html\\\" title=\\\"struct std::iter::Map\\\">Map</a>&lt;I, F&gt;</code></h3><pre><code><div class=\\\"where\\\">impl&lt;B, I, F&gt; <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a> for <a class=\\\"struct\\\" href=\\\"../iter/struct.Map.html\\\" title=\\\"struct std::iter::Map\\\">Map</a>&lt;I, F&gt;<div class=\\\"where\\\">where\\n    I: <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a>,\\n    F: <a class=\\\"trait\\\" href=\\\"../ops/trait.FnMut.html\\\" title=\\\"trait std::ops::FnMut\\\">FnMut</a>(&lt;I as <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a>&gt;::<a class=\\\"associatedtype\\\" href=\\\"../iter/trait.Iterator.html#associatedtype.Item\\\" title=\\\"type std::iter::Iterator::Item\\\">Item</a>) -&gt; B,</div></div><div class=\\\"where\\\">    type <a href=\\\"../iter/trait.Iterator.html#associatedtype.Item\\\" class=\\\"associatedtype\\\">Item</a> = B;</div>\",\"MapWhile<Self, P>\":\"<h3>Notable traits for <code><a class=\\\"struct\\\" href=\\\"../iter/struct.MapWhile.html\\\" title=\\\"struct std::iter::MapWhile\\\">MapWhile</a>&lt;I, P&gt;</code></h3><pre><code><div class=\\\"where\\\">impl&lt;B, I, P&gt; <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a> for <a class=\\\"struct\\\" href=\\\"../iter/struct.MapWhile.html\\\" title=\\\"struct std::iter::MapWhile\\\">MapWhile</a>&lt;I, P&gt;<div class=\\\"where\\\">where\\n    I: <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a>,\\n    P: <a class=\\\"trait\\\" href=\\\"../ops/trait.FnMut.html\\\" title=\\\"trait std::ops::FnMut\\\">FnMut</a>(&lt;I as <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a>&gt;::<a class=\\\"associatedtype\\\" href=\\\"../iter/trait.Iterator.html#associatedtype.Item\\\" title=\\\"type std::iter::Iterator::Item\\\">Item</a>) -&gt; <a class=\\\"enum\\\" href=\\\"../option/enum.Option.html\\\" title=\\\"enum std::option::Option\\\">Option</a>&lt;B&gt;,</div></div><div class=\\\"where\\\">    type <a href=\\\"../iter/trait.Iterator.html#associatedtype.Item\\\" class=\\\"associatedtype\\\">Item</a> = B;</div>\",\"MapWindows<Self, F, N>\":\"<h3>Notable traits for <code><a class=\\\"struct\\\" href=\\\"../iter/struct.MapWindows.html\\\" title=\\\"struct std::iter::MapWindows\\\">MapWindows</a>&lt;I, F, N&gt;</code></h3><pre><code><div class=\\\"where\\\">impl&lt;I, F, R, const N: <a class=\\\"primitive\\\" href=\\\"../primitive.usize.html\\\">usize</a>&gt; <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a> for <a class=\\\"struct\\\" href=\\\"../iter/struct.MapWindows.html\\\" title=\\\"struct std::iter::MapWindows\\\">MapWindows</a>&lt;I, F, N&gt;<div class=\\\"where\\\">where\\n    I: <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a>,\\n    F: <a class=\\\"trait\\\" href=\\\"../ops/trait.FnMut.html\\\" title=\\\"trait std::ops::FnMut\\\">FnMut</a>(&amp;[&lt;I as <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a>&gt;::<a class=\\\"associatedtype\\\" href=\\\"../iter/trait.Iterator.html#associatedtype.Item\\\" title=\\\"type std::iter::Iterator::Item\\\">Item</a>; <a class=\\\"primitive\\\" href=\\\"../primitive.array.html\\\">N</a>]) -&gt; R,</div></div><div class=\\\"where\\\">    type <a href=\\\"../iter/trait.Iterator.html#associatedtype.Item\\\" class=\\\"associatedtype\\\">Item</a> = R;</div>\",\"Peekable<Self>\":\"<h3>Notable traits for <code><a class=\\\"struct\\\" href=\\\"../iter/struct.Peekable.html\\\" title=\\\"struct std::iter::Peekable\\\">Peekable</a>&lt;I&gt;</code></h3><pre><code><div class=\\\"where\\\">impl&lt;I&gt; <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a> for <a class=\\\"struct\\\" href=\\\"../iter/struct.Peekable.html\\\" title=\\\"struct std::iter::Peekable\\\">Peekable</a>&lt;I&gt;<div class=\\\"where\\\">where\\n    I: <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a>,</div></div><div class=\\\"where\\\">    type <a href=\\\"../iter/trait.Iterator.html#associatedtype.Item\\\" class=\\\"associatedtype\\\">Item</a> = &lt;I as <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a>&gt;::<a class=\\\"associatedtype\\\" href=\\\"../iter/trait.Iterator.html#associatedtype.Item\\\" title=\\\"type std::iter::Iterator::Item\\\">Item</a>;</div>\",\"RSplitTerminator<'a, P>\":\"<h3>Notable traits for <code><a class=\\\"struct\\\" href=\\\"struct.RSplitTerminator.html\\\" title=\\\"struct std::str::RSplitTerminator\\\">RSplitTerminator</a>&lt;'a, P&gt;</code></h3><pre><code><div class=\\\"where\\\">impl&lt;'a, P&gt; <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a> for <a class=\\\"struct\\\" href=\\\"struct.RSplitTerminator.html\\\" title=\\\"struct std::str::RSplitTerminator\\\">RSplitTerminator</a>&lt;'a, P&gt;<div class=\\\"where\\\">where\\n    P: <a class=\\\"trait\\\" href=\\\"pattern/trait.Pattern.html\\\" title=\\\"trait std::str::pattern::Pattern\\\">Pattern</a>&lt;'a&gt;,\\n    &lt;P as <a class=\\\"trait\\\" href=\\\"pattern/trait.Pattern.html\\\" title=\\\"trait std::str::pattern::Pattern\\\">Pattern</a>&lt;'a&gt;&gt;::<a class=\\\"associatedtype\\\" href=\\\"pattern/trait.Pattern.html#associatedtype.Searcher\\\" title=\\\"type std::str::pattern::Pattern::Searcher\\\">Searcher</a>: <a class=\\\"trait\\\" href=\\\"pattern/trait.ReverseSearcher.html\\\" title=\\\"trait std::str::pattern::ReverseSearcher\\\">ReverseSearcher</a>&lt;'a&gt;,</div></div><div class=\\\"where\\\">    type <a href=\\\"../iter/trait.Iterator.html#associatedtype.Item\\\" class=\\\"associatedtype\\\">Item</a> = &amp;'a <a class=\\\"primitive\\\" href=\\\"../primitive.str.html\\\">str</a>;</div>\",\"Scan<Self, St, F>\":\"<h3>Notable traits for <code><a class=\\\"struct\\\" href=\\\"../iter/struct.Scan.html\\\" title=\\\"struct std::iter::Scan\\\">Scan</a>&lt;I, St, F&gt;</code></h3><pre><code><div class=\\\"where\\\">impl&lt;B, I, St, F&gt; <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a> for <a class=\\\"struct\\\" href=\\\"../iter/struct.Scan.html\\\" title=\\\"struct std::iter::Scan\\\">Scan</a>&lt;I, St, F&gt;<div class=\\\"where\\\">where\\n    I: <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a>,\\n    F: <a class=\\\"trait\\\" href=\\\"../ops/trait.FnMut.html\\\" title=\\\"trait std::ops::FnMut\\\">FnMut</a>(<a class=\\\"primitive\\\" href=\\\"../primitive.reference.html\\\">&amp;mut St</a>, &lt;I as <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a>&gt;::<a class=\\\"associatedtype\\\" href=\\\"../iter/trait.Iterator.html#associatedtype.Item\\\" title=\\\"type std::iter::Iterator::Item\\\">Item</a>) -&gt; <a class=\\\"enum\\\" href=\\\"../option/enum.Option.html\\\" title=\\\"enum std::option::Option\\\">Option</a>&lt;B&gt;,</div></div><div class=\\\"where\\\">    type <a href=\\\"../iter/trait.Iterator.html#associatedtype.Item\\\" class=\\\"associatedtype\\\">Item</a> = B;</div>\",\"Skip<Self>\":\"<h3>Notable traits for <code><a class=\\\"struct\\\" href=\\\"../iter/struct.Skip.html\\\" title=\\\"struct std::iter::Skip\\\">Skip</a>&lt;I&gt;</code></h3><pre><code><div class=\\\"where\\\">impl&lt;I&gt; <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a> for <a class=\\\"struct\\\" href=\\\"../iter/struct.Skip.html\\\" title=\\\"struct std::iter::Skip\\\">Skip</a>&lt;I&gt;<div class=\\\"where\\\">where\\n    I: <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a>,</div></div><div class=\\\"where\\\">    type <a href=\\\"../iter/trait.Iterator.html#associatedtype.Item\\\" class=\\\"associatedtype\\\">Item</a> = &lt;I as <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a>&gt;::<a class=\\\"associatedtype\\\" href=\\\"../iter/trait.Iterator.html#associatedtype.Item\\\" title=\\\"type std::iter::Iterator::Item\\\">Item</a>;</div>\",\"SkipWhile<Self, P>\":\"<h3>Notable traits for <code><a class=\\\"struct\\\" href=\\\"../iter/struct.SkipWhile.html\\\" title=\\\"struct std::iter::SkipWhile\\\">SkipWhile</a>&lt;I, P&gt;</code></h3><pre><code><div class=\\\"where\\\">impl&lt;I, P&gt; <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a> for <a class=\\\"struct\\\" href=\\\"../iter/struct.SkipWhile.html\\\" title=\\\"struct std::iter::SkipWhile\\\">SkipWhile</a>&lt;I, P&gt;<div class=\\\"where\\\">where\\n    I: <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a>,\\n    P: <a class=\\\"trait\\\" href=\\\"../ops/trait.FnMut.html\\\" title=\\\"trait std::ops::FnMut\\\">FnMut</a>(&amp;&lt;I as <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a>&gt;::<a class=\\\"associatedtype\\\" href=\\\"../iter/trait.Iterator.html#associatedtype.Item\\\" title=\\\"type std::iter::Iterator::Item\\\">Item</a>) -&gt; <a class=\\\"primitive\\\" href=\\\"../primitive.bool.html\\\">bool</a>,</div></div><div class=\\\"where\\\">    type <a href=\\\"../iter/trait.Iterator.html#associatedtype.Item\\\" class=\\\"associatedtype\\\">Item</a> = &lt;I as <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a>&gt;::<a class=\\\"associatedtype\\\" href=\\\"../iter/trait.Iterator.html#associatedtype.Item\\\" title=\\\"type std::iter::Iterator::Item\\\">Item</a>;</div>\",\"StepBy<Self>\":\"<h3>Notable traits for <code><a class=\\\"struct\\\" href=\\\"../iter/struct.StepBy.html\\\" title=\\\"struct std::iter::StepBy\\\">StepBy</a>&lt;I&gt;</code></h3><pre><code><div class=\\\"where\\\">impl&lt;I&gt; <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a> for <a class=\\\"struct\\\" href=\\\"../iter/struct.StepBy.html\\\" title=\\\"struct std::iter::StepBy\\\">StepBy</a>&lt;I&gt;<div class=\\\"where\\\">where\\n    I: <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a>,</div></div><div class=\\\"where\\\">    type <a href=\\\"../iter/trait.Iterator.html#associatedtype.Item\\\" class=\\\"associatedtype\\\">Item</a> = &lt;I as <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a>&gt;::<a class=\\\"associatedtype\\\" href=\\\"../iter/trait.Iterator.html#associatedtype.Item\\\" title=\\\"type std::iter::Iterator::Item\\\">Item</a>;</div>\",\"Take<Self>\":\"<h3>Notable traits for <code><a class=\\\"struct\\\" href=\\\"../iter/struct.Take.html\\\" title=\\\"struct std::iter::Take\\\">Take</a>&lt;I&gt;</code></h3><pre><code><div class=\\\"where\\\">impl&lt;I&gt; <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a> for <a class=\\\"struct\\\" href=\\\"../iter/struct.Take.html\\\" title=\\\"struct std::iter::Take\\\">Take</a>&lt;I&gt;<div class=\\\"where\\\">where\\n    I: <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a>,</div></div><div class=\\\"where\\\">    type <a href=\\\"../iter/trait.Iterator.html#associatedtype.Item\\\" class=\\\"associatedtype\\\">Item</a> = &lt;I as <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a>&gt;::<a class=\\\"associatedtype\\\" href=\\\"../iter/trait.Iterator.html#associatedtype.Item\\\" title=\\\"type std::iter::Iterator::Item\\\">Item</a>;</div>\",\"TakeWhile<Self, P>\":\"<h3>Notable traits for <code><a class=\\\"struct\\\" href=\\\"../iter/struct.TakeWhile.html\\\" title=\\\"struct std::iter::TakeWhile\\\">TakeWhile</a>&lt;I, P&gt;</code></h3><pre><code><div class=\\\"where\\\">impl&lt;I, P&gt; <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a> for <a class=\\\"struct\\\" href=\\\"../iter/struct.TakeWhile.html\\\" title=\\\"struct std::iter::TakeWhile\\\">TakeWhile</a>&lt;I, P&gt;<div class=\\\"where\\\">where\\n    I: <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a>,\\n    P: <a class=\\\"trait\\\" href=\\\"../ops/trait.FnMut.html\\\" title=\\\"trait std::ops::FnMut\\\">FnMut</a>(&amp;&lt;I as <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a>&gt;::<a class=\\\"associatedtype\\\" href=\\\"../iter/trait.Iterator.html#associatedtype.Item\\\" title=\\\"type std::iter::Iterator::Item\\\">Item</a>) -&gt; <a class=\\\"primitive\\\" href=\\\"../primitive.bool.html\\\">bool</a>,</div></div><div class=\\\"where\\\">    type <a href=\\\"../iter/trait.Iterator.html#associatedtype.Item\\\" class=\\\"associatedtype\\\">Item</a> = &lt;I as <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a>&gt;::<a class=\\\"associatedtype\\\" href=\\\"../iter/trait.Iterator.html#associatedtype.Item\\\" title=\\\"type std::iter::Iterator::Item\\\">Item</a>;</div>\",\"Zip<Self, <U as IntoIterator>::IntoIter>\":\"<h3>Notable traits for <code><a class=\\\"struct\\\" href=\\\"../iter/struct.Zip.html\\\" title=\\\"struct std::iter::Zip\\\">Zip</a>&lt;A, B&gt;</code></h3><pre><code><div class=\\\"where\\\">impl&lt;A, B&gt; <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a> for <a class=\\\"struct\\\" href=\\\"../iter/struct.Zip.html\\\" title=\\\"struct std::iter::Zip\\\">Zip</a>&lt;A, B&gt;<div class=\\\"where\\\">where\\n    A: <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a>,\\n    B: <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a>,</div></div><div class=\\\"where\\\">    type <a href=\\\"../iter/trait.Iterator.html#associatedtype.Item\\\" class=\\\"associatedtype\\\">Item</a> = (&lt;A as <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a>&gt;::<a class=\\\"associatedtype\\\" href=\\\"../iter/trait.Iterator.html#associatedtype.Item\\\" title=\\\"type std::iter::Iterator::Item\\\">Item</a>, &lt;B as <a class=\\\"trait\\\" href=\\\"../iter/trait.Iterator.html\\\" title=\\\"trait std::iter::Iterator\\\">Iterator</a>&gt;::<a class=\\\"associatedtype\\\" href=\\\"../iter/trait.Iterator.html#associatedtype.Item\\\" title=\\\"type std::iter::Iterator::Item\\\">Item</a>);</div>\"}</script></section></div></main></body></html>",
	"crawlDate": "2024-07-28T05:12:09.319Z"
}