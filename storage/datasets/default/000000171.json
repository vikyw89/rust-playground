{
	"title": "Registry Index - The Cargo Book",
	"url": "https://doc.rust-lang.org/cargo/reference/registry-index.html",
	"markdown": "# Registry Index - The Cargo Book\n\n## [Index Format](#index-format)\n\nThe following defines the format of the index. New features are occasionally added, which are only understood starting with the version of Cargo that introduced them. Older versions of Cargo may not be able to use packages that make use of new features. However, the format for older packages should not change, so older versions of Cargo should be able to use them.\n\n## [Index Configuration](#index-configuration)\n\nThe root of the index contains a file named `config.json` which contains JSON information used by Cargo for accessing the registry. This is an example of what the [crates.io](https://crates.io/) config file looks like:\n\n```javascript\n{\n    \"dl\": \"https://crates.io/api/v1/crates\",\n    \"api\": \"https://crates.io\"\n}\n\n```\n\nThe keys are:\n\n-   `dl`: This is the URL for downloading crates listed in the index. The value may have the following markers which will be replaced with their corresponding value:\n    \n    -   `{crate}`: The name of crate.\n    -   `{version}`: The crate version.\n    -   `{prefix}`: A directory prefix computed from the crate name. For example, a crate named `cargo` has a prefix of `ca/rg`. See below for details.\n    -   `{lowerprefix}`: Lowercase variant of `{prefix}`.\n    -   `{sha256-checksum}`: The crate’s sha256 checksum.\n    \n    If none of the markers are present, then the value `/{crate}/{version}/download` is appended to the end.\n    \n-   `api`: This is the base URL for the web API. This key is optional, but if it is not specified, commands such as [`cargo publish`](../commands/cargo-publish.html) will not work. The web API is described below.\n    \n-   `auth-required`: indicates whether this is a private registry that requires all operations to be authenticated including API requests, crate downloads and sparse index updates.\n    \n\n## [Download Endpoint](#download-endpoint)\n\nThe download endpoint should send the `.crate` file for the requested package. Cargo supports https, http, and file URLs, HTTP redirects, HTTP1 and HTTP2. The exact specifics of TLS support depend on the platform that Cargo is running on, the version of Cargo, and how it was compiled.\n\nIf `auth-required: true` is set in `config.json`, the `Authorization` header will be included with http(s) download requests.\n\n## [Index files](#index-files)\n\nThe rest of the index repository contains one file for each package, where the filename is the name of the package in lowercase. Each version of the package has a separate line in the file. The files are organized in a tier of directories:\n\n-   Packages with 1 character names are placed in a directory named `1`.\n-   Packages with 2 character names are placed in a directory named `2`.\n-   Packages with 3 character names are placed in the directory `3/{first-character}` where `{first-character}` is the first character of the package name.\n-   All other packages are stored in directories named `{first-two}/{second-two}` where the top directory is the first two characters of the package name, and the next subdirectory is the third and fourth characters of the package name. For example, `cargo` would be stored in a file named `ca/rg/cargo`.\n\n> Note: Although the index filenames are in lowercase, the fields that contain package names in `Cargo.toml` and the index JSON data are case-sensitive and may contain upper and lower case characters.\n\nThe directory name above is calculated based on the package name converted to lowercase; it is represented by the marker `{lowerprefix}`. When the original package name is used without case conversion, the resulting directory name is represented by the marker `{prefix}`. For example, the package `MyCrate` would have a `{prefix}` of `My/Cr` and a `{lowerprefix}` of `my/cr`. In general, using `{prefix}` is recommended over `{lowerprefix}`, but there are pros and cons to each choice. Using `{prefix}` on case-insensitive filesystems results in (harmless-but-inelegant) directory aliasing. For example, `crate` and `CrateTwo` have `{prefix}` values of `cr/at` and `Cr/at`; these are distinct on Unix machines but alias to the same directory on Windows. Using directories with normalized case avoids aliasing, but on case-sensitive filesystems it’s harder to support older versions of Cargo that lack `{prefix}`/`{lowerprefix}`. For example, nginx rewrite rules can easily construct `{prefix}` but can’t perform case-conversion to construct `{lowerprefix}`.\n\n## [Name restrictions](#name-restrictions)\n\nRegistries should consider enforcing limitations on package names added to their index. Cargo itself allows names with any [alphanumeric](about:blank/std/primitive.char.html#method.is_alphanumeric), `-`, or `_` characters. [crates.io](https://crates.io/) imposes its own limitations, including the following:\n\n-   Only allows ASCII characters.\n-   Only alphanumeric, `-`, and `_` characters.\n-   First character must be alphabetic.\n-   Case-insensitive collision detection.\n-   Prevent differences of `-` vs `_`.\n-   Under a specific length (max 64).\n-   Rejects reserved names, such as Windows special filenames like “nul”.\n\nRegistries should consider incorporating similar restrictions, and consider the security implications, such as [IDN homograph attacks](https://en.wikipedia.org/wiki/IDN_homograph_attack) and other concerns in [UTR36](https://www.unicode.org/reports/tr36/) and [UTS39](https://www.unicode.org/reports/tr39/).\n\n## [Version uniqueness](#version-uniqueness)\n\nIndexes _must_ ensure that each version only appears once for each package. This includes ignoring SemVer build metadata. For example, the index must _not_ contain two entries with a version `1.0.7` and `1.0.7+extra`.\n\n## [JSON schema](#json-schema)\n\nEach line in a package file contains a JSON object that describes a published version of the package. The following is a pretty-printed example with comments explaining the format of the entry.\n\n```javascript\n{\n    // The name of the package.\n    // This must only contain alphanumeric, `-`, or `_` characters.\n    \"name\": \"foo\",\n    // The version of the package this row is describing.\n    // This must be a valid version number according to the Semantic\n    // Versioning 2.0.0 spec at https://semver.org/.\n    \"vers\": \"0.1.0\",\n    // Array of direct dependencies of the package.\n    \"deps\": [\n        {\n            // Name of the dependency.\n            // If the dependency is renamed from the original package name,\n            // this is the new name. The original package name is stored in\n            // the `package` field.\n            \"name\": \"rand\",\n            // The SemVer requirement for this dependency.\n            // This must be a valid version requirement defined at\n            // https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html.\n            \"req\": \"^0.6\",\n            // Array of features (as strings) enabled for this dependency.\n            \"features\": [\"i128_support\"],\n            // Boolean of whether or not this is an optional dependency.\n            \"optional\": false,\n            // Boolean of whether or not default features are enabled.\n            \"default_features\": true,\n            // The target platform for the dependency.\n            // null if not a target dependency.\n            // Otherwise, a string such as \"cfg(windows)\".\n            \"target\": null,\n            // The dependency kind.\n            // \"dev\", \"build\", or \"normal\".\n            // Note: this is a required field, but a small number of entries\n            // exist in the crates.io index with either a missing or null\n            // `kind` field due to implementation bugs.\n            \"kind\": \"normal\",\n            // The URL of the index of the registry where this dependency is\n            // from as a string. If not specified or null, it is assumed the\n            // dependency is in the current registry.\n            \"registry\": null,\n            // If the dependency is renamed, this is a string of the actual\n            // package name. If not specified or null, this dependency is not\n            // renamed.\n            \"package\": null,\n        }\n    ],\n    // A SHA256 checksum of the `.crate` file.\n    \"cksum\": \"d867001db0e2b6e0496f9fac96930e2d42233ecd3ca0413e0753d4c7695d289c\",\n    // Set of features defined for the package.\n    // Each feature maps to an array of features or dependencies it enables.\n    \"features\": {\n        \"extras\": [\"rand/simd_support\"]\n    },\n    // Boolean of whether or not this version has been yanked.\n    \"yanked\": false,\n    // The `links` string value from the package's manifest, or null if not\n    // specified. This field is optional and defaults to null.\n    \"links\": null,\n    // An unsigned 32-bit integer value indicating the schema version of this\n    // entry.\n    //\n    // If this not specified, it should be interpreted as the default of 1.\n    //\n    // Cargo (starting with version 1.51) will ignore versions it does not\n    // recognize. This provides a method to safely introduce changes to index\n    // entries and allow older versions of cargo to ignore newer entries it\n    // doesn't understand. Versions older than 1.51 ignore this field, and\n    // thus may misinterpret the meaning of the index entry.\n    //\n    // The current values are:\n    //\n    // * 1: The schema as documented here, not including newer additions.\n    //      This is honored in Rust version 1.51 and newer.\n    // * 2: The addition of the `features2` field.\n    //      This is honored in Rust version 1.60 and newer.\n    \"v\": 2,\n    // This optional field contains features with new, extended syntax.\n    // Specifically, namespaced features (`dep:`) and weak dependencies\n    // (`pkg?/feat`).\n    //\n    // This is separated from `features` because versions older than 1.19\n    // will fail to load due to not being able to parse the new syntax, even\n    // with a `Cargo.lock` file.\n    //\n    // Cargo will merge any values listed here with the \"features\" field.\n    //\n    // If this field is included, the \"v\" field should be set to at least 2.\n    //\n    // Registries are not required to use this field for extended feature\n    // syntax, they are allowed to include those in the \"features\" field.\n    // Using this is only necessary if the registry wants to support cargo\n    // versions older than 1.19, which in practice is only crates.io since\n    // those older versions do not support other registries.\n    \"features2\": {\n        \"serde\": [\"dep:serde\", \"chrono?/serde\"]\n    }\n    // The minimal supported Rust version (optional)\n    // This must be a valid version requirement without an operator (e.g. no `=`)\n    \"rust_version\": \"1.60\"\n}\n\n```\n\nThe JSON objects should not be modified after they are added except for the `yanked` field whose value may change at any time.\n\n> **Note**: The index JSON format has subtle differences from the JSON format of the [Publish API](about:blank/registry-web-api.html#publish) and [`cargo metadata`](../commands/cargo-metadata.html). If you are using one of those as a source to generate index entries, you are encouraged to carefully inspect the documentation differences between them.\n> \n> For the [Publish API](about:blank/registry-web-api.html#publish), the differences are:\n> \n> -   `deps`\n>     -   `name` — When the dependency is [renamed](about:blank/specifying-dependencies.html#renaming-dependencies-in-cargotoml) in `Cargo.toml`, the publish API puts the original package name in the `name` field and the aliased name in the `explicit_name_in_toml` field. The index places the aliased name in the `name` field, and the original package name in the `package` field.\n>     -   `req` — The Publish API field is called `version_req`.\n> -   `cksum` — The publish API does not specify the checksum, it must be computed by the registry before adding to the index.\n> -   `features` — Some features may be placed in the `features2` field. Note: This is only a legacy requirement for [crates.io](https://crates.io/); other registries should not need to bother with modifying the features map. The `v` field indicates the presence of the `features2` field.\n> -   The publish API includes several other fields, such as `description` and `readme`, which don’t appear in the index. These are intended to make it easier for a registry to obtain the metadata about the crate to display on a website without needing to extract and parse the `.crate` file. This additional information is typically added to a database on the registry server.\n> -   Although `rust_version` is included here, [crates.io](https://crates.io/) will ignore this field and instead read it from the `Cargo.toml` contained in the `.crate` file.\n> \n> For [`cargo metadata`](../commands/cargo-metadata.html), the differences are:\n> \n> -   `vers` — The `cargo metadata` field is called `version`.\n> -   `deps`\n>     -   `name` — When the dependency is [renamed](about:blank/specifying-dependencies.html#renaming-dependencies-in-cargotoml) in `Cargo.toml`, `cargo metadata` puts the original package name in the `name` field and the aliased name in the `rename` field. The index places the aliased name in the `name` field, and the original package name in the `package` field.\n>     -   `default_features` — The `cargo metadata` field is called `uses_default_features`.\n>     -   `registry` — `cargo metadata` uses a value of `null` to indicate that the dependency comes from [crates.io](https://crates.io/). The index uses a value of `null` to indicate that the dependency comes from the same registry as the index. When creating an index entry, a registry other than [crates.io](https://crates.io/) should translate a value of `null` to be `https://github.com/rust-lang/crates.io-index` and translate a URL that matches the current index to be `null`.\n>     -   `cargo metadata` includes some extra fields, such as `source` and `path`.\n> -   The index includes additional fields such as `yanked`, `cksum`, and `v`.\n\n## [Index Protocols](#index-protocols)\n\nCargo supports two remote registry protocols: `git` and `sparse`. The `git` protocol stores index files in a git repository and the `sparse` protocol fetches individual files over HTTP.\n\n### [Git Protocol](#git-protocol)\n\nThe git protocol has no protocol prefix in the index url. For example the git index URL for [crates.io](https://crates.io/) is `https://github.com/rust-lang/crates.io-index`.\n\nCargo caches the git repository on disk so that it can efficiently incrementally fetch updates.\n\n### [Sparse Protocol](#sparse-protocol)\n\nThe sparse protocol uses the `sparse+` protocol prefix in the registry URL. For example, the sparse index URL for [crates.io](https://crates.io/) is `sparse+https://index.crates.io/`.\n\nThe sparse protocol downloads each index file using an individual HTTP request. Since this results in a large number of small HTTP requests, performance is significantly improved with a server that supports pipelining and HTTP/2.\n\n#### [Sparse authentication](#sparse-authentication)\n\nCargo will attempt to fetch the `config.json` file before fetching any other files. If the server responds with an HTTP 401, then Cargo will assume that the registry requires authentication and re-attempt the request for `config.json` with the authentication token included.\n\nOn authentication failure (or a missing authentication token) the server may include a `www-authenticate` header with a `Cargo login_url=\"<URL>\"` challenge to indicate where the user can go to get a token.\n\nRegistries that require authentication must set `auth-required: true` in `config.json`.\n\n#### [Caching](#caching)\n\nCargo caches the crate metadata files, and captures the `ETag` or `Last-Modified` HTTP header from the server for each entry. When refreshing crate metadata, Cargo sends the `If-None-Match` or `If-Modified-Since` header to allow the server to respond with HTTP 304 “Not Modified” if the local cache is valid, saving time and bandwidth. If both `ETag` and `Last-Modified` headers are present, Cargo uses the `ETag` only.\n\n#### [Cache Invalidation](#cache-invalidation)\n\nIf a registry is using some kind of CDN or proxy which caches access to the index files, then it is recommended that registries implement some form of cache invalidation when the files are updated. If these caches are not updated, then users may not be able to access new crates until the cache is cleared.\n\n#### [Nonexistent Crates](#nonexistent-crates)\n\nFor crates that do not exist, the registry should respond with a 404 “Not Found”, 410 “Gone” or 451 “Unavailable For Legal Reasons” code.\n\n#### [Sparse Limitations](#sparse-limitations)\n\nSince the URL of the registry is stored in the lockfile, it’s not recommended to offer a registry with both protocols. Discussion about a transition plan is ongoing in issue [#10964](https://github.com/rust-lang/cargo/issues/10964). The [crates.io](https://crates.io/) registry is an exception, since Cargo internally substitutes the equivalent git URL when the sparse protocol is used.\n\nIf a registry does offer both protocols, it’s currently recommended to choose one protocol as the canonical protocol and use [source replacement](../reference/source-replacement.html) for the other protocol.",
	"html": "<!DOCTYPE html><html lang=\"en\" class=\"light\" dir=\"ltr\"><head>\n        <!-- Book generated using mdBook -->\n        <meta charset=\"UTF-8\">\n        <title>Registry Index - The Cargo Book</title>\n\n\n        <!-- Custom HTML head -->\n        <style>\n            dd {\n                margin-bottom: 1em;\n            }\n        </style>\n\n        <meta name=\"description\" content=\"\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n        <meta name=\"theme-color\" content=\"rgb(255, 255, 255)\">\n\n        <link rel=\"shortcut icon\" href=\"../favicon.png\">\n        <link rel=\"stylesheet\" href=\"../css/variables.css\">\n        <link rel=\"stylesheet\" href=\"../css/general.css\">\n        <link rel=\"stylesheet\" href=\"../css/chrome.css\">\n        <link rel=\"stylesheet\" href=\"../css/print.css\" media=\"print\">\n\n        <!-- Fonts -->\n        <link rel=\"stylesheet\" href=\"../FontAwesome/css/font-awesome.css\">\n        <link rel=\"stylesheet\" href=\"../fonts/fonts.css\">\n\n        <!-- Highlight.js Stylesheets -->\n        <link rel=\"stylesheet\" href=\"../highlight.css\">\n        <link rel=\"stylesheet\" href=\"../tomorrow-night.css\" disabled=\"\">\n        <link rel=\"stylesheet\" href=\"../ayu-highlight.css\" disabled=\"\">\n\n        <!-- Custom theme stylesheets -->\n\n    </head>\n    <body class=\"js sidebar-visible\">\n    <div id=\"body-container\">\n        <!-- Provide site root to javascript -->\n        <script>\n            var path_to_root = \"../\";\n            var default_theme = window.matchMedia(\"(prefers-color-scheme: dark)\").matches ? \"navy\" : \"light\";\n        </script>\n\n        <!-- Work around some values being stored in localStorage wrapped in quotes -->\n        <script>\n            try {\n                var theme = localStorage.getItem('mdbook-theme');\n                var sidebar = localStorage.getItem('mdbook-sidebar');\n\n                if (theme.startsWith('\"') && theme.endsWith('\"')) {\n                    localStorage.setItem('mdbook-theme', theme.slice(1, theme.length - 1));\n                }\n\n                if (sidebar.startsWith('\"') && sidebar.endsWith('\"')) {\n                    localStorage.setItem('mdbook-sidebar', sidebar.slice(1, sidebar.length - 1));\n                }\n            } catch (e) { }\n        </script>\n\n        <!-- Set the theme before any content is loaded, prevents flash -->\n        <script>\n            var theme;\n            try { theme = localStorage.getItem('mdbook-theme'); } catch(e) { }\n            if (theme === null || theme === undefined) { theme = default_theme; }\n            var html = document.querySelector('html');\n            html.classList.remove('light')\n            html.classList.add(theme);\n            var body = document.querySelector('body');\n            body.classList.remove('no-js')\n            body.classList.add('js');\n        </script>\n\n        <input type=\"checkbox\" id=\"sidebar-toggle-anchor\" class=\"hidden\">\n\n        <!-- Hide / unhide sidebar before it is displayed -->\n        <script>\n            var body = document.querySelector('body');\n            var sidebar = null;\n            var sidebar_toggle = document.getElementById(\"sidebar-toggle-anchor\");\n            if (document.body.clientWidth >= 1080) {\n                try { sidebar = localStorage.getItem('mdbook-sidebar'); } catch(e) { }\n                sidebar = sidebar || 'visible';\n            } else {\n                sidebar = 'hidden';\n            }\n            sidebar_toggle.checked = sidebar === 'visible';\n            body.classList.remove('sidebar-visible');\n            body.classList.add(\"sidebar-\" + sidebar);\n        </script>\n\n        <nav id=\"sidebar\" class=\"sidebar\" aria-label=\"Table of contents\" aria-hidden=\"false\">\n            <div class=\"sidebar-scrollbox\">\n                <ol class=\"chapter\"><li class=\"chapter-item expanded affix \"><a href=\"../index.html\" tabindex=\"0\">Introduction</a></li><li class=\"chapter-item expanded \"><a href=\"../getting-started/index.html\" tabindex=\"0\"><strong aria-hidden=\"true\">1.</strong> Getting Started</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../getting-started/installation.html\" tabindex=\"0\"><strong aria-hidden=\"true\">1.1.</strong> Installation</a></li><li class=\"chapter-item expanded \"><a href=\"../getting-started/first-steps.html\" tabindex=\"0\"><strong aria-hidden=\"true\">1.2.</strong> First Steps with Cargo</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../guide/index.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.</strong> Cargo Guide</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../guide/why-cargo-exists.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.1.</strong> Why Cargo Exists</a></li><li class=\"chapter-item expanded \"><a href=\"../guide/creating-a-new-project.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.2.</strong> Creating a New Package</a></li><li class=\"chapter-item expanded \"><a href=\"../guide/working-on-an-existing-project.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.3.</strong> Working on an Existing Package</a></li><li class=\"chapter-item expanded \"><a href=\"../guide/dependencies.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.4.</strong> Dependencies</a></li><li class=\"chapter-item expanded \"><a href=\"../guide/project-layout.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.5.</strong> Package Layout</a></li><li class=\"chapter-item expanded \"><a href=\"../guide/cargo-toml-vs-cargo-lock.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.6.</strong> Cargo.toml vs Cargo.lock</a></li><li class=\"chapter-item expanded \"><a href=\"../guide/tests.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.7.</strong> Tests</a></li><li class=\"chapter-item expanded \"><a href=\"../guide/continuous-integration.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.8.</strong> Continuous Integration</a></li><li class=\"chapter-item expanded \"><a href=\"../guide/cargo-home.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.9.</strong> Cargo Home</a></li><li class=\"chapter-item expanded \"><a href=\"../guide/build-cache.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.10.</strong> Build Cache</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../reference/index.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.</strong> Cargo Reference</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../reference/specifying-dependencies.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.1.</strong> Specifying Dependencies</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../reference/overriding-dependencies.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.1.1.</strong> Overriding Dependencies</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../reference/manifest.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.2.</strong> The Manifest Format</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../reference/cargo-targets.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.2.1.</strong> Cargo Targets</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../reference/workspaces.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.3.</strong> Workspaces</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/features.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.4.</strong> Features</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../reference/features-examples.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.4.1.</strong> Features Examples</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../reference/profiles.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.5.</strong> Profiles</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/config.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.6.</strong> Configuration</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/environment-variables.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.7.</strong> Environment Variables</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/build-scripts.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.8.</strong> Build Scripts</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../reference/build-script-examples.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.8.1.</strong> Build Script Examples</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../reference/publishing.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.9.</strong> Publishing on crates.io</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/pkgid-spec.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.10.</strong> Package ID Specifications</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/source-replacement.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.11.</strong> Source Replacement</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/external-tools.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.12.</strong> External Tools</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/registries.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.13.</strong> Registries</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../reference/registry-authentication.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.13.1.</strong> Registry Authentication</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../reference/credential-provider-protocol.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.13.1.1.</strong> Credential Provider Protocol</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../reference/running-a-registry.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.13.2.</strong> Running a Registry</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../reference/registry-index.html\" class=\"active\" tabindex=\"0\"><strong aria-hidden=\"true\">3.13.2.1.</strong> Registry Index</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/registry-web-api.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.13.2.2.</strong> Registry Web API</a></li></ol></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../reference/resolver.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.14.</strong> Dependency Resolution</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/semver.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.15.</strong> SemVer Compatibility</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/future-incompat-report.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.16.</strong> Future incompat report</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/timings.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.17.</strong> Reporting build timings</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/unstable.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.18.</strong> Unstable Features</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../commands/index.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.</strong> Cargo Commands</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../commands/general-commands.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.1.</strong> General Commands</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../commands/cargo.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.1.1.</strong> cargo</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-help.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.1.2.</strong> cargo help</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-version.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.1.3.</strong> cargo version</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../commands/build-commands.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.</strong> Build Commands</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-bench.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.1.</strong> cargo bench</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-build.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.2.</strong> cargo build</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-check.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.3.</strong> cargo check</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-clean.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.4.</strong> cargo clean</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-doc.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.5.</strong> cargo doc</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-fetch.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.6.</strong> cargo fetch</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-fix.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.7.</strong> cargo fix</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-run.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.8.</strong> cargo run</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-rustc.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.9.</strong> cargo rustc</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-rustdoc.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.10.</strong> cargo rustdoc</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-test.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.11.</strong> cargo test</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-report.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.12.</strong> cargo report</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../commands/manifest-commands.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.3.</strong> Manifest Commands</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-add.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.3.1.</strong> cargo add</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-generate-lockfile.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.3.2.</strong> cargo generate-lockfile</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-locate-project.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.3.3.</strong> cargo locate-project</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-metadata.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.3.4.</strong> cargo metadata</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-pkgid.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.3.5.</strong> cargo pkgid</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-remove.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.3.6.</strong> cargo remove</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-tree.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.3.7.</strong> cargo tree</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-update.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.3.8.</strong> cargo update</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-vendor.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.3.9.</strong> cargo vendor</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-verify-project.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.3.10.</strong> cargo verify-project</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../commands/package-commands.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.4.</strong> Package Commands</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-init.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.4.1.</strong> cargo init</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-install.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.4.2.</strong> cargo install</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-new.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.4.3.</strong> cargo new</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-search.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.4.4.</strong> cargo search</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-uninstall.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.4.5.</strong> cargo uninstall</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../commands/publishing-commands.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.5.</strong> Publishing Commands</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-login.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.5.1.</strong> cargo login</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-logout.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.5.2.</strong> cargo logout</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-owner.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.5.3.</strong> cargo owner</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-package.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.5.4.</strong> cargo package</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-publish.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.5.5.</strong> cargo publish</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-yank.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.5.6.</strong> cargo yank</a></li></ol></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../faq.html\" tabindex=\"0\"><strong aria-hidden=\"true\">5.</strong> FAQ</a></li><li class=\"chapter-item expanded \"><a href=\"../appendix/glossary.html\" tabindex=\"0\"><strong aria-hidden=\"true\">6.</strong> Appendix: Glossary</a></li><li class=\"chapter-item expanded \"><a href=\"../appendix/git-authentication.html\" tabindex=\"0\"><strong aria-hidden=\"true\">7.</strong> Appendix: Git Authentication</a></li></ol>\n            </div>\n            <div id=\"sidebar-resize-handle\" class=\"sidebar-resize-handle\">\n                <div class=\"sidebar-resize-indicator\"></div>\n            </div>\n        </nav>\n\n        <!-- Track and set sidebar scroll position -->\n        <script>\n            var sidebarScrollbox = document.querySelector('#sidebar .sidebar-scrollbox');\n            sidebarScrollbox.addEventListener('click', function(e) {\n                if (e.target.tagName === 'A') {\n                    sessionStorage.setItem('sidebar-scroll', sidebarScrollbox.scrollTop);\n                }\n            }, { passive: true });\n            var sidebarScrollTop = sessionStorage.getItem('sidebar-scroll');\n            sessionStorage.removeItem('sidebar-scroll');\n            if (sidebarScrollTop) {\n                // preserve sidebar scroll position when navigating via links within sidebar\n                sidebarScrollbox.scrollTop = sidebarScrollTop;\n            } else {\n                // scroll sidebar to current active section when navigating via \"next/previous chapter\" buttons\n                var activeSection = document.querySelector('#sidebar .active');\n                if (activeSection) {\n                    activeSection.scrollIntoView({ block: 'center' });\n                }\n            }\n        </script>\n\n        <div id=\"page-wrapper\" class=\"page-wrapper\">\n\n            <div class=\"page\">\n                                <div id=\"menu-bar-hover-placeholder\"></div>\n                <div id=\"menu-bar\" class=\"menu-bar\" style=\"top: 0px;\">\n                    <div class=\"left-buttons\">\n                        <label id=\"sidebar-toggle\" class=\"icon-button\" for=\"sidebar-toggle-anchor\" title=\"Toggle Table of Contents\" aria-label=\"Toggle Table of Contents\" aria-controls=\"sidebar\" aria-expanded=\"true\">\n                            <i class=\"fa fa-bars\"></i>\n                        </label>\n                        <button id=\"theme-toggle\" class=\"icon-button\" type=\"button\" title=\"Change theme\" aria-label=\"Change theme\" aria-haspopup=\"true\" aria-expanded=\"false\" aria-controls=\"theme-list\">\n                            <i class=\"fa fa-paint-brush\"></i>\n                        </button>\n                        <ul id=\"theme-list\" class=\"theme-popup\" aria-label=\"Themes\" role=\"menu\">\n                            <li role=\"none\"><button role=\"menuitem\" class=\"theme theme-selected\" id=\"light\">Light</button></li>\n                            <li role=\"none\"><button role=\"menuitem\" class=\"theme\" id=\"rust\">Rust</button></li>\n                            <li role=\"none\"><button role=\"menuitem\" class=\"theme\" id=\"coal\">Coal</button></li>\n                            <li role=\"none\"><button role=\"menuitem\" class=\"theme\" id=\"navy\">Navy</button></li>\n                            <li role=\"none\"><button role=\"menuitem\" class=\"theme\" id=\"ayu\">Ayu</button></li>\n                        </ul>\n                        <button id=\"search-toggle\" class=\"icon-button\" type=\"button\" title=\"Search. (Shortkey: s)\" aria-label=\"Toggle Searchbar\" aria-expanded=\"false\" aria-keyshortcuts=\"S\" aria-controls=\"searchbar\">\n                            <i class=\"fa fa-search\"></i>\n                        </button>\n                    </div>\n\n                    <h1 class=\"menu-title\">The Cargo Book</h1>\n\n                    <div class=\"right-buttons\">\n                        <a href=\"../print.html\" title=\"Print this book\" aria-label=\"Print this book\">\n                            <i id=\"print-button\" class=\"fa fa-print\"></i>\n                        </a>\n                        <a href=\"https://github.com/rust-lang/cargo/tree/master/src/doc/src\" title=\"Git repository\" aria-label=\"Git repository\">\n                            <i id=\"git-repository-button\" class=\"fa fa-github\"></i>\n                        </a>\n                        <a href=\"https://github.com/rust-lang/cargo/edit/master/src/doc/src/reference/registry-index.md\" title=\"Suggest an edit\" aria-label=\"Suggest an edit\">\n                            <i id=\"git-edit-button\" class=\"fa fa-edit\"></i>\n                        </a>\n\n                    </div>\n                </div>\n\n                <div id=\"search-wrapper\" class=\"hidden\">\n                    <form id=\"searchbar-outer\" class=\"searchbar-outer\">\n                        <input type=\"search\" id=\"searchbar\" name=\"searchbar\" placeholder=\"Search this book ...\" aria-controls=\"searchresults-outer\" aria-describedby=\"searchresults-header\">\n                    </form>\n                    <div id=\"searchresults-outer\" class=\"searchresults-outer hidden\">\n                        <div id=\"searchresults-header\" class=\"searchresults-header\"></div>\n                        <ul id=\"searchresults\">\n                        </ul>\n                    </div>\n                </div>\n\n                <!-- Apply ARIA attributes after the sidebar and the sidebar toggle button are added to the DOM -->\n                <script>\n                    document.getElementById('sidebar-toggle').setAttribute('aria-expanded', sidebar === 'visible');\n                    document.getElementById('sidebar').setAttribute('aria-hidden', sidebar !== 'visible');\n                    Array.from(document.querySelectorAll('#sidebar a')).forEach(function(link) {\n                        link.setAttribute('tabIndex', sidebar === 'visible' ? 0 : -1);\n                    });\n                </script>\n\n                <div id=\"content\" class=\"content\">\n                    <main>\n                        <h1 id=\"index-format\"><a class=\"header\" href=\"#index-format\">Index Format</a></h1>\n<p>The following defines the format of the index. New features are occasionally\nadded, which are only understood starting with the version of Cargo that\nintroduced them. Older versions of Cargo may not be able to use packages that\nmake use of new features. However, the format for older packages should not\nchange, so older versions of Cargo should be able to use them.</p>\n<h2 id=\"index-configuration\"><a class=\"header\" href=\"#index-configuration\">Index Configuration</a></h2>\n<p>The root of the index contains a file named <code class=\"hljs\">config.json</code> which contains JSON\ninformation used by Cargo for accessing the registry. This is an example of\nwhat the <a href=\"https://crates.io/\">crates.io</a> config file looks like:</p>\n<pre><div class=\"buttons\"><button class=\"fa fa-copy clip-button\" title=\"Copy to clipboard\" aria-label=\"Copy to clipboard\"><i class=\"tooltiptext\"></i></button></div><code class=\"language-javascript hljs\">{\n    <span class=\"hljs-string\">\"dl\"</span>: <span class=\"hljs-string\">\"https://crates.io/api/v1/crates\"</span>,\n    <span class=\"hljs-string\">\"api\"</span>: <span class=\"hljs-string\">\"https://crates.io\"</span>\n}\n</code></pre>\n<p>The keys are:</p>\n<ul>\n<li>\n<p><code class=\"hljs\">dl</code>: This is the URL for downloading crates listed in the index. The value\nmay have the following markers which will be replaced with their\ncorresponding value:</p>\n<ul>\n<li><code class=\"hljs\">{crate}</code>: The name of crate.</li>\n<li><code class=\"hljs\">{version}</code>: The crate version.</li>\n<li><code class=\"hljs\">{prefix}</code>: A directory prefix computed from the crate name. For example,\na crate named <code class=\"hljs\">cargo</code> has a prefix of <code class=\"hljs\">ca/rg</code>. See below for details.</li>\n<li><code class=\"hljs\">{lowerprefix}</code>: Lowercase variant of <code class=\"hljs\">{prefix}</code>.</li>\n<li><code class=\"hljs\">{sha256-checksum}</code>: The crate’s sha256 checksum.</li>\n</ul>\n<p>If none of the markers are present, then the value\n<code class=\"hljs\">/{crate}/{version}/download</code> is appended to the end.</p>\n</li>\n<li>\n<p><code class=\"hljs\">api</code>: This is the base URL for the web API. This key is optional, but if it\nis not specified, commands such as <a href=\"../commands/cargo-publish.html\"><code class=\"hljs\">cargo publish</code></a> will not work. The web\nAPI is described below.</p>\n</li>\n<li>\n<p><code class=\"hljs\">auth-required</code>: indicates whether this is a private registry that requires\nall operations to be authenticated including API requests, crate downloads\nand sparse index updates.</p>\n</li>\n</ul>\n<h2 id=\"download-endpoint\"><a class=\"header\" href=\"#download-endpoint\">Download Endpoint</a></h2>\n<p>The download endpoint should send the <code class=\"hljs\">.crate</code> file for the requested package.\nCargo supports https, http, and file URLs, HTTP redirects, HTTP1 and HTTP2.\nThe exact specifics of TLS support depend on the platform that Cargo is\nrunning on, the version of Cargo, and how it was compiled.</p>\n<p>If <code class=\"hljs\">auth-required: true</code> is set in <code class=\"hljs\">config.json</code>, the <code class=\"hljs\">Authorization</code> header\nwill be included with http(s) download requests.</p>\n<h2 id=\"index-files\"><a class=\"header\" href=\"#index-files\">Index files</a></h2>\n<p>The rest of the index repository contains one file for each package, where the\nfilename is the name of the package in lowercase. Each version of the package\nhas a separate line in the file. The files are organized in a tier of\ndirectories:</p>\n<ul>\n<li>Packages with 1 character names are placed in a directory named <code class=\"hljs\">1</code>.</li>\n<li>Packages with 2 character names are placed in a directory named <code class=\"hljs\">2</code>.</li>\n<li>Packages with 3 character names are placed in the directory\n<code class=\"hljs\">3/{first-character}</code> where <code class=\"hljs\">{first-character}</code> is the first character of\nthe package name.</li>\n<li>All other packages are stored in directories named\n<code class=\"hljs\">{first-two}/{second-two}</code> where the top directory is the first two\ncharacters of the package name, and the next subdirectory is the third and\nfourth characters of the package name. For example, <code class=\"hljs\">cargo</code> would be stored\nin a file named <code class=\"hljs\">ca/rg/cargo</code>.</li>\n</ul>\n<blockquote>\n<p>Note: Although the index filenames are in lowercase, the fields that contain\npackage names in <code class=\"hljs\">Cargo.toml</code> and the index JSON data are case-sensitive and\nmay contain upper and lower case characters.</p>\n</blockquote>\n<p>The directory name above is calculated based on the package name converted to\nlowercase; it is represented by the marker <code class=\"hljs\">{lowerprefix}</code>.  When the original\npackage name is used without case conversion, the resulting directory name is\nrepresented by the marker <code class=\"hljs\">{prefix}</code>.  For example, the package <code class=\"hljs\">MyCrate</code> would\nhave a <code class=\"hljs\">{prefix}</code> of <code class=\"hljs\">My/Cr</code> and a <code class=\"hljs\">{lowerprefix}</code> of <code class=\"hljs\">my/cr</code>.  In general,\nusing <code class=\"hljs\">{prefix}</code> is recommended over <code class=\"hljs\">{lowerprefix}</code>, but there are pros and\ncons to each choice.  Using <code class=\"hljs\">{prefix}</code> on case-insensitive filesystems results\nin (harmless-but-inelegant) directory aliasing.  For example, <code class=\"hljs\">crate</code> and\n<code class=\"hljs\">CrateTwo</code> have <code class=\"hljs\">{prefix}</code> values of <code class=\"hljs\">cr/at</code> and <code class=\"hljs\">Cr/at</code>; these are distinct on\nUnix machines but alias to the same directory on Windows.  Using directories\nwith normalized case avoids aliasing, but on case-sensitive filesystems it’s\nharder to support older versions of Cargo that lack <code class=\"hljs\">{prefix}</code>/<code class=\"hljs\">{lowerprefix}</code>.\nFor example, nginx rewrite rules can easily construct <code class=\"hljs\">{prefix}</code> but can’t\nperform case-conversion to construct <code class=\"hljs\">{lowerprefix}</code>.</p>\n<h2 id=\"name-restrictions\"><a class=\"header\" href=\"#name-restrictions\">Name restrictions</a></h2>\n<p>Registries should consider enforcing limitations on package names added to\ntheir index. Cargo itself allows names with any <a href=\"../../std/primitive.char.html#method.is_alphanumeric\">alphanumeric</a>, <code class=\"hljs\">-</code>, or <code class=\"hljs\">_</code>\ncharacters. <a href=\"https://crates.io/\">crates.io</a> imposes its own limitations, including the following:</p>\n<ul>\n<li>Only allows ASCII characters.</li>\n<li>Only alphanumeric, <code class=\"hljs\">-</code>, and <code class=\"hljs\">_</code> characters.</li>\n<li>First character must be alphabetic.</li>\n<li>Case-insensitive collision detection.</li>\n<li>Prevent differences of <code class=\"hljs\">-</code> vs <code class=\"hljs\">_</code>.</li>\n<li>Under a specific length (max 64).</li>\n<li>Rejects reserved names, such as Windows special filenames like “nul”.</li>\n</ul>\n<p>Registries should consider incorporating similar restrictions, and consider\nthe security implications, such as <a href=\"https://en.wikipedia.org/wiki/IDN_homograph_attack\">IDN homograph\nattacks</a> and other\nconcerns in <a href=\"https://www.unicode.org/reports/tr36/\">UTR36</a> and\n<a href=\"https://www.unicode.org/reports/tr39/\">UTS39</a>.</p>\n<h2 id=\"version-uniqueness\"><a class=\"header\" href=\"#version-uniqueness\">Version uniqueness</a></h2>\n<p>Indexes <em>must</em> ensure that each version only appears once for each package.\nThis includes ignoring SemVer build metadata.\nFor example, the index must <em>not</em> contain two entries with a version <code class=\"hljs\">1.0.7</code> and <code class=\"hljs\">1.0.7+extra</code>.</p>\n<h2 id=\"json-schema\"><a class=\"header\" href=\"#json-schema\">JSON schema</a></h2>\n<p>Each line in a package file contains a JSON object that describes a published\nversion of the package. The following is a pretty-printed example with comments\nexplaining the format of the entry.</p>\n<pre><div class=\"buttons\"><button class=\"fa fa-copy clip-button\" title=\"Copy to clipboard\" aria-label=\"Copy to clipboard\"><i class=\"tooltiptext\"></i></button></div><code class=\"language-javascript hljs\">{\n    <span class=\"hljs-comment\">// The name of the package.</span>\n    <span class=\"hljs-comment\">// This must only contain alphanumeric, `-`, or `_` characters.</span>\n    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"foo\"</span>,\n    <span class=\"hljs-comment\">// The version of the package this row is describing.</span>\n    <span class=\"hljs-comment\">// This must be a valid version number according to the Semantic</span>\n    <span class=\"hljs-comment\">// Versioning 2.0.0 spec at https://semver.org/.</span>\n    <span class=\"hljs-string\">\"vers\"</span>: <span class=\"hljs-string\">\"0.1.0\"</span>,\n    <span class=\"hljs-comment\">// Array of direct dependencies of the package.</span>\n    <span class=\"hljs-string\">\"deps\"</span>: [\n        {\n            <span class=\"hljs-comment\">// Name of the dependency.</span>\n            <span class=\"hljs-comment\">// If the dependency is renamed from the original package name,</span>\n            <span class=\"hljs-comment\">// this is the new name. The original package name is stored in</span>\n            <span class=\"hljs-comment\">// the `package` field.</span>\n            <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"rand\"</span>,\n            <span class=\"hljs-comment\">// The SemVer requirement for this dependency.</span>\n            <span class=\"hljs-comment\">// This must be a valid version requirement defined at</span>\n            <span class=\"hljs-comment\">// https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html.</span>\n            <span class=\"hljs-string\">\"req\"</span>: <span class=\"hljs-string\">\"^0.6\"</span>,\n            <span class=\"hljs-comment\">// Array of features (as strings) enabled for this dependency.</span>\n            <span class=\"hljs-string\">\"features\"</span>: [<span class=\"hljs-string\">\"i128_support\"</span>],\n            <span class=\"hljs-comment\">// Boolean of whether or not this is an optional dependency.</span>\n            <span class=\"hljs-string\">\"optional\"</span>: <span class=\"hljs-literal\">false</span>,\n            <span class=\"hljs-comment\">// Boolean of whether or not default features are enabled.</span>\n            <span class=\"hljs-string\">\"default_features\"</span>: <span class=\"hljs-literal\">true</span>,\n            <span class=\"hljs-comment\">// The target platform for the dependency.</span>\n            <span class=\"hljs-comment\">// null if not a target dependency.</span>\n            <span class=\"hljs-comment\">// Otherwise, a string such as \"cfg(windows)\".</span>\n            <span class=\"hljs-string\">\"target\"</span>: <span class=\"hljs-literal\">null</span>,\n            <span class=\"hljs-comment\">// The dependency kind.</span>\n            <span class=\"hljs-comment\">// \"dev\", \"build\", or \"normal\".</span>\n            <span class=\"hljs-comment\">// Note: this is a required field, but a small number of entries</span>\n            <span class=\"hljs-comment\">// exist in the crates.io index with either a missing or null</span>\n            <span class=\"hljs-comment\">// `kind` field due to implementation bugs.</span>\n            <span class=\"hljs-string\">\"kind\"</span>: <span class=\"hljs-string\">\"normal\"</span>,\n            <span class=\"hljs-comment\">// The URL of the index of the registry where this dependency is</span>\n            <span class=\"hljs-comment\">// from as a string. If not specified or null, it is assumed the</span>\n            <span class=\"hljs-comment\">// dependency is in the current registry.</span>\n            <span class=\"hljs-string\">\"registry\"</span>: <span class=\"hljs-literal\">null</span>,\n            <span class=\"hljs-comment\">// If the dependency is renamed, this is a string of the actual</span>\n            <span class=\"hljs-comment\">// package name. If not specified or null, this dependency is not</span>\n            <span class=\"hljs-comment\">// renamed.</span>\n            <span class=\"hljs-string\">\"package\"</span>: <span class=\"hljs-literal\">null</span>,\n        }\n    ],\n    <span class=\"hljs-comment\">// A SHA256 checksum of the `.crate` file.</span>\n    <span class=\"hljs-string\">\"cksum\"</span>: <span class=\"hljs-string\">\"d867001db0e2b6e0496f9fac96930e2d42233ecd3ca0413e0753d4c7695d289c\"</span>,\n    <span class=\"hljs-comment\">// Set of features defined for the package.</span>\n    <span class=\"hljs-comment\">// Each feature maps to an array of features or dependencies it enables.</span>\n    <span class=\"hljs-string\">\"features\"</span>: {\n        <span class=\"hljs-string\">\"extras\"</span>: [<span class=\"hljs-string\">\"rand/simd_support\"</span>]\n    },\n    <span class=\"hljs-comment\">// Boolean of whether or not this version has been yanked.</span>\n    <span class=\"hljs-string\">\"yanked\"</span>: <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-comment\">// The `links` string value from the package's manifest, or null if not</span>\n    <span class=\"hljs-comment\">// specified. This field is optional and defaults to null.</span>\n    <span class=\"hljs-string\">\"links\"</span>: <span class=\"hljs-literal\">null</span>,\n    <span class=\"hljs-comment\">// An unsigned 32-bit integer value indicating the schema version of this</span>\n    <span class=\"hljs-comment\">// entry.</span>\n    <span class=\"hljs-comment\">//</span>\n    <span class=\"hljs-comment\">// If this not specified, it should be interpreted as the default of 1.</span>\n    <span class=\"hljs-comment\">//</span>\n    <span class=\"hljs-comment\">// Cargo (starting with version 1.51) will ignore versions it does not</span>\n    <span class=\"hljs-comment\">// recognize. This provides a method to safely introduce changes to index</span>\n    <span class=\"hljs-comment\">// entries and allow older versions of cargo to ignore newer entries it</span>\n    <span class=\"hljs-comment\">// doesn't understand. Versions older than 1.51 ignore this field, and</span>\n    <span class=\"hljs-comment\">// thus may misinterpret the meaning of the index entry.</span>\n    <span class=\"hljs-comment\">//</span>\n    <span class=\"hljs-comment\">// The current values are:</span>\n    <span class=\"hljs-comment\">//</span>\n    <span class=\"hljs-comment\">// * 1: The schema as documented here, not including newer additions.</span>\n    <span class=\"hljs-comment\">//      This is honored in Rust version 1.51 and newer.</span>\n    <span class=\"hljs-comment\">// * 2: The addition of the `features2` field.</span>\n    <span class=\"hljs-comment\">//      This is honored in Rust version 1.60 and newer.</span>\n    <span class=\"hljs-string\">\"v\"</span>: <span class=\"hljs-number\">2</span>,\n    <span class=\"hljs-comment\">// This optional field contains features with new, extended syntax.</span>\n    <span class=\"hljs-comment\">// Specifically, namespaced features (`dep:`) and weak dependencies</span>\n    <span class=\"hljs-comment\">// (`pkg?/feat`).</span>\n    <span class=\"hljs-comment\">//</span>\n    <span class=\"hljs-comment\">// This is separated from `features` because versions older than 1.19</span>\n    <span class=\"hljs-comment\">// will fail to load due to not being able to parse the new syntax, even</span>\n    <span class=\"hljs-comment\">// with a `Cargo.lock` file.</span>\n    <span class=\"hljs-comment\">//</span>\n    <span class=\"hljs-comment\">// Cargo will merge any values listed here with the \"features\" field.</span>\n    <span class=\"hljs-comment\">//</span>\n    <span class=\"hljs-comment\">// If this field is included, the \"v\" field should be set to at least 2.</span>\n    <span class=\"hljs-comment\">//</span>\n    <span class=\"hljs-comment\">// Registries are not required to use this field for extended feature</span>\n    <span class=\"hljs-comment\">// syntax, they are allowed to include those in the \"features\" field.</span>\n    <span class=\"hljs-comment\">// Using this is only necessary if the registry wants to support cargo</span>\n    <span class=\"hljs-comment\">// versions older than 1.19, which in practice is only crates.io since</span>\n    <span class=\"hljs-comment\">// those older versions do not support other registries.</span>\n    <span class=\"hljs-string\">\"features2\"</span>: {\n        <span class=\"hljs-string\">\"serde\"</span>: [<span class=\"hljs-string\">\"dep:serde\"</span>, <span class=\"hljs-string\">\"chrono?/serde\"</span>]\n    }\n    <span class=\"hljs-comment\">// The minimal supported Rust version (optional)</span>\n    <span class=\"hljs-comment\">// This must be a valid version requirement without an operator (e.g. no `=`)</span>\n    <span class=\"hljs-string\">\"rust_version\"</span>: <span class=\"hljs-string\">\"1.60\"</span>\n}\n</code></pre>\n<p>The JSON objects should not be modified after they are added except for the\n<code class=\"hljs\">yanked</code> field whose value may change at any time.</p>\n<blockquote>\n<p><strong>Note</strong>: The index JSON format has subtle differences from the JSON format of the <a href=\"registry-web-api.html#publish\">Publish API</a> and <a href=\"../commands/cargo-metadata.html\"><code class=\"hljs\">cargo metadata</code></a>.\nIf you are using one of those as a source to generate index entries, you are encouraged to carefully inspect the documentation differences between them.</p>\n<p>For the <a href=\"registry-web-api.html#publish\">Publish API</a>, the differences are:</p>\n<ul>\n<li><code class=\"hljs\">deps</code>\n<ul>\n<li><code class=\"hljs\">name</code> — When the dependency is <a href=\"specifying-dependencies.html#renaming-dependencies-in-cargotoml\">renamed</a> in <code class=\"hljs\">Cargo.toml</code>, the publish API puts the original package name in the <code class=\"hljs\">name</code> field and the aliased name in the <code class=\"hljs\">explicit_name_in_toml</code> field.\nThe index places the aliased name in the <code class=\"hljs\">name</code> field, and the original package name in the <code class=\"hljs\">package</code> field.</li>\n<li><code class=\"hljs\">req</code> — The Publish API field is called <code class=\"hljs\">version_req</code>.</li>\n</ul>\n</li>\n<li><code class=\"hljs\">cksum</code> — The publish API does not specify the checksum, it must be computed by the registry before adding to the index.</li>\n<li><code class=\"hljs\">features</code> — Some features may be placed in the <code class=\"hljs\">features2</code> field.\nNote: This is only a legacy requirement for <a href=\"https://crates.io/\">crates.io</a>; other registries should not need to bother with modifying the features map.\nThe <code class=\"hljs\">v</code> field indicates the presence of the <code class=\"hljs\">features2</code> field.</li>\n<li>The publish API includes several other fields, such as <code class=\"hljs\">description</code> and <code class=\"hljs\">readme</code>, which don’t appear in the index.\nThese are intended to make it easier for a registry to obtain the metadata about the crate to display on a website without needing to extract and parse the <code class=\"hljs\">.crate</code> file.\nThis additional information is typically added to a database on the registry server.</li>\n<li>Although <code class=\"hljs\">rust_version</code> is included here, <a href=\"https://crates.io/\">crates.io</a> will ignore this field\nand instead read it from the <code class=\"hljs\">Cargo.toml</code> contained in the <code class=\"hljs\">.crate</code> file.</li>\n</ul>\n<p>For <a href=\"../commands/cargo-metadata.html\"><code class=\"hljs\">cargo metadata</code></a>, the differences are:</p>\n<ul>\n<li><code class=\"hljs\">vers</code> — The <code class=\"hljs\">cargo metadata</code> field is called <code class=\"hljs\">version</code>.</li>\n<li><code class=\"hljs\">deps</code>\n<ul>\n<li><code class=\"hljs\">name</code> — When the dependency is <a href=\"specifying-dependencies.html#renaming-dependencies-in-cargotoml\">renamed</a> in <code class=\"hljs\">Cargo.toml</code>, <code class=\"hljs\">cargo metadata</code> puts the original package name in the <code class=\"hljs\">name</code> field and the aliased name in the <code class=\"hljs\">rename</code> field.\nThe index places the aliased name in the <code class=\"hljs\">name</code> field, and the original package name in the <code class=\"hljs\">package</code> field.</li>\n<li><code class=\"hljs\">default_features</code> — The <code class=\"hljs\">cargo metadata</code> field is called <code class=\"hljs\">uses_default_features</code>.</li>\n<li><code class=\"hljs\">registry</code> — <code class=\"hljs\">cargo metadata</code> uses a value of <code class=\"hljs\">null</code> to indicate that the dependency comes from <a href=\"https://crates.io/\">crates.io</a>.\nThe index uses a value of <code class=\"hljs\">null</code> to indicate that the dependency comes from the same registry as the index.\nWhen creating an index entry, a registry other than <a href=\"https://crates.io/\">crates.io</a> should translate a value of <code class=\"hljs\">null</code> to be <code class=\"hljs\">https://github.com/rust-lang/crates.io-index</code> and translate a URL that matches the current index to be <code class=\"hljs\">null</code>.</li>\n<li><code class=\"hljs\">cargo metadata</code> includes some extra fields, such as <code class=\"hljs\">source</code> and <code class=\"hljs\">path</code>.</li>\n</ul>\n</li>\n<li>The index includes additional fields such as <code class=\"hljs\">yanked</code>, <code class=\"hljs\">cksum</code>, and <code class=\"hljs\">v</code>.</li>\n</ul>\n</blockquote>\n<h2 id=\"index-protocols\"><a class=\"header\" href=\"#index-protocols\">Index Protocols</a></h2>\n<p>Cargo supports two remote registry protocols: <code class=\"hljs\">git</code> and <code class=\"hljs\">sparse</code>. The <code class=\"hljs\">git</code> protocol\nstores index files in a git repository and the <code class=\"hljs\">sparse</code> protocol fetches individual\nfiles over HTTP.</p>\n<h3 id=\"git-protocol\"><a class=\"header\" href=\"#git-protocol\">Git Protocol</a></h3>\n<p>The git protocol has no protocol prefix in the index url. For example the git index URL\nfor <a href=\"https://crates.io/\">crates.io</a> is <code class=\"hljs\">https://github.com/rust-lang/crates.io-index</code>.</p>\n<p>Cargo caches the git repository on disk so that it can efficiently incrementally fetch\nupdates.</p>\n<h3 id=\"sparse-protocol\"><a class=\"header\" href=\"#sparse-protocol\">Sparse Protocol</a></h3>\n<p>The sparse protocol uses the <code class=\"hljs\">sparse+</code> protocol prefix in the registry URL. For example,\nthe sparse index URL for <a href=\"https://crates.io/\">crates.io</a> is <code class=\"hljs\">sparse+https://index.crates.io/</code>.</p>\n<p>The sparse protocol downloads each index file using an individual HTTP request. Since\nthis results in a large number of small HTTP requests, performance is significantly\nimproved with a server that supports pipelining and HTTP/2.</p>\n<h4 id=\"sparse-authentication\"><a class=\"header\" href=\"#sparse-authentication\">Sparse authentication</a></h4>\n<p>Cargo will attempt to fetch the <code class=\"hljs\">config.json</code> file before\nfetching any other files. If the server responds with an HTTP 401, then Cargo will assume\nthat the registry requires authentication and re-attempt the request for <code class=\"hljs\">config.json</code>\nwith the authentication token included.</p>\n<p>On authentication failure (or a missing authentication token) the server may include a\n<code class=\"hljs\">www-authenticate</code> header with a <code class=\"hljs\">Cargo login_url=\"&lt;URL&gt;\"</code> challenge to indicate where the user\ncan go to get a token.</p>\n<p>Registries that require authentication must set <code class=\"hljs\">auth-required: true</code> in <code class=\"hljs\">config.json</code>.</p>\n<h4 id=\"caching\"><a class=\"header\" href=\"#caching\">Caching</a></h4>\n<p>Cargo caches the crate metadata files, and captures the <code class=\"hljs\">ETag</code> or <code class=\"hljs\">Last-Modified</code>\nHTTP header from the server for each entry. When refreshing crate metadata, Cargo\nsends the <code class=\"hljs\">If-None-Match</code> or <code class=\"hljs\">If-Modified-Since</code> header to allow the server to respond\nwith HTTP 304 “Not Modified” if the local cache is valid, saving time and bandwidth.\nIf both <code class=\"hljs\">ETag</code> and <code class=\"hljs\">Last-Modified</code> headers are present, Cargo uses the <code class=\"hljs\">ETag</code> only.</p>\n<h4 id=\"cache-invalidation\"><a class=\"header\" href=\"#cache-invalidation\">Cache Invalidation</a></h4>\n<p>If a registry is using some kind of CDN or proxy which caches access to the index files,\nthen it is recommended that registries implement some form of cache invalidation when\nthe files are updated. If these caches are not updated, then users may not be able to\naccess new crates until the cache is cleared.</p>\n<h4 id=\"nonexistent-crates\"><a class=\"header\" href=\"#nonexistent-crates\">Nonexistent Crates</a></h4>\n<p>For crates that do not exist, the registry should respond with a 404 “Not Found”, 410 “Gone”\nor 451 “Unavailable For Legal Reasons” code.</p>\n<h4 id=\"sparse-limitations\"><a class=\"header\" href=\"#sparse-limitations\">Sparse Limitations</a></h4>\n<p>Since the URL of the registry is stored in the lockfile, it’s not recommended to offer\na registry with both protocols. Discussion about a transition plan is ongoing in issue\n<a href=\"https://github.com/rust-lang/cargo/issues/10964\">#10964</a>. The <a href=\"https://crates.io/\">crates.io</a> registry is an exception, since Cargo internally substitutes\nthe equivalent git URL when the sparse protocol is used.</p>\n<p>If a registry does offer both protocols, it’s currently recommended to choose one protocol\nas the canonical protocol and use <a href=\"../reference/source-replacement.html\">source replacement</a> for the other protocol.</p>\n\n                    </main>\n\n                    <nav class=\"nav-wrapper\" aria-label=\"Page navigation\">\n                        <!-- Mobile navigation buttons -->\n                            <a rel=\"prev\" href=\"../reference/running-a-registry.html\" class=\"mobile-nav-chapters previous\" title=\"Previous chapter\" aria-label=\"Previous chapter\" aria-keyshortcuts=\"Left\">\n                                <i class=\"fa fa-angle-left\"></i>\n                            </a>\n\n                            <a rel=\"next prefetch\" href=\"../reference/registry-web-api.html\" class=\"mobile-nav-chapters next\" title=\"Next chapter\" aria-label=\"Next chapter\" aria-keyshortcuts=\"Right\">\n                                <i class=\"fa fa-angle-right\"></i>\n                            </a>\n\n                        <div style=\"clear: both\"></div>\n                    </nav>\n                </div>\n            </div>\n\n            <nav class=\"nav-wide-wrapper\" aria-label=\"Page navigation\">\n                    <a rel=\"prev\" href=\"../reference/running-a-registry.html\" class=\"nav-chapters previous\" title=\"Previous chapter\" aria-label=\"Previous chapter\" aria-keyshortcuts=\"Left\">\n                        <i class=\"fa fa-angle-left\"></i>\n                    </a>\n\n                    <a rel=\"next prefetch\" href=\"../reference/registry-web-api.html\" class=\"nav-chapters next\" title=\"Next chapter\" aria-label=\"Next chapter\" aria-keyshortcuts=\"Right\">\n                        <i class=\"fa fa-angle-right\"></i>\n                    </a>\n            </nav>\n\n        </div>\n\n\n\n\n        <script>\n            window.playground_copyable = true;\n        </script>\n\n\n        <script src=\"../elasticlunr.min.js\"></script>\n        <script src=\"../mark.min.js\"></script>\n        <script src=\"../searcher.js\"></script>\n\n        <script src=\"../clipboard.min.js\"></script>\n        <script src=\"../highlight.js\"></script>\n        <script src=\"../book.js\"></script>\n\n        <!-- Custom JS scripts -->\n\n\n    </div>\n    \n\n</body></html>",
	"crawlDate": "2024-07-28T05:09:24.139Z"
}