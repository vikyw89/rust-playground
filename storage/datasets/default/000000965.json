{
	"title": "LaneCount in std::simd - Rust",
	"url": "https://doc.rust-lang.org/stable/std/simd/struct.LaneCount.html",
	"markdown": "# LaneCount in std::simd - Rust\n\n```\npub struct LaneCount<const N: usize>;\n```\n\n🔬This is a nightly-only experimental API. (`portable_simd` [#86656](https://github.com/rust-lang/rust/issues/86656))\n\nExpand description\n\nSpecifies the number of lanes in a SIMD vector as a type.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/portable-simd/crates/core_simd/src/lane_count.rs.html#9)[§](#impl-LaneCount%3CN%3E)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/portable-simd/crates/core_simd/src/lane_count.rs.html#11)\n\n🔬This is a nightly-only experimental API. (`portable_simd` [#86656](https://github.com/rust-lang/rust/issues/86656))\n\nThe number of bytes in a bitmask with this many lanes.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/portable-simd/crates/core_simd/src/lane_count.rs.html#36)[§](#impl-SupportedLaneCount-for-LaneCount%3C1%3E)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/portable-simd/crates/core_simd/src/lane_count.rs.html#36)[§](#impl-SupportedLaneCount-for-LaneCount%3C16%3E)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/portable-simd/crates/core_simd/src/lane_count.rs.html#36)[§](#impl-SupportedLaneCount-for-LaneCount%3C2%3E)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/portable-simd/crates/core_simd/src/lane_count.rs.html#36)[§](#impl-SupportedLaneCount-for-LaneCount%3C32%3E)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/portable-simd/crates/core_simd/src/lane_count.rs.html#36)[§](#impl-SupportedLaneCount-for-LaneCount%3C4%3E)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/portable-simd/crates/core_simd/src/lane_count.rs.html#36)[§](#impl-SupportedLaneCount-for-LaneCount%3C64%3E)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/portable-simd/crates/core_simd/src/lane_count.rs.html#36)[§](#impl-SupportedLaneCount-for-LaneCount%3C8%3E)\n\n[§](#impl-Freeze-for-LaneCount%3CN%3E)\n\n[§](#impl-RefUnwindSafe-for-LaneCount%3CN%3E)\n\n[§](#impl-Send-for-LaneCount%3CN%3E)\n\n[§](#impl-Sync-for-LaneCount%3CN%3E)\n\n[§](#impl-Unpin-for-LaneCount%3CN%3E)\n\n[§](#impl-UnwindSafe-for-LaneCount%3CN%3E)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/any.rs.html#140)[§](#impl-Any-for-T)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/borrow.rs.html#208)[§](#impl-Borrow%3CT%3E-for-T)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/borrow.rs.html#216)[§](#impl-BorrowMut%3CT%3E-for-T)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#765)[§](#impl-From%3CT%3E-for-T)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#768)[§](#method.from)\n\nReturns the argument unchanged.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#748-750)[§](#impl-Into%3CU%3E-for-T)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#758)[§](#method.into)\n\nCalls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of `[From](../convert/trait.From.html \"trait std::convert::From\")<T> for U` chooses to do.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#805-807)[§](#impl-TryFrom%3CU%3E-for-T)\n\n[§](#associatedtype.Error-1)\n\nThe type returned in the event of a conversion error.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#812)[§](#method.try_from)\n\nPerforms the conversion.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#790-792)[§](#impl-TryInto%3CU%3E-for-T)\n\n[§](#associatedtype.Error)\n\nThe type returned in the event of a conversion error.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#797)[§](#method.try_into)\n\nPerforms the conversion.",
	"html": "<!DOCTYPE html><html lang=\"en\" data-theme=\"light\"><head><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><meta name=\"generator\" content=\"rustdoc\"><meta name=\"description\" content=\"Specifies the number of lanes in a SIMD vector as a type.\"><title>LaneCount in std::simd - Rust</title><script>if(window.location.protocol!==\"file:\")document.head.insertAdjacentHTML(\"beforeend\",\"SourceSerif4-Regular-46f98efaafac5295.ttf.woff2,FiraSans-Regular-018c141bf0843ffd.woff2,FiraSans-Medium-8f9a781e4970d388.woff2,SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2,SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\".split(\",\").map(f=>`<link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin href=\"../../static.files/${f}\">`).join(\"\"))</script><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceSerif4-Regular-46f98efaafac5295.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/FiraSans-Regular-018c141bf0843ffd.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/FiraSans-Medium-8f9a781e4970d388.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../static.files/SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\"><link rel=\"stylesheet\" href=\"../../static.files/normalize-76eba96aa4d2e634.css\"><link rel=\"stylesheet\" href=\"../../static.files/rustdoc-dd39b87e5fcfba68.css\"><meta name=\"rustdoc-vars\" data-root-path=\"../../\" data-static-root-path=\"../../static.files/\" data-current-crate=\"std\" data-themes=\"\" data-resource-suffix=\"1.80.0\" data-rustdoc-version=\"1.80.0 (051478957 2024-07-21)\" data-channel=\"1.80.0\" data-search-js=\"search-d52510db62a78183.js\" data-settings-js=\"settings-4313503d2e1961c2.js\"><script src=\"../../static.files/storage-118b08c4c78b968e.js\"></script><script defer=\"\" src=\"sidebar-items1.80.0.js\"></script><script defer=\"\" src=\"../../static.files/main-20a3ad099b048cf2.js\"></script><noscript><link rel=\"stylesheet\" href=\"../../static.files/noscript-df360f571f6edeae.css\"></noscript><link rel=\"alternate icon\" type=\"image/png\" href=\"../../static.files/favicon-32x32-422f7d1d52889060.png\"><link rel=\"icon\" type=\"image/svg+xml\" href=\"../../static.files/favicon-2c020d218678b618.svg\"></head><body class=\"rustdoc struct\"><!--[if lte IE 11]><div class=\"warning\">This old browser is unsupported and will most likely display funky things.</div><![endif]--><nav class=\"mobile-topbar\"><button class=\"sidebar-menu-toggle\" title=\"show sidebar\"></button><a class=\"logo-container\" href=\"../../std/index.html\"><img class=\"rust-logo\" src=\"../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"\"></a><h2 class=\"location\"><a href=\"#\">LaneCount</a></h2></nav><nav class=\"sidebar\"><div class=\"sidebar-crate\"><a class=\"logo-container\" href=\"../../std/index.html\"><img class=\"rust-logo\" src=\"../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"logo\"></a><h2><a href=\"../../std/index.html\">std</a><span class=\"version\">1.80.0</span></h2></div><div class=\"version\">(051478957\t2024-07-21)</div><h2 class=\"location\"><a href=\"#\">LaneCount</a></h2><div class=\"sidebar-elems\"><section><h3><a href=\"#implementations\">Associated Constants</a></h3><ul class=\"block associatedconstant\"><li><a href=\"#associatedconstant.BITMASK_LEN\">BITMASK_LEN</a></li></ul><h3><a href=\"#trait-implementations\">Trait Implementations</a></h3><ul class=\"block trait-implementation\"><li><a href=\"#impl-SupportedLaneCount-for-LaneCount%3C1%3E\">SupportedLaneCount</a></li><li><a href=\"#impl-SupportedLaneCount-for-LaneCount%3C16%3E\">SupportedLaneCount</a></li><li><a href=\"#impl-SupportedLaneCount-for-LaneCount%3C2%3E\">SupportedLaneCount</a></li><li><a href=\"#impl-SupportedLaneCount-for-LaneCount%3C32%3E\">SupportedLaneCount</a></li><li><a href=\"#impl-SupportedLaneCount-for-LaneCount%3C4%3E\">SupportedLaneCount</a></li><li><a href=\"#impl-SupportedLaneCount-for-LaneCount%3C64%3E\">SupportedLaneCount</a></li><li><a href=\"#impl-SupportedLaneCount-for-LaneCount%3C8%3E\">SupportedLaneCount</a></li></ul><h3><a href=\"#synthetic-implementations\">Auto Trait Implementations</a></h3><ul class=\"block synthetic-implementation\"><li><a href=\"#impl-Freeze-for-LaneCount%3CN%3E\">Freeze</a></li><li><a href=\"#impl-RefUnwindSafe-for-LaneCount%3CN%3E\">RefUnwindSafe</a></li><li><a href=\"#impl-Send-for-LaneCount%3CN%3E\">Send</a></li><li><a href=\"#impl-Sync-for-LaneCount%3CN%3E\">Sync</a></li><li><a href=\"#impl-Unpin-for-LaneCount%3CN%3E\">Unpin</a></li><li><a href=\"#impl-UnwindSafe-for-LaneCount%3CN%3E\">UnwindSafe</a></li></ul><h3><a href=\"#blanket-implementations\">Blanket Implementations</a></h3><ul class=\"block blanket-implementation\"><li><a href=\"#impl-Any-for-T\">Any</a></li><li><a href=\"#impl-Borrow%3CT%3E-for-T\">Borrow&lt;T&gt;</a></li><li><a href=\"#impl-BorrowMut%3CT%3E-for-T\">BorrowMut&lt;T&gt;</a></li><li><a href=\"#impl-From%3CT%3E-for-T\">From&lt;T&gt;</a></li><li><a href=\"#impl-Into%3CU%3E-for-T\">Into&lt;U&gt;</a></li><li><a href=\"#impl-TryFrom%3CU%3E-for-T\">TryFrom&lt;U&gt;</a></li><li><a href=\"#impl-TryInto%3CU%3E-for-T\">TryInto&lt;U&gt;</a></li></ul></section><h2><a href=\"index.html\">In std::simd</a></h2><h3><a href=\"index.html#modules\">Modules</a></h3><ul class=\"block mod\"><li><a href=\"cmp/index.html\">cmp</a></li><li><a href=\"num/index.html\">num</a></li><li><a href=\"prelude/index.html\">prelude</a></li><li><a href=\"ptr/index.html\">ptr</a></li></ul><h3><a href=\"index.html#macros\">Macros</a></h3><ul class=\"block macro\"><li><a href=\"macro.simd_swizzle.html\">simd_swizzle</a></li></ul><h3><a href=\"index.html#structs\">Structs</a></h3><ul class=\"block struct\"><li><a href=\"struct.LaneCount.html\">LaneCount</a></li><li><a href=\"struct.Mask.html\">Mask</a></li><li><a href=\"struct.Simd.html\">Simd</a></li></ul><h3><a href=\"index.html#traits\">Traits</a></h3><ul class=\"block trait\"><li><a href=\"trait.MaskElement.html\">MaskElement</a></li><li><a href=\"trait.SimdCast.html\">SimdCast</a></li><li><a href=\"trait.SimdElement.html\">SimdElement</a></li><li><a href=\"trait.StdFloat.html\">StdFloat</a></li><li><a href=\"trait.SupportedLaneCount.html\">SupportedLaneCount</a></li><li><a href=\"trait.Swizzle.html\">Swizzle</a></li><li><a href=\"trait.ToBytes.html\">ToBytes</a></li></ul><h3><a href=\"index.html#types\">Type Aliases</a></h3><ul class=\"block type\"><li><a href=\"type.f32x1.html\">f32x1</a></li><li><a href=\"type.f32x16.html\">f32x16</a></li><li><a href=\"type.f32x2.html\">f32x2</a></li><li><a href=\"type.f32x32.html\">f32x32</a></li><li><a href=\"type.f32x4.html\">f32x4</a></li><li><a href=\"type.f32x64.html\">f32x64</a></li><li><a href=\"type.f32x8.html\">f32x8</a></li><li><a href=\"type.f64x1.html\">f64x1</a></li><li><a href=\"type.f64x16.html\">f64x16</a></li><li><a href=\"type.f64x2.html\">f64x2</a></li><li><a href=\"type.f64x32.html\">f64x32</a></li><li><a href=\"type.f64x4.html\">f64x4</a></li><li><a href=\"type.f64x64.html\">f64x64</a></li><li><a href=\"type.f64x8.html\">f64x8</a></li><li><a href=\"type.i16x1.html\">i16x1</a></li><li><a href=\"type.i16x16.html\">i16x16</a></li><li><a href=\"type.i16x2.html\">i16x2</a></li><li><a href=\"type.i16x32.html\">i16x32</a></li><li><a href=\"type.i16x4.html\">i16x4</a></li><li><a href=\"type.i16x64.html\">i16x64</a></li><li><a href=\"type.i16x8.html\">i16x8</a></li><li><a href=\"type.i32x1.html\">i32x1</a></li><li><a href=\"type.i32x16.html\">i32x16</a></li><li><a href=\"type.i32x2.html\">i32x2</a></li><li><a href=\"type.i32x32.html\">i32x32</a></li><li><a href=\"type.i32x4.html\">i32x4</a></li><li><a href=\"type.i32x64.html\">i32x64</a></li><li><a href=\"type.i32x8.html\">i32x8</a></li><li><a href=\"type.i64x1.html\">i64x1</a></li><li><a href=\"type.i64x16.html\">i64x16</a></li><li><a href=\"type.i64x2.html\">i64x2</a></li><li><a href=\"type.i64x32.html\">i64x32</a></li><li><a href=\"type.i64x4.html\">i64x4</a></li><li><a href=\"type.i64x64.html\">i64x64</a></li><li><a href=\"type.i64x8.html\">i64x8</a></li><li><a href=\"type.i8x1.html\">i8x1</a></li><li><a href=\"type.i8x16.html\">i8x16</a></li><li><a href=\"type.i8x2.html\">i8x2</a></li><li><a href=\"type.i8x32.html\">i8x32</a></li><li><a href=\"type.i8x4.html\">i8x4</a></li><li><a href=\"type.i8x64.html\">i8x64</a></li><li><a href=\"type.i8x8.html\">i8x8</a></li><li><a href=\"type.isizex1.html\">isizex1</a></li><li><a href=\"type.isizex16.html\">isizex16</a></li><li><a href=\"type.isizex2.html\">isizex2</a></li><li><a href=\"type.isizex32.html\">isizex32</a></li><li><a href=\"type.isizex4.html\">isizex4</a></li><li><a href=\"type.isizex64.html\">isizex64</a></li><li><a href=\"type.isizex8.html\">isizex8</a></li><li><a href=\"type.mask16x1.html\">mask16x1</a></li><li><a href=\"type.mask16x16.html\">mask16x16</a></li><li><a href=\"type.mask16x2.html\">mask16x2</a></li><li><a href=\"type.mask16x32.html\">mask16x32</a></li><li><a href=\"type.mask16x4.html\">mask16x4</a></li><li><a href=\"type.mask16x64.html\">mask16x64</a></li><li><a href=\"type.mask16x8.html\">mask16x8</a></li><li><a href=\"type.mask32x1.html\">mask32x1</a></li><li><a href=\"type.mask32x16.html\">mask32x16</a></li><li><a href=\"type.mask32x2.html\">mask32x2</a></li><li><a href=\"type.mask32x32.html\">mask32x32</a></li><li><a href=\"type.mask32x4.html\">mask32x4</a></li><li><a href=\"type.mask32x64.html\">mask32x64</a></li><li><a href=\"type.mask32x8.html\">mask32x8</a></li><li><a href=\"type.mask64x1.html\">mask64x1</a></li><li><a href=\"type.mask64x16.html\">mask64x16</a></li><li><a href=\"type.mask64x2.html\">mask64x2</a></li><li><a href=\"type.mask64x32.html\">mask64x32</a></li><li><a href=\"type.mask64x4.html\">mask64x4</a></li><li><a href=\"type.mask64x64.html\">mask64x64</a></li><li><a href=\"type.mask64x8.html\">mask64x8</a></li><li><a href=\"type.mask8x1.html\">mask8x1</a></li><li><a href=\"type.mask8x16.html\">mask8x16</a></li><li><a href=\"type.mask8x2.html\">mask8x2</a></li><li><a href=\"type.mask8x32.html\">mask8x32</a></li><li><a href=\"type.mask8x4.html\">mask8x4</a></li><li><a href=\"type.mask8x64.html\">mask8x64</a></li><li><a href=\"type.mask8x8.html\">mask8x8</a></li><li><a href=\"type.masksizex1.html\">masksizex1</a></li><li><a href=\"type.masksizex16.html\">masksizex16</a></li><li><a href=\"type.masksizex2.html\">masksizex2</a></li><li><a href=\"type.masksizex32.html\">masksizex32</a></li><li><a href=\"type.masksizex4.html\">masksizex4</a></li><li><a href=\"type.masksizex64.html\">masksizex64</a></li><li><a href=\"type.masksizex8.html\">masksizex8</a></li><li><a href=\"type.u16x1.html\">u16x1</a></li><li><a href=\"type.u16x16.html\">u16x16</a></li><li><a href=\"type.u16x2.html\">u16x2</a></li><li><a href=\"type.u16x32.html\">u16x32</a></li><li><a href=\"type.u16x4.html\">u16x4</a></li><li><a href=\"type.u16x64.html\">u16x64</a></li><li><a href=\"type.u16x8.html\">u16x8</a></li><li><a href=\"type.u32x1.html\">u32x1</a></li><li><a href=\"type.u32x16.html\">u32x16</a></li><li><a href=\"type.u32x2.html\">u32x2</a></li><li><a href=\"type.u32x32.html\">u32x32</a></li><li><a href=\"type.u32x4.html\">u32x4</a></li><li><a href=\"type.u32x64.html\">u32x64</a></li><li><a href=\"type.u32x8.html\">u32x8</a></li><li><a href=\"type.u64x1.html\">u64x1</a></li><li><a href=\"type.u64x16.html\">u64x16</a></li><li><a href=\"type.u64x2.html\">u64x2</a></li><li><a href=\"type.u64x32.html\">u64x32</a></li><li><a href=\"type.u64x4.html\">u64x4</a></li><li><a href=\"type.u64x64.html\">u64x64</a></li><li><a href=\"type.u64x8.html\">u64x8</a></li><li><a href=\"type.u8x1.html\">u8x1</a></li><li><a href=\"type.u8x16.html\">u8x16</a></li><li><a href=\"type.u8x2.html\">u8x2</a></li><li><a href=\"type.u8x32.html\">u8x32</a></li><li><a href=\"type.u8x4.html\">u8x4</a></li><li><a href=\"type.u8x64.html\">u8x64</a></li><li><a href=\"type.u8x8.html\">u8x8</a></li><li><a href=\"type.usizex1.html\">usizex1</a></li><li><a href=\"type.usizex16.html\">usizex16</a></li><li><a href=\"type.usizex2.html\">usizex2</a></li><li><a href=\"type.usizex32.html\">usizex32</a></li><li><a href=\"type.usizex4.html\">usizex4</a></li><li><a href=\"type.usizex64.html\">usizex64</a></li><li><a href=\"type.usizex8.html\">usizex8</a></li></ul></div></nav><div class=\"sidebar-resizer\"></div><main><div class=\"width-limiter\"><rustdoc-search><nav class=\"sub\">\n            <form class=\"search-form\">\n                <span></span> <!-- This empty span is a hacky fix for Safari - See #93184 -->\n                <div id=\"sidebar-button\" tabindex=\"-1\">\n                    <a href=\"../../std/all.html\" title=\"show sidebar\"></a>\n                </div>\n                <input class=\"search-input\" name=\"search\" aria-label=\"Run search in the documentation\" autocomplete=\"off\" spellcheck=\"false\" placeholder=\"Type ‘S’ or ‘/’ to search, ‘?’ for more options…\" type=\"search\">\n                <div id=\"help-button\" tabindex=\"-1\">\n                    <a href=\"../../help.html\" title=\"help\">?</a>\n                </div>\n                <div id=\"settings-menu\" tabindex=\"-1\">\n                    <a href=\"../../settings.html\" title=\"settings\">\n                        Settings\n                    </a>\n                </div>\n            </form>\n        </nav></rustdoc-search><section id=\"main-content\" class=\"content\"><div class=\"main-heading\"><h1>Struct <a href=\"../index.html\">std</a>::<wbr><a href=\"index.html\">simd</a>::<wbr><a class=\"struct\" href=\"#\">LaneCount</a><button id=\"copy-path\" title=\"Copy item path to clipboard\">Copy item path</button></h1><span class=\"out-of-band\"><a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/portable-simd/crates/core_simd/src/lane_count.rs.html#7\">source</a> · <button id=\"toggle-all-docs\" title=\"collapse all docs\">[<span>−</span>]</button></span></div><pre class=\"rust item-decl\"><code>pub struct LaneCount&lt;const N: <a class=\"primitive\" href=\"../primitive.usize.html\">usize</a>&gt;;</code></pre><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>portable_simd</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/86656\">#86656</a>)</span></div></span><details class=\"toggle top-doc\" open=\"\"><summary class=\"hideme\"><span>Expand description</span></summary><div class=\"docblock\"><p>Specifies the number of lanes in a SIMD vector as a type.</p>\n</div></details><h2 id=\"implementations\" class=\"section-header\">Implementations<a href=\"#implementations\" class=\"anchor\">§</a></h2><div id=\"implementations-list\"><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-LaneCount%3CN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/portable-simd/crates/core_simd/src/lane_count.rs.html#9\">source</a><a href=\"#impl-LaneCount%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"../primitive.usize.html\">usize</a>&gt; <a class=\"struct\" href=\"struct.LaneCount.html\" title=\"struct std::simd::LaneCount\">LaneCount</a>&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open=\"\"><summary><section id=\"associatedconstant.BITMASK_LEN\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/portable-simd/crates/core_simd/src/lane_count.rs.html#11\">source</a><h4 class=\"code-header\">pub const <a href=\"#associatedconstant.BITMASK_LEN\" class=\"constant\">BITMASK_LEN</a>: <a class=\"primitive\" href=\"../primitive.usize.html\">usize</a> = _</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>portable_simd</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/86656\">#86656</a>)</span></div></span></summary><div class=\"docblock\"><p>The number of bytes in a bitmask with this many lanes.</p>\n</div></details></div></details></div><h2 id=\"trait-implementations\" class=\"section-header\">Trait Implementations<a href=\"#trait-implementations\" class=\"anchor\">§</a></h2><div id=\"trait-implementations-list\"><section id=\"impl-SupportedLaneCount-for-LaneCount%3C1%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/portable-simd/crates/core_simd/src/lane_count.rs.html#36\">source</a><a href=\"#impl-SupportedLaneCount-for-LaneCount%3C1%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.SupportedLaneCount.html\" title=\"trait std::simd::SupportedLaneCount\">SupportedLaneCount</a> for <a class=\"struct\" href=\"struct.LaneCount.html\" title=\"struct std::simd::LaneCount\">LaneCount</a>&lt;1&gt;</h3></section><section id=\"impl-SupportedLaneCount-for-LaneCount%3C16%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/portable-simd/crates/core_simd/src/lane_count.rs.html#36\">source</a><a href=\"#impl-SupportedLaneCount-for-LaneCount%3C16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.SupportedLaneCount.html\" title=\"trait std::simd::SupportedLaneCount\">SupportedLaneCount</a> for <a class=\"struct\" href=\"struct.LaneCount.html\" title=\"struct std::simd::LaneCount\">LaneCount</a>&lt;16&gt;</h3></section><section id=\"impl-SupportedLaneCount-for-LaneCount%3C2%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/portable-simd/crates/core_simd/src/lane_count.rs.html#36\">source</a><a href=\"#impl-SupportedLaneCount-for-LaneCount%3C2%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.SupportedLaneCount.html\" title=\"trait std::simd::SupportedLaneCount\">SupportedLaneCount</a> for <a class=\"struct\" href=\"struct.LaneCount.html\" title=\"struct std::simd::LaneCount\">LaneCount</a>&lt;2&gt;</h3></section><section id=\"impl-SupportedLaneCount-for-LaneCount%3C32%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/portable-simd/crates/core_simd/src/lane_count.rs.html#36\">source</a><a href=\"#impl-SupportedLaneCount-for-LaneCount%3C32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.SupportedLaneCount.html\" title=\"trait std::simd::SupportedLaneCount\">SupportedLaneCount</a> for <a class=\"struct\" href=\"struct.LaneCount.html\" title=\"struct std::simd::LaneCount\">LaneCount</a>&lt;32&gt;</h3></section><section id=\"impl-SupportedLaneCount-for-LaneCount%3C4%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/portable-simd/crates/core_simd/src/lane_count.rs.html#36\">source</a><a href=\"#impl-SupportedLaneCount-for-LaneCount%3C4%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.SupportedLaneCount.html\" title=\"trait std::simd::SupportedLaneCount\">SupportedLaneCount</a> for <a class=\"struct\" href=\"struct.LaneCount.html\" title=\"struct std::simd::LaneCount\">LaneCount</a>&lt;4&gt;</h3></section><section id=\"impl-SupportedLaneCount-for-LaneCount%3C64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/portable-simd/crates/core_simd/src/lane_count.rs.html#36\">source</a><a href=\"#impl-SupportedLaneCount-for-LaneCount%3C64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.SupportedLaneCount.html\" title=\"trait std::simd::SupportedLaneCount\">SupportedLaneCount</a> for <a class=\"struct\" href=\"struct.LaneCount.html\" title=\"struct std::simd::LaneCount\">LaneCount</a>&lt;64&gt;</h3></section><section id=\"impl-SupportedLaneCount-for-LaneCount%3C8%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/portable-simd/crates/core_simd/src/lane_count.rs.html#36\">source</a><a href=\"#impl-SupportedLaneCount-for-LaneCount%3C8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.SupportedLaneCount.html\" title=\"trait std::simd::SupportedLaneCount\">SupportedLaneCount</a> for <a class=\"struct\" href=\"struct.LaneCount.html\" title=\"struct std::simd::LaneCount\">LaneCount</a>&lt;8&gt;</h3></section></div><h2 id=\"synthetic-implementations\" class=\"section-header\">Auto Trait Implementations<a href=\"#synthetic-implementations\" class=\"anchor\">§</a></h2><div id=\"synthetic-implementations-list\"><section id=\"impl-Freeze-for-LaneCount%3CN%3E\" class=\"impl\"><a href=\"#impl-Freeze-for-LaneCount%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"../primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"../marker/trait.Freeze.html\" title=\"trait std::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"struct.LaneCount.html\" title=\"struct std::simd::LaneCount\">LaneCount</a>&lt;N&gt;</h3></section><section id=\"impl-RefUnwindSafe-for-LaneCount%3CN%3E\" class=\"impl\"><a href=\"#impl-RefUnwindSafe-for-LaneCount%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"../primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"../panic/trait.RefUnwindSafe.html\" title=\"trait std::panic::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"struct\" href=\"struct.LaneCount.html\" title=\"struct std::simd::LaneCount\">LaneCount</a>&lt;N&gt;</h3></section><section id=\"impl-Send-for-LaneCount%3CN%3E\" class=\"impl\"><a href=\"#impl-Send-for-LaneCount%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"../primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"../marker/trait.Send.html\" title=\"trait std::marker::Send\">Send</a> for <a class=\"struct\" href=\"struct.LaneCount.html\" title=\"struct std::simd::LaneCount\">LaneCount</a>&lt;N&gt;</h3></section><section id=\"impl-Sync-for-LaneCount%3CN%3E\" class=\"impl\"><a href=\"#impl-Sync-for-LaneCount%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"../primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"../marker/trait.Sync.html\" title=\"trait std::marker::Sync\">Sync</a> for <a class=\"struct\" href=\"struct.LaneCount.html\" title=\"struct std::simd::LaneCount\">LaneCount</a>&lt;N&gt;</h3></section><section id=\"impl-Unpin-for-LaneCount%3CN%3E\" class=\"impl\"><a href=\"#impl-Unpin-for-LaneCount%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"../primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"../marker/trait.Unpin.html\" title=\"trait std::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"struct.LaneCount.html\" title=\"struct std::simd::LaneCount\">LaneCount</a>&lt;N&gt;</h3></section><section id=\"impl-UnwindSafe-for-LaneCount%3CN%3E\" class=\"impl\"><a href=\"#impl-UnwindSafe-for-LaneCount%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"../primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"../panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"struct.LaneCount.html\" title=\"struct std::simd::LaneCount\">LaneCount</a>&lt;N&gt;</h3></section></div><h2 id=\"blanket-implementations\" class=\"section-header\">Blanket Implementations<a href=\"#blanket-implementations\" class=\"anchor\">§</a></h2><div id=\"blanket-implementations-list\"><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-Any-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/any.rs.html#140\">source</a><a href=\"#impl-Any-for-T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"../any/trait.Any.html\" title=\"trait std::any::Any\">Any</a> for T<div class=\"where\">where\n    T: 'static + ?<a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.type_id\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/any.rs.html#141\">source</a><a href=\"#method.type_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"../any/trait.Any.html#tymethod.type_id\" class=\"fn\">type_id</a>(&amp;self) -&gt; <a class=\"struct\" href=\"../any/struct.TypeId.html\" title=\"struct std::any::TypeId\">TypeId</a></h4></section></summary><div class=\"docblock\">Gets the <code>TypeId</code> of <code>self</code>. <a href=\"../any/trait.Any.html#tymethod.type_id\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-Borrow%3CT%3E-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/borrow.rs.html#208\">source</a><a href=\"#impl-Borrow%3CT%3E-for-T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"../borrow/trait.Borrow.html\" title=\"trait std::borrow::Borrow\">Borrow</a>&lt;T&gt; for T<div class=\"where\">where\n    T: ?<a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.borrow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/borrow.rs.html#210\">source</a><a href=\"#method.borrow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"../borrow/trait.Borrow.html#tymethod.borrow\" class=\"fn\">borrow</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"../primitive.reference.html\">&amp;T</a></h4></section></summary><div class=\"docblock\">Immutably borrows from an owned value. <a href=\"../borrow/trait.Borrow.html#tymethod.borrow\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-BorrowMut%3CT%3E-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/borrow.rs.html#216\">source</a><a href=\"#impl-BorrowMut%3CT%3E-for-T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"../borrow/trait.BorrowMut.html\" title=\"trait std::borrow::BorrowMut\">BorrowMut</a>&lt;T&gt; for T<div class=\"where\">where\n    T: ?<a class=\"trait\" href=\"../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.borrow_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/borrow.rs.html#217\">source</a><a href=\"#method.borrow_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"../borrow/trait.BorrowMut.html#tymethod.borrow_mut\" class=\"fn\">borrow_mut</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"../primitive.reference.html\">&amp;mut T</a></h4></section></summary><div class=\"docblock\">Mutably borrows from an owned value. <a href=\"../borrow/trait.BorrowMut.html#tymethod.borrow_mut\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-From%3CT%3E-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#765\">source</a><a href=\"#impl-From%3CT%3E-for-T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"../convert/trait.From.html\" title=\"trait std::convert::From\">From</a>&lt;T&gt; for T</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#768\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"../convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(t: T) -&gt; T</h4></section></summary><div class=\"docblock\"><p>Returns the argument unchanged.</p>\n</div></details></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-Into%3CU%3E-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#748-750\">source</a><a href=\"#impl-Into%3CU%3E-for-T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"../convert/trait.Into.html\" title=\"trait std::convert::Into\">Into</a>&lt;U&gt; for T<div class=\"where\">where\n    U: <a class=\"trait\" href=\"../convert/trait.From.html\" title=\"trait std::convert::From\">From</a>&lt;T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#758\">source</a><a href=\"#method.into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"../convert/trait.Into.html#tymethod.into\" class=\"fn\">into</a>(self) -&gt; U</h4></section></summary><div class=\"docblock\"><p>Calls <code>U::from(self)</code>.</p>\n<p>That is, this conversion is whatever the implementation of\n<code><a href=\"../convert/trait.From.html\" title=\"trait std::convert::From\">From</a>&lt;T&gt; for U</code> chooses to do.</p>\n</div></details></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-TryFrom%3CU%3E-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#805-807\">source</a><a href=\"#impl-TryFrom%3CU%3E-for-T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"../convert/trait.TryFrom.html\" title=\"trait std::convert::TryFrom\">TryFrom</a>&lt;U&gt; for T<div class=\"where\">where\n    U: <a class=\"trait\" href=\"../convert/trait.Into.html\" title=\"trait std::convert::Into\">Into</a>&lt;T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open=\"\"><summary><section id=\"associatedtype.Error-1\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error-1\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"../convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"../convert/enum.Infallible.html\" title=\"enum std::convert::Infallible\">Infallible</a></h4></section></summary><div class=\"docblock\">The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#812\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"../convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(value: U) -&gt; <a class=\"enum\" href=\"../result/enum.Result.html\" title=\"enum std::result::Result\">Result</a>&lt;T, &lt;T as <a class=\"trait\" href=\"../convert/trait.TryFrom.html\" title=\"trait std::convert::TryFrom\">TryFrom</a>&lt;U&gt;&gt;::<a class=\"associatedtype\" href=\"../convert/trait.TryFrom.html#associatedtype.Error\" title=\"type std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\">Performs the conversion.</div></details></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-TryInto%3CU%3E-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#790-792\">source</a><a href=\"#impl-TryInto%3CU%3E-for-T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"../convert/trait.TryInto.html\" title=\"trait std::convert::TryInto\">TryInto</a>&lt;U&gt; for T<div class=\"where\">where\n    U: <a class=\"trait\" href=\"../convert/trait.TryFrom.html\" title=\"trait std::convert::TryFrom\">TryFrom</a>&lt;T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open=\"\"><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"../convert/trait.TryInto.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = &lt;U as <a class=\"trait\" href=\"../convert/trait.TryFrom.html\" title=\"trait std::convert::TryFrom\">TryFrom</a>&lt;T&gt;&gt;::<a class=\"associatedtype\" href=\"../convert/trait.TryFrom.html#associatedtype.Error\" title=\"type std::convert::TryFrom::Error\">Error</a></h4></section></summary><div class=\"docblock\">The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.try_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#797\">source</a><a href=\"#method.try_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"../convert/trait.TryInto.html#tymethod.try_into\" class=\"fn\">try_into</a>(self) -&gt; <a class=\"enum\" href=\"../result/enum.Result.html\" title=\"enum std::result::Result\">Result</a>&lt;U, &lt;U as <a class=\"trait\" href=\"../convert/trait.TryFrom.html\" title=\"trait std::convert::TryFrom\">TryFrom</a>&lt;T&gt;&gt;::<a class=\"associatedtype\" href=\"../convert/trait.TryFrom.html#associatedtype.Error\" title=\"type std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\">Performs the conversion.</div></details></div></details></div></section></div></main></body></html>",
	"crawlDate": "2024-07-28T05:14:30.321Z"
}