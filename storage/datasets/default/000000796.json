{
	"title": "Preludes - The Rust Reference",
	"url": "https://doc.rust-lang.org/stable/reference/names/preludes.html",
	"markdown": "# Preludes - The Rust Reference\n\nA _prelude_ is a collection of names that are automatically brought into scope of every module in a crate.\n\nThese prelude names are not part of the module itself: they are implicitly queried during [name resolution](name-resolution.html). For example, even though something like [`Box`](../../std/boxed/struct.Box.html) is in scope in every module, you cannot refer to it as `self::Box` because it is not a member of the current module.\n\nThere are several different preludes:\n\n-   [Standard library prelude](#standard-library-prelude)\n-   [Extern prelude](#extern-prelude)\n-   [Language prelude](#language-prelude)\n-   [`macro_use` prelude](#macro_use-prelude)\n-   [Tool prelude](#tool-prelude)\n\n## [Standard library prelude](#standard-library-prelude)\n\nEach crate has a standard library prelude, which consists of the names from a single standard library module. The module used depends on the crate's edition, and on whether the [`no_std` attribute](#the-no_std-attribute) is applied to the crate:\n\n> **Note**:\n> \n> [`std::prelude::rust_2015`](../../std/prelude/rust_2015/index.html) and [`std::prelude::rust_2018`](../../std/prelude/rust_2018/index.html) have the same contents as [`std::prelude::v1`](../../std/prelude/v1/index.html).\n> \n> [`core::prelude::rust_2015`](../../core/prelude/rust_2015/index.html) and [`core::prelude::rust_2018`](../../core/prelude/rust_2018/index.html) have the same contents as [`core::prelude::v1`](../../core/prelude/v1/index.html).\n\n## [Extern prelude](#extern-prelude)\n\nExternal crates imported with [`extern crate`](../items/extern-crates.html) in the root module or provided to the compiler (as with the `--extern` flag with `rustc`) are added to the _extern prelude_. If imported with an alias such as `extern crate orig_name as new_name`, then the symbol `new_name` is instead added to the prelude.\n\nThe [`core`](../../core/index.html) crate is always added to the extern prelude. The [`std`](../../std/index.html) crate is added as long as the [`no_std` attribute](#the-no_std-attribute) is not specified in the crate root.\n\n> **Edition Differences**: In the 2015 edition, crates in the extern prelude cannot be referenced via [use declarations](../items/use-declarations.html), so it is generally standard practice to include `extern crate` declarations to bring them into scope.\n> \n> Beginning in the 2018 edition, [use declarations](../items/use-declarations.html) can reference crates in the extern prelude, so it is considered unidiomatic to use `extern crate`.\n\n> **Note**: Additional crates that ship with `rustc`, such as [`alloc`](../../alloc/index.html), and [`test`](../../test/index.html), are not automatically included with the `--extern` flag when using Cargo. They must be brought into scope with an `extern crate` declaration, even in the 2018 edition.\n> \n> ```rust\n> #![allow(unused)]\n> fn main() {\n> extern crate alloc;\n> use alloc::rc::Rc;\n> }\n> ```\n> \n> Cargo does bring in `proc_macro` to the extern prelude for proc-macro crates only.\n\n### [The `no_std` attribute](#the-no_std-attribute)\n\nBy default, the standard library is automatically included in the crate root module. The [`std`](../../std/index.html) crate is added to the root, along with an implicit [`macro_use` attribute](about:blank/macros-by-example.html#the-macro_use-attribute) pulling in all macros exported from `std` into the [`macro_use` prelude](#macro_use-prelude). Both [`core`](../../core/index.html) and [`std`](../../std/index.html) are added to the [extern prelude](#extern-prelude).\n\nThe _`no_std` [attribute](../attributes.html)_ may be applied at the crate level to prevent the [`std`](../../std/index.html) crate from being automatically added into scope. It does three things:\n\n-   Prevents `std` from being added to the [extern prelude](#extern-prelude).\n-   Affects which module is used to make up the [standard library prelude](#standard-library-prelude) (as described above).\n-   Injects the [`core`](../../core/index.html) crate into the crate root instead of [`std`](../../std/index.html), and pulls in all macros exported from `core` in the [`macro_use` prelude](#macro_use-prelude).\n\n> **Note**: Using the core prelude over the standard prelude is useful when either the crate is targeting a platform that does not support the standard library or is purposefully not using the capabilities of the standard library. Those capabilities are mainly dynamic memory allocation (e.g. `Box` and `Vec`) and file and network capabilities (e.g. `std::fs` and `std::io`).\n\nWarning: Using `no_std` does not prevent the standard library from being linked in. It is still valid to put `extern crate std;` into the crate and dependencies can also link it in.\n\n## [Language prelude](#language-prelude)\n\nThe language prelude includes names of types and attributes that are built-in to the language. The language prelude is always in scope. It includes the following:\n\n-   [Type namespace](namespaces.html)\n    -   [Boolean type](../types/boolean.html) — `bool`\n    -   [Textual types](../types/textual.html) — `char` and `str`\n    -   [Integer types](about:blank/types/numeric.html#integer-types) — `i8`, `i16`, `i32`, `i64`, `i128`, `u8`, `u16`, `u32`, `u64`, `u128`\n    -   [Machine-dependent integer types](about:blank/types/numeric.html#machine-dependent-integer-types) — `usize` and `isize`\n    -   [floating-point types](about:blank/types/numeric.html#floating-point-types) — `f32` and `f64`\n-   [Macro namespace](namespaces.html)\n    -   [Built-in attributes](about:blank/attributes.html#built-in-attributes-index)\n\n## [`macro_use` prelude](#macro_use-prelude)\n\nThe `macro_use` prelude includes macros from external crates that were imported by the [`macro_use` attribute](about:blank/macros-by-example.html#the-macro_use-attribute) applied to an [`extern crate`](../items/extern-crates.html).\n\nThe tool prelude includes tool names for external tools in the [type namespace](namespaces.html). See the [tool attributes](about:blank/attributes.html#tool-attributes) section for more details.\n\n## [The `no_implicit_prelude` attribute](#the-no_implicit_prelude-attribute)\n\nThe _`no_implicit_prelude` [attribute](../attributes.html)_ may be applied at the crate level or on a module to indicate that it should not automatically bring the [standard library prelude](#standard-library-prelude), [extern prelude](#extern-prelude), or [tool prelude](#tool-prelude) into scope for that module or any of its descendants.\n\nThis attribute does not affect the [language prelude](#language-prelude).\n\n> **Edition Differences**: In the 2015 edition, the `no_implicit_prelude` attribute does not affect the [`macro_use` prelude](#macro_use-prelude), and all macros exported from the standard library are still included in the `macro_use` prelude. Starting in the 2018 edition, it will remove the `macro_use` prelude.",
	"html": "<!DOCTYPE html><html lang=\"en\" class=\"light\" dir=\"ltr\"><head>\n        <!-- Book generated using mdBook -->\n        <meta charset=\"UTF-8\">\n        <title>Preludes - The Rust Reference</title>\n\n\n        <!-- Custom HTML head -->\n        \n        <meta name=\"description\" content=\"\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n        <meta name=\"theme-color\" content=\"rgb(255, 255, 255)\">\n\n        <link rel=\"icon\" href=\"../favicon.svg\">\n        <link rel=\"shortcut icon\" href=\"../favicon.png\">\n        <link rel=\"stylesheet\" href=\"../css/variables.css\">\n        <link rel=\"stylesheet\" href=\"../css/general.css\">\n        <link rel=\"stylesheet\" href=\"../css/chrome.css\">\n        <link rel=\"stylesheet\" href=\"../css/print.css\" media=\"print\">\n\n        <!-- Fonts -->\n        <link rel=\"stylesheet\" href=\"../FontAwesome/css/font-awesome.css\">\n        <link rel=\"stylesheet\" href=\"../fonts/fonts.css\">\n\n        <!-- Highlight.js Stylesheets -->\n        <link rel=\"stylesheet\" href=\"../highlight.css\">\n        <link rel=\"stylesheet\" href=\"../tomorrow-night.css\" disabled=\"\">\n        <link rel=\"stylesheet\" href=\"../ayu-highlight.css\" disabled=\"\">\n\n        <!-- Custom theme stylesheets -->\n        <link rel=\"stylesheet\" href=\"../theme/reference.css\">\n\n    </head>\n    <body class=\"js sidebar-visible\">\n    <div id=\"body-container\">\n        <!-- Provide site root to javascript -->\n        <script>\n            var path_to_root = \"../\";\n            var default_theme = window.matchMedia(\"(prefers-color-scheme: dark)\").matches ? \"navy\" : \"light\";\n        </script>\n\n        <!-- Work around some values being stored in localStorage wrapped in quotes -->\n        <script>\n            try {\n                var theme = localStorage.getItem('mdbook-theme');\n                var sidebar = localStorage.getItem('mdbook-sidebar');\n\n                if (theme.startsWith('\"') && theme.endsWith('\"')) {\n                    localStorage.setItem('mdbook-theme', theme.slice(1, theme.length - 1));\n                }\n\n                if (sidebar.startsWith('\"') && sidebar.endsWith('\"')) {\n                    localStorage.setItem('mdbook-sidebar', sidebar.slice(1, sidebar.length - 1));\n                }\n            } catch (e) { }\n        </script>\n\n        <!-- Set the theme before any content is loaded, prevents flash -->\n        <script>\n            var theme;\n            try { theme = localStorage.getItem('mdbook-theme'); } catch(e) { }\n            if (theme === null || theme === undefined) { theme = default_theme; }\n            var html = document.querySelector('html');\n            html.classList.remove('light')\n            html.classList.add(theme);\n            var body = document.querySelector('body');\n            body.classList.remove('no-js')\n            body.classList.add('js');\n        </script>\n\n        <input type=\"checkbox\" id=\"sidebar-toggle-anchor\" class=\"hidden\">\n\n        <!-- Hide / unhide sidebar before it is displayed -->\n        <script>\n            var body = document.querySelector('body');\n            var sidebar = null;\n            var sidebar_toggle = document.getElementById(\"sidebar-toggle-anchor\");\n            if (document.body.clientWidth >= 1080) {\n                try { sidebar = localStorage.getItem('mdbook-sidebar'); } catch(e) { }\n                sidebar = sidebar || 'visible';\n            } else {\n                sidebar = 'hidden';\n            }\n            sidebar_toggle.checked = sidebar === 'visible';\n            body.classList.remove('sidebar-visible');\n            body.classList.add(\"sidebar-\" + sidebar);\n        </script>\n\n        <nav id=\"sidebar\" class=\"sidebar\" aria-label=\"Table of contents\" aria-hidden=\"false\">\n            <div class=\"sidebar-scrollbox\">\n                <ol class=\"chapter\"><li class=\"chapter-item expanded affix \"><a href=\"../introduction.html\" tabindex=\"0\">Introduction</a></li><li class=\"chapter-item expanded \"><a href=\"../notation.html\" tabindex=\"0\"><strong aria-hidden=\"true\">1.</strong> Notation</a></li><li class=\"chapter-item expanded \"><a href=\"../lexical-structure.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.</strong> Lexical structure</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../input-format.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.1.</strong> Input format</a></li><li class=\"chapter-item expanded \"><a href=\"../keywords.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.2.</strong> Keywords</a></li><li class=\"chapter-item expanded \"><a href=\"../identifiers.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.3.</strong> Identifiers</a></li><li class=\"chapter-item expanded \"><a href=\"../comments.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.4.</strong> Comments</a></li><li class=\"chapter-item expanded \"><a href=\"../whitespace.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.5.</strong> Whitespace</a></li><li class=\"chapter-item expanded \"><a href=\"../tokens.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.6.</strong> Tokens</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../macros.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.</strong> Macros</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../macros-by-example.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.1.</strong> Macros By Example</a></li><li class=\"chapter-item expanded \"><a href=\"../procedural-macros.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.2.</strong> Procedural Macros</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../crates-and-source-files.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.</strong> Crates and source files</a></li><li class=\"chapter-item expanded \"><a href=\"../conditional-compilation.html\" tabindex=\"0\"><strong aria-hidden=\"true\">5.</strong> Conditional compilation</a></li><li class=\"chapter-item expanded \"><a href=\"../items.html\" tabindex=\"0\"><strong aria-hidden=\"true\">6.</strong> Items</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../items/modules.html\" tabindex=\"0\"><strong aria-hidden=\"true\">6.1.</strong> Modules</a></li><li class=\"chapter-item expanded \"><a href=\"../items/extern-crates.html\" tabindex=\"0\"><strong aria-hidden=\"true\">6.2.</strong> Extern crates</a></li><li class=\"chapter-item expanded \"><a href=\"../items/use-declarations.html\" tabindex=\"0\"><strong aria-hidden=\"true\">6.3.</strong> Use declarations</a></li><li class=\"chapter-item expanded \"><a href=\"../items/functions.html\" tabindex=\"0\"><strong aria-hidden=\"true\">6.4.</strong> Functions</a></li><li class=\"chapter-item expanded \"><a href=\"../items/type-aliases.html\" tabindex=\"0\"><strong aria-hidden=\"true\">6.5.</strong> Type aliases</a></li><li class=\"chapter-item expanded \"><a href=\"../items/structs.html\" tabindex=\"0\"><strong aria-hidden=\"true\">6.6.</strong> Structs</a></li><li class=\"chapter-item expanded \"><a href=\"../items/enumerations.html\" tabindex=\"0\"><strong aria-hidden=\"true\">6.7.</strong> Enumerations</a></li><li class=\"chapter-item expanded \"><a href=\"../items/unions.html\" tabindex=\"0\"><strong aria-hidden=\"true\">6.8.</strong> Unions</a></li><li class=\"chapter-item expanded \"><a href=\"../items/constant-items.html\" tabindex=\"0\"><strong aria-hidden=\"true\">6.9.</strong> Constant items</a></li><li class=\"chapter-item expanded \"><a href=\"../items/static-items.html\" tabindex=\"0\"><strong aria-hidden=\"true\">6.10.</strong> Static items</a></li><li class=\"chapter-item expanded \"><a href=\"../items/traits.html\" tabindex=\"0\"><strong aria-hidden=\"true\">6.11.</strong> Traits</a></li><li class=\"chapter-item expanded \"><a href=\"../items/implementations.html\" tabindex=\"0\"><strong aria-hidden=\"true\">6.12.</strong> Implementations</a></li><li class=\"chapter-item expanded \"><a href=\"../items/external-blocks.html\" tabindex=\"0\"><strong aria-hidden=\"true\">6.13.</strong> External blocks</a></li><li class=\"chapter-item expanded \"><a href=\"../items/generics.html\" tabindex=\"0\"><strong aria-hidden=\"true\">6.14.</strong> Generic parameters</a></li><li class=\"chapter-item expanded \"><a href=\"../items/associated-items.html\" tabindex=\"0\"><strong aria-hidden=\"true\">6.15.</strong> Associated Items</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../attributes.html\" tabindex=\"0\"><strong aria-hidden=\"true\">7.</strong> Attributes</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../attributes/testing.html\" tabindex=\"0\"><strong aria-hidden=\"true\">7.1.</strong> Testing</a></li><li class=\"chapter-item expanded \"><a href=\"../attributes/derive.html\" tabindex=\"0\"><strong aria-hidden=\"true\">7.2.</strong> Derive</a></li><li class=\"chapter-item expanded \"><a href=\"../attributes/diagnostics.html\" tabindex=\"0\"><strong aria-hidden=\"true\">7.3.</strong> Diagnostics</a></li><li class=\"chapter-item expanded \"><a href=\"../attributes/codegen.html\" tabindex=\"0\"><strong aria-hidden=\"true\">7.4.</strong> Code generation</a></li><li class=\"chapter-item expanded \"><a href=\"../attributes/limits.html\" tabindex=\"0\"><strong aria-hidden=\"true\">7.5.</strong> Limits</a></li><li class=\"chapter-item expanded \"><a href=\"../attributes/type_system.html\" tabindex=\"0\"><strong aria-hidden=\"true\">7.6.</strong> Type System</a></li><li class=\"chapter-item expanded \"><a href=\"../attributes/debugger.html\" tabindex=\"0\"><strong aria-hidden=\"true\">7.7.</strong> Debugger</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../statements-and-expressions.html\" tabindex=\"0\"><strong aria-hidden=\"true\">8.</strong> Statements and expressions</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../statements.html\" tabindex=\"0\"><strong aria-hidden=\"true\">8.1.</strong> Statements</a></li><li class=\"chapter-item expanded \"><a href=\"../expressions.html\" tabindex=\"0\"><strong aria-hidden=\"true\">8.2.</strong> Expressions</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../expressions/literal-expr.html\" tabindex=\"0\"><strong aria-hidden=\"true\">8.2.1.</strong> Literal expressions</a></li><li class=\"chapter-item expanded \"><a href=\"../expressions/path-expr.html\" tabindex=\"0\"><strong aria-hidden=\"true\">8.2.2.</strong> Path expressions</a></li><li class=\"chapter-item expanded \"><a href=\"../expressions/block-expr.html\" tabindex=\"0\"><strong aria-hidden=\"true\">8.2.3.</strong> Block expressions</a></li><li class=\"chapter-item expanded \"><a href=\"../expressions/operator-expr.html\" tabindex=\"0\"><strong aria-hidden=\"true\">8.2.4.</strong> Operator expressions</a></li><li class=\"chapter-item expanded \"><a href=\"../expressions/grouped-expr.html\" tabindex=\"0\"><strong aria-hidden=\"true\">8.2.5.</strong> Grouped expressions</a></li><li class=\"chapter-item expanded \"><a href=\"../expressions/array-expr.html\" tabindex=\"0\"><strong aria-hidden=\"true\">8.2.6.</strong> Array and index expressions</a></li><li class=\"chapter-item expanded \"><a href=\"../expressions/tuple-expr.html\" tabindex=\"0\"><strong aria-hidden=\"true\">8.2.7.</strong> Tuple and index expressions</a></li><li class=\"chapter-item expanded \"><a href=\"../expressions/struct-expr.html\" tabindex=\"0\"><strong aria-hidden=\"true\">8.2.8.</strong> Struct expressions</a></li><li class=\"chapter-item expanded \"><a href=\"../expressions/call-expr.html\" tabindex=\"0\"><strong aria-hidden=\"true\">8.2.9.</strong> Call expressions</a></li><li class=\"chapter-item expanded \"><a href=\"../expressions/method-call-expr.html\" tabindex=\"0\"><strong aria-hidden=\"true\">8.2.10.</strong> Method call expressions</a></li><li class=\"chapter-item expanded \"><a href=\"../expressions/field-expr.html\" tabindex=\"0\"><strong aria-hidden=\"true\">8.2.11.</strong> Field access expressions</a></li><li class=\"chapter-item expanded \"><a href=\"../expressions/closure-expr.html\" tabindex=\"0\"><strong aria-hidden=\"true\">8.2.12.</strong> Closure expressions</a></li><li class=\"chapter-item expanded \"><a href=\"../expressions/loop-expr.html\" tabindex=\"0\"><strong aria-hidden=\"true\">8.2.13.</strong> Loop expressions</a></li><li class=\"chapter-item expanded \"><a href=\"../expressions/range-expr.html\" tabindex=\"0\"><strong aria-hidden=\"true\">8.2.14.</strong> Range expressions</a></li><li class=\"chapter-item expanded \"><a href=\"../expressions/if-expr.html\" tabindex=\"0\"><strong aria-hidden=\"true\">8.2.15.</strong> If and if let expressions</a></li><li class=\"chapter-item expanded \"><a href=\"../expressions/match-expr.html\" tabindex=\"0\"><strong aria-hidden=\"true\">8.2.16.</strong> Match expressions</a></li><li class=\"chapter-item expanded \"><a href=\"../expressions/return-expr.html\" tabindex=\"0\"><strong aria-hidden=\"true\">8.2.17.</strong> Return expressions</a></li><li class=\"chapter-item expanded \"><a href=\"../expressions/await-expr.html\" tabindex=\"0\"><strong aria-hidden=\"true\">8.2.18.</strong> Await expressions</a></li><li class=\"chapter-item expanded \"><a href=\"../expressions/underscore-expr.html\" tabindex=\"0\"><strong aria-hidden=\"true\">8.2.19.</strong> Underscore expressions</a></li></ol></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../patterns.html\" tabindex=\"0\"><strong aria-hidden=\"true\">9.</strong> Patterns</a></li><li class=\"chapter-item expanded \"><a href=\"../type-system.html\" tabindex=\"0\"><strong aria-hidden=\"true\">10.</strong> Type system</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../types.html\" tabindex=\"0\"><strong aria-hidden=\"true\">10.1.</strong> Types</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../types/boolean.html\" tabindex=\"0\"><strong aria-hidden=\"true\">10.1.1.</strong> Boolean type</a></li><li class=\"chapter-item expanded \"><a href=\"../types/numeric.html\" tabindex=\"0\"><strong aria-hidden=\"true\">10.1.2.</strong> Numeric types</a></li><li class=\"chapter-item expanded \"><a href=\"../types/textual.html\" tabindex=\"0\"><strong aria-hidden=\"true\">10.1.3.</strong> Textual types</a></li><li class=\"chapter-item expanded \"><a href=\"../types/never.html\" tabindex=\"0\"><strong aria-hidden=\"true\">10.1.4.</strong> Never type</a></li><li class=\"chapter-item expanded \"><a href=\"../types/tuple.html\" tabindex=\"0\"><strong aria-hidden=\"true\">10.1.5.</strong> Tuple types</a></li><li class=\"chapter-item expanded \"><a href=\"../types/array.html\" tabindex=\"0\"><strong aria-hidden=\"true\">10.1.6.</strong> Array types</a></li><li class=\"chapter-item expanded \"><a href=\"../types/slice.html\" tabindex=\"0\"><strong aria-hidden=\"true\">10.1.7.</strong> Slice types</a></li><li class=\"chapter-item expanded \"><a href=\"../types/struct.html\" tabindex=\"0\"><strong aria-hidden=\"true\">10.1.8.</strong> Struct types</a></li><li class=\"chapter-item expanded \"><a href=\"../types/enum.html\" tabindex=\"0\"><strong aria-hidden=\"true\">10.1.9.</strong> Enumerated types</a></li><li class=\"chapter-item expanded \"><a href=\"../types/union.html\" tabindex=\"0\"><strong aria-hidden=\"true\">10.1.10.</strong> Union types</a></li><li class=\"chapter-item expanded \"><a href=\"../types/function-item.html\" tabindex=\"0\"><strong aria-hidden=\"true\">10.1.11.</strong> Function item types</a></li><li class=\"chapter-item expanded \"><a href=\"../types/closure.html\" tabindex=\"0\"><strong aria-hidden=\"true\">10.1.12.</strong> Closure types</a></li><li class=\"chapter-item expanded \"><a href=\"../types/pointer.html\" tabindex=\"0\"><strong aria-hidden=\"true\">10.1.13.</strong> Pointer types</a></li><li class=\"chapter-item expanded \"><a href=\"../types/function-pointer.html\" tabindex=\"0\"><strong aria-hidden=\"true\">10.1.14.</strong> Function pointer types</a></li><li class=\"chapter-item expanded \"><a href=\"../types/trait-object.html\" tabindex=\"0\"><strong aria-hidden=\"true\">10.1.15.</strong> Trait object types</a></li><li class=\"chapter-item expanded \"><a href=\"../types/impl-trait.html\" tabindex=\"0\"><strong aria-hidden=\"true\">10.1.16.</strong> Impl trait type</a></li><li class=\"chapter-item expanded \"><a href=\"../types/parameters.html\" tabindex=\"0\"><strong aria-hidden=\"true\">10.1.17.</strong> Type parameters</a></li><li class=\"chapter-item expanded \"><a href=\"../types/inferred.html\" tabindex=\"0\"><strong aria-hidden=\"true\">10.1.18.</strong> Inferred type</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../dynamically-sized-types.html\" tabindex=\"0\"><strong aria-hidden=\"true\">10.2.</strong> Dynamically Sized Types</a></li><li class=\"chapter-item expanded \"><a href=\"../type-layout.html\" tabindex=\"0\"><strong aria-hidden=\"true\">10.3.</strong> Type layout</a></li><li class=\"chapter-item expanded \"><a href=\"../interior-mutability.html\" tabindex=\"0\"><strong aria-hidden=\"true\">10.4.</strong> Interior mutability</a></li><li class=\"chapter-item expanded \"><a href=\"../subtyping.html\" tabindex=\"0\"><strong aria-hidden=\"true\">10.5.</strong> Subtyping and Variance</a></li><li class=\"chapter-item expanded \"><a href=\"../trait-bounds.html\" tabindex=\"0\"><strong aria-hidden=\"true\">10.6.</strong> Trait and lifetime bounds</a></li><li class=\"chapter-item expanded \"><a href=\"../type-coercions.html\" tabindex=\"0\"><strong aria-hidden=\"true\">10.7.</strong> Type coercions</a></li><li class=\"chapter-item expanded \"><a href=\"../destructors.html\" tabindex=\"0\"><strong aria-hidden=\"true\">10.8.</strong> Destructors</a></li><li class=\"chapter-item expanded \"><a href=\"../lifetime-elision.html\" tabindex=\"0\"><strong aria-hidden=\"true\">10.9.</strong> Lifetime elision</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../special-types-and-traits.html\" tabindex=\"0\"><strong aria-hidden=\"true\">11.</strong> Special types and traits</a></li><li class=\"chapter-item expanded \"><a href=\"../names.html\" tabindex=\"0\"><strong aria-hidden=\"true\">12.</strong> Names</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../names/namespaces.html\" tabindex=\"0\"><strong aria-hidden=\"true\">12.1.</strong> Namespaces</a></li><li class=\"chapter-item expanded \"><a href=\"../names/scopes.html\" tabindex=\"0\"><strong aria-hidden=\"true\">12.2.</strong> Scopes</a></li><li class=\"chapter-item expanded \"><a href=\"../names/preludes.html\" class=\"active\" tabindex=\"0\"><strong aria-hidden=\"true\">12.3.</strong> Preludes</a></li><li class=\"chapter-item expanded \"><a href=\"../paths.html\" tabindex=\"0\"><strong aria-hidden=\"true\">12.4.</strong> Paths</a></li><li class=\"chapter-item expanded \"><a href=\"../names/name-resolution.html\" tabindex=\"0\"><strong aria-hidden=\"true\">12.5.</strong> Name resolution</a></li><li class=\"chapter-item expanded \"><a href=\"../visibility-and-privacy.html\" tabindex=\"0\"><strong aria-hidden=\"true\">12.6.</strong> Visibility and privacy</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../memory-model.html\" tabindex=\"0\"><strong aria-hidden=\"true\">13.</strong> Memory model</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../memory-allocation-and-lifetime.html\" tabindex=\"0\"><strong aria-hidden=\"true\">13.1.</strong> Memory allocation and lifetime</a></li><li class=\"chapter-item expanded \"><a href=\"../variables.html\" tabindex=\"0\"><strong aria-hidden=\"true\">13.2.</strong> Variables</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../linkage.html\" tabindex=\"0\"><strong aria-hidden=\"true\">14.</strong> Linkage</a></li><li class=\"chapter-item expanded \"><a href=\"../inline-assembly.html\" tabindex=\"0\"><strong aria-hidden=\"true\">15.</strong> Inline assembly</a></li><li class=\"chapter-item expanded \"><a href=\"../unsafety.html\" tabindex=\"0\"><strong aria-hidden=\"true\">16.</strong> Unsafety</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../unsafe-keyword.html\" tabindex=\"0\"><strong aria-hidden=\"true\">16.1.</strong> The unsafe keyword</a></li><li class=\"chapter-item expanded \"><a href=\"../behavior-considered-undefined.html\" tabindex=\"0\"><strong aria-hidden=\"true\">16.2.</strong> Behavior considered undefined</a></li><li class=\"chapter-item expanded \"><a href=\"../behavior-not-considered-unsafe.html\" tabindex=\"0\"><strong aria-hidden=\"true\">16.3.</strong> Behavior not considered unsafe</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../const_eval.html\" tabindex=\"0\"><strong aria-hidden=\"true\">17.</strong> Constant Evaluation</a></li><li class=\"chapter-item expanded \"><a href=\"../abi.html\" tabindex=\"0\"><strong aria-hidden=\"true\">18.</strong> Application Binary Interface</a></li><li class=\"chapter-item expanded \"><a href=\"../runtime.html\" tabindex=\"0\"><strong aria-hidden=\"true\">19.</strong> The Rust runtime</a></li><li class=\"chapter-item expanded \"><a href=\"../appendices.html\" tabindex=\"0\"><strong aria-hidden=\"true\">20.</strong> Appendices</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../macro-ambiguity.html\" tabindex=\"0\"><strong aria-hidden=\"true\">20.1.</strong> Macro Follow-Set Ambiguity Formal Specification</a></li><li class=\"chapter-item expanded \"><a href=\"../influences.html\" tabindex=\"0\"><strong aria-hidden=\"true\">20.2.</strong> Influences</a></li><li class=\"chapter-item expanded \"><a href=\"../glossary.html\" tabindex=\"0\"><strong aria-hidden=\"true\">20.3.</strong> Glossary</a></li></ol></li></ol>\n            </div>\n            <div id=\"sidebar-resize-handle\" class=\"sidebar-resize-handle\">\n                <div class=\"sidebar-resize-indicator\"></div>\n            </div>\n        </nav>\n\n        <!-- Track and set sidebar scroll position -->\n        <script>\n            var sidebarScrollbox = document.querySelector('#sidebar .sidebar-scrollbox');\n            sidebarScrollbox.addEventListener('click', function(e) {\n                if (e.target.tagName === 'A') {\n                    sessionStorage.setItem('sidebar-scroll', sidebarScrollbox.scrollTop);\n                }\n            }, { passive: true });\n            var sidebarScrollTop = sessionStorage.getItem('sidebar-scroll');\n            sessionStorage.removeItem('sidebar-scroll');\n            if (sidebarScrollTop) {\n                // preserve sidebar scroll position when navigating via links within sidebar\n                sidebarScrollbox.scrollTop = sidebarScrollTop;\n            } else {\n                // scroll sidebar to current active section when navigating via \"next/previous chapter\" buttons\n                var activeSection = document.querySelector('#sidebar .active');\n                if (activeSection) {\n                    activeSection.scrollIntoView({ block: 'center' });\n                }\n            }\n        </script>\n\n        <div id=\"page-wrapper\" class=\"page-wrapper\">\n\n            <div class=\"page\">\n                                <div id=\"menu-bar-hover-placeholder\"></div>\n                <div id=\"menu-bar\" class=\"menu-bar\" style=\"top: 0px;\">\n                    <div class=\"left-buttons\">\n                        <label id=\"sidebar-toggle\" class=\"icon-button\" for=\"sidebar-toggle-anchor\" title=\"Toggle Table of Contents\" aria-label=\"Toggle Table of Contents\" aria-controls=\"sidebar\" aria-expanded=\"true\">\n                            <i class=\"fa fa-bars\"></i>\n                        </label>\n                        <button id=\"theme-toggle\" class=\"icon-button\" type=\"button\" title=\"Change theme\" aria-label=\"Change theme\" aria-haspopup=\"true\" aria-expanded=\"false\" aria-controls=\"theme-list\">\n                            <i class=\"fa fa-paint-brush\"></i>\n                        </button>\n                        <ul id=\"theme-list\" class=\"theme-popup\" aria-label=\"Themes\" role=\"menu\">\n                            <li role=\"none\"><button role=\"menuitem\" class=\"theme theme-selected\" id=\"light\">Light</button></li>\n                            <li role=\"none\"><button role=\"menuitem\" class=\"theme\" id=\"rust\">Rust</button></li>\n                            <li role=\"none\"><button role=\"menuitem\" class=\"theme\" id=\"coal\">Coal</button></li>\n                            <li role=\"none\"><button role=\"menuitem\" class=\"theme\" id=\"navy\">Navy</button></li>\n                            <li role=\"none\"><button role=\"menuitem\" class=\"theme\" id=\"ayu\">Ayu</button></li>\n                        </ul>\n                        <button id=\"search-toggle\" class=\"icon-button\" type=\"button\" title=\"Search. (Shortkey: s)\" aria-label=\"Toggle Searchbar\" aria-expanded=\"false\" aria-keyshortcuts=\"S\" aria-controls=\"searchbar\">\n                            <i class=\"fa fa-search\"></i>\n                        </button>\n                    </div>\n\n                    <h1 class=\"menu-title\">The Rust Reference</h1>\n\n                    <div class=\"right-buttons\">\n                        <a href=\"../print.html\" title=\"Print this book\" aria-label=\"Print this book\">\n                            <i id=\"print-button\" class=\"fa fa-print\"></i>\n                        </a>\n                        <a href=\"https://github.com/rust-lang/reference/\" title=\"Git repository\" aria-label=\"Git repository\">\n                            <i id=\"git-repository-button\" class=\"fa fa-github\"></i>\n                        </a>\n                        <a href=\"https://github.com/rust-lang/reference/edit/master/src/names/preludes.md\" title=\"Suggest an edit\" aria-label=\"Suggest an edit\">\n                            <i id=\"git-edit-button\" class=\"fa fa-edit\"></i>\n                        </a>\n\n                    </div>\n                </div>\n\n                <div id=\"search-wrapper\" class=\"hidden\">\n                    <form id=\"searchbar-outer\" class=\"searchbar-outer\">\n                        <input type=\"search\" id=\"searchbar\" name=\"searchbar\" placeholder=\"Search this book ...\" aria-controls=\"searchresults-outer\" aria-describedby=\"searchresults-header\">\n                    </form>\n                    <div id=\"searchresults-outer\" class=\"searchresults-outer hidden\">\n                        <div id=\"searchresults-header\" class=\"searchresults-header\"></div>\n                        <ul id=\"searchresults\">\n                        </ul>\n                    </div>\n                </div>\n\n                <!-- Apply ARIA attributes after the sidebar and the sidebar toggle button are added to the DOM -->\n                <script>\n                    document.getElementById('sidebar-toggle').setAttribute('aria-expanded', sidebar === 'visible');\n                    document.getElementById('sidebar').setAttribute('aria-hidden', sidebar !== 'visible');\n                    Array.from(document.querySelectorAll('#sidebar a')).forEach(function(link) {\n                        link.setAttribute('tabIndex', sidebar === 'visible' ? 0 : -1);\n                    });\n                </script>\n\n                <div id=\"content\" class=\"content\">\n                    <main>\n                        <h1 id=\"preludes\"><a class=\"header\" href=\"#preludes\">Preludes</a></h1>\n<p>A <em>prelude</em> is a collection of names that are automatically brought into scope\nof every module in a crate.</p>\n<p>These prelude names are not part of the module itself: they are implicitly\nqueried during <a href=\"name-resolution.html\">name resolution</a>. For example, even though something like\n<a href=\"../../std/boxed/struct.Box.html\"><code class=\"hljs\">Box</code></a> is in scope in every module, you cannot refer to it as <code class=\"hljs\">self::Box</code>\nbecause it is not a member of the current module.</p>\n<p>There are several different preludes:</p>\n<ul>\n<li><a href=\"#standard-library-prelude\">Standard library prelude</a></li>\n<li><a href=\"#extern-prelude\">Extern prelude</a></li>\n<li><a href=\"#language-prelude\">Language prelude</a></li>\n<li><a href=\"#macro_use-prelude\"><code class=\"hljs\">macro_use</code> prelude</a></li>\n<li><a href=\"#tool-prelude\">Tool prelude</a></li>\n</ul>\n<h2 id=\"standard-library-prelude\"><a class=\"header\" href=\"#standard-library-prelude\">Standard library prelude</a></h2>\n<p>Each crate has a standard library prelude, which consists of the names from a single standard library module.\nThe module used depends on the crate's edition, and on whether the <a href=\"#the-no_std-attribute\"><code class=\"hljs\">no_std</code> attribute</a> is applied to the crate:</p>\n<div class=\"table-wrapper\"><table><thead><tr><th>Edition</th><th><code class=\"hljs\">no_std</code> not applied</th><th><code class=\"hljs\">no_std</code> applied</th></tr></thead><tbody>\n<tr><td>2015</td><td><a href=\"../../std/prelude/rust_2015/index.html\"><code class=\"hljs\">std::prelude::rust_2015</code></a></td><td><a href=\"../../core/prelude/rust_2015/index.html\"><code class=\"hljs\">core::prelude::rust_2015</code></a></td></tr>\n<tr><td>2018</td><td><a href=\"../../std/prelude/rust_2018/index.html\"><code class=\"hljs\">std::prelude::rust_2018</code></a></td><td><a href=\"../../core/prelude/rust_2018/index.html\"><code class=\"hljs\">core::prelude::rust_2018</code></a></td></tr>\n<tr><td>2021</td><td><a href=\"../../std/prelude/rust_2021/index.html\"><code class=\"hljs\">std::prelude::rust_2021</code></a></td><td><a href=\"../../core/prelude/rust_2021/index.html\"><code class=\"hljs\">core::prelude::rust_2021</code></a></td></tr>\n</tbody></table>\n</div>\n<blockquote>\n<p><strong>Note</strong>:</p>\n<p><a href=\"../../std/prelude/rust_2015/index.html\"><code class=\"hljs\">std::prelude::rust_2015</code></a> and <a href=\"../../std/prelude/rust_2018/index.html\"><code class=\"hljs\">std::prelude::rust_2018</code></a> have the same contents as <a href=\"../../std/prelude/v1/index.html\"><code class=\"hljs\">std::prelude::v1</code></a>.</p>\n<p><a href=\"../../core/prelude/rust_2015/index.html\"><code class=\"hljs\">core::prelude::rust_2015</code></a> and <a href=\"../../core/prelude/rust_2018/index.html\"><code class=\"hljs\">core::prelude::rust_2018</code></a> have the same contents as <a href=\"../../core/prelude/v1/index.html\"><code class=\"hljs\">core::prelude::v1</code></a>.</p>\n</blockquote>\n<h2 id=\"extern-prelude\"><a class=\"header\" href=\"#extern-prelude\">Extern prelude</a></h2>\n<p>External crates imported with <a href=\"../items/extern-crates.html\"><code class=\"hljs\">extern crate</code></a> in the root module or provided\nto the compiler (as with the <code class=\"hljs\">--extern</code> flag with <code class=\"hljs\">rustc</code>) are added to the\n<em>extern prelude</em>. If imported with an alias such as <code class=\"hljs\">extern crate orig_name as new_name</code>, then the symbol <code class=\"hljs\">new_name</code> is instead added to the prelude.</p>\n<p>The <a href=\"../../core/index.html\"><code class=\"hljs\">core</code></a> crate is always added to the extern prelude. The <a href=\"../../std/index.html\"><code class=\"hljs\">std</code></a> crate is\nadded as long as the <a href=\"#the-no_std-attribute\"><code class=\"hljs\">no_std</code> attribute</a> is not specified in the crate root.</p>\n<blockquote>\n<p><strong>Edition Differences</strong>: In the 2015 edition, crates in the extern prelude\ncannot be referenced via <a href=\"../items/use-declarations.html\">use declarations</a>, so it is generally standard\npractice to include <code class=\"hljs\">extern crate</code> declarations to bring them into scope.</p>\n<p>Beginning in the 2018 edition, <a href=\"../items/use-declarations.html\">use declarations</a> can reference crates in\nthe extern prelude, so it is considered unidiomatic to use <code class=\"hljs\">extern crate</code>.</p>\n</blockquote>\n<blockquote>\n<p><strong>Note</strong>: Additional crates that ship with <code class=\"hljs\">rustc</code>, such as <a href=\"../../alloc/index.html\"><code class=\"hljs\">alloc</code></a>, and\n<a href=\"../../test/index.html\"><code class=\"hljs\">test</code></a>, are not automatically included with the <code class=\"hljs\">--extern</code> flag when using\nCargo. They must be brought into scope with an <code class=\"hljs\">extern crate</code> declaration,\neven in the 2018 edition.</p>\n<pre><pre class=\"playground\"><div class=\"buttons\"><button class=\"fa fa-copy clip-button\" title=\"Copy to clipboard\" aria-label=\"Copy to clipboard\"><i class=\"tooltiptext\"></i></button><button class=\"fa fa-play play-button\" hidden=\"\" title=\"Run this code\" aria-label=\"Run this code\"></button><button class=\"fa fa-eye\" title=\"Show hidden lines\" aria-label=\"Show hidden lines\"></button></div><code class=\"language-rust edition2021 hljs hide-boring\"><span class=\"boring\"><span class=\"hljs-meta\">#![allow(unused)]</span>\n</span><span class=\"boring\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">fn</span> <span class=\"hljs-title\">main</span></span>() {\n</span><span class=\"hljs-keyword\">extern</span> <span class=\"hljs-keyword\">crate</span> alloc;\n<span class=\"hljs-keyword\">use</span> alloc::rc::Rc;\n<span class=\"boring\">}</span></code></pre></pre>\n<p>Cargo does bring in <code class=\"hljs\">proc_macro</code> to the extern prelude for proc-macro crates\nonly.</p>\n</blockquote>\n<!--\nSee https://github.com/rust-lang/rust/issues/57288 for more about the\nalloc/test limitation.\n-->\n<h3 id=\"the-no_std-attribute\"><a class=\"header\" href=\"#the-no_std-attribute\">The <code>no_std</code> attribute</a></h3>\n<p>By default, the standard library is automatically included in the crate root\nmodule. The <a href=\"../../std/index.html\"><code class=\"hljs\">std</code></a> crate is added to the root, along with an implicit\n<a href=\"../macros-by-example.html#the-macro_use-attribute\"><code class=\"hljs\">macro_use</code> attribute</a> pulling in all macros exported from <code class=\"hljs\">std</code> into the\n<a href=\"#macro_use-prelude\"><code class=\"hljs\">macro_use</code> prelude</a>. Both <a href=\"../../core/index.html\"><code class=\"hljs\">core</code></a> and <a href=\"../../std/index.html\"><code class=\"hljs\">std</code></a> are added to the <a href=\"#extern-prelude\">extern\nprelude</a>.</p>\n<p>The <em><code class=\"hljs\">no_std</code> <a href=\"../attributes.html\">attribute</a></em> may be applied at the crate level to prevent the\n<a href=\"../../std/index.html\"><code class=\"hljs\">std</code></a> crate from being automatically added into scope. It does three things:</p>\n<ul>\n<li>Prevents <code class=\"hljs\">std</code> from being added to the <a href=\"#extern-prelude\">extern prelude</a>.</li>\n<li>Affects which module is used to make up the <a href=\"#standard-library-prelude\">standard library prelude</a> (as described above).</li>\n<li>Injects the <a href=\"../../core/index.html\"><code class=\"hljs\">core</code></a> crate into the crate root instead of <a href=\"../../std/index.html\"><code class=\"hljs\">std</code></a>, and pulls\nin all macros exported from <code class=\"hljs\">core</code> in the <a href=\"#macro_use-prelude\"><code class=\"hljs\">macro_use</code> prelude</a>.</li>\n</ul>\n<blockquote>\n<p><strong>Note</strong>: Using the core prelude over the standard prelude is useful when\neither the crate is targeting a platform that does not support the standard\nlibrary or is purposefully not using the capabilities of the standard\nlibrary. Those capabilities are mainly dynamic memory allocation (e.g. <code class=\"hljs\">Box</code>\nand <code class=\"hljs\">Vec</code>) and file and network capabilities (e.g. <code class=\"hljs\">std::fs</code> and <code class=\"hljs\">std::io</code>).</p>\n</blockquote>\n<div class=\"warning\">\n<p>Warning: Using <code class=\"hljs\">no_std</code> does not prevent the standard library from being\nlinked in. It is still valid to put <code class=\"hljs\">extern crate std;</code> into the crate and\ndependencies can also link it in.</p>\n</div>\n<h2 id=\"language-prelude\"><a class=\"header\" href=\"#language-prelude\">Language prelude</a></h2>\n<p>The language prelude includes names of types and attributes that are built-in\nto the language. The language prelude is always in scope. It includes the following:</p>\n<ul>\n<li><a href=\"namespaces.html\">Type namespace</a>\n<ul>\n<li><a href=\"../types/boolean.html\">Boolean type</a> —&nbsp;<code class=\"hljs\">bool</code></li>\n<li><a href=\"../types/textual.html\">Textual types</a> — <code class=\"hljs\">char</code> and <code class=\"hljs\">str</code></li>\n<li><a href=\"../types/numeric.html#integer-types\">Integer types</a> — <code class=\"hljs\">i8</code>, <code class=\"hljs\">i16</code>, <code class=\"hljs\">i32</code>, <code class=\"hljs\">i64</code>, <code class=\"hljs\">i128</code>, <code class=\"hljs\">u8</code>, <code class=\"hljs\">u16</code>, <code class=\"hljs\">u32</code>, <code class=\"hljs\">u64</code>, <code class=\"hljs\">u128</code></li>\n<li><a href=\"../types/numeric.html#machine-dependent-integer-types\">Machine-dependent integer types</a> — <code class=\"hljs\">usize</code> and <code class=\"hljs\">isize</code></li>\n<li><a href=\"../types/numeric.html#floating-point-types\">floating-point types</a> — <code class=\"hljs\">f32</code> and <code class=\"hljs\">f64</code></li>\n</ul>\n</li>\n<li><a href=\"namespaces.html\">Macro namespace</a>\n<ul>\n<li><a href=\"../attributes.html#built-in-attributes-index\">Built-in attributes</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"macro_use-prelude\"><a class=\"header\" href=\"#macro_use-prelude\"><code>macro_use</code> prelude</a></h2>\n<p>The <code class=\"hljs\">macro_use</code> prelude includes macros from external crates that were\nimported by the <a href=\"../macros-by-example.html#the-macro_use-attribute\"><code class=\"hljs\">macro_use</code> attribute</a> applied to an <a href=\"../items/extern-crates.html\"><code class=\"hljs\">extern crate</code></a>.</p>\n<h2 id=\"tool-prelude\"><a class=\"header\" href=\"#tool-prelude\">Tool prelude</a></h2>\n<p>The tool prelude includes tool names for external tools in the <a href=\"namespaces.html\">type\nnamespace</a>. See the <a href=\"../attributes.html#tool-attributes\">tool attributes</a> section for more details.</p>\n<h2 id=\"the-no_implicit_prelude-attribute\"><a class=\"header\" href=\"#the-no_implicit_prelude-attribute\">The <code>no_implicit_prelude</code> attribute</a></h2>\n<p>The <em><code class=\"hljs\">no_implicit_prelude</code> <a href=\"../attributes.html\">attribute</a></em> may be applied at the crate level or\non a module to indicate that it should not automatically bring the <a href=\"#standard-library-prelude\">standard\nlibrary prelude</a>, <a href=\"#extern-prelude\">extern prelude</a>, or <a href=\"#tool-prelude\">tool prelude</a> into scope for that\nmodule or any of its descendants.</p>\n<p>This attribute does not affect the <a href=\"#language-prelude\">language prelude</a>.</p>\n<blockquote>\n<p><strong>Edition Differences</strong>: In the 2015 edition, the <code class=\"hljs\">no_implicit_prelude</code>\nattribute does not affect the <a href=\"#macro_use-prelude\"><code class=\"hljs\">macro_use</code> prelude</a>, and all macros exported\nfrom the standard library are still included in the <code class=\"hljs\">macro_use</code> prelude.\nStarting in the 2018 edition, it will remove the <code class=\"hljs\">macro_use</code> prelude.</p>\n</blockquote>\n\n                    </main>\n\n                    <nav class=\"nav-wrapper\" aria-label=\"Page navigation\">\n                        <!-- Mobile navigation buttons -->\n                            <a rel=\"prev\" href=\"../names/scopes.html\" class=\"mobile-nav-chapters previous\" title=\"Previous chapter\" aria-label=\"Previous chapter\" aria-keyshortcuts=\"Left\">\n                                <i class=\"fa fa-angle-left\"></i>\n                            </a>\n\n                            <a rel=\"next prefetch\" href=\"../paths.html\" class=\"mobile-nav-chapters next\" title=\"Next chapter\" aria-label=\"Next chapter\" aria-keyshortcuts=\"Right\">\n                                <i class=\"fa fa-angle-right\"></i>\n                            </a>\n\n                        <div style=\"clear: both\"></div>\n                    </nav>\n                </div>\n            </div>\n\n            <nav class=\"nav-wide-wrapper\" aria-label=\"Page navigation\">\n                    <a rel=\"prev\" href=\"../names/scopes.html\" class=\"nav-chapters previous\" title=\"Previous chapter\" aria-label=\"Previous chapter\" aria-keyshortcuts=\"Left\">\n                        <i class=\"fa fa-angle-left\"></i>\n                    </a>\n\n                    <a rel=\"next prefetch\" href=\"../paths.html\" class=\"nav-chapters next\" title=\"Next chapter\" aria-label=\"Next chapter\" aria-keyshortcuts=\"Right\">\n                        <i class=\"fa fa-angle-right\"></i>\n                    </a>\n            </nav>\n\n        </div>\n\n\n\n\n        <script>\n            window.playground_copyable = true;\n        </script>\n\n\n        <script src=\"../elasticlunr.min.js\"></script>\n        <script src=\"../mark.min.js\"></script>\n        <script src=\"../searcher.js\"></script>\n\n        <script src=\"../clipboard.min.js\"></script>\n        <script src=\"../highlight.js\"></script>\n        <script src=\"../book.js\"></script>\n\n        <!-- Custom JS scripts -->\n\n\n    </div>\n    \n\n</body></html>",
	"crawlDate": "2024-07-28T05:13:32.649Z"
}