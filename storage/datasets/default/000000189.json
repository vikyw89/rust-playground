{
	"title": "cargo rustc - The Cargo Book",
	"url": "https://doc.rust-lang.org/cargo/commands/cargo-rustc.html",
	"markdown": "# cargo rustc - The Cargo Book\n\n## [NAME](#name)\n\ncargo-rustc — Compile the current package, and pass extra options to the compiler\n\n## [SYNOPSIS](#synopsis)\n\n`cargo rustc` \\[_options_\\] \\[`--` _args_\\]\n\n## [DESCRIPTION](#description)\n\nThe specified target for the current package (or package specified by `-p` if provided) will be compiled along with all of its dependencies. The specified _args_ will all be passed to the final compiler invocation, not any of the dependencies. Note that the compiler will still unconditionally receive arguments such as `-L`, `--extern`, and `--crate-type`, and the specified _args_ will simply be added to the compiler invocation.\n\nSee [https://doc.rust-lang.org/rustc/index.html](https://doc.rust-lang.org/rustc/index.html) for documentation on rustc flags.\n\nThis command requires that only one target is being compiled when additional arguments are provided. If more than one target is available for the current package the filters of `--lib`, `--bin`, etc, must be used to select which target is compiled.\n\nTo pass flags to all compiler processes spawned by Cargo, use the `RUSTFLAGS` [environment variable](../reference/environment-variables.html) or the `build.rustflags` [config value](../reference/config.html).\n\n## [OPTIONS](#options)\n\n### [Package Selection](#package-selection)\n\nBy default, the package in the current working directory is selected. The `-p` flag can be used to choose a different package in a workspace.\n\n`-p` _spec_\n\n`--package` _spec_\n\nThe package to build. See [cargo-pkgid(1)](cargo-pkgid.html) for the SPEC format.\n\n### [Target Selection](#target-selection)\n\nWhen no target selection options are given, `cargo rustc` will build all binary and library targets of the selected package.\n\nBinary targets are automatically built if there is an integration test or benchmark being selected to build. This allows an integration test to execute the binary to exercise and test its behavior. The `CARGO_BIN_EXE_<name>` [environment variable](about:blank/reference/environment-variables.html#environment-variables-cargo-sets-for-crates) is set when the integration test is built so that it can use the [`env` macro](https://doc.rust-lang.org/std/macro.env.html) to locate the executable.\n\nPassing target selection flags will build only the specified targets.\n\nNote that `--bin`, `--example`, `--test` and `--bench` flags also support common Unix glob patterns like `*`, `?` and `[]`. However, to avoid your shell accidentally expanding glob patterns before Cargo handles them, you must use single quotes or double quotes around each glob pattern.\n\n`--lib`\n\nBuild the package’s library.\n\n`--bin` _name_…\n\nBuild the specified binary. This flag may be specified multiple times and supports common Unix glob patterns.\n\n`--bins`\n\nBuild all binary targets.\n\n`--example` _name_…\n\nBuild the specified example. This flag may be specified multiple times and supports common Unix glob patterns.\n\n`--examples`\n\nBuild all example targets.\n\n`--test` _name_…\n\nBuild the specified integration test. This flag may be specified multiple times and supports common Unix glob patterns.\n\n`--tests`\n\nBuild all targets in test mode that have the `test = true` manifest flag set. By default this includes the library and binaries built as unittests, and integration tests. Be aware that this will also build any required dependencies, so the lib target may be built twice (once as a unittest, and once as a dependency for binaries, integration tests, etc.). Targets may be enabled or disabled by setting the `test` flag in the manifest settings for the target.\n\n`--bench` _name_…\n\nBuild the specified benchmark. This flag may be specified multiple times and supports common Unix glob patterns.\n\n`--benches`\n\nBuild all targets in benchmark mode that have the `bench = true` manifest flag set. By default this includes the library and binaries built as benchmarks, and bench targets. Be aware that this will also build any required dependencies, so the lib target may be built twice (once as a benchmark, and once as a dependency for binaries, benchmarks, etc.). Targets may be enabled or disabled by setting the `bench` flag in the manifest settings for the target.\n\n`--all-targets`\n\nBuild all targets. This is equivalent to specifying `--lib --bins --tests --benches --examples`.\n\n### [Feature Selection](#feature-selection)\n\nThe feature flags allow you to control which features are enabled. When no feature options are given, the `default` feature is activated for every selected package.\n\nSee [the features documentation](about:blank/reference/features.html#command-line-feature-options) for more details.\n\n`-F` _features_\n\n`--features` _features_\n\nSpace or comma separated list of features to activate. Features of workspace members may be enabled with `package-name/feature-name` syntax. This flag may be specified multiple times, which enables all specified features.\n\n`--all-features`\n\nActivate all available features of all selected packages.\n\n`--no-default-features`\n\nDo not activate the `default` feature of the selected packages.\n\n### [Compilation Options](#compilation-options)\n\n`--target` _triple_\n\nBuild for the given architecture. The default is the host architecture. The general format of the triple is `<arch><sub>-<vendor>-<sys>-<abi>`. Run `rustc --print target-list` for a list of supported targets. This flag may be specified multiple times.\n\nThis may also be specified with the `build.target` [config value](../reference/config.html).\n\nNote that specifying this flag makes Cargo run in a different mode where the target artifacts are placed in a separate directory. See the [build cache](../guide/build-cache.html) documentation for more details.\n\n`-r`\n\n`--release`\n\nBuild optimized artifacts with the `release` profile. See also the `--profile` option for choosing a specific profile by name.\n\n`--profile` _name_\n\nBuild with the given profile.\n\nThe `rustc` subcommand will treat the following named profiles with special behaviors:\n\n-   `check` — Builds in the same way as the [cargo-check(1)](cargo-check.html) command with the `dev` profile.\n-   `test` — Builds in the same way as the [cargo-test(1)](cargo-test.html) command, enabling building in test mode which will enable tests and enable the `test` cfg option. See [rustc tests](https://doc.rust-lang.org/rustc/tests/index.html) for more detail.\n-   `bench` — Builds in the same was as the [cargo-bench(1)](cargo-bench.html) command, similar to the `test` profile.\n\nSee [the reference](../reference/profiles.html) for more details on profiles.\n\n`--timings=`_fmts_\n\nOutput information how long each compilation takes, and track concurrency information over time. Accepts an optional comma-separated list of output formats; `--timings` without an argument will default to `--timings=html`. Specifying an output format (rather than the default) is unstable and requires `-Zunstable-options`. Valid output formats:\n\n-   `html` (unstable, requires `-Zunstable-options`): Write a human-readable file `cargo-timing.html` to the `target/cargo-timings` directory with a report of the compilation. Also write a report to the same directory with a timestamp in the filename if you want to look at older runs. HTML output is suitable for human consumption only, and does not provide machine-readable timing data.\n-   `json` (unstable, requires `-Zunstable-options`): Emit machine-readable JSON information about timing information.\n\n`--crate-type` _crate-type_\n\nBuild for the given crate type. This flag accepts a comma-separated list of 1 or more crate types, of which the allowed values are the same as `crate-type` field in the manifest for configuring a Cargo target. See [`crate-type` field](about:blank/reference/cargo-targets.html#the-crate-type-field) for possible values.\n\nIf the manifest contains a list, and `--crate-type` is provided, the command-line argument value will override what is in the manifest.\n\nThis flag only works when building a `lib` or `example` library target.\n\n### [Output Options](#output-options)\n\n`--target-dir` _directory_\n\nDirectory for all generated artifacts and intermediate files. May also be specified with the `CARGO_TARGET_DIR` environment variable, or the `build.target-dir` [config value](../reference/config.html). Defaults to `target` in the root of the workspace.\n\n### [Display Options](#display-options)\n\n`-v`\n\n`--verbose`\n\nUse verbose output. May be specified twice for “very verbose” output which includes extra output such as dependency warnings and build script output. May also be specified with the `term.verbose` [config value](../reference/config.html).\n\n`-q`\n\n`--quiet`\n\nDo not print cargo log messages. May also be specified with the `term.quiet` [config value](../reference/config.html).\n\n`--color` _when_\n\nControl when colored output is used. Valid values:\n\n-   `auto` (default): Automatically detect if color support is available on the terminal.\n-   `always`: Always display colors.\n-   `never`: Never display colors.\n\nMay also be specified with the `term.color` [config value](../reference/config.html).\n\n`--message-format` _fmt_\n\nThe output format for diagnostic messages. Can be specified multiple times and consists of comma-separated values. Valid values:\n\n-   `human` (default): Display in a human-readable text format. Conflicts with `short` and `json`.\n-   `short`: Emit shorter, human-readable text messages. Conflicts with `human` and `json`.\n-   `json`: Emit JSON messages to stdout. See [the reference](about:blank/reference/external-tools.html#json-messages) for more details. Conflicts with `human` and `short`.\n-   `json-diagnostic-short`: Ensure the `rendered` field of JSON messages contains the “short” rendering from rustc. Cannot be used with `human` or `short`.\n-   `json-diagnostic-rendered-ansi`: Ensure the `rendered` field of JSON messages contains embedded ANSI color codes for respecting rustc’s default color scheme. Cannot be used with `human` or `short`.\n-   `json-render-diagnostics`: Instruct Cargo to not include rustc diagnostics in JSON messages printed, but instead Cargo itself should render the JSON diagnostics coming from rustc. Cargo’s own JSON diagnostics and others coming from rustc are still emitted. Cannot be used with `human` or `short`.\n\n### [Manifest Options](#manifest-options)\n\n`--manifest-path` _path_\n\nPath to the `Cargo.toml` file. By default, Cargo searches for the `Cargo.toml` file in the current directory or any parent directory.\n\n`--ignore-rust-version`\n\nIgnore `rust-version` specification in packages.\n\n`--locked`\n\nAsserts that the exact same dependencies and versions are used as when the existing `Cargo.lock` file was originally generated. Cargo will exit with an error when either of the following scenarios arises:\n\n-   The lock file is missing.\n-   Cargo attempted to change the lock file due to a different dependency resolution.\n\nIt may be used in environments where deterministic builds are desired, such as in CI pipelines.\n\n`--offline`\n\nPrevents Cargo from accessing the network for any reason. Without this flag, Cargo will stop with an error if it needs to access the network and the network is not available. With this flag, Cargo will attempt to proceed without the network if possible.\n\nBeware that this may result in different dependency resolution than online mode. Cargo will restrict itself to crates that are downloaded locally, even if there might be a newer version as indicated in the local copy of the index. See the [cargo-fetch(1)](cargo-fetch.html) command to download dependencies before going offline.\n\nMay also be specified with the `net.offline` [config value](../reference/config.html).\n\n`--frozen`\n\nEquivalent to specifying both `--locked` and `--offline`.\n\n### [Common Options](#common-options)\n\n`+`_toolchain_\n\nIf Cargo has been installed with rustup, and the first argument to `cargo` begins with `+`, it will be interpreted as a rustup toolchain name (such as `+stable` or `+nightly`). See the [rustup documentation](https://rust-lang.github.io/rustup/overrides.html) for more information about how toolchain overrides work.\n\n`--config` _KEY=VALUE_ or _PATH_\n\nOverrides a Cargo configuration value. The argument should be in TOML syntax of `KEY=VALUE`, or provided as a path to an extra configuration file. This flag may be specified multiple times. See the [command-line overrides section](about:blank/reference/config.html#command-line-overrides) for more information.\n\n`-C` _PATH_\n\nChanges the current working directory before executing any specified operations. This affects things like where cargo looks by default for the project manifest (`Cargo.toml`), as well as the directories searched for discovering `.cargo/config.toml`, for example. This option must appear before the command name, for example `cargo -C path/to/my-project build`.\n\nThis option is only available on the [nightly channel](https://doc.rust-lang.org/book/appendix-07-nightly-rust.html) and requires the `-Z unstable-options` flag to enable (see [#10098](https://github.com/rust-lang/cargo/issues/10098)).\n\n`-h`\n\n`--help`\n\nPrints help information.\n\n`-Z` _flag_\n\nUnstable (nightly-only) flags to Cargo. Run `cargo -Z help` for details.\n\n### [Miscellaneous Options](#miscellaneous-options)\n\n`-j` _N_\n\n`--jobs` _N_\n\nNumber of parallel jobs to run. May also be specified with the `build.jobs` [config value](../reference/config.html). Defaults to the number of logical CPUs. If negative, it sets the maximum number of parallel jobs to the number of logical CPUs plus provided value. If a string `default` is provided, it sets the value back to defaults. Should not be 0.\n\n`--keep-going`\n\nBuild as many crates in the dependency graph as possible, rather than aborting the build on the first one that fails to build.\n\nFor example if the current package depends on dependencies `fails` and `works`, one of which fails to build, `cargo rustc -j1` may or may not build the one that succeeds (depending on which one of the two builds Cargo picked to run first), whereas `cargo rustc -j1 --keep-going` would definitely run both builds, even if the one run first fails.\n\n`--future-incompat-report`\n\nDisplays a future-incompat report for any future-incompatible warnings produced during execution of this command\n\nSee [cargo-report(1)](cargo-report.html)\n\n## [ENVIRONMENT](#environment)\n\nSee [the reference](../reference/environment-variables.html) for details on environment variables that Cargo reads.\n\n## [EXIT STATUS](#exit-status)\n\n-   `0`: Cargo succeeded.\n-   `101`: Cargo failed to complete.\n\n## [EXAMPLES](#examples)\n\n1.  Check if your package (not including dependencies) uses unsafe code:\n    \n    ```\n    cargo rustc --lib -- -D unsafe-code\n    \n    ```\n    \n2.  Try an experimental flag on the nightly compiler, such as this which prints the size of every type:\n    \n    ```\n    cargo rustc --lib -- -Z print-type-sizes\n    \n    ```\n    \n3.  Override `crate-type` field in Cargo.toml with command-line option:\n    \n    ```\n    cargo rustc --lib --crate-type lib,cdylib\n    \n    ```\n    \n\n## [SEE ALSO](#see-also)\n\n[cargo(1)](cargo.html), [cargo-build(1)](cargo-build.html), [rustc(1)](https://doc.rust-lang.org/rustc/index.html)",
	"html": "<!DOCTYPE html><html lang=\"en\" class=\"light\" dir=\"ltr\"><head>\n        <!-- Book generated using mdBook -->\n        <meta charset=\"UTF-8\">\n        <title>cargo rustc - The Cargo Book</title>\n\n\n        <!-- Custom HTML head -->\n        <style>\n            dd {\n                margin-bottom: 1em;\n            }\n        </style>\n\n        <meta name=\"description\" content=\"\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n        <meta name=\"theme-color\" content=\"rgb(255, 255, 255)\">\n\n        <link rel=\"shortcut icon\" href=\"../favicon.png\">\n        <link rel=\"stylesheet\" href=\"../css/variables.css\">\n        <link rel=\"stylesheet\" href=\"../css/general.css\">\n        <link rel=\"stylesheet\" href=\"../css/chrome.css\">\n        <link rel=\"stylesheet\" href=\"../css/print.css\" media=\"print\">\n\n        <!-- Fonts -->\n        <link rel=\"stylesheet\" href=\"../FontAwesome/css/font-awesome.css\">\n        <link rel=\"stylesheet\" href=\"../fonts/fonts.css\">\n\n        <!-- Highlight.js Stylesheets -->\n        <link rel=\"stylesheet\" href=\"../highlight.css\">\n        <link rel=\"stylesheet\" href=\"../tomorrow-night.css\" disabled=\"\">\n        <link rel=\"stylesheet\" href=\"../ayu-highlight.css\" disabled=\"\">\n\n        <!-- Custom theme stylesheets -->\n\n    </head>\n    <body class=\"js sidebar-visible\">\n    <div id=\"body-container\">\n        <!-- Provide site root to javascript -->\n        <script>\n            var path_to_root = \"../\";\n            var default_theme = window.matchMedia(\"(prefers-color-scheme: dark)\").matches ? \"navy\" : \"light\";\n        </script>\n\n        <!-- Work around some values being stored in localStorage wrapped in quotes -->\n        <script>\n            try {\n                var theme = localStorage.getItem('mdbook-theme');\n                var sidebar = localStorage.getItem('mdbook-sidebar');\n\n                if (theme.startsWith('\"') && theme.endsWith('\"')) {\n                    localStorage.setItem('mdbook-theme', theme.slice(1, theme.length - 1));\n                }\n\n                if (sidebar.startsWith('\"') && sidebar.endsWith('\"')) {\n                    localStorage.setItem('mdbook-sidebar', sidebar.slice(1, sidebar.length - 1));\n                }\n            } catch (e) { }\n        </script>\n\n        <!-- Set the theme before any content is loaded, prevents flash -->\n        <script>\n            var theme;\n            try { theme = localStorage.getItem('mdbook-theme'); } catch(e) { }\n            if (theme === null || theme === undefined) { theme = default_theme; }\n            var html = document.querySelector('html');\n            html.classList.remove('light')\n            html.classList.add(theme);\n            var body = document.querySelector('body');\n            body.classList.remove('no-js')\n            body.classList.add('js');\n        </script>\n\n        <input type=\"checkbox\" id=\"sidebar-toggle-anchor\" class=\"hidden\">\n\n        <!-- Hide / unhide sidebar before it is displayed -->\n        <script>\n            var body = document.querySelector('body');\n            var sidebar = null;\n            var sidebar_toggle = document.getElementById(\"sidebar-toggle-anchor\");\n            if (document.body.clientWidth >= 1080) {\n                try { sidebar = localStorage.getItem('mdbook-sidebar'); } catch(e) { }\n                sidebar = sidebar || 'visible';\n            } else {\n                sidebar = 'hidden';\n            }\n            sidebar_toggle.checked = sidebar === 'visible';\n            body.classList.remove('sidebar-visible');\n            body.classList.add(\"sidebar-\" + sidebar);\n        </script>\n\n        <nav id=\"sidebar\" class=\"sidebar\" aria-label=\"Table of contents\" aria-hidden=\"false\">\n            <div class=\"sidebar-scrollbox\">\n                <ol class=\"chapter\"><li class=\"chapter-item expanded affix \"><a href=\"../index.html\" tabindex=\"0\">Introduction</a></li><li class=\"chapter-item expanded \"><a href=\"../getting-started/index.html\" tabindex=\"0\"><strong aria-hidden=\"true\">1.</strong> Getting Started</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../getting-started/installation.html\" tabindex=\"0\"><strong aria-hidden=\"true\">1.1.</strong> Installation</a></li><li class=\"chapter-item expanded \"><a href=\"../getting-started/first-steps.html\" tabindex=\"0\"><strong aria-hidden=\"true\">1.2.</strong> First Steps with Cargo</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../guide/index.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.</strong> Cargo Guide</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../guide/why-cargo-exists.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.1.</strong> Why Cargo Exists</a></li><li class=\"chapter-item expanded \"><a href=\"../guide/creating-a-new-project.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.2.</strong> Creating a New Package</a></li><li class=\"chapter-item expanded \"><a href=\"../guide/working-on-an-existing-project.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.3.</strong> Working on an Existing Package</a></li><li class=\"chapter-item expanded \"><a href=\"../guide/dependencies.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.4.</strong> Dependencies</a></li><li class=\"chapter-item expanded \"><a href=\"../guide/project-layout.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.5.</strong> Package Layout</a></li><li class=\"chapter-item expanded \"><a href=\"../guide/cargo-toml-vs-cargo-lock.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.6.</strong> Cargo.toml vs Cargo.lock</a></li><li class=\"chapter-item expanded \"><a href=\"../guide/tests.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.7.</strong> Tests</a></li><li class=\"chapter-item expanded \"><a href=\"../guide/continuous-integration.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.8.</strong> Continuous Integration</a></li><li class=\"chapter-item expanded \"><a href=\"../guide/cargo-home.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.9.</strong> Cargo Home</a></li><li class=\"chapter-item expanded \"><a href=\"../guide/build-cache.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.10.</strong> Build Cache</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../reference/index.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.</strong> Cargo Reference</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../reference/specifying-dependencies.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.1.</strong> Specifying Dependencies</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../reference/overriding-dependencies.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.1.1.</strong> Overriding Dependencies</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../reference/manifest.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.2.</strong> The Manifest Format</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../reference/cargo-targets.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.2.1.</strong> Cargo Targets</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../reference/workspaces.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.3.</strong> Workspaces</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/features.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.4.</strong> Features</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../reference/features-examples.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.4.1.</strong> Features Examples</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../reference/profiles.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.5.</strong> Profiles</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/config.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.6.</strong> Configuration</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/environment-variables.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.7.</strong> Environment Variables</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/build-scripts.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.8.</strong> Build Scripts</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../reference/build-script-examples.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.8.1.</strong> Build Script Examples</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../reference/publishing.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.9.</strong> Publishing on crates.io</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/pkgid-spec.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.10.</strong> Package ID Specifications</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/source-replacement.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.11.</strong> Source Replacement</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/external-tools.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.12.</strong> External Tools</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/registries.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.13.</strong> Registries</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../reference/registry-authentication.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.13.1.</strong> Registry Authentication</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../reference/credential-provider-protocol.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.13.1.1.</strong> Credential Provider Protocol</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../reference/running-a-registry.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.13.2.</strong> Running a Registry</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../reference/registry-index.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.13.2.1.</strong> Registry Index</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/registry-web-api.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.13.2.2.</strong> Registry Web API</a></li></ol></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../reference/resolver.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.14.</strong> Dependency Resolution</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/semver.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.15.</strong> SemVer Compatibility</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/future-incompat-report.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.16.</strong> Future incompat report</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/timings.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.17.</strong> Reporting build timings</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/unstable.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.18.</strong> Unstable Features</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../commands/index.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.</strong> Cargo Commands</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../commands/general-commands.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.1.</strong> General Commands</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../commands/cargo.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.1.1.</strong> cargo</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-help.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.1.2.</strong> cargo help</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-version.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.1.3.</strong> cargo version</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../commands/build-commands.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.</strong> Build Commands</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-bench.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.1.</strong> cargo bench</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-build.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.2.</strong> cargo build</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-check.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.3.</strong> cargo check</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-clean.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.4.</strong> cargo clean</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-doc.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.5.</strong> cargo doc</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-fetch.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.6.</strong> cargo fetch</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-fix.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.7.</strong> cargo fix</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-run.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.8.</strong> cargo run</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-rustc.html\" class=\"active\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.9.</strong> cargo rustc</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-rustdoc.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.10.</strong> cargo rustdoc</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-test.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.11.</strong> cargo test</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-report.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.12.</strong> cargo report</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../commands/manifest-commands.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.3.</strong> Manifest Commands</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-add.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.3.1.</strong> cargo add</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-generate-lockfile.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.3.2.</strong> cargo generate-lockfile</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-locate-project.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.3.3.</strong> cargo locate-project</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-metadata.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.3.4.</strong> cargo metadata</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-pkgid.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.3.5.</strong> cargo pkgid</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-remove.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.3.6.</strong> cargo remove</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-tree.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.3.7.</strong> cargo tree</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-update.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.3.8.</strong> cargo update</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-vendor.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.3.9.</strong> cargo vendor</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-verify-project.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.3.10.</strong> cargo verify-project</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../commands/package-commands.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.4.</strong> Package Commands</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-init.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.4.1.</strong> cargo init</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-install.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.4.2.</strong> cargo install</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-new.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.4.3.</strong> cargo new</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-search.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.4.4.</strong> cargo search</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-uninstall.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.4.5.</strong> cargo uninstall</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../commands/publishing-commands.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.5.</strong> Publishing Commands</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-login.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.5.1.</strong> cargo login</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-logout.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.5.2.</strong> cargo logout</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-owner.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.5.3.</strong> cargo owner</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-package.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.5.4.</strong> cargo package</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-publish.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.5.5.</strong> cargo publish</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-yank.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.5.6.</strong> cargo yank</a></li></ol></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../faq.html\" tabindex=\"0\"><strong aria-hidden=\"true\">5.</strong> FAQ</a></li><li class=\"chapter-item expanded \"><a href=\"../appendix/glossary.html\" tabindex=\"0\"><strong aria-hidden=\"true\">6.</strong> Appendix: Glossary</a></li><li class=\"chapter-item expanded \"><a href=\"../appendix/git-authentication.html\" tabindex=\"0\"><strong aria-hidden=\"true\">7.</strong> Appendix: Git Authentication</a></li></ol>\n            </div>\n            <div id=\"sidebar-resize-handle\" class=\"sidebar-resize-handle\">\n                <div class=\"sidebar-resize-indicator\"></div>\n            </div>\n        </nav>\n\n        <!-- Track and set sidebar scroll position -->\n        <script>\n            var sidebarScrollbox = document.querySelector('#sidebar .sidebar-scrollbox');\n            sidebarScrollbox.addEventListener('click', function(e) {\n                if (e.target.tagName === 'A') {\n                    sessionStorage.setItem('sidebar-scroll', sidebarScrollbox.scrollTop);\n                }\n            }, { passive: true });\n            var sidebarScrollTop = sessionStorage.getItem('sidebar-scroll');\n            sessionStorage.removeItem('sidebar-scroll');\n            if (sidebarScrollTop) {\n                // preserve sidebar scroll position when navigating via links within sidebar\n                sidebarScrollbox.scrollTop = sidebarScrollTop;\n            } else {\n                // scroll sidebar to current active section when navigating via \"next/previous chapter\" buttons\n                var activeSection = document.querySelector('#sidebar .active');\n                if (activeSection) {\n                    activeSection.scrollIntoView({ block: 'center' });\n                }\n            }\n        </script>\n\n        <div id=\"page-wrapper\" class=\"page-wrapper\">\n\n            <div class=\"page\">\n                                <div id=\"menu-bar-hover-placeholder\"></div>\n                <div id=\"menu-bar\" class=\"menu-bar\" style=\"top: 0px;\">\n                    <div class=\"left-buttons\">\n                        <label id=\"sidebar-toggle\" class=\"icon-button\" for=\"sidebar-toggle-anchor\" title=\"Toggle Table of Contents\" aria-label=\"Toggle Table of Contents\" aria-controls=\"sidebar\" aria-expanded=\"true\">\n                            <i class=\"fa fa-bars\"></i>\n                        </label>\n                        <button id=\"theme-toggle\" class=\"icon-button\" type=\"button\" title=\"Change theme\" aria-label=\"Change theme\" aria-haspopup=\"true\" aria-expanded=\"false\" aria-controls=\"theme-list\">\n                            <i class=\"fa fa-paint-brush\"></i>\n                        </button>\n                        <ul id=\"theme-list\" class=\"theme-popup\" aria-label=\"Themes\" role=\"menu\">\n                            <li role=\"none\"><button role=\"menuitem\" class=\"theme theme-selected\" id=\"light\">Light</button></li>\n                            <li role=\"none\"><button role=\"menuitem\" class=\"theme\" id=\"rust\">Rust</button></li>\n                            <li role=\"none\"><button role=\"menuitem\" class=\"theme\" id=\"coal\">Coal</button></li>\n                            <li role=\"none\"><button role=\"menuitem\" class=\"theme\" id=\"navy\">Navy</button></li>\n                            <li role=\"none\"><button role=\"menuitem\" class=\"theme\" id=\"ayu\">Ayu</button></li>\n                        </ul>\n                        <button id=\"search-toggle\" class=\"icon-button\" type=\"button\" title=\"Search. (Shortkey: s)\" aria-label=\"Toggle Searchbar\" aria-expanded=\"false\" aria-keyshortcuts=\"S\" aria-controls=\"searchbar\">\n                            <i class=\"fa fa-search\"></i>\n                        </button>\n                    </div>\n\n                    <h1 class=\"menu-title\">The Cargo Book</h1>\n\n                    <div class=\"right-buttons\">\n                        <a href=\"../print.html\" title=\"Print this book\" aria-label=\"Print this book\">\n                            <i id=\"print-button\" class=\"fa fa-print\"></i>\n                        </a>\n                        <a href=\"https://github.com/rust-lang/cargo/tree/master/src/doc/src\" title=\"Git repository\" aria-label=\"Git repository\">\n                            <i id=\"git-repository-button\" class=\"fa fa-github\"></i>\n                        </a>\n                        <a href=\"https://github.com/rust-lang/cargo/edit/master/src/doc/src/commands/cargo-rustc.md\" title=\"Suggest an edit\" aria-label=\"Suggest an edit\">\n                            <i id=\"git-edit-button\" class=\"fa fa-edit\"></i>\n                        </a>\n\n                    </div>\n                </div>\n\n                <div id=\"search-wrapper\" class=\"hidden\">\n                    <form id=\"searchbar-outer\" class=\"searchbar-outer\">\n                        <input type=\"search\" id=\"searchbar\" name=\"searchbar\" placeholder=\"Search this book ...\" aria-controls=\"searchresults-outer\" aria-describedby=\"searchresults-header\">\n                    </form>\n                    <div id=\"searchresults-outer\" class=\"searchresults-outer hidden\">\n                        <div id=\"searchresults-header\" class=\"searchresults-header\"></div>\n                        <ul id=\"searchresults\">\n                        </ul>\n                    </div>\n                </div>\n\n                <!-- Apply ARIA attributes after the sidebar and the sidebar toggle button are added to the DOM -->\n                <script>\n                    document.getElementById('sidebar-toggle').setAttribute('aria-expanded', sidebar === 'visible');\n                    document.getElementById('sidebar').setAttribute('aria-hidden', sidebar !== 'visible');\n                    Array.from(document.querySelectorAll('#sidebar a')).forEach(function(link) {\n                        link.setAttribute('tabIndex', sidebar === 'visible' ? 0 : -1);\n                    });\n                </script>\n\n                <div id=\"content\" class=\"content\">\n                    <main>\n                        <h1 id=\"cargo-rustc1\"><a class=\"header\" href=\"#cargo-rustc1\">cargo-rustc(1)</a></h1>\n<h2 id=\"name\"><a class=\"header\" href=\"#name\">NAME</a></h2>\n<p>cargo-rustc — Compile the current package, and pass extra options to the compiler</p>\n<h2 id=\"synopsis\"><a class=\"header\" href=\"#synopsis\">SYNOPSIS</a></h2>\n<p><code class=\"hljs\">cargo rustc</code> [<em>options</em>] [<code class=\"hljs\">--</code> <em>args</em>]</p>\n<h2 id=\"description\"><a class=\"header\" href=\"#description\">DESCRIPTION</a></h2>\n<p>The specified target for the current package (or package specified by <code class=\"hljs\">-p</code> if\nprovided) will be compiled along with all of its dependencies. The specified\n<em>args</em> will all be passed to the final compiler invocation, not any of the\ndependencies. Note that the compiler will still unconditionally receive\narguments such as <code class=\"hljs\">-L</code>, <code class=\"hljs\">--extern</code>, and <code class=\"hljs\">--crate-type</code>, and the specified\n<em>args</em> will simply be added to the compiler invocation.</p>\n<p>See <a href=\"https://doc.rust-lang.org/rustc/index.html\">https://doc.rust-lang.org/rustc/index.html</a> for documentation on rustc\nflags.</p>\n<p>This command requires that only one target is being compiled when additional\narguments are provided. If more than one target is available for the current\npackage the filters of <code class=\"hljs\">--lib</code>, <code class=\"hljs\">--bin</code>, etc, must be used to select which\ntarget is compiled.</p>\n<p>To pass flags to all compiler processes spawned by Cargo, use the <code class=\"hljs\">RUSTFLAGS</code>\n<a href=\"../reference/environment-variables.html\">environment variable</a> or the\n<code class=\"hljs\">build.rustflags</code> <a href=\"../reference/config.html\">config value</a>.</p>\n<h2 id=\"options\"><a class=\"header\" href=\"#options\">OPTIONS</a></h2>\n<h3 id=\"package-selection\"><a class=\"header\" href=\"#package-selection\">Package Selection</a></h3>\n<p>By default, the package in the current working directory is selected. The <code class=\"hljs\">-p</code>\nflag can be used to choose a different package in a workspace.</p>\n<dl>\n<dt class=\"option-term\" id=\"option-cargo-rustc--p\"><a class=\"option-anchor\" href=\"#option-cargo-rustc--p\"></a><code class=\"hljs\">-p</code> <em>spec</em></dt>\n<dt class=\"option-term\" id=\"option-cargo-rustc---package\"><a class=\"option-anchor\" href=\"#option-cargo-rustc---package\"></a><code class=\"hljs\">--package</code> <em>spec</em></dt>\n<dd class=\"option-desc\">The package to build. See <a href=\"cargo-pkgid.html\">cargo-pkgid(1)</a> for the SPEC\nformat.</dd>\n</dl>\n<h3 id=\"target-selection\"><a class=\"header\" href=\"#target-selection\">Target Selection</a></h3>\n<p>When no target selection options are given, <code class=\"hljs\">cargo rustc</code> will build all\nbinary and library targets of the selected package.</p>\n<p>Binary targets are automatically built if there is an integration test or\nbenchmark being selected to build. This allows an integration\ntest to execute the binary to exercise and test its behavior.\nThe <code class=\"hljs\">CARGO_BIN_EXE_&lt;name&gt;</code>\n<a href=\"../reference/environment-variables.html#environment-variables-cargo-sets-for-crates\">environment variable</a>\nis set when the integration test is built so that it can use the\n<a href=\"https://doc.rust-lang.org/std/macro.env.html\"><code class=\"hljs\">env</code> macro</a> to locate the\nexecutable.</p>\n<p>Passing target selection flags will build only the specified\ntargets.</p>\n<p>Note that <code class=\"hljs\">--bin</code>, <code class=\"hljs\">--example</code>, <code class=\"hljs\">--test</code> and <code class=\"hljs\">--bench</code> flags also\nsupport common Unix glob patterns like <code class=\"hljs\">*</code>, <code class=\"hljs\">?</code> and <code class=\"hljs\">[]</code>. However, to avoid your\nshell accidentally expanding glob patterns before Cargo handles them, you must\nuse single quotes or double quotes around each glob pattern.</p>\n<dl>\n<dt class=\"option-term\" id=\"option-cargo-rustc---lib\"><a class=\"option-anchor\" href=\"#option-cargo-rustc---lib\"></a><code class=\"hljs\">--lib</code></dt>\n<dd class=\"option-desc\">Build the package’s library.</dd>\n<dt class=\"option-term\" id=\"option-cargo-rustc---bin\"><a class=\"option-anchor\" href=\"#option-cargo-rustc---bin\"></a><code class=\"hljs\">--bin</code> <em>name</em>…</dt>\n<dd class=\"option-desc\">Build the specified binary. This flag may be specified multiple times\nand supports common Unix glob patterns.</dd>\n<dt class=\"option-term\" id=\"option-cargo-rustc---bins\"><a class=\"option-anchor\" href=\"#option-cargo-rustc---bins\"></a><code class=\"hljs\">--bins</code></dt>\n<dd class=\"option-desc\">Build all binary targets.</dd>\n<dt class=\"option-term\" id=\"option-cargo-rustc---example\"><a class=\"option-anchor\" href=\"#option-cargo-rustc---example\"></a><code class=\"hljs\">--example</code> <em>name</em>…</dt>\n<dd class=\"option-desc\">Build the specified example. This flag may be specified multiple times\nand supports common Unix glob patterns.</dd>\n<dt class=\"option-term\" id=\"option-cargo-rustc---examples\"><a class=\"option-anchor\" href=\"#option-cargo-rustc---examples\"></a><code class=\"hljs\">--examples</code></dt>\n<dd class=\"option-desc\">Build all example targets.</dd>\n<dt class=\"option-term\" id=\"option-cargo-rustc---test\"><a class=\"option-anchor\" href=\"#option-cargo-rustc---test\"></a><code class=\"hljs\">--test</code> <em>name</em>…</dt>\n<dd class=\"option-desc\">Build the specified integration test. This flag may be specified\nmultiple times and supports common Unix glob patterns.</dd>\n<dt class=\"option-term\" id=\"option-cargo-rustc---tests\"><a class=\"option-anchor\" href=\"#option-cargo-rustc---tests\"></a><code class=\"hljs\">--tests</code></dt>\n<dd class=\"option-desc\">Build all targets in test mode that have the <code class=\"hljs\">test = true</code> manifest\nflag set. By default this includes the library and binaries built as\nunittests, and integration tests. Be aware that this will also build any\nrequired dependencies, so the lib target may be built twice (once as a\nunittest, and once as a dependency for binaries, integration tests, etc.).\nTargets may be enabled or disabled by setting the <code class=\"hljs\">test</code> flag in the\nmanifest settings for the target.</dd>\n<dt class=\"option-term\" id=\"option-cargo-rustc---bench\"><a class=\"option-anchor\" href=\"#option-cargo-rustc---bench\"></a><code class=\"hljs\">--bench</code> <em>name</em>…</dt>\n<dd class=\"option-desc\">Build the specified benchmark. This flag may be specified multiple\ntimes and supports common Unix glob patterns.</dd>\n<dt class=\"option-term\" id=\"option-cargo-rustc---benches\"><a class=\"option-anchor\" href=\"#option-cargo-rustc---benches\"></a><code class=\"hljs\">--benches</code></dt>\n<dd class=\"option-desc\">Build all targets in benchmark mode that have the <code class=\"hljs\">bench = true</code>\nmanifest flag set. By default this includes the library and binaries built\nas benchmarks, and bench targets. Be aware that this will also build any\nrequired dependencies, so the lib target may be built twice (once as a\nbenchmark, and once as a dependency for binaries, benchmarks, etc.).\nTargets may be enabled or disabled by setting the <code class=\"hljs\">bench</code> flag in the\nmanifest settings for the target.</dd>\n<dt class=\"option-term\" id=\"option-cargo-rustc---all-targets\"><a class=\"option-anchor\" href=\"#option-cargo-rustc---all-targets\"></a><code class=\"hljs\">--all-targets</code></dt>\n<dd class=\"option-desc\">Build all targets. This is equivalent to specifying <code class=\"hljs\">--lib --bins --tests --benches --examples</code>.</dd>\n</dl>\n<h3 id=\"feature-selection\"><a class=\"header\" href=\"#feature-selection\">Feature Selection</a></h3>\n<p>The feature flags allow you to control which features are enabled. When no\nfeature options are given, the <code class=\"hljs\">default</code> feature is activated for every\nselected package.</p>\n<p>See <a href=\"../reference/features.html#command-line-feature-options\">the features documentation</a>\nfor more details.</p>\n<dl>\n<dt class=\"option-term\" id=\"option-cargo-rustc--F\"><a class=\"option-anchor\" href=\"#option-cargo-rustc--F\"></a><code class=\"hljs\">-F</code> <em>features</em></dt>\n<dt class=\"option-term\" id=\"option-cargo-rustc---features\"><a class=\"option-anchor\" href=\"#option-cargo-rustc---features\"></a><code class=\"hljs\">--features</code> <em>features</em></dt>\n<dd class=\"option-desc\">Space or comma separated list of features to activate. Features of workspace\nmembers may be enabled with <code class=\"hljs\">package-name/feature-name</code> syntax. This flag may\nbe specified multiple times, which enables all specified features.</dd>\n<dt class=\"option-term\" id=\"option-cargo-rustc---all-features\"><a class=\"option-anchor\" href=\"#option-cargo-rustc---all-features\"></a><code class=\"hljs\">--all-features</code></dt>\n<dd class=\"option-desc\">Activate all available features of all selected packages.</dd>\n<dt class=\"option-term\" id=\"option-cargo-rustc---no-default-features\"><a class=\"option-anchor\" href=\"#option-cargo-rustc---no-default-features\"></a><code class=\"hljs\">--no-default-features</code></dt>\n<dd class=\"option-desc\">Do not activate the <code class=\"hljs\">default</code> feature of the selected packages.</dd>\n</dl>\n<h3 id=\"compilation-options\"><a class=\"header\" href=\"#compilation-options\">Compilation Options</a></h3>\n<dl>\n<dt class=\"option-term\" id=\"option-cargo-rustc---target\"><a class=\"option-anchor\" href=\"#option-cargo-rustc---target\"></a><code class=\"hljs\">--target</code> <em>triple</em></dt>\n<dd class=\"option-desc\">Build for the given architecture. The default is the host architecture. The general format of the triple is\n<code class=\"hljs\">&lt;arch&gt;&lt;sub&gt;-&lt;vendor&gt;-&lt;sys&gt;-&lt;abi&gt;</code>. Run <code class=\"hljs\">rustc --print target-list</code> for a\nlist of supported targets. This flag may be specified multiple times.<p></p>\n<p>This may also be specified with the <code class=\"hljs\">build.target</code>\n<a href=\"../reference/config.html\">config value</a>.</p>\n<p>Note that specifying this flag makes Cargo run in a different mode where the\ntarget artifacts are placed in a separate directory. See the\n<a href=\"../guide/build-cache.html\">build cache</a> documentation for more details.</p></dd>\n<dt class=\"option-term\" id=\"option-cargo-rustc--r\"><a class=\"option-anchor\" href=\"#option-cargo-rustc--r\"></a><code class=\"hljs\">-r</code></dt>\n<dt class=\"option-term\" id=\"option-cargo-rustc---release\"><a class=\"option-anchor\" href=\"#option-cargo-rustc---release\"></a><code class=\"hljs\">--release</code></dt>\n<dd class=\"option-desc\">Build optimized artifacts with the <code class=\"hljs\">release</code> profile.\nSee also the <code class=\"hljs\">--profile</code> option for choosing a specific profile by name.</dd>\n<dt class=\"option-term\" id=\"option-cargo-rustc---profile\"><a class=\"option-anchor\" href=\"#option-cargo-rustc---profile\"></a><code class=\"hljs\">--profile</code> <em>name</em></dt>\n<dd class=\"option-desc\">Build with the given profile.<p></p>\n<p>The <code class=\"hljs\">rustc</code> subcommand will treat the following named profiles with special behaviors:</p>\n<ul>\n<li><code class=\"hljs\">check</code> — Builds in the same way as the <a href=\"cargo-check.html\">cargo-check(1)</a> command with\nthe <code class=\"hljs\">dev</code> profile.</li>\n<li><code class=\"hljs\">test</code> — Builds in the same way as the <a href=\"cargo-test.html\">cargo-test(1)</a> command,\nenabling building in test mode which will enable tests and enable the <code class=\"hljs\">test</code>\ncfg option. See <a href=\"https://doc.rust-lang.org/rustc/tests/index.html\">rustc\ntests</a> for more detail.</li>\n<li><code class=\"hljs\">bench</code> — Builds in the same was as the <a href=\"cargo-bench.html\">cargo-bench(1)</a> command,\nsimilar to the <code class=\"hljs\">test</code> profile.</li>\n</ul>\n<p>See <a href=\"../reference/profiles.html\">the reference</a> for more details on profiles.</p></dd>\n<dt class=\"option-term\" id=\"option-cargo-rustc---timings=fmts\"><a class=\"option-anchor\" href=\"#option-cargo-rustc---timings=fmts\"></a><code class=\"hljs\">--timings=</code><em>fmts</em></dt>\n<dd class=\"option-desc\">Output information how long each compilation takes, and track concurrency\ninformation over time. Accepts an optional comma-separated list of output\nformats; <code class=\"hljs\">--timings</code> without an argument will default to <code class=\"hljs\">--timings=html</code>.\nSpecifying an output format (rather than the default) is unstable and requires\n<code class=\"hljs\">-Zunstable-options</code>. Valid output formats:<p></p>\n<ul>\n<li><code class=\"hljs\">html</code> (unstable, requires <code class=\"hljs\">-Zunstable-options</code>): Write a human-readable file <code class=\"hljs\">cargo-timing.html</code> to the\n<code class=\"hljs\">target/cargo-timings</code> directory with a report of the compilation. Also write\na report to the same directory with a timestamp in the filename if you want\nto look at older runs. HTML output is suitable for human consumption only,\nand does not provide machine-readable timing data.</li>\n<li><code class=\"hljs\">json</code> (unstable, requires <code class=\"hljs\">-Zunstable-options</code>): Emit machine-readable JSON\ninformation about timing information.</li>\n</ul></dd>\n<dt class=\"option-term\" id=\"option-cargo-rustc---crate-type\"><a class=\"option-anchor\" href=\"#option-cargo-rustc---crate-type\"></a><code class=\"hljs\">--crate-type</code> <em>crate-type</em></dt>\n<dd class=\"option-desc\">Build for the given crate type. This flag accepts a comma-separated list of\n1 or more crate types, of which the allowed values are the same as <code class=\"hljs\">crate-type</code>\nfield in the manifest for configuring a Cargo target. See\n<a href=\"../reference/cargo-targets.html#the-crate-type-field\"><code class=\"hljs\">crate-type</code> field</a>\nfor possible values.<p></p>\n<p>If the manifest contains a list, and <code class=\"hljs\">--crate-type</code> is provided,\nthe command-line argument value will override what is in the manifest.</p>\n<p>This flag only works when building a <code class=\"hljs\">lib</code> or <code class=\"hljs\">example</code> library target.</p></dd>\n</dl>\n<h3 id=\"output-options\"><a class=\"header\" href=\"#output-options\">Output Options</a></h3>\n<dl>\n<dt class=\"option-term\" id=\"option-cargo-rustc---target-dir\"><a class=\"option-anchor\" href=\"#option-cargo-rustc---target-dir\"></a><code class=\"hljs\">--target-dir</code> <em>directory</em></dt>\n<dd class=\"option-desc\">Directory for all generated artifacts and intermediate files. May also be\nspecified with the <code class=\"hljs\">CARGO_TARGET_DIR</code> environment variable, or the\n<code class=\"hljs\">build.target-dir</code> <a href=\"../reference/config.html\">config value</a>.\nDefaults to <code class=\"hljs\">target</code> in the root of the workspace.</dd>\n</dl>\n<h3 id=\"display-options\"><a class=\"header\" href=\"#display-options\">Display Options</a></h3>\n<dl>\n<dt class=\"option-term\" id=\"option-cargo-rustc--v\"><a class=\"option-anchor\" href=\"#option-cargo-rustc--v\"></a><code class=\"hljs\">-v</code></dt>\n<dt class=\"option-term\" id=\"option-cargo-rustc---verbose\"><a class=\"option-anchor\" href=\"#option-cargo-rustc---verbose\"></a><code class=\"hljs\">--verbose</code></dt>\n<dd class=\"option-desc\">Use verbose output. May be specified twice for “very verbose” output which\nincludes extra output such as dependency warnings and build script output.\nMay also be specified with the <code class=\"hljs\">term.verbose</code>\n<a href=\"../reference/config.html\">config value</a>.</dd>\n<dt class=\"option-term\" id=\"option-cargo-rustc--q\"><a class=\"option-anchor\" href=\"#option-cargo-rustc--q\"></a><code class=\"hljs\">-q</code></dt>\n<dt class=\"option-term\" id=\"option-cargo-rustc---quiet\"><a class=\"option-anchor\" href=\"#option-cargo-rustc---quiet\"></a><code class=\"hljs\">--quiet</code></dt>\n<dd class=\"option-desc\">Do not print cargo log messages.\nMay also be specified with the <code class=\"hljs\">term.quiet</code>\n<a href=\"../reference/config.html\">config value</a>.</dd>\n<dt class=\"option-term\" id=\"option-cargo-rustc---color\"><a class=\"option-anchor\" href=\"#option-cargo-rustc---color\"></a><code class=\"hljs\">--color</code> <em>when</em></dt>\n<dd class=\"option-desc\">Control when colored output is used. Valid values:<p></p>\n<ul>\n<li><code class=\"hljs\">auto</code> (default): Automatically detect if color support is available on the\nterminal.</li>\n<li><code class=\"hljs\">always</code>: Always display colors.</li>\n<li><code class=\"hljs\">never</code>: Never display colors.</li>\n</ul>\n<p>May also be specified with the <code class=\"hljs\">term.color</code>\n<a href=\"../reference/config.html\">config value</a>.</p></dd>\n<dt class=\"option-term\" id=\"option-cargo-rustc---message-format\"><a class=\"option-anchor\" href=\"#option-cargo-rustc---message-format\"></a><code class=\"hljs\">--message-format</code> <em>fmt</em></dt>\n<dd class=\"option-desc\">The output format for diagnostic messages. Can be specified multiple times\nand consists of comma-separated values. Valid values:<p></p>\n<ul>\n<li><code class=\"hljs\">human</code> (default): Display in a human-readable text format. Conflicts with\n<code class=\"hljs\">short</code> and <code class=\"hljs\">json</code>.</li>\n<li><code class=\"hljs\">short</code>: Emit shorter, human-readable text messages. Conflicts with <code class=\"hljs\">human</code>\nand <code class=\"hljs\">json</code>.</li>\n<li><code class=\"hljs\">json</code>: Emit JSON messages to stdout. See\n<a href=\"../reference/external-tools.html#json-messages\">the reference</a>\nfor more details. Conflicts with <code class=\"hljs\">human</code> and <code class=\"hljs\">short</code>.</li>\n<li><code class=\"hljs\">json-diagnostic-short</code>: Ensure the <code class=\"hljs\">rendered</code> field of JSON messages contains\nthe “short” rendering from rustc. Cannot be used with <code class=\"hljs\">human</code> or <code class=\"hljs\">short</code>.</li>\n<li><code class=\"hljs\">json-diagnostic-rendered-ansi</code>: Ensure the <code class=\"hljs\">rendered</code> field of JSON messages\ncontains embedded ANSI color codes for respecting rustc’s default color\nscheme. Cannot be used with <code class=\"hljs\">human</code> or <code class=\"hljs\">short</code>.</li>\n<li><code class=\"hljs\">json-render-diagnostics</code>: Instruct Cargo to not include rustc diagnostics\nin JSON messages printed, but instead Cargo itself should render the\nJSON diagnostics coming from rustc. Cargo’s own JSON diagnostics and others\ncoming from rustc are still emitted. Cannot be used with <code class=\"hljs\">human</code> or <code class=\"hljs\">short</code>.</li>\n</ul></dd>\n</dl>\n<h3 id=\"manifest-options\"><a class=\"header\" href=\"#manifest-options\">Manifest Options</a></h3>\n<dl>\n<dt class=\"option-term\" id=\"option-cargo-rustc---manifest-path\"><a class=\"option-anchor\" href=\"#option-cargo-rustc---manifest-path\"></a><code class=\"hljs\">--manifest-path</code> <em>path</em></dt>\n<dd class=\"option-desc\">Path to the <code class=\"hljs\">Cargo.toml</code> file. By default, Cargo searches for the\n<code class=\"hljs\">Cargo.toml</code> file in the current directory or any parent directory.</dd>\n<dt class=\"option-term\" id=\"option-cargo-rustc---ignore-rust-version\"><a class=\"option-anchor\" href=\"#option-cargo-rustc---ignore-rust-version\"></a><code class=\"hljs\">--ignore-rust-version</code></dt>\n<dd class=\"option-desc\">Ignore <code class=\"hljs\">rust-version</code> specification in packages.</dd>\n<dt class=\"option-term\" id=\"option-cargo-rustc---locked\"><a class=\"option-anchor\" href=\"#option-cargo-rustc---locked\"></a><code class=\"hljs\">--locked</code></dt>\n<dd class=\"option-desc\">Asserts that the exact same dependencies and versions are used as when the\nexisting <code class=\"hljs\">Cargo.lock</code> file was originally generated. Cargo will exit with an\nerror when either of the following scenarios arises:<p></p>\n<ul>\n<li>The lock file is missing.</li>\n<li>Cargo attempted to change the lock file due to a different dependency resolution.</li>\n</ul>\n<p>It may be used in environments where deterministic builds are desired,\nsuch as in CI pipelines.</p></dd>\n<dt class=\"option-term\" id=\"option-cargo-rustc---offline\"><a class=\"option-anchor\" href=\"#option-cargo-rustc---offline\"></a><code class=\"hljs\">--offline</code></dt>\n<dd class=\"option-desc\">Prevents Cargo from accessing the network for any reason. Without this\nflag, Cargo will stop with an error if it needs to access the network and\nthe network is not available. With this flag, Cargo will attempt to\nproceed without the network if possible.<p></p>\n<p>Beware that this may result in different dependency resolution than online\nmode. Cargo will restrict itself to crates that are downloaded locally, even\nif there might be a newer version as indicated in the local copy of the index.\nSee the <a href=\"cargo-fetch.html\">cargo-fetch(1)</a> command to download dependencies before going\noffline.</p>\n<p>May also be specified with the <code class=\"hljs\">net.offline</code> <a href=\"../reference/config.html\">config value</a>.</p></dd>\n<dt class=\"option-term\" id=\"option-cargo-rustc---frozen\"><a class=\"option-anchor\" href=\"#option-cargo-rustc---frozen\"></a><code class=\"hljs\">--frozen</code></dt>\n<dd class=\"option-desc\">Equivalent to specifying both <code class=\"hljs\">--locked</code> and <code class=\"hljs\">--offline</code>.</dd>\n</dl>\n<h3 id=\"common-options\"><a class=\"header\" href=\"#common-options\">Common Options</a></h3>\n<dl>\n<dt class=\"option-term\" id=\"option-cargo-rustc-+toolchain\"><a class=\"option-anchor\" href=\"#option-cargo-rustc-+toolchain\"></a><code class=\"hljs\">+</code><em>toolchain</em></dt>\n<dd class=\"option-desc\">If Cargo has been installed with rustup, and the first argument to <code class=\"hljs\">cargo</code>\nbegins with <code class=\"hljs\">+</code>, it will be interpreted as a rustup toolchain name (such\nas <code class=\"hljs\">+stable</code> or <code class=\"hljs\">+nightly</code>).\nSee the <a href=\"https://rust-lang.github.io/rustup/overrides.html\">rustup documentation</a>\nfor more information about how toolchain overrides work.</dd>\n<dt class=\"option-term\" id=\"option-cargo-rustc---config\"><a class=\"option-anchor\" href=\"#option-cargo-rustc---config\"></a><code class=\"hljs\">--config</code> <em>KEY=VALUE</em> or <em>PATH</em></dt>\n<dd class=\"option-desc\">Overrides a Cargo configuration value. The argument should be in TOML syntax of <code class=\"hljs\">KEY=VALUE</code>,\nor provided as a path to an extra configuration file. This flag may be specified multiple times.\nSee the <a href=\"../reference/config.html#command-line-overrides\">command-line overrides section</a> for more information.</dd>\n<dt class=\"option-term\" id=\"option-cargo-rustc--C\"><a class=\"option-anchor\" href=\"#option-cargo-rustc--C\"></a><code class=\"hljs\">-C</code> <em>PATH</em></dt>\n<dd class=\"option-desc\">Changes the current working directory before executing any specified operations. This affects\nthings like where cargo looks by default for the project manifest (<code class=\"hljs\">Cargo.toml</code>), as well as\nthe directories searched for discovering <code class=\"hljs\">.cargo/config.toml</code>, for example. This option must\nappear before the command name, for example <code class=\"hljs\">cargo -C path/to/my-project build</code>.<p></p>\n<p>This option is only available on the <a href=\"https://doc.rust-lang.org/book/appendix-07-nightly-rust.html\">nightly\nchannel</a> and\nrequires the <code class=\"hljs\">-Z unstable-options</code> flag to enable (see\n<a href=\"https://github.com/rust-lang/cargo/issues/10098\">#10098</a>).</p></dd>\n<dt class=\"option-term\" id=\"option-cargo-rustc--h\"><a class=\"option-anchor\" href=\"#option-cargo-rustc--h\"></a><code class=\"hljs\">-h</code></dt>\n<dt class=\"option-term\" id=\"option-cargo-rustc---help\"><a class=\"option-anchor\" href=\"#option-cargo-rustc---help\"></a><code class=\"hljs\">--help</code></dt>\n<dd class=\"option-desc\">Prints help information.</dd>\n<dt class=\"option-term\" id=\"option-cargo-rustc--Z\"><a class=\"option-anchor\" href=\"#option-cargo-rustc--Z\"></a><code class=\"hljs\">-Z</code> <em>flag</em></dt>\n<dd class=\"option-desc\">Unstable (nightly-only) flags to Cargo. Run <code class=\"hljs\">cargo -Z help</code> for details.</dd>\n</dl>\n<h3 id=\"miscellaneous-options\"><a class=\"header\" href=\"#miscellaneous-options\">Miscellaneous Options</a></h3>\n<dl>\n<dt class=\"option-term\" id=\"option-cargo-rustc--j\"><a class=\"option-anchor\" href=\"#option-cargo-rustc--j\"></a><code class=\"hljs\">-j</code> <em>N</em></dt>\n<dt class=\"option-term\" id=\"option-cargo-rustc---jobs\"><a class=\"option-anchor\" href=\"#option-cargo-rustc---jobs\"></a><code class=\"hljs\">--jobs</code> <em>N</em></dt>\n<dd class=\"option-desc\">Number of parallel jobs to run. May also be specified with the\n<code class=\"hljs\">build.jobs</code> <a href=\"../reference/config.html\">config value</a>. Defaults to\nthe number of logical CPUs. If negative, it sets the maximum number of\nparallel jobs to the number of logical CPUs plus provided value. If\na string <code class=\"hljs\">default</code> is provided, it sets the value back to defaults.\nShould not be 0.</dd>\n<dt class=\"option-term\" id=\"option-cargo-rustc---keep-going\"><a class=\"option-anchor\" href=\"#option-cargo-rustc---keep-going\"></a><code class=\"hljs\">--keep-going</code></dt>\n<dd class=\"option-desc\">Build as many crates in the dependency graph as possible, rather than aborting\nthe build on the first one that fails to build.<p></p>\n<p>For example if the current package depends on dependencies <code class=\"hljs\">fails</code> and <code class=\"hljs\">works</code>,\none of which fails to build, <code class=\"hljs\">cargo rustc -j1</code> may or may not build the\none that succeeds (depending on which one of the two builds Cargo picked to run\nfirst), whereas <code class=\"hljs\">cargo rustc -j1 --keep-going</code> would definitely run both\nbuilds, even if the one run first fails.</p></dd>\n<dt class=\"option-term\" id=\"option-cargo-rustc---future-incompat-report\"><a class=\"option-anchor\" href=\"#option-cargo-rustc---future-incompat-report\"></a><code class=\"hljs\">--future-incompat-report</code></dt>\n<dd class=\"option-desc\">Displays a future-incompat report for any future-incompatible warnings\nproduced during execution of this command<p></p>\n<p>See <a href=\"cargo-report.html\">cargo-report(1)</a></p></dd>\n</dl>\n<h2 id=\"environment\"><a class=\"header\" href=\"#environment\">ENVIRONMENT</a></h2>\n<p>See <a href=\"../reference/environment-variables.html\">the reference</a> for\ndetails on environment variables that Cargo reads.</p>\n<h2 id=\"exit-status\"><a class=\"header\" href=\"#exit-status\">EXIT STATUS</a></h2>\n<ul>\n<li><code class=\"hljs\">0</code>: Cargo succeeded.</li>\n<li><code class=\"hljs\">101</code>: Cargo failed to complete.</li>\n</ul>\n<h2 id=\"examples\"><a class=\"header\" href=\"#examples\">EXAMPLES</a></h2>\n<ol>\n<li>\n<p>Check if your package (not including dependencies) uses unsafe code:</p>\n<pre><div class=\"buttons\"><button class=\"fa fa-copy clip-button\" title=\"Copy to clipboard\" aria-label=\"Copy to clipboard\"><i class=\"tooltiptext\"></i></button></div><code class=\"hljs\">cargo rustc --lib -- -D unsafe-code\n</code></pre>\n</li>\n<li>\n<p>Try an experimental flag on the nightly compiler, such as this which prints\nthe size of every type:</p>\n<pre><div class=\"buttons\"><button class=\"fa fa-copy clip-button\" title=\"Copy to clipboard\" aria-label=\"Copy to clipboard\"><i class=\"tooltiptext\"></i></button></div><code class=\"hljs\">cargo rustc --lib -- -Z print-type-sizes\n</code></pre>\n</li>\n<li>\n<p>Override <code class=\"hljs\">crate-type</code> field in Cargo.toml with command-line option:</p>\n<pre><div class=\"buttons\"><button class=\"fa fa-copy clip-button\" title=\"Copy to clipboard\" aria-label=\"Copy to clipboard\"><i class=\"tooltiptext\"></i></button></div><code class=\"hljs\">cargo rustc --lib --crate-type lib,cdylib\n</code></pre>\n</li>\n</ol>\n<h2 id=\"see-also\"><a class=\"header\" href=\"#see-also\">SEE ALSO</a></h2>\n<p><a href=\"cargo.html\">cargo(1)</a>, <a href=\"cargo-build.html\">cargo-build(1)</a>, <a href=\"https://doc.rust-lang.org/rustc/index.html\">rustc(1)</a></p>\n\n                    </main>\n\n                    <nav class=\"nav-wrapper\" aria-label=\"Page navigation\">\n                        <!-- Mobile navigation buttons -->\n                            <a rel=\"prev\" href=\"../commands/cargo-run.html\" class=\"mobile-nav-chapters previous\" title=\"Previous chapter\" aria-label=\"Previous chapter\" aria-keyshortcuts=\"Left\">\n                                <i class=\"fa fa-angle-left\"></i>\n                            </a>\n\n                            <a rel=\"next prefetch\" href=\"../commands/cargo-rustdoc.html\" class=\"mobile-nav-chapters next\" title=\"Next chapter\" aria-label=\"Next chapter\" aria-keyshortcuts=\"Right\">\n                                <i class=\"fa fa-angle-right\"></i>\n                            </a>\n\n                        <div style=\"clear: both\"></div>\n                    </nav>\n                </div>\n            </div>\n\n            <nav class=\"nav-wide-wrapper\" aria-label=\"Page navigation\">\n                    <a rel=\"prev\" href=\"../commands/cargo-run.html\" class=\"nav-chapters previous\" title=\"Previous chapter\" aria-label=\"Previous chapter\" aria-keyshortcuts=\"Left\">\n                        <i class=\"fa fa-angle-left\"></i>\n                    </a>\n\n                    <a rel=\"next prefetch\" href=\"../commands/cargo-rustdoc.html\" class=\"nav-chapters next\" title=\"Next chapter\" aria-label=\"Next chapter\" aria-keyshortcuts=\"Right\">\n                        <i class=\"fa fa-angle-right\"></i>\n                    </a>\n            </nav>\n\n        </div>\n\n\n\n\n        <script>\n            window.playground_copyable = true;\n        </script>\n\n\n        <script src=\"../elasticlunr.min.js\"></script>\n        <script src=\"../mark.min.js\"></script>\n        <script src=\"../searcher.js\"></script>\n\n        <script src=\"../clipboard.min.js\"></script>\n        <script src=\"../highlight.js\"></script>\n        <script src=\"../book.js\"></script>\n\n        <!-- Custom JS scripts -->\n\n\n    </div>\n    \n\n</body></html>",
	"crawlDate": "2024-07-28T05:09:27.918Z"
}