{
	"title": "std::ffi::os_str - Rust",
	"url": "https://doc.rust-lang.org/stable/std/ffi/os_str/index.html",
	"markdown": "# std::ffi::os\\_str - Rust\n\nðŸ”¬This is a nightly-only experimental API. (`os_str_display`Â [#120048](https://github.com/rust-lang/rust/issues/120048))\n\nExpand description\n\nThe [`OsStr`](../struct.OsStr.html \"struct std::ffi::OsStr\") and [`OsString`](../struct.OsString.html \"struct std::ffi::OsString\") types and associated utilities.\n\n-   Borrowed reference to an OS string (see [`OsString`](../struct.OsString.html \"struct std::ffi::OsString\")).\n    \n-   A type that can represent owned, mutable platform-native strings, but is cheaply inter-convertible with Rust strings.\n    \n-   Helper struct for safely printing an [`OsStr`](../struct.OsStr.html \"struct std::ffi::OsStr\") with [`format!`](../../macro.format.html \"macro std::format\") and `{}`.",
	"html": "<!DOCTYPE html><html lang=\"en\" data-theme=\"light\"><head><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><meta name=\"generator\" content=\"rustdoc\"><meta name=\"description\" content=\"The `OsStr` and `OsString` types and associated utilities.\"><title>std::ffi::os_str - Rust</title><script>if(window.location.protocol!==\"file:\")document.head.insertAdjacentHTML(\"beforeend\",\"SourceSerif4-Regular-46f98efaafac5295.ttf.woff2,FiraSans-Regular-018c141bf0843ffd.woff2,FiraSans-Medium-8f9a781e4970d388.woff2,SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2,SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\".split(\",\").map(f=>`<link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin href=\"../../../static.files/${f}\">`).join(\"\"))</script><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../../static.files/SourceSerif4-Regular-46f98efaafac5295.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../../static.files/FiraSans-Regular-018c141bf0843ffd.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../../static.files/FiraSans-Medium-8f9a781e4970d388.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../../static.files/SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../../static.files/SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\"><link rel=\"stylesheet\" href=\"../../../static.files/normalize-76eba96aa4d2e634.css\"><link rel=\"stylesheet\" href=\"../../../static.files/rustdoc-dd39b87e5fcfba68.css\"><meta name=\"rustdoc-vars\" data-root-path=\"../../../\" data-static-root-path=\"../../../static.files/\" data-current-crate=\"std\" data-themes=\"\" data-resource-suffix=\"1.80.0\" data-rustdoc-version=\"1.80.0 (051478957 2024-07-21)\" data-channel=\"1.80.0\" data-search-js=\"search-d52510db62a78183.js\" data-settings-js=\"settings-4313503d2e1961c2.js\"><script src=\"../../../static.files/storage-118b08c4c78b968e.js\"></script><script defer=\"\" src=\"../sidebar-items1.80.0.js\"></script><script defer=\"\" src=\"../../../static.files/main-20a3ad099b048cf2.js\"></script><noscript><link rel=\"stylesheet\" href=\"../../../static.files/noscript-df360f571f6edeae.css\"></noscript><link rel=\"alternate icon\" type=\"image/png\" href=\"../../../static.files/favicon-32x32-422f7d1d52889060.png\"><link rel=\"icon\" type=\"image/svg+xml\" href=\"../../../static.files/favicon-2c020d218678b618.svg\"></head><body class=\"rustdoc mod\"><!--[if lte IE 11]><div class=\"warning\">This old browser is unsupported and will most likely display funky things.</div><![endif]--><nav class=\"mobile-topbar\"><button class=\"sidebar-menu-toggle\" title=\"show sidebar\"></button><a class=\"logo-container\" href=\"../../../std/index.html\"><img class=\"rust-logo\" src=\"../../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"\"></a><h2 class=\"location\"><a href=\"#\">Module os_str</a></h2></nav><nav class=\"sidebar\"><div class=\"sidebar-crate\"><a class=\"logo-container\" href=\"../../../std/index.html\"><img class=\"rust-logo\" src=\"../../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"logo\"></a><h2><a href=\"../../../std/index.html\">std</a><span class=\"version\">1.80.0</span></h2></div><div class=\"version\">(051478957\t2024-07-21)</div><h2 class=\"location\"><a href=\"#\">Module os_str</a></h2><div class=\"sidebar-elems\"><section><ul class=\"block\"><li><a href=\"#structs\">Structs</a></li></ul></section><h2><a href=\"../index.html\">In std::ffi</a></h2><h3><a href=\"../index.html#modules\">Modules</a></h3><ul class=\"block mod\"><li><a href=\"../c_str/index.html\">c_str</a></li><li><a href=\"../os_str/index.html\">os_str</a></li></ul><h3><a href=\"../index.html#structs\">Structs</a></h3><ul class=\"block struct\"><li><a href=\"../struct.CStr.html\">CStr</a></li><li><a href=\"../struct.CString.html\">CString</a></li><li><a href=\"../struct.OsStr.html\">OsStr</a></li><li><a href=\"../struct.OsString.html\">OsString</a></li><li><a href=\"../struct.VaList.html\">VaList</a></li><li><a href=\"../struct.VaListImpl.html\">VaListImpl</a></li></ul><h3><a href=\"../index.html#enums\">Enums</a></h3><ul class=\"block enum\"><li><a href=\"../enum.c_void.html\">c_void</a></li></ul><h3><a href=\"../index.html#types\">Type Aliases</a></h3><ul class=\"block type\"><li><a href=\"../type.c_char.html\">c_char</a></li><li><a href=\"../type.c_double.html\">c_double</a></li><li><a href=\"../type.c_float.html\">c_float</a></li><li><a href=\"../type.c_int.html\">c_int</a></li><li><a href=\"../type.c_long.html\">c_long</a></li><li><a href=\"../type.c_longlong.html\">c_longlong</a></li><li><a href=\"../type.c_schar.html\">c_schar</a></li><li><a href=\"../type.c_short.html\">c_short</a></li><li><a href=\"../type.c_uchar.html\">c_uchar</a></li><li><a href=\"../type.c_uint.html\">c_uint</a></li><li><a href=\"../type.c_ulong.html\">c_ulong</a></li><li><a href=\"../type.c_ulonglong.html\">c_ulonglong</a></li><li><a href=\"../type.c_ushort.html\">c_ushort</a></li></ul></div></nav><div class=\"sidebar-resizer\"></div><main><div class=\"width-limiter\"><rustdoc-search><nav class=\"sub\">\n            <form class=\"search-form\">\n                <span></span> <!-- This empty span is a hacky fix for Safari - See #93184 -->\n                <div id=\"sidebar-button\" tabindex=\"-1\">\n                    <a href=\"../../../std/all.html\" title=\"show sidebar\"></a>\n                </div>\n                <input class=\"search-input\" name=\"search\" aria-label=\"Run search in the documentation\" autocomplete=\"off\" spellcheck=\"false\" placeholder=\"Type â€˜Sâ€™ or â€˜/â€™ to search, â€˜?â€™ for more optionsâ€¦\" type=\"search\">\n                <div id=\"help-button\" tabindex=\"-1\">\n                    <a href=\"../../../help.html\" title=\"help\">?</a>\n                </div>\n                <div id=\"settings-menu\" tabindex=\"-1\">\n                    <a href=\"../../../settings.html\" title=\"settings\">\n                        Settings\n                    </a>\n                </div>\n            </form>\n        </nav></rustdoc-search><section id=\"main-content\" class=\"content\"><div class=\"main-heading\"><h1>Module <a href=\"../../index.html\">std</a>::<wbr><a href=\"../index.html\">ffi</a>::<wbr><a class=\"mod\" href=\"#\">os_str</a><button id=\"copy-path\" title=\"Copy item path to clipboard\">Copy item path</button></h1><span class=\"out-of-band\"><a class=\"src\" href=\"../../../src/std/ffi/os_str.rs.html#1-1705\">source</a> Â· <button id=\"toggle-all-docs\" title=\"collapse all docs\">[<span>âˆ’</span>]</button></span></div><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>os_str_display</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/120048\">#120048</a>)</span></div></span><details class=\"toggle top-doc\" open=\"\"><summary class=\"hideme\"><span>Expand description</span></summary><div class=\"docblock\"><p>The <a href=\"../struct.OsStr.html\" title=\"struct std::ffi::OsStr\"><code>OsStr</code></a> and <a href=\"../struct.OsString.html\" title=\"struct std::ffi::OsString\"><code>OsString</code></a> types and associated utilities.</p>\n</div></details><h2 id=\"structs\" class=\"section-header\">Structs<a href=\"#structs\" class=\"anchor\">Â§</a></h2><ul class=\"item-table\"><li><div class=\"item-name\"><a class=\"struct\" href=\"struct.OsStr.html\" title=\"struct std::ffi::os_str::OsStr\">OsStr</a></div><div class=\"desc docblock-short\">Borrowed reference to an OS string (see <a href=\"../struct.OsString.html\" title=\"struct std::ffi::OsString\"><code>OsString</code></a>).</div></li><li><div class=\"item-name\"><a class=\"struct\" href=\"struct.OsString.html\" title=\"struct std::ffi::os_str::OsString\">OsString</a></div><div class=\"desc docblock-short\">A type that can represent owned, mutable platform-native strings, but is\ncheaply inter-convertible with Rust strings.</div></li><li><div class=\"item-name\"><a class=\"struct\" href=\"struct.Display.html\" title=\"struct std::ffi::os_str::Display\">Display</a><span class=\"stab unstable\" title=\"\">Experimental</span></div><div class=\"desc docblock-short\">Helper struct for safely printing an <a href=\"../struct.OsStr.html\" title=\"struct std::ffi::OsStr\"><code>OsStr</code></a> with <a href=\"../../macro.format.html\" title=\"macro std::format\"><code>format!</code></a> and <code>{}</code>.</div></li></ul></section></div></main></body></html>",
	"crawlDate": "2024-07-28T05:23:07.225Z"
}