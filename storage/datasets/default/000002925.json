{
	"title": "UnixSocketExt in std::os::linux::net - Rust",
	"url": "https://doc.rust-lang.org/stable/std/os/linux/net/trait.UnixSocketExt.html",
	"markdown": "# UnixSocketExt in std::os::linux::net - Rust\n\n```\npub trait UnixSocketExt: Sealed {\n    // Required methods\n    fn passcred(&self) -> Result<bool>;\n    fn set_passcred(&self, passcred: bool) -> Result<()>;\n}\n```\n\nðŸ”¬This is a nightly-only experimental API. (`unix_socket_ancillary_data`Â [#76915](https://github.com/rust-lang/rust/issues/76915))\n\nAvailable on **Linux and (Linux or Android)** only.\n\nExpand description\n\n[source](about:blank/src/std/os/net/linux_ext/socket.rs.html#17)\n\nðŸ”¬This is a nightly-only experimental API. (`unix_socket_ancillary_data`Â [#76915](https://github.com/rust-lang/rust/issues/76915))\n\nQuery the current setting of socket option `SO_PASSCRED`.\n\n[source](about:blank/src/std/os/net/linux_ext/socket.rs.html#40)\n\nðŸ”¬This is a nightly-only experimental API. (`unix_socket_ancillary_data`Â [#76915](https://github.com/rust-lang/rust/issues/76915))\n\nEnable or disable socket option `SO_PASSCRED`.\n\nThis option enables the credentials of the sending process to be received as a control message in [`AncillaryData`](../../unix/net/enum.AncillaryData.html \"enum std::os::unix::net::AncillaryData\").\n\n##### [Â§](#examples)Examples\n\n```\n#![feature(unix_socket_ancillary_data)]\nuse std::os::linux::net::UnixSocketExt;\nuse std::os::unix::net::UnixDatagram;\n\nfn main() -> std::io::Result<()> {\n    let sock = UnixDatagram::unbound()?;\n    sock.set_passcred(true).expect(\"set_passcred failed\");\n    Ok(())\n}\n```\n\n[Run](https://play.rust-lang.org/?code=%23!%5Ballow(unused)%5D%0A%23!%5Bfeature(unix_socket_ancillary_data)%5D%0Ause+std::os::linux::net::UnixSocketExt;%0Ause+std::os::unix::net::UnixDatagram;%0A%0Afn+main()+-%3E+std::io::Result%3C()%3E+%7B%0A++++let+sock+=+UnixDatagram::unbound()?;%0A++++sock.set_passcred(true).expect(%22set_passcred+failed%22);%0A++++Ok(())%0A%7D&version=nightly&edition=2021)\n\n[source](about:blank/src/std/os/net/linux_ext/socket.rs.html#44-52)[Â§](#impl-UnixSocketExt-for-UnixDatagram)\n\n[source](about:blank/src/std/os/net/linux_ext/socket.rs.html#55-63)[Â§](#impl-UnixSocketExt-for-UnixStream)",
	"html": "<!DOCTYPE html><html lang=\"en\" data-theme=\"light\"><head><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><meta name=\"generator\" content=\"rustdoc\"><meta name=\"description\" content=\"Linux-specific functionality for `AF_UNIX` sockets `UnixDatagram` and `UnixStream`.\"><title>UnixSocketExt in std::os::linux::net - Rust</title><script>if(window.location.protocol!==\"file:\")document.head.insertAdjacentHTML(\"beforeend\",\"SourceSerif4-Regular-46f98efaafac5295.ttf.woff2,FiraSans-Regular-018c141bf0843ffd.woff2,FiraSans-Medium-8f9a781e4970d388.woff2,SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2,SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\".split(\",\").map(f=>`<link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin href=\"../../../../static.files/${f}\">`).join(\"\"))</script><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../../../static.files/SourceSerif4-Regular-46f98efaafac5295.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../../../static.files/FiraSans-Regular-018c141bf0843ffd.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../../../static.files/FiraSans-Medium-8f9a781e4970d388.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../../../static.files/SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../../../static.files/SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\"><link rel=\"stylesheet\" href=\"../../../../static.files/normalize-76eba96aa4d2e634.css\"><link rel=\"stylesheet\" href=\"../../../../static.files/rustdoc-dd39b87e5fcfba68.css\"><meta name=\"rustdoc-vars\" data-root-path=\"../../../../\" data-static-root-path=\"../../../../static.files/\" data-current-crate=\"std\" data-themes=\"\" data-resource-suffix=\"1.80.0\" data-rustdoc-version=\"1.80.0 (051478957 2024-07-21)\" data-channel=\"1.80.0\" data-search-js=\"search-d52510db62a78183.js\" data-settings-js=\"settings-4313503d2e1961c2.js\"><script src=\"../../../../static.files/storage-118b08c4c78b968e.js\"></script><script defer=\"\" src=\"sidebar-items1.80.0.js\"></script><script defer=\"\" src=\"../../../../static.files/main-20a3ad099b048cf2.js\"></script><noscript><link rel=\"stylesheet\" href=\"../../../../static.files/noscript-df360f571f6edeae.css\"></noscript><link rel=\"alternate icon\" type=\"image/png\" href=\"../../../../static.files/favicon-32x32-422f7d1d52889060.png\"><link rel=\"icon\" type=\"image/svg+xml\" href=\"../../../../static.files/favicon-2c020d218678b618.svg\"></head><body class=\"rustdoc trait\"><!--[if lte IE 11]><div class=\"warning\">This old browser is unsupported and will most likely display funky things.</div><![endif]--><nav class=\"mobile-topbar\"><button class=\"sidebar-menu-toggle\" title=\"show sidebar\"></button><a class=\"logo-container\" href=\"../../../../std/index.html\"><img class=\"rust-logo\" src=\"../../../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"\"></a><h2 class=\"location\"><a href=\"#\">UnixSocketExt</a></h2></nav><nav class=\"sidebar\"><div class=\"sidebar-crate\"><a class=\"logo-container\" href=\"../../../../std/index.html\"><img class=\"rust-logo\" src=\"../../../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"logo\"></a><h2><a href=\"../../../../std/index.html\">std</a><span class=\"version\">1.80.0</span></h2></div><div class=\"version\">(051478957\t2024-07-21)</div><h2 class=\"location\"><a href=\"#\">UnixSocketExt</a></h2><div class=\"sidebar-elems\"><section><h3><a href=\"#required-methods\">Required Methods</a></h3><ul class=\"block\"><li><a href=\"#tymethod.passcred\">passcred</a></li><li><a href=\"#tymethod.set_passcred\">set_passcred</a></li></ul><h3><a href=\"#implementors\">Implementors</a></h3></section><h2><a href=\"index.html\">In std::os::linux::net</a></h2><h3><a href=\"index.html#traits\">Traits</a></h3><ul class=\"block trait\"><li><a href=\"trait.SocketAddrExt.html\">SocketAddrExt</a></li><li><a href=\"trait.TcpStreamExt.html\">TcpStreamExt</a></li><li><a href=\"trait.UnixSocketExt.html\">UnixSocketExt</a></li></ul></div></nav><div class=\"sidebar-resizer\"></div><main><div class=\"width-limiter\"><rustdoc-search><nav class=\"sub\">\n            <form class=\"search-form\">\n                <span></span> <!-- This empty span is a hacky fix for Safari - See #93184 -->\n                <div id=\"sidebar-button\" tabindex=\"-1\">\n                    <a href=\"../../../../std/all.html\" title=\"show sidebar\"></a>\n                </div>\n                <input class=\"search-input\" name=\"search\" aria-label=\"Run search in the documentation\" autocomplete=\"off\" spellcheck=\"false\" placeholder=\"Type â€˜Sâ€™ or â€˜/â€™ to search, â€˜?â€™ for more optionsâ€¦\" type=\"search\">\n                <div id=\"help-button\" tabindex=\"-1\">\n                    <a href=\"../../../../help.html\" title=\"help\">?</a>\n                </div>\n                <div id=\"settings-menu\" tabindex=\"-1\">\n                    <a href=\"../../../../settings.html\" title=\"settings\">\n                        Settings\n                    </a>\n                </div>\n            </form>\n        </nav></rustdoc-search><section id=\"main-content\" class=\"content\"><div class=\"main-heading\"><h1>Trait <a href=\"../../../index.html\">std</a>::<wbr><a href=\"../../index.html\">os</a>::<wbr><a href=\"../index.html\">linux</a>::<wbr><a href=\"index.html\">net</a>::<wbr><a class=\"trait\" href=\"#\">UnixSocketExt</a><button id=\"copy-path\" title=\"Copy item path to clipboard\">Copy item path</button></h1><span class=\"out-of-band\"><a class=\"src\" href=\"../../../../src/std/os/net/linux_ext/socket.rs.html#14-41\">source</a> Â· <button id=\"toggle-all-docs\" title=\"collapse all docs\">[<span>âˆ’</span>]</button></span></div><pre class=\"rust item-decl\"><code>pub trait UnixSocketExt: Sealed {\n    // Required methods\n    fn <a href=\"#tymethod.passcred\" class=\"fn\">passcred</a>(&amp;self) -&gt; <a class=\"type\" href=\"../../../io/type.Result.html\" title=\"type std::io::Result\">Result</a>&lt;<a class=\"primitive\" href=\"../../../primitive.bool.html\">bool</a>&gt;;\n<span class=\"item-spacer\"></span>    fn <a href=\"#tymethod.set_passcred\" class=\"fn\">set_passcred</a>(&amp;self, passcred: <a class=\"primitive\" href=\"../../../primitive.bool.html\">bool</a>) -&gt; <a class=\"type\" href=\"../../../io/type.Result.html\" title=\"type std::io::Result\">Result</a>&lt;<a class=\"primitive\" href=\"../../../primitive.unit.html\">()</a>&gt;;\n}</code></pre><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>unix_socket_ancillary_data</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/76915\">#76915</a>)</span></div><div class=\"stab portability\">Available on <strong>Linux and (Linux or Android)</strong> only.</div></span><details class=\"toggle top-doc\" open=\"\"><summary class=\"hideme\"><span>Expand description</span></summary><div class=\"docblock\"><p>Linux-specific functionality for <code>AF_UNIX</code> sockets <a href=\"../../unix/net/struct.UnixDatagram.html\" title=\"struct std::os::unix::net::UnixDatagram\"><code>UnixDatagram</code></a>\nand <a href=\"../../unix/net/struct.UnixStream.html\" title=\"struct std::os::unix::net::UnixStream\"><code>UnixStream</code></a>.</p>\n</div></details><h2 id=\"required-methods\" class=\"section-header\">Required Methods<a href=\"#required-methods\" class=\"anchor\">Â§</a></h2><div class=\"methods\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"tymethod.passcred\" class=\"method\"><a class=\"src rightside\" href=\"../../../../src/std/os/net/linux_ext/socket.rs.html#17\">source</a><h4 class=\"code-header\">fn <a href=\"#tymethod.passcred\" class=\"fn\">passcred</a>(&amp;self) -&gt; <a class=\"type\" href=\"../../../io/type.Result.html\" title=\"type std::io::Result\">Result</a>&lt;<a class=\"primitive\" href=\"../../../primitive.bool.html\">bool</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>unix_socket_ancillary_data</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/76915\">#76915</a>)</span></div></span></summary><div class=\"docblock\"><p>Query the current setting of socket option <code>SO_PASSCRED</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"tymethod.set_passcred\" class=\"method\"><a class=\"src rightside\" href=\"../../../../src/std/os/net/linux_ext/socket.rs.html#40\">source</a><h4 class=\"code-header\">fn <a href=\"#tymethod.set_passcred\" class=\"fn\">set_passcred</a>(&amp;self, passcred: <a class=\"primitive\" href=\"../../../primitive.bool.html\">bool</a>) -&gt; <a class=\"type\" href=\"../../../io/type.Result.html\" title=\"type std::io::Result\">Result</a>&lt;<a class=\"primitive\" href=\"../../../primitive.unit.html\">()</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>unix_socket_ancillary_data</code>&nbsp;<a href=\"https://github.com/rust-lang/rust/issues/76915\">#76915</a>)</span></div></span></summary><div class=\"docblock\"><p>Enable or disable socket option <code>SO_PASSCRED</code>.</p>\n<p>This option enables the credentials of the sending process to be\nreceived as a control message in <a href=\"../../unix/net/enum.AncillaryData.html\" title=\"enum std::os::unix::net::AncillaryData\"><code>AncillaryData</code></a>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">Â§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(unix_socket_ancillary_data)]\n</span><span class=\"kw\">use </span>std::os::linux::net::UnixSocketExt;\n<span class=\"kw\">use </span>std::os::unix::net::UnixDatagram;\n\n<span class=\"kw\">fn </span>main() -&gt; std::io::Result&lt;()&gt; {\n    <span class=\"kw\">let </span>sock = UnixDatagram::unbound()<span class=\"question-mark\">?</span>;\n    sock.set_passcred(<span class=\"bool-val\">true</span>).expect(<span class=\"string\">\"set_passcred failed\"</span>);\n    <span class=\"prelude-val\">Ok</span>(())\n}</code></pre><a class=\"test-arrow\" target=\"_blank\" href=\"https://play.rust-lang.org/?code=%23!%5Ballow(unused)%5D%0A%23!%5Bfeature(unix_socket_ancillary_data)%5D%0Ause+std::os::linux::net::UnixSocketExt;%0Ause+std::os::unix::net::UnixDatagram;%0A%0Afn+main()+-%3E+std::io::Result%3C()%3E+%7B%0A++++let+sock+=+UnixDatagram::unbound()?;%0A++++sock.set_passcred(true).expect(%22set_passcred+failed%22);%0A++++Ok(())%0A%7D&amp;version=nightly&amp;edition=2021\">Run</a></div>\n</div></details></div><h2 id=\"implementors\" class=\"section-header\">Implementors<a href=\"#implementors\" class=\"anchor\">Â§</a></h2><div id=\"implementors-list\"><section id=\"impl-UnixSocketExt-for-UnixDatagram\" class=\"impl\"><a class=\"src rightside\" href=\"../../../../src/std/os/net/linux_ext/socket.rs.html#44-52\">source</a><a href=\"#impl-UnixSocketExt-for-UnixDatagram\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.UnixSocketExt.html\" title=\"trait std::os::linux::net::UnixSocketExt\">UnixSocketExt</a> for <a class=\"struct\" href=\"../../unix/net/struct.UnixDatagram.html\" title=\"struct std::os::unix::net::UnixDatagram\">UnixDatagram</a></h3></section><section id=\"impl-UnixSocketExt-for-UnixStream\" class=\"impl\"><a class=\"src rightside\" href=\"../../../../src/std/os/net/linux_ext/socket.rs.html#55-63\">source</a><a href=\"#impl-UnixSocketExt-for-UnixStream\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.UnixSocketExt.html\" title=\"trait std::os::linux::net::UnixSocketExt\">UnixSocketExt</a> for <a class=\"struct\" href=\"../../unix/net/struct.UnixStream.html\" title=\"struct std::os::unix::net::UnixStream\">UnixStream</a></h3></section></div><script src=\"../../../../trait.impl/std/os/net/linux_ext/socket/trait.UnixSocketExt.js\" async=\"\"></script></section></div></main></body></html>",
	"crawlDate": "2024-07-28T05:26:24.981Z"
}