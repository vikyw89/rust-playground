{
	"title": "cargo install - The Cargo Book",
	"url": "https://doc.rust-lang.org/cargo/commands/cargo-install.html",
	"markdown": "# cargo install - The Cargo Book\n\n## [NAME](#name)\n\ncargo-install — Build and install a Rust binary\n\n## [SYNOPSIS](#synopsis)\n\n`cargo install` \\[_options_\\] _crate_\\[@_version_\\]…  \n`cargo install` \\[_options_\\] `--path` _path_  \n`cargo install` \\[_options_\\] `--git` _url_ \\[_crate_…\\]  \n`cargo install` \\[_options_\\] `--list`\n\n## [DESCRIPTION](#description)\n\nThis command manages Cargo’s local set of installed binary crates. Only packages which have executable `[[bin]]` or `[[example]]` targets can be installed, and all executables are installed into the installation root’s `bin` folder. By default only binaries, not examples, are installed.\n\nThe installation root is determined, in order of precedence:\n\n-   `--root` option\n-   `CARGO_INSTALL_ROOT` environment variable\n-   `install.root` Cargo [config value](../reference/config.html)\n-   `CARGO_HOME` environment variable\n-   `$HOME/.cargo`\n\nThere are multiple sources from which a crate can be installed. The default source location is crates.io but the `--git`, `--path`, and `--registry` flags can change this source. If the source contains more than one package (such as crates.io or a git repository with multiple crates) the _crate_ argument is required to indicate which crate should be installed.\n\nCrates from crates.io can optionally specify the version they wish to install via the `--version` flags, and similarly packages from git repositories can optionally specify the branch, tag, or revision that should be installed. If a crate has multiple binaries, the `--bin` argument can selectively install only one of them, and if you’d rather install examples the `--example` argument can be used as well.\n\nIf the package is already installed, Cargo will reinstall it if the installed version does not appear to be up-to-date. If any of the following values change, then Cargo will reinstall the package:\n\n-   The package version and source.\n-   The set of binary names installed.\n-   The chosen features.\n-   The profile (`--profile`).\n-   The target (`--target`).\n\nInstalling with `--path` will always build and install, unless there are conflicting binaries from another package. The `--force` flag may be used to force Cargo to always reinstall the package.\n\nIf the source is crates.io or `--git` then by default the crate will be built in a temporary target directory. To avoid this, the target directory can be specified by setting the `CARGO_TARGET_DIR` environment variable to a relative path. In particular, this can be useful for caching build artifacts on continuous integration systems.\n\n### [Dealing with the Lockfile](#dealing-with-the-lockfile)\n\nBy default, the `Cargo.lock` file that is included with the package will be ignored. This means that Cargo will recompute which versions of dependencies to use, possibly using newer versions that have been released since the package was published. The `--locked` flag can be used to force Cargo to use the packaged `Cargo.lock` file if it is available. This may be useful for ensuring reproducible builds, to use the exact same set of dependencies that were available when the package was published. It may also be useful if a newer version of a dependency is published that no longer builds on your system, or has other problems. The downside to using `--locked` is that you will not receive any fixes or updates to any dependency. Note that Cargo did not start publishing `Cargo.lock` files until version 1.37, which means packages published with prior versions will not have a `Cargo.lock` file available.\n\n### [Configuration Discovery](#configuration-discovery)\n\nThis command operates on system or user level, not project level. This means that the local [configuration discovery](about:blank/reference/config.html#hierarchical-structure) is ignored. Instead, the configuration discovery begins at `$CARGO_HOME/config.toml`. If the package is installed with `--path $PATH`, the local configuration will be used, beginning discovery at `$PATH/.cargo/config.toml`.\n\n## [OPTIONS](#options)\n\n### [Install Options](#install-options)\n\n`--vers` _version_\n\n`--version` _version_\n\nSpecify a version to install. This may be a [version requirement](../reference/specifying-dependencies.html), like `~1.2`, to have Cargo select the newest version from the given requirement. If the version does not have a requirement operator (such as `^` or `~`), then it must be in the form _MAJOR.MINOR.PATCH_, and will install exactly that version; it is _not_ treated as a caret requirement like Cargo dependencies are.\n\n`--git` _url_\n\nGit URL to install the specified crate from.\n\n`--branch` _branch_\n\nBranch to use when installing from git.\n\n`--tag` _tag_\n\nTag to use when installing from git.\n\n`--rev` _sha_\n\nSpecific commit to use when installing from git.\n\n`--path` _path_\n\nFilesystem path to local crate to install from.\n\n`--list`\n\nList all installed packages and their versions.\n\n`-f`\n\n`--force`\n\nForce overwriting existing crates or binaries. This can be used if a package has installed a binary with the same name as another package. This is also useful if something has changed on the system that you want to rebuild with, such as a newer version of `rustc`.\n\n`--no-track`\n\nBy default, Cargo keeps track of the installed packages with a metadata file stored in the installation root directory. This flag tells Cargo not to use or create that file. With this flag, Cargo will refuse to overwrite any existing files unless the `--force` flag is used. This also disables Cargo’s ability to protect against multiple concurrent invocations of Cargo installing at the same time.\n\n`--bin` _name_…\n\nInstall only the specified binary.\n\n`--bins`\n\nInstall all binaries. This is the default behavior.\n\n`--example` _name_…\n\nInstall only the specified example.\n\n`--examples`\n\nInstall all examples.\n\n`--root` _dir_\n\nDirectory to install packages into.\n\n`--registry` _registry_\n\nName of the registry to use. Registry names are defined in [Cargo config files](../reference/config.html). If not specified, the default registry is used, which is defined by the `registry.default` config key which defaults to `crates-io`.\n\n`--index` _index_\n\nThe URL of the registry index to use.\n\n### [Feature Selection](#feature-selection)\n\nThe feature flags allow you to control which features are enabled. When no feature options are given, the `default` feature is activated for every selected package.\n\nSee [the features documentation](about:blank/reference/features.html#command-line-feature-options) for more details.\n\n`-F` _features_\n\n`--features` _features_\n\nSpace or comma separated list of features to activate. Features of workspace members may be enabled with `package-name/feature-name` syntax. This flag may be specified multiple times, which enables all specified features.\n\n`--all-features`\n\nActivate all available features of all selected packages.\n\n`--no-default-features`\n\nDo not activate the `default` feature of the selected packages.\n\n### [Compilation Options](#compilation-options)\n\n`--target` _triple_\n\nInstall for the given architecture. The default is the host architecture. The general format of the triple is `<arch><sub>-<vendor>-<sys>-<abi>`. Run `rustc --print target-list` for a list of supported targets.\n\nThis may also be specified with the `build.target` [config value](../reference/config.html).\n\nNote that specifying this flag makes Cargo run in a different mode where the target artifacts are placed in a separate directory. See the [build cache](../guide/build-cache.html) documentation for more details.\n\n`--target-dir` _directory_\n\nDirectory for all generated artifacts and intermediate files. May also be specified with the `CARGO_TARGET_DIR` environment variable, or the `build.target-dir` [config value](../reference/config.html). Defaults to a new temporary folder located in the temporary directory of the platform.\n\nWhen using `--path`, by default it will use `target` directory in the workspace of the local crate unless `--target-dir` is specified.\n\n`--debug`\n\nBuild with the `dev` profile instead of the `release` profile. See also the `--profile` option for choosing a specific profile by name.\n\n`--profile` _name_\n\nInstall with the given profile. See [the reference](../reference/profiles.html) for more details on profiles.\n\n`--timings=`_fmts_\n\nOutput information how long each compilation takes, and track concurrency information over time. Accepts an optional comma-separated list of output formats; `--timings` without an argument will default to `--timings=html`. Specifying an output format (rather than the default) is unstable and requires `-Zunstable-options`. Valid output formats:\n\n-   `html` (unstable, requires `-Zunstable-options`): Write a human-readable file `cargo-timing.html` to the `target/cargo-timings` directory with a report of the compilation. Also write a report to the same directory with a timestamp in the filename if you want to look at older runs. HTML output is suitable for human consumption only, and does not provide machine-readable timing data.\n-   `json` (unstable, requires `-Zunstable-options`): Emit machine-readable JSON information about timing information.\n\n### [Manifest Options](#manifest-options)\n\n`--ignore-rust-version`\n\nIgnore `rust-version` specification in packages.\n\n`--locked`\n\nAsserts that the exact same dependencies and versions are used as when the existing `Cargo.lock` file was originally generated. Cargo will exit with an error when either of the following scenarios arises:\n\n-   The lock file is missing.\n-   Cargo attempted to change the lock file due to a different dependency resolution.\n\nIt may be used in environments where deterministic builds are desired, such as in CI pipelines.\n\n`--offline`\n\nPrevents Cargo from accessing the network for any reason. Without this flag, Cargo will stop with an error if it needs to access the network and the network is not available. With this flag, Cargo will attempt to proceed without the network if possible.\n\nBeware that this may result in different dependency resolution than online mode. Cargo will restrict itself to crates that are downloaded locally, even if there might be a newer version as indicated in the local copy of the index. See the [cargo-fetch(1)](cargo-fetch.html) command to download dependencies before going offline.\n\nMay also be specified with the `net.offline` [config value](../reference/config.html).\n\n`--frozen`\n\nEquivalent to specifying both `--locked` and `--offline`.\n\n### [Miscellaneous Options](#miscellaneous-options)\n\n`-j` _N_\n\n`--jobs` _N_\n\nNumber of parallel jobs to run. May also be specified with the `build.jobs` [config value](../reference/config.html). Defaults to the number of logical CPUs. If negative, it sets the maximum number of parallel jobs to the number of logical CPUs plus provided value. If a string `default` is provided, it sets the value back to defaults. Should not be 0.\n\n`--keep-going`\n\nBuild as many crates in the dependency graph as possible, rather than aborting the build on the first one that fails to build.\n\nFor example if the current package depends on dependencies `fails` and `works`, one of which fails to build, `cargo install -j1` may or may not build the one that succeeds (depending on which one of the two builds Cargo picked to run first), whereas `cargo install -j1 --keep-going` would definitely run both builds, even if the one run first fails.\n\n### [Display Options](#display-options)\n\n`-v`\n\n`--verbose`\n\nUse verbose output. May be specified twice for “very verbose” output which includes extra output such as dependency warnings and build script output. May also be specified with the `term.verbose` [config value](../reference/config.html).\n\n`-q`\n\n`--quiet`\n\nDo not print cargo log messages. May also be specified with the `term.quiet` [config value](../reference/config.html).\n\n`--color` _when_\n\nControl when colored output is used. Valid values:\n\n-   `auto` (default): Automatically detect if color support is available on the terminal.\n-   `always`: Always display colors.\n-   `never`: Never display colors.\n\nMay also be specified with the `term.color` [config value](../reference/config.html).\n\n`--message-format` _fmt_\n\nThe output format for diagnostic messages. Can be specified multiple times and consists of comma-separated values. Valid values:\n\n-   `human` (default): Display in a human-readable text format. Conflicts with `short` and `json`.\n-   `short`: Emit shorter, human-readable text messages. Conflicts with `human` and `json`.\n-   `json`: Emit JSON messages to stdout. See [the reference](about:blank/reference/external-tools.html#json-messages) for more details. Conflicts with `human` and `short`.\n-   `json-diagnostic-short`: Ensure the `rendered` field of JSON messages contains the “short” rendering from rustc. Cannot be used with `human` or `short`.\n-   `json-diagnostic-rendered-ansi`: Ensure the `rendered` field of JSON messages contains embedded ANSI color codes for respecting rustc’s default color scheme. Cannot be used with `human` or `short`.\n-   `json-render-diagnostics`: Instruct Cargo to not include rustc diagnostics in JSON messages printed, but instead Cargo itself should render the JSON diagnostics coming from rustc. Cargo’s own JSON diagnostics and others coming from rustc are still emitted. Cannot be used with `human` or `short`.\n\n### [Common Options](#common-options)\n\n`+`_toolchain_\n\nIf Cargo has been installed with rustup, and the first argument to `cargo` begins with `+`, it will be interpreted as a rustup toolchain name (such as `+stable` or `+nightly`). See the [rustup documentation](https://rust-lang.github.io/rustup/overrides.html) for more information about how toolchain overrides work.\n\n`--config` _KEY=VALUE_ or _PATH_\n\nOverrides a Cargo configuration value. The argument should be in TOML syntax of `KEY=VALUE`, or provided as a path to an extra configuration file. This flag may be specified multiple times. See the [command-line overrides section](about:blank/reference/config.html#command-line-overrides) for more information.\n\n`-C` _PATH_\n\nChanges the current working directory before executing any specified operations. This affects things like where cargo looks by default for the project manifest (`Cargo.toml`), as well as the directories searched for discovering `.cargo/config.toml`, for example. This option must appear before the command name, for example `cargo -C path/to/my-project build`.\n\nThis option is only available on the [nightly channel](https://doc.rust-lang.org/book/appendix-07-nightly-rust.html) and requires the `-Z unstable-options` flag to enable (see [#10098](https://github.com/rust-lang/cargo/issues/10098)).\n\n`-h`\n\n`--help`\n\nPrints help information.\n\n`-Z` _flag_\n\nUnstable (nightly-only) flags to Cargo. Run `cargo -Z help` for details.\n\n## [ENVIRONMENT](#environment)\n\nSee [the reference](../reference/environment-variables.html) for details on environment variables that Cargo reads.\n\n## [EXIT STATUS](#exit-status)\n\n-   `0`: Cargo succeeded.\n-   `101`: Cargo failed to complete.\n\n## [EXAMPLES](#examples)\n\n1.  Install or upgrade a package from crates.io:\n    \n    ```\n    cargo install ripgrep\n    \n    ```\n    \n2.  Install or reinstall the package in the current directory:\n    \n    ```\n    cargo install --path .\n    \n    ```\n    \n3.  View the list of installed packages:\n    \n    ```\n    cargo install --list\n    \n    ```\n    \n\n## [SEE ALSO](#see-also)\n\n[cargo(1)](cargo.html), [cargo-uninstall(1)](cargo-uninstall.html), [cargo-search(1)](cargo-search.html), [cargo-publish(1)](cargo-publish.html)",
	"html": "<!DOCTYPE html><html lang=\"en\" class=\"light\" dir=\"ltr\"><head>\n        <!-- Book generated using mdBook -->\n        <meta charset=\"UTF-8\">\n        <title>cargo install - The Cargo Book</title>\n\n\n        <!-- Custom HTML head -->\n        <style>\n            dd {\n                margin-bottom: 1em;\n            }\n        </style>\n\n        <meta name=\"description\" content=\"\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n        <meta name=\"theme-color\" content=\"rgb(255, 255, 255)\">\n\n        <link rel=\"shortcut icon\" href=\"../favicon.png\">\n        <link rel=\"stylesheet\" href=\"../css/variables.css\">\n        <link rel=\"stylesheet\" href=\"../css/general.css\">\n        <link rel=\"stylesheet\" href=\"../css/chrome.css\">\n        <link rel=\"stylesheet\" href=\"../css/print.css\" media=\"print\">\n\n        <!-- Fonts -->\n        <link rel=\"stylesheet\" href=\"../FontAwesome/css/font-awesome.css\">\n        <link rel=\"stylesheet\" href=\"../fonts/fonts.css\">\n\n        <!-- Highlight.js Stylesheets -->\n        <link rel=\"stylesheet\" href=\"../highlight.css\">\n        <link rel=\"stylesheet\" href=\"../tomorrow-night.css\" disabled=\"\">\n        <link rel=\"stylesheet\" href=\"../ayu-highlight.css\" disabled=\"\">\n\n        <!-- Custom theme stylesheets -->\n\n    </head>\n    <body class=\"js sidebar-visible\">\n    <div id=\"body-container\">\n        <!-- Provide site root to javascript -->\n        <script>\n            var path_to_root = \"../\";\n            var default_theme = window.matchMedia(\"(prefers-color-scheme: dark)\").matches ? \"navy\" : \"light\";\n        </script>\n\n        <!-- Work around some values being stored in localStorage wrapped in quotes -->\n        <script>\n            try {\n                var theme = localStorage.getItem('mdbook-theme');\n                var sidebar = localStorage.getItem('mdbook-sidebar');\n\n                if (theme.startsWith('\"') && theme.endsWith('\"')) {\n                    localStorage.setItem('mdbook-theme', theme.slice(1, theme.length - 1));\n                }\n\n                if (sidebar.startsWith('\"') && sidebar.endsWith('\"')) {\n                    localStorage.setItem('mdbook-sidebar', sidebar.slice(1, sidebar.length - 1));\n                }\n            } catch (e) { }\n        </script>\n\n        <!-- Set the theme before any content is loaded, prevents flash -->\n        <script>\n            var theme;\n            try { theme = localStorage.getItem('mdbook-theme'); } catch(e) { }\n            if (theme === null || theme === undefined) { theme = default_theme; }\n            var html = document.querySelector('html');\n            html.classList.remove('light')\n            html.classList.add(theme);\n            var body = document.querySelector('body');\n            body.classList.remove('no-js')\n            body.classList.add('js');\n        </script>\n\n        <input type=\"checkbox\" id=\"sidebar-toggle-anchor\" class=\"hidden\">\n\n        <!-- Hide / unhide sidebar before it is displayed -->\n        <script>\n            var body = document.querySelector('body');\n            var sidebar = null;\n            var sidebar_toggle = document.getElementById(\"sidebar-toggle-anchor\");\n            if (document.body.clientWidth >= 1080) {\n                try { sidebar = localStorage.getItem('mdbook-sidebar'); } catch(e) { }\n                sidebar = sidebar || 'visible';\n            } else {\n                sidebar = 'hidden';\n            }\n            sidebar_toggle.checked = sidebar === 'visible';\n            body.classList.remove('sidebar-visible');\n            body.classList.add(\"sidebar-\" + sidebar);\n        </script>\n\n        <nav id=\"sidebar\" class=\"sidebar\" aria-label=\"Table of contents\" aria-hidden=\"false\">\n            <div class=\"sidebar-scrollbox\">\n                <ol class=\"chapter\"><li class=\"chapter-item expanded affix \"><a href=\"../index.html\" tabindex=\"0\">Introduction</a></li><li class=\"chapter-item expanded \"><a href=\"../getting-started/index.html\" tabindex=\"0\"><strong aria-hidden=\"true\">1.</strong> Getting Started</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../getting-started/installation.html\" tabindex=\"0\"><strong aria-hidden=\"true\">1.1.</strong> Installation</a></li><li class=\"chapter-item expanded \"><a href=\"../getting-started/first-steps.html\" tabindex=\"0\"><strong aria-hidden=\"true\">1.2.</strong> First Steps with Cargo</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../guide/index.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.</strong> Cargo Guide</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../guide/why-cargo-exists.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.1.</strong> Why Cargo Exists</a></li><li class=\"chapter-item expanded \"><a href=\"../guide/creating-a-new-project.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.2.</strong> Creating a New Package</a></li><li class=\"chapter-item expanded \"><a href=\"../guide/working-on-an-existing-project.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.3.</strong> Working on an Existing Package</a></li><li class=\"chapter-item expanded \"><a href=\"../guide/dependencies.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.4.</strong> Dependencies</a></li><li class=\"chapter-item expanded \"><a href=\"../guide/project-layout.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.5.</strong> Package Layout</a></li><li class=\"chapter-item expanded \"><a href=\"../guide/cargo-toml-vs-cargo-lock.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.6.</strong> Cargo.toml vs Cargo.lock</a></li><li class=\"chapter-item expanded \"><a href=\"../guide/tests.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.7.</strong> Tests</a></li><li class=\"chapter-item expanded \"><a href=\"../guide/continuous-integration.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.8.</strong> Continuous Integration</a></li><li class=\"chapter-item expanded \"><a href=\"../guide/cargo-home.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.9.</strong> Cargo Home</a></li><li class=\"chapter-item expanded \"><a href=\"../guide/build-cache.html\" tabindex=\"0\"><strong aria-hidden=\"true\">2.10.</strong> Build Cache</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../reference/index.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.</strong> Cargo Reference</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../reference/specifying-dependencies.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.1.</strong> Specifying Dependencies</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../reference/overriding-dependencies.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.1.1.</strong> Overriding Dependencies</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../reference/manifest.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.2.</strong> The Manifest Format</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../reference/cargo-targets.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.2.1.</strong> Cargo Targets</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../reference/workspaces.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.3.</strong> Workspaces</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/features.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.4.</strong> Features</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../reference/features-examples.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.4.1.</strong> Features Examples</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../reference/profiles.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.5.</strong> Profiles</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/config.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.6.</strong> Configuration</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/environment-variables.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.7.</strong> Environment Variables</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/build-scripts.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.8.</strong> Build Scripts</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../reference/build-script-examples.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.8.1.</strong> Build Script Examples</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../reference/publishing.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.9.</strong> Publishing on crates.io</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/pkgid-spec.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.10.</strong> Package ID Specifications</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/source-replacement.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.11.</strong> Source Replacement</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/external-tools.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.12.</strong> External Tools</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/registries.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.13.</strong> Registries</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../reference/registry-authentication.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.13.1.</strong> Registry Authentication</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../reference/credential-provider-protocol.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.13.1.1.</strong> Credential Provider Protocol</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../reference/running-a-registry.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.13.2.</strong> Running a Registry</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../reference/registry-index.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.13.2.1.</strong> Registry Index</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/registry-web-api.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.13.2.2.</strong> Registry Web API</a></li></ol></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../reference/resolver.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.14.</strong> Dependency Resolution</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/semver.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.15.</strong> SemVer Compatibility</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/future-incompat-report.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.16.</strong> Future incompat report</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/timings.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.17.</strong> Reporting build timings</a></li><li class=\"chapter-item expanded \"><a href=\"../reference/unstable.html\" tabindex=\"0\"><strong aria-hidden=\"true\">3.18.</strong> Unstable Features</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../commands/index.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.</strong> Cargo Commands</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../commands/general-commands.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.1.</strong> General Commands</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../commands/cargo.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.1.1.</strong> cargo</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-help.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.1.2.</strong> cargo help</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-version.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.1.3.</strong> cargo version</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../commands/build-commands.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.</strong> Build Commands</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-bench.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.1.</strong> cargo bench</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-build.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.2.</strong> cargo build</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-check.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.3.</strong> cargo check</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-clean.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.4.</strong> cargo clean</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-doc.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.5.</strong> cargo doc</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-fetch.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.6.</strong> cargo fetch</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-fix.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.7.</strong> cargo fix</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-run.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.8.</strong> cargo run</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-rustc.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.9.</strong> cargo rustc</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-rustdoc.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.10.</strong> cargo rustdoc</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-test.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.11.</strong> cargo test</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-report.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.2.12.</strong> cargo report</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../commands/manifest-commands.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.3.</strong> Manifest Commands</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-add.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.3.1.</strong> cargo add</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-generate-lockfile.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.3.2.</strong> cargo generate-lockfile</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-locate-project.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.3.3.</strong> cargo locate-project</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-metadata.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.3.4.</strong> cargo metadata</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-pkgid.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.3.5.</strong> cargo pkgid</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-remove.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.3.6.</strong> cargo remove</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-tree.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.3.7.</strong> cargo tree</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-update.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.3.8.</strong> cargo update</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-vendor.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.3.9.</strong> cargo vendor</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-verify-project.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.3.10.</strong> cargo verify-project</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../commands/package-commands.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.4.</strong> Package Commands</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-init.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.4.1.</strong> cargo init</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-install.html\" class=\"active\" tabindex=\"0\"><strong aria-hidden=\"true\">4.4.2.</strong> cargo install</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-new.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.4.3.</strong> cargo new</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-search.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.4.4.</strong> cargo search</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-uninstall.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.4.5.</strong> cargo uninstall</a></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../commands/publishing-commands.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.5.</strong> Publishing Commands</a></li><li><ol class=\"section\"><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-login.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.5.1.</strong> cargo login</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-logout.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.5.2.</strong> cargo logout</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-owner.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.5.3.</strong> cargo owner</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-package.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.5.4.</strong> cargo package</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-publish.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.5.5.</strong> cargo publish</a></li><li class=\"chapter-item expanded \"><a href=\"../commands/cargo-yank.html\" tabindex=\"0\"><strong aria-hidden=\"true\">4.5.6.</strong> cargo yank</a></li></ol></li></ol></li><li class=\"chapter-item expanded \"><a href=\"../faq.html\" tabindex=\"0\"><strong aria-hidden=\"true\">5.</strong> FAQ</a></li><li class=\"chapter-item expanded \"><a href=\"../appendix/glossary.html\" tabindex=\"0\"><strong aria-hidden=\"true\">6.</strong> Appendix: Glossary</a></li><li class=\"chapter-item expanded \"><a href=\"../appendix/git-authentication.html\" tabindex=\"0\"><strong aria-hidden=\"true\">7.</strong> Appendix: Git Authentication</a></li></ol>\n            </div>\n            <div id=\"sidebar-resize-handle\" class=\"sidebar-resize-handle\">\n                <div class=\"sidebar-resize-indicator\"></div>\n            </div>\n        </nav>\n\n        <!-- Track and set sidebar scroll position -->\n        <script>\n            var sidebarScrollbox = document.querySelector('#sidebar .sidebar-scrollbox');\n            sidebarScrollbox.addEventListener('click', function(e) {\n                if (e.target.tagName === 'A') {\n                    sessionStorage.setItem('sidebar-scroll', sidebarScrollbox.scrollTop);\n                }\n            }, { passive: true });\n            var sidebarScrollTop = sessionStorage.getItem('sidebar-scroll');\n            sessionStorage.removeItem('sidebar-scroll');\n            if (sidebarScrollTop) {\n                // preserve sidebar scroll position when navigating via links within sidebar\n                sidebarScrollbox.scrollTop = sidebarScrollTop;\n            } else {\n                // scroll sidebar to current active section when navigating via \"next/previous chapter\" buttons\n                var activeSection = document.querySelector('#sidebar .active');\n                if (activeSection) {\n                    activeSection.scrollIntoView({ block: 'center' });\n                }\n            }\n        </script>\n\n        <div id=\"page-wrapper\" class=\"page-wrapper\">\n\n            <div class=\"page\">\n                                <div id=\"menu-bar-hover-placeholder\"></div>\n                <div id=\"menu-bar\" class=\"menu-bar\" style=\"top: 0px;\">\n                    <div class=\"left-buttons\">\n                        <label id=\"sidebar-toggle\" class=\"icon-button\" for=\"sidebar-toggle-anchor\" title=\"Toggle Table of Contents\" aria-label=\"Toggle Table of Contents\" aria-controls=\"sidebar\" aria-expanded=\"true\">\n                            <i class=\"fa fa-bars\"></i>\n                        </label>\n                        <button id=\"theme-toggle\" class=\"icon-button\" type=\"button\" title=\"Change theme\" aria-label=\"Change theme\" aria-haspopup=\"true\" aria-expanded=\"false\" aria-controls=\"theme-list\">\n                            <i class=\"fa fa-paint-brush\"></i>\n                        </button>\n                        <ul id=\"theme-list\" class=\"theme-popup\" aria-label=\"Themes\" role=\"menu\">\n                            <li role=\"none\"><button role=\"menuitem\" class=\"theme theme-selected\" id=\"light\">Light</button></li>\n                            <li role=\"none\"><button role=\"menuitem\" class=\"theme\" id=\"rust\">Rust</button></li>\n                            <li role=\"none\"><button role=\"menuitem\" class=\"theme\" id=\"coal\">Coal</button></li>\n                            <li role=\"none\"><button role=\"menuitem\" class=\"theme\" id=\"navy\">Navy</button></li>\n                            <li role=\"none\"><button role=\"menuitem\" class=\"theme\" id=\"ayu\">Ayu</button></li>\n                        </ul>\n                        <button id=\"search-toggle\" class=\"icon-button\" type=\"button\" title=\"Search. (Shortkey: s)\" aria-label=\"Toggle Searchbar\" aria-expanded=\"false\" aria-keyshortcuts=\"S\" aria-controls=\"searchbar\">\n                            <i class=\"fa fa-search\"></i>\n                        </button>\n                    </div>\n\n                    <h1 class=\"menu-title\">The Cargo Book</h1>\n\n                    <div class=\"right-buttons\">\n                        <a href=\"../print.html\" title=\"Print this book\" aria-label=\"Print this book\">\n                            <i id=\"print-button\" class=\"fa fa-print\"></i>\n                        </a>\n                        <a href=\"https://github.com/rust-lang/cargo/tree/master/src/doc/src\" title=\"Git repository\" aria-label=\"Git repository\">\n                            <i id=\"git-repository-button\" class=\"fa fa-github\"></i>\n                        </a>\n                        <a href=\"https://github.com/rust-lang/cargo/edit/master/src/doc/src/commands/cargo-install.md\" title=\"Suggest an edit\" aria-label=\"Suggest an edit\">\n                            <i id=\"git-edit-button\" class=\"fa fa-edit\"></i>\n                        </a>\n\n                    </div>\n                </div>\n\n                <div id=\"search-wrapper\" class=\"hidden\">\n                    <form id=\"searchbar-outer\" class=\"searchbar-outer\">\n                        <input type=\"search\" id=\"searchbar\" name=\"searchbar\" placeholder=\"Search this book ...\" aria-controls=\"searchresults-outer\" aria-describedby=\"searchresults-header\">\n                    </form>\n                    <div id=\"searchresults-outer\" class=\"searchresults-outer hidden\">\n                        <div id=\"searchresults-header\" class=\"searchresults-header\"></div>\n                        <ul id=\"searchresults\">\n                        </ul>\n                    </div>\n                </div>\n\n                <!-- Apply ARIA attributes after the sidebar and the sidebar toggle button are added to the DOM -->\n                <script>\n                    document.getElementById('sidebar-toggle').setAttribute('aria-expanded', sidebar === 'visible');\n                    document.getElementById('sidebar').setAttribute('aria-hidden', sidebar !== 'visible');\n                    Array.from(document.querySelectorAll('#sidebar a')).forEach(function(link) {\n                        link.setAttribute('tabIndex', sidebar === 'visible' ? 0 : -1);\n                    });\n                </script>\n\n                <div id=\"content\" class=\"content\">\n                    <main>\n                        <h1 id=\"cargo-install1\"><a class=\"header\" href=\"#cargo-install1\">cargo-install(1)</a></h1>\n<h2 id=\"name\"><a class=\"header\" href=\"#name\">NAME</a></h2>\n<p>cargo-install — Build and install a Rust binary</p>\n<h2 id=\"synopsis\"><a class=\"header\" href=\"#synopsis\">SYNOPSIS</a></h2>\n<p><code class=\"hljs\">cargo install</code> [<em>options</em>] <em>crate</em>[@<em>version</em>]…<br>\n<code class=\"hljs\">cargo install</code> [<em>options</em>] <code class=\"hljs\">--path</code> <em>path</em><br>\n<code class=\"hljs\">cargo install</code> [<em>options</em>] <code class=\"hljs\">--git</code> <em>url</em> [<em>crate</em>…]<br>\n<code class=\"hljs\">cargo install</code> [<em>options</em>] <code class=\"hljs\">--list</code></p>\n<h2 id=\"description\"><a class=\"header\" href=\"#description\">DESCRIPTION</a></h2>\n<p>This command manages Cargo’s local set of installed binary crates. Only\npackages which have executable <code class=\"hljs\">[[bin]]</code> or <code class=\"hljs\">[[example]]</code> targets can be\ninstalled, and all executables are installed into the installation root’s\n<code class=\"hljs\">bin</code> folder. By default only binaries, not examples, are installed.</p>\n<p>The installation root is determined, in order of precedence:</p>\n<ul>\n<li><code class=\"hljs\">--root</code> option</li>\n<li><code class=\"hljs\">CARGO_INSTALL_ROOT</code> environment variable</li>\n<li><code class=\"hljs\">install.root</code> Cargo <a href=\"../reference/config.html\">config value</a></li>\n<li><code class=\"hljs\">CARGO_HOME</code> environment variable</li>\n<li><code class=\"hljs\">$HOME/.cargo</code></li>\n</ul>\n<p>There are multiple sources from which a crate can be installed. The default\nsource location is crates.io but the <code class=\"hljs\">--git</code>, <code class=\"hljs\">--path</code>, and <code class=\"hljs\">--registry</code> flags\ncan change this source. If the source contains more than one package (such as\ncrates.io or a git repository with multiple crates) the <em>crate</em> argument is\nrequired to indicate which crate should be installed.</p>\n<p>Crates from crates.io can optionally specify the version they wish to install\nvia the <code class=\"hljs\">--version</code> flags, and similarly packages from git repositories can\noptionally specify the branch, tag, or revision that should be installed. If a\ncrate has multiple binaries, the <code class=\"hljs\">--bin</code> argument can selectively install only\none of them, and if you’d rather install examples the <code class=\"hljs\">--example</code> argument can\nbe used as well.</p>\n<p>If the package is already installed, Cargo will reinstall it if the installed\nversion does not appear to be up-to-date. If any of the following values\nchange, then Cargo will reinstall the package:</p>\n<ul>\n<li>The package version and source.</li>\n<li>The set of binary names installed.</li>\n<li>The chosen features.</li>\n<li>The profile (<code class=\"hljs\">--profile</code>).</li>\n<li>The target (<code class=\"hljs\">--target</code>).</li>\n</ul>\n<p>Installing with <code class=\"hljs\">--path</code> will always build and install, unless there are\nconflicting binaries from another package. The <code class=\"hljs\">--force</code> flag may be used to\nforce Cargo to always reinstall the package.</p>\n<p>If the source is crates.io or <code class=\"hljs\">--git</code> then by default the crate will be built\nin a temporary target directory. To avoid this, the target directory can be\nspecified by setting the <code class=\"hljs\">CARGO_TARGET_DIR</code> environment variable to a relative\npath. In particular, this can be useful for caching build artifacts on\ncontinuous integration systems.</p>\n<h3 id=\"dealing-with-the-lockfile\"><a class=\"header\" href=\"#dealing-with-the-lockfile\">Dealing with the Lockfile</a></h3>\n<p>By default, the <code class=\"hljs\">Cargo.lock</code> file that is included with the package will be\nignored. This means that Cargo will recompute which versions of dependencies\nto use, possibly using newer versions that have been released since the\npackage was published. The <code class=\"hljs\">--locked</code> flag can be used to force Cargo to use\nthe packaged <code class=\"hljs\">Cargo.lock</code> file if it is available. This may be useful for\nensuring reproducible builds, to use the exact same set of dependencies that\nwere available when the package was published. It may also be useful if a\nnewer version of a dependency is published that no longer builds on your\nsystem, or has other problems. The downside to using <code class=\"hljs\">--locked</code> is that you\nwill not receive any fixes or updates to any dependency. Note that Cargo did\nnot start publishing <code class=\"hljs\">Cargo.lock</code> files until version 1.37, which means\npackages published with prior versions will not have a <code class=\"hljs\">Cargo.lock</code> file\navailable.</p>\n<h3 id=\"configuration-discovery\"><a class=\"header\" href=\"#configuration-discovery\">Configuration Discovery</a></h3>\n<p>This command operates on system or user level, not project level.\nThis means that the local <a href=\"../reference/config.html#hierarchical-structure\">configuration discovery</a> is ignored.\nInstead, the configuration discovery begins at <code class=\"hljs\">$CARGO_HOME/config.toml</code>.\nIf the package is installed with <code class=\"hljs\">--path $PATH</code>, the local configuration\nwill be used, beginning discovery at <code class=\"hljs\">$PATH/.cargo/config.toml</code>.</p>\n<h2 id=\"options\"><a class=\"header\" href=\"#options\">OPTIONS</a></h2>\n<h3 id=\"install-options\"><a class=\"header\" href=\"#install-options\">Install Options</a></h3>\n<dl>\n<dt class=\"option-term\" id=\"option-cargo-install---vers\"><a class=\"option-anchor\" href=\"#option-cargo-install---vers\"></a><code class=\"hljs\">--vers</code> <em>version</em></dt>\n<dt class=\"option-term\" id=\"option-cargo-install---version\"><a class=\"option-anchor\" href=\"#option-cargo-install---version\"></a><code class=\"hljs\">--version</code> <em>version</em></dt>\n<dd class=\"option-desc\">Specify a version to install. This may be a <a href=\"../reference/specifying-dependencies.html\">version\nrequirement</a>, like <code class=\"hljs\">~1.2</code>, to have Cargo\nselect the newest version from the given requirement. If the version does not\nhave a requirement operator (such as <code class=\"hljs\">^</code> or <code class=\"hljs\">~</code>), then it must be in the form\n<em>MAJOR.MINOR.PATCH</em>, and will install exactly that version; it is <em>not</em>\ntreated as a caret requirement like Cargo dependencies are.</dd>\n<dt class=\"option-term\" id=\"option-cargo-install---git\"><a class=\"option-anchor\" href=\"#option-cargo-install---git\"></a><code class=\"hljs\">--git</code> <em>url</em></dt>\n<dd class=\"option-desc\">Git URL to install the specified crate from.</dd>\n<dt class=\"option-term\" id=\"option-cargo-install---branch\"><a class=\"option-anchor\" href=\"#option-cargo-install---branch\"></a><code class=\"hljs\">--branch</code> <em>branch</em></dt>\n<dd class=\"option-desc\">Branch to use when installing from git.</dd>\n<dt class=\"option-term\" id=\"option-cargo-install---tag\"><a class=\"option-anchor\" href=\"#option-cargo-install---tag\"></a><code class=\"hljs\">--tag</code> <em>tag</em></dt>\n<dd class=\"option-desc\">Tag to use when installing from git.</dd>\n<dt class=\"option-term\" id=\"option-cargo-install---rev\"><a class=\"option-anchor\" href=\"#option-cargo-install---rev\"></a><code class=\"hljs\">--rev</code> <em>sha</em></dt>\n<dd class=\"option-desc\">Specific commit to use when installing from git.</dd>\n<dt class=\"option-term\" id=\"option-cargo-install---path\"><a class=\"option-anchor\" href=\"#option-cargo-install---path\"></a><code class=\"hljs\">--path</code> <em>path</em></dt>\n<dd class=\"option-desc\">Filesystem path to local crate to install from.</dd>\n<dt class=\"option-term\" id=\"option-cargo-install---list\"><a class=\"option-anchor\" href=\"#option-cargo-install---list\"></a><code class=\"hljs\">--list</code></dt>\n<dd class=\"option-desc\">List all installed packages and their versions.</dd>\n<dt class=\"option-term\" id=\"option-cargo-install--f\"><a class=\"option-anchor\" href=\"#option-cargo-install--f\"></a><code class=\"hljs\">-f</code></dt>\n<dt class=\"option-term\" id=\"option-cargo-install---force\"><a class=\"option-anchor\" href=\"#option-cargo-install---force\"></a><code class=\"hljs\">--force</code></dt>\n<dd class=\"option-desc\">Force overwriting existing crates or binaries. This can be used if a package\nhas installed a binary with the same name as another package. This is also\nuseful if something has changed on the system that you want to rebuild with,\nsuch as a newer version of <code class=\"hljs\">rustc</code>.</dd>\n<dt class=\"option-term\" id=\"option-cargo-install---no-track\"><a class=\"option-anchor\" href=\"#option-cargo-install---no-track\"></a><code class=\"hljs\">--no-track</code></dt>\n<dd class=\"option-desc\">By default, Cargo keeps track of the installed packages with a metadata file\nstored in the installation root directory. This flag tells Cargo not to use or\ncreate that file. With this flag, Cargo will refuse to overwrite any existing\nfiles unless the <code class=\"hljs\">--force</code> flag is used. This also disables Cargo’s ability to\nprotect against multiple concurrent invocations of Cargo installing at the\nsame time.</dd>\n<dt class=\"option-term\" id=\"option-cargo-install---bin\"><a class=\"option-anchor\" href=\"#option-cargo-install---bin\"></a><code class=\"hljs\">--bin</code> <em>name</em>…</dt>\n<dd class=\"option-desc\">Install only the specified binary.</dd>\n<dt class=\"option-term\" id=\"option-cargo-install---bins\"><a class=\"option-anchor\" href=\"#option-cargo-install---bins\"></a><code class=\"hljs\">--bins</code></dt>\n<dd class=\"option-desc\">Install all binaries. This is the default behavior.</dd>\n<dt class=\"option-term\" id=\"option-cargo-install---example\"><a class=\"option-anchor\" href=\"#option-cargo-install---example\"></a><code class=\"hljs\">--example</code> <em>name</em>…</dt>\n<dd class=\"option-desc\">Install only the specified example.</dd>\n<dt class=\"option-term\" id=\"option-cargo-install---examples\"><a class=\"option-anchor\" href=\"#option-cargo-install---examples\"></a><code class=\"hljs\">--examples</code></dt>\n<dd class=\"option-desc\">Install all examples.</dd>\n<dt class=\"option-term\" id=\"option-cargo-install---root\"><a class=\"option-anchor\" href=\"#option-cargo-install---root\"></a><code class=\"hljs\">--root</code> <em>dir</em></dt>\n<dd class=\"option-desc\">Directory to install packages into.</dd>\n<dt class=\"option-term\" id=\"option-cargo-install---registry\"><a class=\"option-anchor\" href=\"#option-cargo-install---registry\"></a><code class=\"hljs\">--registry</code> <em>registry</em></dt>\n<dd class=\"option-desc\">Name of the registry to use. Registry names are defined in <a href=\"../reference/config.html\">Cargo config\nfiles</a>. If not specified, the default registry is used,\nwhich is defined by the <code class=\"hljs\">registry.default</code> config key which defaults to\n<code class=\"hljs\">crates-io</code>.</dd>\n<dt class=\"option-term\" id=\"option-cargo-install---index\"><a class=\"option-anchor\" href=\"#option-cargo-install---index\"></a><code class=\"hljs\">--index</code> <em>index</em></dt>\n<dd class=\"option-desc\">The URL of the registry index to use.</dd>\n</dl>\n<h3 id=\"feature-selection\"><a class=\"header\" href=\"#feature-selection\">Feature Selection</a></h3>\n<p>The feature flags allow you to control which features are enabled. When no\nfeature options are given, the <code class=\"hljs\">default</code> feature is activated for every\nselected package.</p>\n<p>See <a href=\"../reference/features.html#command-line-feature-options\">the features documentation</a>\nfor more details.</p>\n<dl>\n<dt class=\"option-term\" id=\"option-cargo-install--F\"><a class=\"option-anchor\" href=\"#option-cargo-install--F\"></a><code class=\"hljs\">-F</code> <em>features</em></dt>\n<dt class=\"option-term\" id=\"option-cargo-install---features\"><a class=\"option-anchor\" href=\"#option-cargo-install---features\"></a><code class=\"hljs\">--features</code> <em>features</em></dt>\n<dd class=\"option-desc\">Space or comma separated list of features to activate. Features of workspace\nmembers may be enabled with <code class=\"hljs\">package-name/feature-name</code> syntax. This flag may\nbe specified multiple times, which enables all specified features.</dd>\n<dt class=\"option-term\" id=\"option-cargo-install---all-features\"><a class=\"option-anchor\" href=\"#option-cargo-install---all-features\"></a><code class=\"hljs\">--all-features</code></dt>\n<dd class=\"option-desc\">Activate all available features of all selected packages.</dd>\n<dt class=\"option-term\" id=\"option-cargo-install---no-default-features\"><a class=\"option-anchor\" href=\"#option-cargo-install---no-default-features\"></a><code class=\"hljs\">--no-default-features</code></dt>\n<dd class=\"option-desc\">Do not activate the <code class=\"hljs\">default</code> feature of the selected packages.</dd>\n</dl>\n<h3 id=\"compilation-options\"><a class=\"header\" href=\"#compilation-options\">Compilation Options</a></h3>\n<dl>\n<dt class=\"option-term\" id=\"option-cargo-install---target\"><a class=\"option-anchor\" href=\"#option-cargo-install---target\"></a><code class=\"hljs\">--target</code> <em>triple</em></dt>\n<dd class=\"option-desc\">Install for the given architecture. The default is the host architecture. The general format of the triple is\n<code class=\"hljs\">&lt;arch&gt;&lt;sub&gt;-&lt;vendor&gt;-&lt;sys&gt;-&lt;abi&gt;</code>. Run <code class=\"hljs\">rustc --print target-list</code> for a\nlist of supported targets.<p></p>\n<p>This may also be specified with the <code class=\"hljs\">build.target</code>\n<a href=\"../reference/config.html\">config value</a>.</p>\n<p>Note that specifying this flag makes Cargo run in a different mode where the\ntarget artifacts are placed in a separate directory. See the\n<a href=\"../guide/build-cache.html\">build cache</a> documentation for more details.</p></dd>\n<dt class=\"option-term\" id=\"option-cargo-install---target-dir\"><a class=\"option-anchor\" href=\"#option-cargo-install---target-dir\"></a><code class=\"hljs\">--target-dir</code> <em>directory</em></dt>\n<dd class=\"option-desc\">Directory for all generated artifacts and intermediate files. May also be\nspecified with the <code class=\"hljs\">CARGO_TARGET_DIR</code> environment variable, or the\n<code class=\"hljs\">build.target-dir</code> <a href=\"../reference/config.html\">config value</a>.\nDefaults to a new temporary folder located in the\ntemporary directory of the platform.<p></p>\n<p>When using <code class=\"hljs\">--path</code>, by default it will use <code class=\"hljs\">target</code> directory in the workspace\nof the local crate unless <code class=\"hljs\">--target-dir</code>\nis specified.</p></dd>\n<dt class=\"option-term\" id=\"option-cargo-install---debug\"><a class=\"option-anchor\" href=\"#option-cargo-install---debug\"></a><code class=\"hljs\">--debug</code></dt>\n<dd class=\"option-desc\">Build with the <code class=\"hljs\">dev</code> profile instead of the <code class=\"hljs\">release</code> profile.\nSee also the <code class=\"hljs\">--profile</code> option for choosing a specific profile by name.</dd>\n<dt class=\"option-term\" id=\"option-cargo-install---profile\"><a class=\"option-anchor\" href=\"#option-cargo-install---profile\"></a><code class=\"hljs\">--profile</code> <em>name</em></dt>\n<dd class=\"option-desc\">Install with the given profile.\nSee <a href=\"../reference/profiles.html\">the reference</a> for more details on profiles.</dd>\n<dt class=\"option-term\" id=\"option-cargo-install---timings=fmts\"><a class=\"option-anchor\" href=\"#option-cargo-install---timings=fmts\"></a><code class=\"hljs\">--timings=</code><em>fmts</em></dt>\n<dd class=\"option-desc\">Output information how long each compilation takes, and track concurrency\ninformation over time. Accepts an optional comma-separated list of output\nformats; <code class=\"hljs\">--timings</code> without an argument will default to <code class=\"hljs\">--timings=html</code>.\nSpecifying an output format (rather than the default) is unstable and requires\n<code class=\"hljs\">-Zunstable-options</code>. Valid output formats:<p></p>\n<ul>\n<li><code class=\"hljs\">html</code> (unstable, requires <code class=\"hljs\">-Zunstable-options</code>): Write a human-readable file <code class=\"hljs\">cargo-timing.html</code> to the\n<code class=\"hljs\">target/cargo-timings</code> directory with a report of the compilation. Also write\na report to the same directory with a timestamp in the filename if you want\nto look at older runs. HTML output is suitable for human consumption only,\nand does not provide machine-readable timing data.</li>\n<li><code class=\"hljs\">json</code> (unstable, requires <code class=\"hljs\">-Zunstable-options</code>): Emit machine-readable JSON\ninformation about timing information.</li>\n</ul></dd>\n</dl>\n<h3 id=\"manifest-options\"><a class=\"header\" href=\"#manifest-options\">Manifest Options</a></h3>\n<dl>\n<dt class=\"option-term\" id=\"option-cargo-install---ignore-rust-version\"><a class=\"option-anchor\" href=\"#option-cargo-install---ignore-rust-version\"></a><code class=\"hljs\">--ignore-rust-version</code></dt>\n<dd class=\"option-desc\">Ignore <code class=\"hljs\">rust-version</code> specification in packages.</dd>\n<dt class=\"option-term\" id=\"option-cargo-install---locked\"><a class=\"option-anchor\" href=\"#option-cargo-install---locked\"></a><code class=\"hljs\">--locked</code></dt>\n<dd class=\"option-desc\">Asserts that the exact same dependencies and versions are used as when the\nexisting <code class=\"hljs\">Cargo.lock</code> file was originally generated. Cargo will exit with an\nerror when either of the following scenarios arises:<p></p>\n<ul>\n<li>The lock file is missing.</li>\n<li>Cargo attempted to change the lock file due to a different dependency resolution.</li>\n</ul>\n<p>It may be used in environments where deterministic builds are desired,\nsuch as in CI pipelines.</p></dd>\n<dt class=\"option-term\" id=\"option-cargo-install---offline\"><a class=\"option-anchor\" href=\"#option-cargo-install---offline\"></a><code class=\"hljs\">--offline</code></dt>\n<dd class=\"option-desc\">Prevents Cargo from accessing the network for any reason. Without this\nflag, Cargo will stop with an error if it needs to access the network and\nthe network is not available. With this flag, Cargo will attempt to\nproceed without the network if possible.<p></p>\n<p>Beware that this may result in different dependency resolution than online\nmode. Cargo will restrict itself to crates that are downloaded locally, even\nif there might be a newer version as indicated in the local copy of the index.\nSee the <a href=\"cargo-fetch.html\">cargo-fetch(1)</a> command to download dependencies before going\noffline.</p>\n<p>May also be specified with the <code class=\"hljs\">net.offline</code> <a href=\"../reference/config.html\">config value</a>.</p></dd>\n<dt class=\"option-term\" id=\"option-cargo-install---frozen\"><a class=\"option-anchor\" href=\"#option-cargo-install---frozen\"></a><code class=\"hljs\">--frozen</code></dt>\n<dd class=\"option-desc\">Equivalent to specifying both <code class=\"hljs\">--locked</code> and <code class=\"hljs\">--offline</code>.</dd>\n</dl>\n<h3 id=\"miscellaneous-options\"><a class=\"header\" href=\"#miscellaneous-options\">Miscellaneous Options</a></h3>\n<dl>\n<dt class=\"option-term\" id=\"option-cargo-install--j\"><a class=\"option-anchor\" href=\"#option-cargo-install--j\"></a><code class=\"hljs\">-j</code> <em>N</em></dt>\n<dt class=\"option-term\" id=\"option-cargo-install---jobs\"><a class=\"option-anchor\" href=\"#option-cargo-install---jobs\"></a><code class=\"hljs\">--jobs</code> <em>N</em></dt>\n<dd class=\"option-desc\">Number of parallel jobs to run. May also be specified with the\n<code class=\"hljs\">build.jobs</code> <a href=\"../reference/config.html\">config value</a>. Defaults to\nthe number of logical CPUs. If negative, it sets the maximum number of\nparallel jobs to the number of logical CPUs plus provided value. If\na string <code class=\"hljs\">default</code> is provided, it sets the value back to defaults.\nShould not be 0.</dd>\n<dt class=\"option-term\" id=\"option-cargo-install---keep-going\"><a class=\"option-anchor\" href=\"#option-cargo-install---keep-going\"></a><code class=\"hljs\">--keep-going</code></dt>\n<dd class=\"option-desc\">Build as many crates in the dependency graph as possible, rather than aborting\nthe build on the first one that fails to build.<p></p>\n<p>For example if the current package depends on dependencies <code class=\"hljs\">fails</code> and <code class=\"hljs\">works</code>,\none of which fails to build, <code class=\"hljs\">cargo install -j1</code> may or may not build the\none that succeeds (depending on which one of the two builds Cargo picked to run\nfirst), whereas <code class=\"hljs\">cargo install -j1 --keep-going</code> would definitely run both\nbuilds, even if the one run first fails.</p></dd>\n</dl>\n<h3 id=\"display-options\"><a class=\"header\" href=\"#display-options\">Display Options</a></h3>\n<dl>\n<dt class=\"option-term\" id=\"option-cargo-install--v\"><a class=\"option-anchor\" href=\"#option-cargo-install--v\"></a><code class=\"hljs\">-v</code></dt>\n<dt class=\"option-term\" id=\"option-cargo-install---verbose\"><a class=\"option-anchor\" href=\"#option-cargo-install---verbose\"></a><code class=\"hljs\">--verbose</code></dt>\n<dd class=\"option-desc\">Use verbose output. May be specified twice for “very verbose” output which\nincludes extra output such as dependency warnings and build script output.\nMay also be specified with the <code class=\"hljs\">term.verbose</code>\n<a href=\"../reference/config.html\">config value</a>.</dd>\n<dt class=\"option-term\" id=\"option-cargo-install--q\"><a class=\"option-anchor\" href=\"#option-cargo-install--q\"></a><code class=\"hljs\">-q</code></dt>\n<dt class=\"option-term\" id=\"option-cargo-install---quiet\"><a class=\"option-anchor\" href=\"#option-cargo-install---quiet\"></a><code class=\"hljs\">--quiet</code></dt>\n<dd class=\"option-desc\">Do not print cargo log messages.\nMay also be specified with the <code class=\"hljs\">term.quiet</code>\n<a href=\"../reference/config.html\">config value</a>.</dd>\n<dt class=\"option-term\" id=\"option-cargo-install---color\"><a class=\"option-anchor\" href=\"#option-cargo-install---color\"></a><code class=\"hljs\">--color</code> <em>when</em></dt>\n<dd class=\"option-desc\">Control when colored output is used. Valid values:<p></p>\n<ul>\n<li><code class=\"hljs\">auto</code> (default): Automatically detect if color support is available on the\nterminal.</li>\n<li><code class=\"hljs\">always</code>: Always display colors.</li>\n<li><code class=\"hljs\">never</code>: Never display colors.</li>\n</ul>\n<p>May also be specified with the <code class=\"hljs\">term.color</code>\n<a href=\"../reference/config.html\">config value</a>.</p></dd>\n<dt class=\"option-term\" id=\"option-cargo-install---message-format\"><a class=\"option-anchor\" href=\"#option-cargo-install---message-format\"></a><code class=\"hljs\">--message-format</code> <em>fmt</em></dt>\n<dd class=\"option-desc\">The output format for diagnostic messages. Can be specified multiple times\nand consists of comma-separated values. Valid values:<p></p>\n<ul>\n<li><code class=\"hljs\">human</code> (default): Display in a human-readable text format. Conflicts with\n<code class=\"hljs\">short</code> and <code class=\"hljs\">json</code>.</li>\n<li><code class=\"hljs\">short</code>: Emit shorter, human-readable text messages. Conflicts with <code class=\"hljs\">human</code>\nand <code class=\"hljs\">json</code>.</li>\n<li><code class=\"hljs\">json</code>: Emit JSON messages to stdout. See\n<a href=\"../reference/external-tools.html#json-messages\">the reference</a>\nfor more details. Conflicts with <code class=\"hljs\">human</code> and <code class=\"hljs\">short</code>.</li>\n<li><code class=\"hljs\">json-diagnostic-short</code>: Ensure the <code class=\"hljs\">rendered</code> field of JSON messages contains\nthe “short” rendering from rustc. Cannot be used with <code class=\"hljs\">human</code> or <code class=\"hljs\">short</code>.</li>\n<li><code class=\"hljs\">json-diagnostic-rendered-ansi</code>: Ensure the <code class=\"hljs\">rendered</code> field of JSON messages\ncontains embedded ANSI color codes for respecting rustc’s default color\nscheme. Cannot be used with <code class=\"hljs\">human</code> or <code class=\"hljs\">short</code>.</li>\n<li><code class=\"hljs\">json-render-diagnostics</code>: Instruct Cargo to not include rustc diagnostics\nin JSON messages printed, but instead Cargo itself should render the\nJSON diagnostics coming from rustc. Cargo’s own JSON diagnostics and others\ncoming from rustc are still emitted. Cannot be used with <code class=\"hljs\">human</code> or <code class=\"hljs\">short</code>.</li>\n</ul></dd>\n</dl>\n<h3 id=\"common-options\"><a class=\"header\" href=\"#common-options\">Common Options</a></h3>\n<dl>\n<dt class=\"option-term\" id=\"option-cargo-install-+toolchain\"><a class=\"option-anchor\" href=\"#option-cargo-install-+toolchain\"></a><code class=\"hljs\">+</code><em>toolchain</em></dt>\n<dd class=\"option-desc\">If Cargo has been installed with rustup, and the first argument to <code class=\"hljs\">cargo</code>\nbegins with <code class=\"hljs\">+</code>, it will be interpreted as a rustup toolchain name (such\nas <code class=\"hljs\">+stable</code> or <code class=\"hljs\">+nightly</code>).\nSee the <a href=\"https://rust-lang.github.io/rustup/overrides.html\">rustup documentation</a>\nfor more information about how toolchain overrides work.</dd>\n<dt class=\"option-term\" id=\"option-cargo-install---config\"><a class=\"option-anchor\" href=\"#option-cargo-install---config\"></a><code class=\"hljs\">--config</code> <em>KEY=VALUE</em> or <em>PATH</em></dt>\n<dd class=\"option-desc\">Overrides a Cargo configuration value. The argument should be in TOML syntax of <code class=\"hljs\">KEY=VALUE</code>,\nor provided as a path to an extra configuration file. This flag may be specified multiple times.\nSee the <a href=\"../reference/config.html#command-line-overrides\">command-line overrides section</a> for more information.</dd>\n<dt class=\"option-term\" id=\"option-cargo-install--C\"><a class=\"option-anchor\" href=\"#option-cargo-install--C\"></a><code class=\"hljs\">-C</code> <em>PATH</em></dt>\n<dd class=\"option-desc\">Changes the current working directory before executing any specified operations. This affects\nthings like where cargo looks by default for the project manifest (<code class=\"hljs\">Cargo.toml</code>), as well as\nthe directories searched for discovering <code class=\"hljs\">.cargo/config.toml</code>, for example. This option must\nappear before the command name, for example <code class=\"hljs\">cargo -C path/to/my-project build</code>.<p></p>\n<p>This option is only available on the <a href=\"https://doc.rust-lang.org/book/appendix-07-nightly-rust.html\">nightly\nchannel</a> and\nrequires the <code class=\"hljs\">-Z unstable-options</code> flag to enable (see\n<a href=\"https://github.com/rust-lang/cargo/issues/10098\">#10098</a>).</p></dd>\n<dt class=\"option-term\" id=\"option-cargo-install--h\"><a class=\"option-anchor\" href=\"#option-cargo-install--h\"></a><code class=\"hljs\">-h</code></dt>\n<dt class=\"option-term\" id=\"option-cargo-install---help\"><a class=\"option-anchor\" href=\"#option-cargo-install---help\"></a><code class=\"hljs\">--help</code></dt>\n<dd class=\"option-desc\">Prints help information.</dd>\n<dt class=\"option-term\" id=\"option-cargo-install--Z\"><a class=\"option-anchor\" href=\"#option-cargo-install--Z\"></a><code class=\"hljs\">-Z</code> <em>flag</em></dt>\n<dd class=\"option-desc\">Unstable (nightly-only) flags to Cargo. Run <code class=\"hljs\">cargo -Z help</code> for details.</dd>\n</dl>\n<h2 id=\"environment\"><a class=\"header\" href=\"#environment\">ENVIRONMENT</a></h2>\n<p>See <a href=\"../reference/environment-variables.html\">the reference</a> for\ndetails on environment variables that Cargo reads.</p>\n<h2 id=\"exit-status\"><a class=\"header\" href=\"#exit-status\">EXIT STATUS</a></h2>\n<ul>\n<li><code class=\"hljs\">0</code>: Cargo succeeded.</li>\n<li><code class=\"hljs\">101</code>: Cargo failed to complete.</li>\n</ul>\n<h2 id=\"examples\"><a class=\"header\" href=\"#examples\">EXAMPLES</a></h2>\n<ol>\n<li>\n<p>Install or upgrade a package from crates.io:</p>\n<pre><div class=\"buttons\"><button class=\"fa fa-copy clip-button\" title=\"Copy to clipboard\" aria-label=\"Copy to clipboard\"><i class=\"tooltiptext\"></i></button></div><code class=\"hljs\">cargo install ripgrep\n</code></pre>\n</li>\n<li>\n<p>Install or reinstall the package in the current directory:</p>\n<pre><div class=\"buttons\"><button class=\"fa fa-copy clip-button\" title=\"Copy to clipboard\" aria-label=\"Copy to clipboard\"><i class=\"tooltiptext\"></i></button></div><code class=\"hljs\">cargo install --path .\n</code></pre>\n</li>\n<li>\n<p>View the list of installed packages:</p>\n<pre><div class=\"buttons\"><button class=\"fa fa-copy clip-button\" title=\"Copy to clipboard\" aria-label=\"Copy to clipboard\"><i class=\"tooltiptext\"></i></button></div><code class=\"hljs\">cargo install --list\n</code></pre>\n</li>\n</ol>\n<h2 id=\"see-also\"><a class=\"header\" href=\"#see-also\">SEE ALSO</a></h2>\n<p><a href=\"cargo.html\">cargo(1)</a>, <a href=\"cargo-uninstall.html\">cargo-uninstall(1)</a>, <a href=\"cargo-search.html\">cargo-search(1)</a>, <a href=\"cargo-publish.html\">cargo-publish(1)</a></p>\n\n                    </main>\n\n                    <nav class=\"nav-wrapper\" aria-label=\"Page navigation\">\n                        <!-- Mobile navigation buttons -->\n                            <a rel=\"prev\" href=\"../commands/cargo-init.html\" class=\"mobile-nav-chapters previous\" title=\"Previous chapter\" aria-label=\"Previous chapter\" aria-keyshortcuts=\"Left\">\n                                <i class=\"fa fa-angle-left\"></i>\n                            </a>\n\n                            <a rel=\"next prefetch\" href=\"../commands/cargo-new.html\" class=\"mobile-nav-chapters next\" title=\"Next chapter\" aria-label=\"Next chapter\" aria-keyshortcuts=\"Right\">\n                                <i class=\"fa fa-angle-right\"></i>\n                            </a>\n\n                        <div style=\"clear: both\"></div>\n                    </nav>\n                </div>\n            </div>\n\n            <nav class=\"nav-wide-wrapper\" aria-label=\"Page navigation\">\n                    <a rel=\"prev\" href=\"../commands/cargo-init.html\" class=\"nav-chapters previous\" title=\"Previous chapter\" aria-label=\"Previous chapter\" aria-keyshortcuts=\"Left\">\n                        <i class=\"fa fa-angle-left\"></i>\n                    </a>\n\n                    <a rel=\"next prefetch\" href=\"../commands/cargo-new.html\" class=\"nav-chapters next\" title=\"Next chapter\" aria-label=\"Next chapter\" aria-keyshortcuts=\"Right\">\n                        <i class=\"fa fa-angle-right\"></i>\n                    </a>\n            </nav>\n\n        </div>\n\n\n\n\n        <script>\n            window.playground_copyable = true;\n        </script>\n\n\n        <script src=\"../elasticlunr.min.js\"></script>\n        <script src=\"../mark.min.js\"></script>\n        <script src=\"../searcher.js\"></script>\n\n        <script src=\"../clipboard.min.js\"></script>\n        <script src=\"../highlight.js\"></script>\n        <script src=\"../book.js\"></script>\n\n        <!-- Custom JS scripts -->\n\n\n    </div>\n    \n\n</body></html>",
	"crawlDate": "2024-07-28T05:09:30.277Z"
}