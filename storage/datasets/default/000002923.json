{
	"title": "IntoRawFd in std::os::fd - Rust",
	"url": "https://doc.rust-lang.org/stable/std/os/fd/trait.IntoRawFd.html",
	"markdown": "# IntoRawFd in std::os::fd - Rust\n\n## Trait [std](../../index.html)::[os](../index.html)::[fd](index.html)::[IntoRawFd](#)\n\n1.4.0 · [source](about:blank/src/std/os/fd/raw.rs.html#117-143) ·\n\n```\npub trait IntoRawFd {\n    // Required method\n    fn into_raw_fd(self) -> RawFd;\n}\n```\n\nExpand description\n\nA trait to express the ability to consume an object and acquire ownership of its raw file descriptor.\n\n1.4.0 · [source](about:blank/src/std/os/fd/raw.rs.html#142)\n\nConsumes this object, returning the raw underlying file descriptor.\n\nThis function is typically used to **transfer ownership** of the underlying file descriptor to the caller. When used in this way, callers are then the unique owners of the file descriptor and must close it once it’s no longer needed.\n\nHowever, transferring ownership is not strictly required. Use a [`Into<OwnedFd>::into`](about:blank/convert/trait.Into.html#tymethod.into \"method std::convert::Into::into\") implementation for an API which strictly transfers ownership.\n\n##### [§](#example)Example\n\n```\nuse std::fs::File;\n#[cfg(any(unix, target_os = \"wasi\"))]\nuse std::os::fd::{IntoRawFd, RawFd};\n\nlet f = File::open(\"foo.txt\")?;\n#[cfg(any(unix, target_os = \"wasi\"))]\nlet raw_fd: RawFd = f.into_raw_fd();\n```\n\n[Run](https://play.rust-lang.org/?code=%23!%5Ballow(unused)%5D%0Afn+main()+%7B+fn+_inner()+-%3E+Result%3C(),+impl+core::fmt::Debug%3E+%7B%0A++++use+std::fs::File;%0A++++use+std::io;%0A++++%23%5Bcfg(any(unix,+target_os+=+%22wasi%22))%5D%0A++++use+std::os::fd::%7BIntoRawFd,+RawFd%7D;%0A++++%0A++++let+f+=+File::open(%22foo.txt%22)?;%0A++++%23%5Bcfg(any(unix,+target_os+=+%22wasi%22))%5D%0A++++let+raw_fd:+RawFd+=+f.into_raw_fd();%0A++++Ok::%3C(),+io::Error%3E(())%0A%7D+_inner().unwrap()+%7D&edition=2021)",
	"html": "<!DOCTYPE html><html lang=\"en\" data-theme=\"light\"><head><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><meta name=\"generator\" content=\"rustdoc\"><meta name=\"description\" content=\"A trait to express the ability to consume an object and acquire ownership of its raw file descriptor.\"><title>IntoRawFd in std::os::fd - Rust</title><script>if(window.location.protocol!==\"file:\")document.head.insertAdjacentHTML(\"beforeend\",\"SourceSerif4-Regular-46f98efaafac5295.ttf.woff2,FiraSans-Regular-018c141bf0843ffd.woff2,FiraSans-Medium-8f9a781e4970d388.woff2,SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2,SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\".split(\",\").map(f=>`<link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin href=\"../../../static.files/${f}\">`).join(\"\"))</script><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../../static.files/SourceSerif4-Regular-46f98efaafac5295.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../../static.files/FiraSans-Regular-018c141bf0843ffd.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../../static.files/FiraSans-Medium-8f9a781e4970d388.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../../static.files/SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../../static.files/SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\"><link rel=\"stylesheet\" href=\"../../../static.files/normalize-76eba96aa4d2e634.css\"><link rel=\"stylesheet\" href=\"../../../static.files/rustdoc-dd39b87e5fcfba68.css\"><meta name=\"rustdoc-vars\" data-root-path=\"../../../\" data-static-root-path=\"../../../static.files/\" data-current-crate=\"std\" data-themes=\"\" data-resource-suffix=\"1.80.0\" data-rustdoc-version=\"1.80.0 (051478957 2024-07-21)\" data-channel=\"1.80.0\" data-search-js=\"search-d52510db62a78183.js\" data-settings-js=\"settings-4313503d2e1961c2.js\"><script src=\"../../../static.files/storage-118b08c4c78b968e.js\"></script><script defer=\"\" src=\"sidebar-items1.80.0.js\"></script><script defer=\"\" src=\"../../../static.files/main-20a3ad099b048cf2.js\"></script><noscript><link rel=\"stylesheet\" href=\"../../../static.files/noscript-df360f571f6edeae.css\"></noscript><link rel=\"alternate icon\" type=\"image/png\" href=\"../../../static.files/favicon-32x32-422f7d1d52889060.png\"><link rel=\"icon\" type=\"image/svg+xml\" href=\"../../../static.files/favicon-2c020d218678b618.svg\"></head><body class=\"rustdoc trait\"><!--[if lte IE 11]><div class=\"warning\">This old browser is unsupported and will most likely display funky things.</div><![endif]--><nav class=\"mobile-topbar\"><button class=\"sidebar-menu-toggle\" title=\"show sidebar\"></button><a class=\"logo-container\" href=\"../../../std/index.html\"><img class=\"rust-logo\" src=\"../../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"\"></a><h2 class=\"location\"><a href=\"#\">IntoRawFd</a></h2></nav><nav class=\"sidebar\"><div class=\"sidebar-crate\"><a class=\"logo-container\" href=\"../../../std/index.html\"><img class=\"rust-logo\" src=\"../../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"logo\"></a><h2><a href=\"../../../std/index.html\">std</a><span class=\"version\">1.80.0</span></h2></div><div class=\"version\">(051478957\t2024-07-21)</div><h2 class=\"location\"><a href=\"#\">IntoRawFd</a></h2><div class=\"sidebar-elems\"><section><h3><a href=\"#required-methods\">Required Methods</a></h3><ul class=\"block\"><li><a href=\"#tymethod.into_raw_fd\">into_raw_fd</a></li></ul><h3><a href=\"#implementors\">Implementors</a></h3></section><h2><a href=\"index.html\">In std::os::fd</a></h2><h3><a href=\"index.html#structs\">Structs</a></h3><ul class=\"block struct\"><li><a href=\"struct.BorrowedFd.html\">BorrowedFd</a></li><li><a href=\"struct.OwnedFd.html\">OwnedFd</a></li></ul><h3><a href=\"index.html#traits\">Traits</a></h3><ul class=\"block trait\"><li><a href=\"trait.AsFd.html\">AsFd</a></li><li><a href=\"trait.AsRawFd.html\">AsRawFd</a></li><li><a href=\"trait.FromRawFd.html\">FromRawFd</a></li><li><a href=\"trait.IntoRawFd.html\">IntoRawFd</a></li></ul><h3><a href=\"index.html#types\">Type Aliases</a></h3><ul class=\"block type\"><li><a href=\"type.RawFd.html\">RawFd</a></li></ul></div></nav><div class=\"sidebar-resizer\"></div><main><div class=\"width-limiter\"><rustdoc-search><nav class=\"sub\">\n            <form class=\"search-form\">\n                <span></span> <!-- This empty span is a hacky fix for Safari - See #93184 -->\n                <div id=\"sidebar-button\" tabindex=\"-1\">\n                    <a href=\"../../../std/all.html\" title=\"show sidebar\"></a>\n                </div>\n                <input class=\"search-input\" name=\"search\" aria-label=\"Run search in the documentation\" autocomplete=\"off\" spellcheck=\"false\" placeholder=\"Type ‘S’ or ‘/’ to search, ‘?’ for more options…\" type=\"search\">\n                <div id=\"help-button\" tabindex=\"-1\">\n                    <a href=\"../../../help.html\" title=\"help\">?</a>\n                </div>\n                <div id=\"settings-menu\" tabindex=\"-1\">\n                    <a href=\"../../../settings.html\" title=\"settings\">\n                        Settings\n                    </a>\n                </div>\n            </form>\n        </nav></rustdoc-search><section id=\"main-content\" class=\"content\"><div class=\"main-heading\"><h1>Trait <a href=\"../../index.html\">std</a>::<wbr><a href=\"../index.html\">os</a>::<wbr><a href=\"index.html\">fd</a>::<wbr><a class=\"trait\" href=\"#\">IntoRawFd</a><button id=\"copy-path\" title=\"Copy item path to clipboard\">Copy item path</button></h1><span class=\"out-of-band\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"../../../src/std/os/fd/raw.rs.html#117-143\">source</a> · <button id=\"toggle-all-docs\" title=\"collapse all docs\">[<span>−</span>]</button></span></div><pre class=\"rust item-decl\"><code>pub trait IntoRawFd {\n    // Required method\n    fn <a href=\"#tymethod.into_raw_fd\" class=\"fn\">into_raw_fd</a>(self) -&gt; <a class=\"type\" href=\"type.RawFd.html\" title=\"type std::os::fd::RawFd\">RawFd</a>;\n}</code></pre><details class=\"toggle top-doc\" open=\"\"><summary class=\"hideme\"><span>Expand description</span></summary><div class=\"docblock\"><p>A trait to express the ability to consume an object and acquire ownership of\nits raw file descriptor.</p>\n</div></details><h2 id=\"required-methods\" class=\"section-header\">Required Methods<a href=\"#required-methods\" class=\"anchor\">§</a></h2><div class=\"methods\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"tymethod.into_raw_fd\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"../../../src/std/os/fd/raw.rs.html#142\">source</a></span><h4 class=\"code-header\">fn <a href=\"#tymethod.into_raw_fd\" class=\"fn\">into_raw_fd</a>(self) -&gt; <a class=\"type\" href=\"type.RawFd.html\" title=\"type std::os::fd::RawFd\">RawFd</a></h4></section></summary><div class=\"docblock\"><p>Consumes this object, returning the raw underlying file descriptor.</p>\n<p>This function is typically used to <strong>transfer ownership</strong> of the underlying\nfile descriptor to the caller. When used in this way, callers are then the unique\nowners of the file descriptor and must close it once it’s no longer needed.</p>\n<p>However, transferring ownership is not strictly required. Use a\n<a href=\"../../convert/trait.Into.html#tymethod.into\" title=\"method std::convert::Into::into\"><code>Into&lt;OwnedFd&gt;::into</code></a> implementation for an API which strictly\ntransfers ownership.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::fs::File;\n<span class=\"attr\">#[cfg(any(unix, target_os = <span class=\"string\">\"wasi\"</span>))]\n</span><span class=\"kw\">use </span>std::os::fd::{IntoRawFd, RawFd};\n\n<span class=\"kw\">let </span>f = File::open(<span class=\"string\">\"foo.txt\"</span>)<span class=\"question-mark\">?</span>;\n<span class=\"attr\">#[cfg(any(unix, target_os = <span class=\"string\">\"wasi\"</span>))]\n</span><span class=\"kw\">let </span>raw_fd: RawFd = f.into_raw_fd();</code></pre><a class=\"test-arrow\" target=\"_blank\" href=\"https://play.rust-lang.org/?code=%23!%5Ballow(unused)%5D%0Afn+main()+%7B+fn+_inner()+-%3E+Result%3C(),+impl+core::fmt::Debug%3E+%7B%0A++++use+std::fs::File;%0A++++use+std::io;%0A++++%23%5Bcfg(any(unix,+target_os+=+%22wasi%22))%5D%0A++++use+std::os::fd::%7BIntoRawFd,+RawFd%7D;%0A++++%0A++++let+f+=+File::open(%22foo.txt%22)?;%0A++++%23%5Bcfg(any(unix,+target_os+=+%22wasi%22))%5D%0A++++let+raw_fd:+RawFd+=+f.into_raw_fd();%0A++++Ok::%3C(),+io::Error%3E(())%0A%7D+_inner().unwrap()+%7D&amp;edition=2021\">Run</a></div>\n</div></details></div><h2 id=\"implementors\" class=\"section-header\">Implementors<a href=\"#implementors\" class=\"anchor\">§</a></h2><div id=\"implementors-list\"><section id=\"impl-IntoRawFd-for-File\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"../../../src/std/os/fd/raw.rs.html#182-187\">source</a></span><a href=\"#impl-IntoRawFd-for-File\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.IntoRawFd.html\" title=\"trait std::os::fd::IntoRawFd\">IntoRawFd</a> for <a class=\"struct\" href=\"../../fs/struct.File.html\" title=\"struct std::fs::File\">File</a></h3></section><section id=\"impl-IntoRawFd-for-TcpListener\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"../../../src/std/os/fd/net.rs.html#46\">source</a></span><a href=\"#impl-IntoRawFd-for-TcpListener\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.IntoRawFd.html\" title=\"trait std::os::fd::IntoRawFd\">IntoRawFd</a> for <a class=\"struct\" href=\"../../net/struct.TcpListener.html\" title=\"struct std::net::TcpListener\">TcpListener</a></h3></section><section id=\"impl-IntoRawFd-for-TcpStream\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"../../../src/std/os/fd/net.rs.html#46\">source</a></span><a href=\"#impl-IntoRawFd-for-TcpStream\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.IntoRawFd.html\" title=\"trait std::os::fd::IntoRawFd\">IntoRawFd</a> for <a class=\"struct\" href=\"../../net/struct.TcpStream.html\" title=\"struct std::net::TcpStream\">TcpStream</a></h3></section><section id=\"impl-IntoRawFd-for-UdpSocket\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"../../../src/std/os/fd/net.rs.html#46\">source</a></span><a href=\"#impl-IntoRawFd-for-UdpSocket\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.IntoRawFd.html\" title=\"trait std::os::fd::IntoRawFd\">IntoRawFd</a> for <a class=\"struct\" href=\"../../net/struct.UdpSocket.html\" title=\"struct std::net::UdpSocket\">UdpSocket</a></h3></section><section id=\"impl-IntoRawFd-for-ChildStderr\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"../../../src/std/os/unix/process.rs.html#423-428\">source</a></span><a href=\"#impl-IntoRawFd-for-ChildStderr\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.IntoRawFd.html\" title=\"trait std::os::fd::IntoRawFd\">IntoRawFd</a> for <a class=\"struct\" href=\"../../process/struct.ChildStderr.html\" title=\"struct std::process::ChildStderr\">ChildStderr</a></h3><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>Unix</strong> only.</div></span></section><section id=\"impl-IntoRawFd-for-ChildStdin\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"../../../src/std/os/unix/process.rs.html#407-412\">source</a></span><a href=\"#impl-IntoRawFd-for-ChildStdin\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.IntoRawFd.html\" title=\"trait std::os::fd::IntoRawFd\">IntoRawFd</a> for <a class=\"struct\" href=\"../../process/struct.ChildStdin.html\" title=\"struct std::process::ChildStdin\">ChildStdin</a></h3><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>Unix</strong> only.</div></span></section><section id=\"impl-IntoRawFd-for-ChildStdout\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.4.0\">1.4.0</span> · <a class=\"src\" href=\"../../../src/std/os/unix/process.rs.html#415-420\">source</a></span><a href=\"#impl-IntoRawFd-for-ChildStdout\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.IntoRawFd.html\" title=\"trait std::os::fd::IntoRawFd\">IntoRawFd</a> for <a class=\"struct\" href=\"../../process/struct.ChildStdout.html\" title=\"struct std::process::ChildStdout\">ChildStdout</a></h3><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>Unix</strong> only.</div></span></section><section id=\"impl-IntoRawFd-for-PidFd\" class=\"impl\"><a class=\"src rightside\" href=\"../../../src/std/os/linux/process.rs.html#86-90\">source</a><a href=\"#impl-IntoRawFd-for-PidFd\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.IntoRawFd.html\" title=\"trait std::os::fd::IntoRawFd\">IntoRawFd</a> for <a class=\"struct\" href=\"../linux/process/struct.PidFd.html\" title=\"struct std::os::linux::process::PidFd\">PidFd</a></h3><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>Linux</strong> only.</div></span></section><section id=\"impl-IntoRawFd-for-UnixDatagram\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.10.0\">1.10.0</span> · <a class=\"src\" href=\"../../../src/std/os/unix/net/datagram.rs.html#952-957\">source</a></span><a href=\"#impl-IntoRawFd-for-UnixDatagram\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.IntoRawFd.html\" title=\"trait std::os::fd::IntoRawFd\">IntoRawFd</a> for <a class=\"struct\" href=\"../unix/net/struct.UnixDatagram.html\" title=\"struct std::os::unix::net::UnixDatagram\">UnixDatagram</a></h3><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>Unix</strong> only.</div></span></section><section id=\"impl-IntoRawFd-for-UnixListener\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.10.0\">1.10.0</span> · <a class=\"src\" href=\"../../../src/std/os/unix/net/listener.rs.html#332-337\">source</a></span><a href=\"#impl-IntoRawFd-for-UnixListener\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.IntoRawFd.html\" title=\"trait std::os::fd::IntoRawFd\">IntoRawFd</a> for <a class=\"struct\" href=\"../unix/net/struct.UnixListener.html\" title=\"struct std::os::unix::net::UnixListener\">UnixListener</a></h3><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>Unix</strong> only.</div></span></section><section id=\"impl-IntoRawFd-for-UnixStream\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.10.0\">1.10.0</span> · <a class=\"src\" href=\"../../../src/std/os/unix/net/stream.rs.html#669-674\">source</a></span><a href=\"#impl-IntoRawFd-for-UnixStream\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.IntoRawFd.html\" title=\"trait std::os::fd::IntoRawFd\">IntoRawFd</a> for <a class=\"struct\" href=\"../unix/net/struct.UnixStream.html\" title=\"struct std::os::unix::net::UnixStream\">UnixStream</a></h3><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>Unix</strong> only.</div></span></section><section id=\"impl-IntoRawFd-for-OwnedFd\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.63.0\">1.63.0</span> · <a class=\"src\" href=\"../../../src/std/os/fd/owned.rs.html#141-148\">source</a></span><a href=\"#impl-IntoRawFd-for-OwnedFd\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.IntoRawFd.html\" title=\"trait std::os::fd::IntoRawFd\">IntoRawFd</a> for <a class=\"struct\" href=\"struct.OwnedFd.html\" title=\"struct std::os::fd::OwnedFd\">OwnedFd</a></h3></section><section id=\"impl-IntoRawFd-for-i32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.48.0\">1.48.0</span> · <a class=\"src\" href=\"../../../src/std/os/fd/raw.rs.html#153-158\">source</a></span><a href=\"#impl-IntoRawFd-for-i32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.IntoRawFd.html\" title=\"trait std::os::fd::IntoRawFd\">IntoRawFd</a> for <a class=\"type\" href=\"type.RawFd.html\" title=\"type std::os::fd::RawFd\">RawFd</a></h3></section></div><script src=\"../../../trait.impl/std/os/fd/raw/trait.IntoRawFd.js\" async=\"\"></script></section></div></main></body></html>",
	"crawlDate": "2024-07-28T05:26:24.868Z"
}