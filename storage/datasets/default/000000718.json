{
	"title": "OwnedHandle in std::os::windows::io - Rust",
	"url": "https://doc.rust-lang.org/stable/std/os/windows/io/struct.OwnedHandle.html",
	"markdown": "# OwnedHandle in std::os::windows::io - Rust\n\n```\npub struct OwnedHandle { /* private fields */ }\n```\n\nAvailable on **Windows** only.\n\nExpand description\n\nAn owned handle.\n\nThis closes the handle on drop.\n\nNote that it _may_ have the value `-1`, which in `OwnedHandle` always represents a valid handle value, such as [the current process handle](https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-getcurrentprocess#remarks), and not `INVALID_HANDLE_VALUE`, despite the two having the same value. See [here](https://devblogs.microsoft.com/oldnewthing/20040302-00/?p=40443) for the full story.\n\nAnd, it _may_ have the value `NULL` (0), which can occur when consoles are detached from processes, or when `windows_subsystem` is used.\n\n`OwnedHandle` uses [`CloseHandle`](https://docs.microsoft.com/en-us/windows/win32/api/handleapi/nf-handleapi-closehandle) to close its handle on drop. As such, it must not be used with handles to open registry keys which need to be closed with [`RegCloseKey`](https://docs.microsoft.com/en-us/windows/win32/api/winreg/nf-winreg-regclosekey) instead.\n\n[source](about:blank/src/std/os/windows/io/handle.rs.html#188-195)[§](#impl-OwnedHandle)\n\n1.63.0 · [source](about:blank/src/std/os/windows/io/handle.rs.html#192-194)\n\nCreates a new `OwnedHandle` instance that shares the same underlying object as the existing `OwnedHandle` instance.\n\n1.63.0 · [source](about:blank/src/std/os/windows/io/handle.rs.html#511-519)[§](#impl-AsHandle-for-OwnedHandle)\n\n1.63.0 · [source](about:blank/src/std/os/windows/io/handle.rs.html#311-316)[§](#impl-AsRawHandle-for-OwnedHandle)\n\n1.63.0 · [source](about:blank/src/std/os/windows/io/handle.rs.html#407-411)[§](#impl-Debug-for-OwnedHandle)\n\n1.63.0 · [source](about:blank/src/std/os/windows/io/handle.rs.html#390-397)[§](#impl-Drop-for-OwnedHandle)\n\n1.63.0 · [source](about:blank/src/std/os/windows/process.rs.html#60-65)[§](#impl-From%3CChild%3E-for-OwnedHandle)\n\n1.63.0 · [source](about:blank/src/std/os/windows/io/handle.rs.html#638-644)[§](#impl-From%3CChildStderr%3E-for-OwnedHandle)\n\n1.63.0 · [source](about:blank/src/std/os/windows/io/handle.rs.html#604-610)[§](#impl-From%3CChildStdin%3E-for-OwnedHandle)\n\n1.63.0 · [source](about:blank/src/std/os/windows/io/handle.rs.html#621-627)[§](#impl-From%3CChildStdout%3E-for-OwnedHandle)\n\n1.63.0 · [source](about:blank/src/std/os/windows/io/handle.rs.html#530-536)[§](#impl-From%3CFile%3E-for-OwnedHandle)\n\n[source](about:blank/src/std/os/windows/io/handle.rs.html#533-535)[§](#method.from-8)\n\nTakes ownership of a [`File`](../../../fs/struct.File.html \"struct std::fs::File\")’s underlying file handle.\n\n1.63.0 · [source](about:blank/src/std/os/windows/io/handle.rs.html#655-660)[§](#impl-From%3CJoinHandle%3CT%3E%3E-for-OwnedHandle)\n\n[source](about:blank/src/std/os/windows/io/handle.rs.html#657-659)[§](#method.from-10)\n\nConverts to this type from the input type.\n\n1.74.0 · [source](about:blank/src/std/os/windows/process.rs.html#143-149)[§](#impl-From%3COwnedHandle%3E-for-ChildStderr)\n\nCreate a `ChildStderr` from the provided `OwnedHandle`.\n\nThe provided handle must be asynchronous, as reading and writing from and to it is implemented using asynchronous APIs.\n\n[source](about:blank/src/std/os/windows/process.rs.html#144-148)[§](#method.from-3)\n\nConverts to this type from the input type.\n\n1.74.0 · [source](about:blank/src/std/os/windows/process.rs.html#117-123)[§](#impl-From%3COwnedHandle%3E-for-ChildStdin)\n\nCreate a `ChildStdin` from the provided `OwnedHandle`.\n\nThe provided handle must be asynchronous, as reading and writing from and to it is implemented using asynchronous APIs.\n\n[source](about:blank/src/std/os/windows/process.rs.html#118-122)[§](#method.from-7)\n\nConverts to this type from the input type.\n\n1.74.0 · [source](about:blank/src/std/os/windows/process.rs.html#130-136)[§](#impl-From%3COwnedHandle%3E-for-ChildStdout)\n\nCreate a `ChildStdout` from the provided `OwnedHandle`.\n\nThe provided handle must be asynchronous, as reading and writing from and to it is implemented using asynchronous APIs.\n\n[source](about:blank/src/std/os/windows/process.rs.html#131-135)[§](#method.from-9)\n\nConverts to this type from the input type.\n\n1.63.0 · [source](about:blank/src/std/os/windows/io/handle.rs.html#539-545)[§](#impl-From%3COwnedHandle%3E-for-File)\n\n[source](about:blank/src/std/os/windows/io/handle.rs.html#542-544)[§](#method.from-5)\n\nReturns a [`File`](../../../fs/struct.File.html \"struct std::fs::File\") that takes ownership of the given handle.\n\n1.63.0 · [source](about:blank/src/std/os/windows/process.rs.html#26-34)[§](#impl-From%3COwnedHandle%3E-for-Stdio)\n\n[source](about:blank/src/std/os/windows/process.rs.html#29-33)[§](#method.from-2)\n\nTakes ownership of a handle and returns a [`Stdio`](../../../process/struct.Stdio.html \"struct std::process::Stdio\") that can attach a stream to it.\n\n1.63.0 · [source](about:blank/src/std/os/windows/io/handle.rs.html#329-334)[§](#impl-FromRawHandle-for-OwnedHandle)\n\n1.63.0 · [source](about:blank/src/std/os/windows/io/handle.rs.html#319-326)[§](#impl-IntoRawHandle-for-OwnedHandle)\n\n1.70.0 · [source](about:blank/src/std/os/windows/io/handle.rs.html#428)[§](#impl-IsTerminal-for-OwnedHandle)\n\n[source](about:blank/src/std/os/windows/io/handle.rs.html#428)[§](#method.is_terminal)\n\nReturns `true` if the descriptor/handle refers to a terminal/tty. [Read more](about:blank/io/trait.IsTerminal.html#tymethod.is_terminal)\n\n1.63.0 · [source](about:blank/src/std/os/windows/io/handle.rs.html#239-252)[§](#impl-TryFrom%3CHandleOrInvalid%3E-for-OwnedHandle)\n\n[§](#associatedtype.Error)\n\nThe type returned in the event of a conversion error.\n\n[source](about:blank/src/std/os/windows/io/handle.rs.html#243-251)[§](#method.try_from)\n\nPerforms the conversion.\n\n1.63.0 · [source](about:blank/src/std/os/windows/io/handle.rs.html#161-174)[§](#impl-TryFrom%3CHandleOrNull%3E-for-OwnedHandle)\n\n[§](#associatedtype.Error-1)\n\nThe type returned in the event of a conversion error.\n\n[source](about:blank/src/std/os/windows/io/handle.rs.html#165-173)[§](#method.try_from-1)\n\nPerforms the conversion.\n\n1.63.0 · [source](about:blank/src/std/os/windows/io/handle.rs.html#121)[§](#impl-Send-for-OwnedHandle)\n\n1.63.0 · [source](about:blank/src/std/os/windows/io/handle.rs.html#129)[§](#impl-Sync-for-OwnedHandle)\n\n[§](#impl-Freeze-for-OwnedHandle)\n\n[§](#impl-RefUnwindSafe-for-OwnedHandle)\n\n[§](#impl-Unpin-for-OwnedHandle)\n\n[§](#impl-UnwindSafe-for-OwnedHandle)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/any.rs.html#140)[§](#impl-Any-for-T)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/borrow.rs.html#208)[§](#impl-Borrow%3CT%3E-for-T)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/borrow.rs.html#216)[§](#impl-BorrowMut%3CT%3E-for-T)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#765)[§](#impl-From%3CT%3E-for-T)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#768)[§](#method.from-11)\n\nReturns the argument unchanged.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#748-750)[§](#impl-Into%3CU%3E-for-T)\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#758)[§](#method.into)\n\nCalls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of `[From](../../../convert/trait.From.html \"trait std::convert::From\")<T> for U` chooses to do.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#805-807)[§](#impl-TryFrom%3CU%3E-for-T)\n\n[§](#associatedtype.Error-3)\n\nThe type returned in the event of a conversion error.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#812)[§](#method.try_from-2)\n\nPerforms the conversion.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#790-792)[§](#impl-TryInto%3CU%3E-for-T)\n\n[§](#associatedtype.Error-2)\n\nThe type returned in the event of a conversion error.\n\n[source](https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#797)[§](#method.try_into)\n\nPerforms the conversion.",
	"html": "<!DOCTYPE html><html lang=\"en\" data-theme=\"light\"><head><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><meta name=\"generator\" content=\"rustdoc\"><meta name=\"description\" content=\"An owned handle.\"><title>OwnedHandle in std::os::windows::io - Rust</title><script>if(window.location.protocol!==\"file:\")document.head.insertAdjacentHTML(\"beforeend\",\"SourceSerif4-Regular-46f98efaafac5295.ttf.woff2,FiraSans-Regular-018c141bf0843ffd.woff2,FiraSans-Medium-8f9a781e4970d388.woff2,SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2,SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\".split(\",\").map(f=>`<link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin href=\"../../../../static.files/${f}\">`).join(\"\"))</script><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../../../static.files/SourceSerif4-Regular-46f98efaafac5295.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../../../static.files/FiraSans-Regular-018c141bf0843ffd.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../../../static.files/FiraSans-Medium-8f9a781e4970d388.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../../../static.files/SourceCodePro-Regular-562dcc5011b6de7d.ttf.woff2\"><link rel=\"preload\" as=\"font\" type=\"font/woff2\" crossorigin=\"\" href=\"../../../../static.files/SourceCodePro-Semibold-d899c5a5c4aeb14a.ttf.woff2\"><link rel=\"stylesheet\" href=\"../../../../static.files/normalize-76eba96aa4d2e634.css\"><link rel=\"stylesheet\" href=\"../../../../static.files/rustdoc-dd39b87e5fcfba68.css\"><meta name=\"rustdoc-vars\" data-root-path=\"../../../../\" data-static-root-path=\"../../../../static.files/\" data-current-crate=\"std\" data-themes=\"\" data-resource-suffix=\"1.80.0\" data-rustdoc-version=\"1.80.0 (051478957 2024-07-21)\" data-channel=\"1.80.0\" data-search-js=\"search-d52510db62a78183.js\" data-settings-js=\"settings-4313503d2e1961c2.js\"><script src=\"../../../../static.files/storage-118b08c4c78b968e.js\"></script><script defer=\"\" src=\"sidebar-items1.80.0.js\"></script><script defer=\"\" src=\"../../../../static.files/main-20a3ad099b048cf2.js\"></script><noscript><link rel=\"stylesheet\" href=\"../../../../static.files/noscript-df360f571f6edeae.css\"></noscript><link rel=\"alternate icon\" type=\"image/png\" href=\"../../../../static.files/favicon-32x32-422f7d1d52889060.png\"><link rel=\"icon\" type=\"image/svg+xml\" href=\"../../../../static.files/favicon-2c020d218678b618.svg\"></head><body class=\"rustdoc struct\"><!--[if lte IE 11]><div class=\"warning\">This old browser is unsupported and will most likely display funky things.</div><![endif]--><nav class=\"mobile-topbar\"><button class=\"sidebar-menu-toggle\" title=\"show sidebar\"></button><a class=\"logo-container\" href=\"../../../../std/index.html\"><img class=\"rust-logo\" src=\"../../../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"\"></a><h2 class=\"location\"><a href=\"#\">OwnedHandle</a></h2></nav><nav class=\"sidebar\"><div class=\"sidebar-crate\"><a class=\"logo-container\" href=\"../../../../std/index.html\"><img class=\"rust-logo\" src=\"../../../../static.files/rust-logo-151179464ae7ed46.svg\" alt=\"logo\"></a><h2><a href=\"../../../../std/index.html\">std</a><span class=\"version\">1.80.0</span></h2></div><div class=\"version\">(051478957\t2024-07-21)</div><h2 class=\"location\"><a href=\"#\">OwnedHandle</a></h2><div class=\"sidebar-elems\"><section><h3><a href=\"#implementations\">Methods</a></h3><ul class=\"block method\"><li><a href=\"#method.try_clone\">try_clone</a></li></ul><h3><a href=\"#trait-implementations\">Trait Implementations</a></h3><ul class=\"block trait-implementation\"><li><a href=\"#impl-AsHandle-for-OwnedHandle\">AsHandle</a></li><li><a href=\"#impl-AsRawHandle-for-OwnedHandle\">AsRawHandle</a></li><li><a href=\"#impl-Debug-for-OwnedHandle\">Debug</a></li><li><a href=\"#impl-Drop-for-OwnedHandle\">Drop</a></li><li><a href=\"#impl-From%3CChild%3E-for-OwnedHandle\">From&lt;Child&gt;</a></li><li><a href=\"#impl-From%3CChildStderr%3E-for-OwnedHandle\">From&lt;ChildStderr&gt;</a></li><li><a href=\"#impl-From%3CChildStdin%3E-for-OwnedHandle\">From&lt;ChildStdin&gt;</a></li><li><a href=\"#impl-From%3CChildStdout%3E-for-OwnedHandle\">From&lt;ChildStdout&gt;</a></li><li><a href=\"#impl-From%3CFile%3E-for-OwnedHandle\">From&lt;File&gt;</a></li><li><a href=\"#impl-From%3CJoinHandle%3CT%3E%3E-for-OwnedHandle\">From&lt;JoinHandle&lt;T&gt;&gt;</a></li><li><a href=\"#impl-From%3COwnedHandle%3E-for-ChildStderr\">From&lt;OwnedHandle&gt;</a></li><li><a href=\"#impl-From%3COwnedHandle%3E-for-ChildStdin\">From&lt;OwnedHandle&gt;</a></li><li><a href=\"#impl-From%3COwnedHandle%3E-for-ChildStdout\">From&lt;OwnedHandle&gt;</a></li><li><a href=\"#impl-From%3COwnedHandle%3E-for-File\">From&lt;OwnedHandle&gt;</a></li><li><a href=\"#impl-From%3COwnedHandle%3E-for-Stdio\">From&lt;OwnedHandle&gt;</a></li><li><a href=\"#impl-FromRawHandle-for-OwnedHandle\">FromRawHandle</a></li><li><a href=\"#impl-IntoRawHandle-for-OwnedHandle\">IntoRawHandle</a></li><li><a href=\"#impl-IsTerminal-for-OwnedHandle\">IsTerminal</a></li><li><a href=\"#impl-Send-for-OwnedHandle\">Send</a></li><li><a href=\"#impl-Sync-for-OwnedHandle\">Sync</a></li><li><a href=\"#impl-TryFrom%3CHandleOrInvalid%3E-for-OwnedHandle\">TryFrom&lt;HandleOrInvalid&gt;</a></li><li><a href=\"#impl-TryFrom%3CHandleOrNull%3E-for-OwnedHandle\">TryFrom&lt;HandleOrNull&gt;</a></li></ul><h3><a href=\"#synthetic-implementations\">Auto Trait Implementations</a></h3><ul class=\"block synthetic-implementation\"><li><a href=\"#impl-Freeze-for-OwnedHandle\">Freeze</a></li><li><a href=\"#impl-RefUnwindSafe-for-OwnedHandle\">RefUnwindSafe</a></li><li><a href=\"#impl-Unpin-for-OwnedHandle\">Unpin</a></li><li><a href=\"#impl-UnwindSafe-for-OwnedHandle\">UnwindSafe</a></li></ul><h3><a href=\"#blanket-implementations\">Blanket Implementations</a></h3><ul class=\"block blanket-implementation\"><li><a href=\"#impl-Any-for-T\">Any</a></li><li><a href=\"#impl-Borrow%3CT%3E-for-T\">Borrow&lt;T&gt;</a></li><li><a href=\"#impl-BorrowMut%3CT%3E-for-T\">BorrowMut&lt;T&gt;</a></li><li><a href=\"#impl-From%3CT%3E-for-T\">From&lt;T&gt;</a></li><li><a href=\"#impl-Into%3CU%3E-for-T\">Into&lt;U&gt;</a></li><li><a href=\"#impl-TryFrom%3CU%3E-for-T\">TryFrom&lt;U&gt;</a></li><li><a href=\"#impl-TryInto%3CU%3E-for-T\">TryInto&lt;U&gt;</a></li></ul></section><h2><a href=\"index.html\">In std::os::windows::io</a></h2><h3><a href=\"index.html#structs\">Structs</a></h3><ul class=\"block struct\"><li><a href=\"struct.BorrowedHandle.html\">BorrowedHandle</a></li><li><a href=\"struct.BorrowedSocket.html\">BorrowedSocket</a></li><li><a href=\"struct.HandleOrInvalid.html\">HandleOrInvalid</a></li><li><a href=\"struct.HandleOrNull.html\">HandleOrNull</a></li><li><a href=\"struct.InvalidHandleError.html\">InvalidHandleError</a></li><li><a href=\"struct.NullHandleError.html\">NullHandleError</a></li><li><a href=\"struct.OwnedHandle.html\">OwnedHandle</a></li><li><a href=\"struct.OwnedSocket.html\">OwnedSocket</a></li></ul><h3><a href=\"index.html#traits\">Traits</a></h3><ul class=\"block trait\"><li><a href=\"trait.AsHandle.html\">AsHandle</a></li><li><a href=\"trait.AsRawHandle.html\">AsRawHandle</a></li><li><a href=\"trait.AsRawSocket.html\">AsRawSocket</a></li><li><a href=\"trait.AsSocket.html\">AsSocket</a></li><li><a href=\"trait.FromRawHandle.html\">FromRawHandle</a></li><li><a href=\"trait.FromRawSocket.html\">FromRawSocket</a></li><li><a href=\"trait.IntoRawHandle.html\">IntoRawHandle</a></li><li><a href=\"trait.IntoRawSocket.html\">IntoRawSocket</a></li></ul><h3><a href=\"index.html#types\">Type Aliases</a></h3><ul class=\"block type\"><li><a href=\"type.RawHandle.html\">RawHandle</a></li><li><a href=\"type.RawSocket.html\">RawSocket</a></li></ul></div></nav><div class=\"sidebar-resizer\"></div><main><div class=\"width-limiter\"><rustdoc-search><nav class=\"sub\">\n            <form class=\"search-form\">\n                <span></span> <!-- This empty span is a hacky fix for Safari - See #93184 -->\n                <div id=\"sidebar-button\" tabindex=\"-1\">\n                    <a href=\"../../../../std/all.html\" title=\"show sidebar\"></a>\n                </div>\n                <input class=\"search-input\" name=\"search\" aria-label=\"Run search in the documentation\" autocomplete=\"off\" spellcheck=\"false\" placeholder=\"Type ‘S’ or ‘/’ to search, ‘?’ for more options…\" type=\"search\">\n                <div id=\"help-button\" tabindex=\"-1\">\n                    <a href=\"../../../../help.html\" title=\"help\">?</a>\n                </div>\n                <div id=\"settings-menu\" tabindex=\"-1\">\n                    <a href=\"../../../../settings.html\" title=\"settings\">\n                        Settings\n                    </a>\n                </div>\n            </form>\n        </nav></rustdoc-search><section id=\"main-content\" class=\"content\"><div class=\"main-heading\"><h1>Struct <a href=\"../../../index.html\">std</a>::<wbr><a href=\"../../index.html\">os</a>::<wbr><a href=\"../index.html\">windows</a>::<wbr><a href=\"index.html\">io</a>::<wbr><a class=\"struct\" href=\"#\">OwnedHandle</a><button id=\"copy-path\" title=\"Copy item path to clipboard\">Copy item path</button></h1><span class=\"out-of-band\"><span class=\"since\" title=\"Stable since Rust version 1.63.0\">1.63.0</span> · <a class=\"src\" href=\"../../../../src/std/os/windows/io/handle.rs.html#70-72\">source</a> · <button id=\"toggle-all-docs\" title=\"collapse all docs\">[<span>−</span>]</button></span></div><pre class=\"rust item-decl\"><code>pub struct OwnedHandle { <span class=\"comment\">/* private fields */</span> }</code></pre><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>Windows</strong> only.</div></span><details class=\"toggle top-doc\" open=\"\"><summary class=\"hideme\"><span>Expand description</span></summary><div class=\"docblock\"><p>An owned handle.</p>\n<p>This closes the handle on drop.</p>\n<p>Note that it <em>may</em> have the value <code>-1</code>, which in <code>OwnedHandle</code> always\nrepresents a valid handle value, such as <a href=\"https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-getcurrentprocess#remarks\">the current process handle</a>, and\nnot <code>INVALID_HANDLE_VALUE</code>, despite the two having the same value. See\n<a href=\"https://devblogs.microsoft.com/oldnewthing/20040302-00/?p=40443\">here</a> for the full story.</p>\n<p>And, it <em>may</em> have the value <code>NULL</code> (0), which can occur when consoles are\ndetached from processes, or when <code>windows_subsystem</code> is used.</p>\n<p><code>OwnedHandle</code> uses <a href=\"https://docs.microsoft.com/en-us/windows/win32/api/handleapi/nf-handleapi-closehandle\"><code>CloseHandle</code></a> to close its handle on drop. As such,\nit must not be used with handles to open registry keys which need to be\nclosed with <a href=\"https://docs.microsoft.com/en-us/windows/win32/api/winreg/nf-winreg-regclosekey\"><code>RegCloseKey</code></a> instead.</p>\n</div></details><h2 id=\"implementations\" class=\"section-header\">Implementations<a href=\"#implementations\" class=\"anchor\">§</a></h2><div id=\"implementations-list\"><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-OwnedHandle\" class=\"impl\"><a class=\"src rightside\" href=\"../../../../src/std/os/windows/io/handle.rs.html#188-195\">source</a><a href=\"#impl-OwnedHandle\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"struct.OwnedHandle.html\" title=\"struct std::os::windows::io::OwnedHandle\">OwnedHandle</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.try_clone\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.63.0\">1.63.0</span> · <a class=\"src\" href=\"../../../../src/std/os/windows/io/handle.rs.html#192-194\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"#method.try_clone\" class=\"fn\">try_clone</a>(&amp;self) -&gt; <a class=\"type\" href=\"../../../io/type.Result.html\" title=\"type std::io::Result\">Result</a>&lt;Self&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a new <code>OwnedHandle</code> instance that shares the same underlying\nobject as the existing <code>OwnedHandle</code> instance.</p>\n</div></details></div></details></div><h2 id=\"trait-implementations\" class=\"section-header\">Trait Implementations<a href=\"#trait-implementations\" class=\"anchor\">§</a></h2><div id=\"trait-implementations-list\"><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-AsHandle-for-OwnedHandle\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.63.0\">1.63.0</span> · <a class=\"src\" href=\"../../../../src/std/os/windows/io/handle.rs.html#511-519\">source</a></span><a href=\"#impl-AsHandle-for-OwnedHandle\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.AsHandle.html\" title=\"trait std::os::windows::io::AsHandle\">AsHandle</a> for <a class=\"struct\" href=\"struct.OwnedHandle.html\" title=\"struct std::os::windows::io::OwnedHandle\">OwnedHandle</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.as_handle\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"../../../../src/std/os/windows/io/handle.rs.html#513-518\">source</a><a href=\"#method.as_handle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"trait.AsHandle.html#tymethod.as_handle\" class=\"fn\">as_handle</a>(&amp;self) -&gt; <a class=\"struct\" href=\"struct.BorrowedHandle.html\" title=\"struct std::os::windows::io::BorrowedHandle\">BorrowedHandle</a>&lt;'_&gt;</h4></section></summary><div class=\"docblock\">Borrows the handle. <a href=\"trait.AsHandle.html#tymethod.as_handle\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-AsRawHandle-for-OwnedHandle\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.63.0\">1.63.0</span> · <a class=\"src\" href=\"../../../../src/std/os/windows/io/handle.rs.html#311-316\">source</a></span><a href=\"#impl-AsRawHandle-for-OwnedHandle\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.AsRawHandle.html\" title=\"trait std::os::windows::io::AsRawHandle\">AsRawHandle</a> for <a class=\"struct\" href=\"struct.OwnedHandle.html\" title=\"struct std::os::windows::io::OwnedHandle\">OwnedHandle</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.as_raw_handle\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"../../../../src/std/os/windows/io/handle.rs.html#313-315\">source</a><a href=\"#method.as_raw_handle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"trait.AsRawHandle.html#tymethod.as_raw_handle\" class=\"fn\">as_raw_handle</a>(&amp;self) -&gt; <a class=\"type\" href=\"type.RawHandle.html\" title=\"type std::os::windows::io::RawHandle\">RawHandle</a></h4></section></summary><div class=\"docblock\">Extracts the raw handle. <a href=\"trait.AsRawHandle.html#tymethod.as_raw_handle\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-Debug-for-OwnedHandle\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.63.0\">1.63.0</span> · <a class=\"src\" href=\"../../../../src/std/os/windows/io/handle.rs.html#407-411\">source</a></span><a href=\"#impl-Debug-for-OwnedHandle\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"../../../fmt/trait.Debug.html\" title=\"trait std::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"struct.OwnedHandle.html\" title=\"struct std::os::windows::io::OwnedHandle\">OwnedHandle</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"../../../../src/std/os/windows/io/handle.rs.html#408-410\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"../../../fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"../../../fmt/struct.Formatter.html\" title=\"struct std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"../../../fmt/type.Result.html\" title=\"type std::fmt::Result\">Result</a></h4></section></summary><div class=\"docblock\">Formats the value using the given formatter. <a href=\"../../../fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-Drop-for-OwnedHandle\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.63.0\">1.63.0</span> · <a class=\"src\" href=\"../../../../src/std/os/windows/io/handle.rs.html#390-397\">source</a></span><a href=\"#impl-Drop-for-OwnedHandle\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"../../../ops/trait.Drop.html\" title=\"trait std::ops::Drop\">Drop</a> for <a class=\"struct\" href=\"struct.OwnedHandle.html\" title=\"struct std::os::windows::io::OwnedHandle\">OwnedHandle</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.drop\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"../../../../src/std/os/windows/io/handle.rs.html#392-396\">source</a><a href=\"#method.drop\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"../../../ops/trait.Drop.html#tymethod.drop\" class=\"fn\">drop</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\">Executes the destructor for this type. <a href=\"../../../ops/trait.Drop.html#tymethod.drop\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-From%3CChild%3E-for-OwnedHandle\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.63.0\">1.63.0</span> · <a class=\"src\" href=\"../../../../src/std/os/windows/process.rs.html#60-65\">source</a></span><a href=\"#impl-From%3CChild%3E-for-OwnedHandle\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"../../../convert/trait.From.html\" title=\"trait std::convert::From\">From</a>&lt;<a class=\"struct\" href=\"../../../process/struct.Child.html\" title=\"struct std::process::Child\">Child</a>&gt; for <a class=\"struct\" href=\"struct.OwnedHandle.html\" title=\"struct std::os::windows::io::OwnedHandle\">OwnedHandle</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"../../../../src/std/os/windows/process.rs.html#62-64\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"../../../convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(child: <a class=\"struct\" href=\"../../../process/struct.Child.html\" title=\"struct std::process::Child\">Child</a>) -&gt; <a class=\"struct\" href=\"struct.OwnedHandle.html\" title=\"struct std::os::windows::io::OwnedHandle\">OwnedHandle</a></h4></section></summary><div class=\"docblock\"><p>Takes ownership of a <a href=\"../../../process/struct.Child.html\" title=\"struct std::process::Child\"><code>Child</code></a>’s process handle.</p>\n</div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-From%3CChildStderr%3E-for-OwnedHandle\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.63.0\">1.63.0</span> · <a class=\"src\" href=\"../../../../src/std/os/windows/io/handle.rs.html#638-644\">source</a></span><a href=\"#impl-From%3CChildStderr%3E-for-OwnedHandle\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"../../../convert/trait.From.html\" title=\"trait std::convert::From\">From</a>&lt;<a class=\"struct\" href=\"../../../process/struct.ChildStderr.html\" title=\"struct std::process::ChildStderr\">ChildStderr</a>&gt; for <a class=\"struct\" href=\"struct.OwnedHandle.html\" title=\"struct std::os::windows::io::OwnedHandle\">OwnedHandle</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.from-4\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"../../../../src/std/os/windows/io/handle.rs.html#641-643\">source</a><a href=\"#method.from-4\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"../../../convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(child_stderr: <a class=\"struct\" href=\"../../../process/struct.ChildStderr.html\" title=\"struct std::process::ChildStderr\">ChildStderr</a>) -&gt; <a class=\"struct\" href=\"struct.OwnedHandle.html\" title=\"struct std::os::windows::io::OwnedHandle\">OwnedHandle</a></h4></section></summary><div class=\"docblock\"><p>Takes ownership of a <a href=\"../../../process/struct.ChildStderr.html\" title=\"struct std::process::ChildStderr\"><code>ChildStderr</code></a>’s file handle.</p>\n</div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-From%3CChildStdin%3E-for-OwnedHandle\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.63.0\">1.63.0</span> · <a class=\"src\" href=\"../../../../src/std/os/windows/io/handle.rs.html#604-610\">source</a></span><a href=\"#impl-From%3CChildStdin%3E-for-OwnedHandle\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"../../../convert/trait.From.html\" title=\"trait std::convert::From\">From</a>&lt;<a class=\"struct\" href=\"../../../process/struct.ChildStdin.html\" title=\"struct std::process::ChildStdin\">ChildStdin</a>&gt; for <a class=\"struct\" href=\"struct.OwnedHandle.html\" title=\"struct std::os::windows::io::OwnedHandle\">OwnedHandle</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.from-1\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"../../../../src/std/os/windows/io/handle.rs.html#607-609\">source</a><a href=\"#method.from-1\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"../../../convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(child_stdin: <a class=\"struct\" href=\"../../../process/struct.ChildStdin.html\" title=\"struct std::process::ChildStdin\">ChildStdin</a>) -&gt; <a class=\"struct\" href=\"struct.OwnedHandle.html\" title=\"struct std::os::windows::io::OwnedHandle\">OwnedHandle</a></h4></section></summary><div class=\"docblock\"><p>Takes ownership of a <a href=\"../../../process/struct.ChildStdin.html\" title=\"struct std::process::ChildStdin\"><code>ChildStdin</code></a>’s file handle.</p>\n</div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-From%3CChildStdout%3E-for-OwnedHandle\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.63.0\">1.63.0</span> · <a class=\"src\" href=\"../../../../src/std/os/windows/io/handle.rs.html#621-627\">source</a></span><a href=\"#impl-From%3CChildStdout%3E-for-OwnedHandle\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"../../../convert/trait.From.html\" title=\"trait std::convert::From\">From</a>&lt;<a class=\"struct\" href=\"../../../process/struct.ChildStdout.html\" title=\"struct std::process::ChildStdout\">ChildStdout</a>&gt; for <a class=\"struct\" href=\"struct.OwnedHandle.html\" title=\"struct std::os::windows::io::OwnedHandle\">OwnedHandle</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.from-6\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"../../../../src/std/os/windows/io/handle.rs.html#624-626\">source</a><a href=\"#method.from-6\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"../../../convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(child_stdout: <a class=\"struct\" href=\"../../../process/struct.ChildStdout.html\" title=\"struct std::process::ChildStdout\">ChildStdout</a>) -&gt; <a class=\"struct\" href=\"struct.OwnedHandle.html\" title=\"struct std::os::windows::io::OwnedHandle\">OwnedHandle</a></h4></section></summary><div class=\"docblock\"><p>Takes ownership of a <a href=\"../../../process/struct.ChildStdout.html\" title=\"struct std::process::ChildStdout\"><code>ChildStdout</code></a>’s file handle.</p>\n</div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-From%3CFile%3E-for-OwnedHandle\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.63.0\">1.63.0</span> · <a class=\"src\" href=\"../../../../src/std/os/windows/io/handle.rs.html#530-536\">source</a></span><a href=\"#impl-From%3CFile%3E-for-OwnedHandle\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"../../../convert/trait.From.html\" title=\"trait std::convert::From\">From</a>&lt;<a class=\"struct\" href=\"../../../fs/struct.File.html\" title=\"struct std::fs::File\">File</a>&gt; for <a class=\"struct\" href=\"struct.OwnedHandle.html\" title=\"struct std::os::windows::io::OwnedHandle\">OwnedHandle</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.from-8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"../../../../src/std/os/windows/io/handle.rs.html#533-535\">source</a><a href=\"#method.from-8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"../../../convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(file: <a class=\"struct\" href=\"../../../fs/struct.File.html\" title=\"struct std::fs::File\">File</a>) -&gt; <a class=\"struct\" href=\"struct.OwnedHandle.html\" title=\"struct std::os::windows::io::OwnedHandle\">OwnedHandle</a></h4></section></summary><div class=\"docblock\"><p>Takes ownership of a <a href=\"../../../fs/struct.File.html\" title=\"struct std::fs::File\"><code>File</code></a>’s underlying file handle.</p>\n</div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-From%3CJoinHandle%3CT%3E%3E-for-OwnedHandle\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.63.0\">1.63.0</span> · <a class=\"src\" href=\"../../../../src/std/os/windows/io/handle.rs.html#655-660\">source</a></span><a href=\"#impl-From%3CJoinHandle%3CT%3E%3E-for-OwnedHandle\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"../../../convert/trait.From.html\" title=\"trait std::convert::From\">From</a>&lt;<a class=\"struct\" href=\"../../../thread/struct.JoinHandle.html\" title=\"struct std::thread::JoinHandle\">JoinHandle</a>&lt;T&gt;&gt; for <a class=\"struct\" href=\"struct.OwnedHandle.html\" title=\"struct std::os::windows::io::OwnedHandle\">OwnedHandle</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.from-10\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"../../../../src/std/os/windows/io/handle.rs.html#657-659\">source</a><a href=\"#method.from-10\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"../../../convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(join_handle: <a class=\"struct\" href=\"../../../thread/struct.JoinHandle.html\" title=\"struct std::thread::JoinHandle\">JoinHandle</a>&lt;T&gt;) -&gt; <a class=\"struct\" href=\"struct.OwnedHandle.html\" title=\"struct std::os::windows::io::OwnedHandle\">OwnedHandle</a></h4></section></summary><div class=\"docblock\">Converts to this type from the input type.</div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-From%3COwnedHandle%3E-for-ChildStderr\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.74.0\">1.74.0</span> · <a class=\"src\" href=\"../../../../src/std/os/windows/process.rs.html#143-149\">source</a></span><a href=\"#impl-From%3COwnedHandle%3E-for-ChildStderr\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"../../../convert/trait.From.html\" title=\"trait std::convert::From\">From</a>&lt;<a class=\"struct\" href=\"struct.OwnedHandle.html\" title=\"struct std::os::windows::io::OwnedHandle\">OwnedHandle</a>&gt; for <a class=\"struct\" href=\"../../../process/struct.ChildStderr.html\" title=\"struct std::process::ChildStderr\">ChildStderr</a></h3></section></summary><div class=\"docblock\"><p>Create a <code>ChildStderr</code> from the provided <code>OwnedHandle</code>.</p>\n<p>The provided handle must be asynchronous, as reading and\nwriting from and to it is implemented using asynchronous APIs.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.from-3\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"../../../../src/std/os/windows/process.rs.html#144-148\">source</a><a href=\"#method.from-3\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"../../../convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(handle: <a class=\"struct\" href=\"struct.OwnedHandle.html\" title=\"struct std::os::windows::io::OwnedHandle\">OwnedHandle</a>) -&gt; <a class=\"struct\" href=\"../../../process/struct.ChildStderr.html\" title=\"struct std::process::ChildStderr\">ChildStderr</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"ChildStderr\">ⓘ</a></h4></section></summary><div class=\"docblock\">Converts to this type from the input type.</div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-From%3COwnedHandle%3E-for-ChildStdin\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.74.0\">1.74.0</span> · <a class=\"src\" href=\"../../../../src/std/os/windows/process.rs.html#117-123\">source</a></span><a href=\"#impl-From%3COwnedHandle%3E-for-ChildStdin\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"../../../convert/trait.From.html\" title=\"trait std::convert::From\">From</a>&lt;<a class=\"struct\" href=\"struct.OwnedHandle.html\" title=\"struct std::os::windows::io::OwnedHandle\">OwnedHandle</a>&gt; for <a class=\"struct\" href=\"../../../process/struct.ChildStdin.html\" title=\"struct std::process::ChildStdin\">ChildStdin</a></h3></section></summary><div class=\"docblock\"><p>Create a <code>ChildStdin</code> from the provided <code>OwnedHandle</code>.</p>\n<p>The provided handle must be asynchronous, as reading and\nwriting from and to it is implemented using asynchronous APIs.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.from-7\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"../../../../src/std/os/windows/process.rs.html#118-122\">source</a><a href=\"#method.from-7\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"../../../convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(handle: <a class=\"struct\" href=\"struct.OwnedHandle.html\" title=\"struct std::os::windows::io::OwnedHandle\">OwnedHandle</a>) -&gt; <a class=\"struct\" href=\"../../../process/struct.ChildStdin.html\" title=\"struct std::process::ChildStdin\">ChildStdin</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"ChildStdin\">ⓘ</a></h4></section></summary><div class=\"docblock\">Converts to this type from the input type.</div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-From%3COwnedHandle%3E-for-ChildStdout\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.74.0\">1.74.0</span> · <a class=\"src\" href=\"../../../../src/std/os/windows/process.rs.html#130-136\">source</a></span><a href=\"#impl-From%3COwnedHandle%3E-for-ChildStdout\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"../../../convert/trait.From.html\" title=\"trait std::convert::From\">From</a>&lt;<a class=\"struct\" href=\"struct.OwnedHandle.html\" title=\"struct std::os::windows::io::OwnedHandle\">OwnedHandle</a>&gt; for <a class=\"struct\" href=\"../../../process/struct.ChildStdout.html\" title=\"struct std::process::ChildStdout\">ChildStdout</a></h3></section></summary><div class=\"docblock\"><p>Create a <code>ChildStdout</code> from the provided <code>OwnedHandle</code>.</p>\n<p>The provided handle must be asynchronous, as reading and\nwriting from and to it is implemented using asynchronous APIs.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.from-9\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"../../../../src/std/os/windows/process.rs.html#131-135\">source</a><a href=\"#method.from-9\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"../../../convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(handle: <a class=\"struct\" href=\"struct.OwnedHandle.html\" title=\"struct std::os::windows::io::OwnedHandle\">OwnedHandle</a>) -&gt; <a class=\"struct\" href=\"../../../process/struct.ChildStdout.html\" title=\"struct std::process::ChildStdout\">ChildStdout</a> <a href=\"#\" class=\"tooltip\" data-notable-ty=\"ChildStdout\">ⓘ</a></h4></section></summary><div class=\"docblock\">Converts to this type from the input type.</div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-From%3COwnedHandle%3E-for-File\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.63.0\">1.63.0</span> · <a class=\"src\" href=\"../../../../src/std/os/windows/io/handle.rs.html#539-545\">source</a></span><a href=\"#impl-From%3COwnedHandle%3E-for-File\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"../../../convert/trait.From.html\" title=\"trait std::convert::From\">From</a>&lt;<a class=\"struct\" href=\"struct.OwnedHandle.html\" title=\"struct std::os::windows::io::OwnedHandle\">OwnedHandle</a>&gt; for <a class=\"struct\" href=\"../../../fs/struct.File.html\" title=\"struct std::fs::File\">File</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.from-5\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"../../../../src/std/os/windows/io/handle.rs.html#542-544\">source</a><a href=\"#method.from-5\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"../../../convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(owned: <a class=\"struct\" href=\"struct.OwnedHandle.html\" title=\"struct std::os::windows::io::OwnedHandle\">OwnedHandle</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Returns a <a href=\"../../../fs/struct.File.html\" title=\"struct std::fs::File\"><code>File</code></a> that takes ownership of the given handle.</p>\n</div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-From%3COwnedHandle%3E-for-Stdio\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.63.0\">1.63.0</span> · <a class=\"src\" href=\"../../../../src/std/os/windows/process.rs.html#26-34\">source</a></span><a href=\"#impl-From%3COwnedHandle%3E-for-Stdio\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"../../../convert/trait.From.html\" title=\"trait std::convert::From\">From</a>&lt;<a class=\"struct\" href=\"struct.OwnedHandle.html\" title=\"struct std::os::windows::io::OwnedHandle\">OwnedHandle</a>&gt; for <a class=\"struct\" href=\"../../../process/struct.Stdio.html\" title=\"struct std::process::Stdio\">Stdio</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.from-2\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"../../../../src/std/os/windows/process.rs.html#29-33\">source</a><a href=\"#method.from-2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"../../../convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(handle: <a class=\"struct\" href=\"struct.OwnedHandle.html\" title=\"struct std::os::windows::io::OwnedHandle\">OwnedHandle</a>) -&gt; <a class=\"struct\" href=\"../../../process/struct.Stdio.html\" title=\"struct std::process::Stdio\">Stdio</a></h4></section></summary><div class=\"docblock\"><p>Takes ownership of a handle and returns a <a href=\"../../../process/struct.Stdio.html\" title=\"struct std::process::Stdio\"><code>Stdio</code></a>\nthat can attach a stream to it.</p>\n</div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-FromRawHandle-for-OwnedHandle\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.63.0\">1.63.0</span> · <a class=\"src\" href=\"../../../../src/std/os/windows/io/handle.rs.html#329-334\">source</a></span><a href=\"#impl-FromRawHandle-for-OwnedHandle\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.FromRawHandle.html\" title=\"trait std::os::windows::io::FromRawHandle\">FromRawHandle</a> for <a class=\"struct\" href=\"struct.OwnedHandle.html\" title=\"struct std::os::windows::io::OwnedHandle\">OwnedHandle</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.from_raw_handle\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"../../../../src/std/os/windows/io/handle.rs.html#331-333\">source</a><a href=\"#method.from_raw_handle\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"trait.FromRawHandle.html#tymethod.from_raw_handle\" class=\"fn\">from_raw_handle</a>(handle: <a class=\"type\" href=\"type.RawHandle.html\" title=\"type std::os::windows::io::RawHandle\">RawHandle</a>) -&gt; Self</h4></section></summary><div class=\"docblock\">Constructs a new I/O object from the specified raw handle. <a href=\"trait.FromRawHandle.html#tymethod.from_raw_handle\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-IntoRawHandle-for-OwnedHandle\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.63.0\">1.63.0</span> · <a class=\"src\" href=\"../../../../src/std/os/windows/io/handle.rs.html#319-326\">source</a></span><a href=\"#impl-IntoRawHandle-for-OwnedHandle\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"trait.IntoRawHandle.html\" title=\"trait std::os::windows::io::IntoRawHandle\">IntoRawHandle</a> for <a class=\"struct\" href=\"struct.OwnedHandle.html\" title=\"struct std::os::windows::io::OwnedHandle\">OwnedHandle</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.into_raw_handle\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"../../../../src/std/os/windows/io/handle.rs.html#321-325\">source</a><a href=\"#method.into_raw_handle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"trait.IntoRawHandle.html#tymethod.into_raw_handle\" class=\"fn\">into_raw_handle</a>(self) -&gt; <a class=\"type\" href=\"type.RawHandle.html\" title=\"type std::os::windows::io::RawHandle\">RawHandle</a></h4></section></summary><div class=\"docblock\">Consumes this object, returning the raw underlying handle. <a href=\"trait.IntoRawHandle.html#tymethod.into_raw_handle\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-IsTerminal-for-OwnedHandle\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.70.0\">1.70.0</span> · <a class=\"src\" href=\"../../../../src/std/os/windows/io/handle.rs.html#428\">source</a></span><a href=\"#impl-IsTerminal-for-OwnedHandle\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"../../../io/trait.IsTerminal.html\" title=\"trait std::io::IsTerminal\">IsTerminal</a> for <a class=\"struct\" href=\"struct.OwnedHandle.html\" title=\"struct std::os::windows::io::OwnedHandle\">OwnedHandle</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.is_terminal\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"../../../../src/std/os/windows/io/handle.rs.html#428\">source</a><a href=\"#method.is_terminal\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"../../../io/trait.IsTerminal.html#tymethod.is_terminal\" class=\"fn\">is_terminal</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"../../../primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\">Returns <code>true</code> if the descriptor/handle refers to a terminal/tty. <a href=\"../../../io/trait.IsTerminal.html#tymethod.is_terminal\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-TryFrom%3CHandleOrInvalid%3E-for-OwnedHandle\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.63.0\">1.63.0</span> · <a class=\"src\" href=\"../../../../src/std/os/windows/io/handle.rs.html#239-252\">source</a></span><a href=\"#impl-TryFrom%3CHandleOrInvalid%3E-for-OwnedHandle\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"../../../convert/trait.TryFrom.html\" title=\"trait std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"struct.HandleOrInvalid.html\" title=\"struct std::os::windows::io::HandleOrInvalid\">HandleOrInvalid</a>&gt; for <a class=\"struct\" href=\"struct.OwnedHandle.html\" title=\"struct std::os::windows::io::OwnedHandle\">OwnedHandle</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open=\"\"><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"../../../convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"struct.InvalidHandleError.html\" title=\"struct std::os::windows::io::InvalidHandleError\">InvalidHandleError</a></h4></section></summary><div class=\"docblock\">The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"../../../../src/std/os/windows/io/handle.rs.html#243-251\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"../../../convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    handle_or_invalid: <a class=\"struct\" href=\"struct.HandleOrInvalid.html\" title=\"struct std::os::windows::io::HandleOrInvalid\">HandleOrInvalid</a>,\n) -&gt; <a class=\"enum\" href=\"../../../result/enum.Result.html\" title=\"enum std::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"struct.InvalidHandleError.html\" title=\"struct std::os::windows::io::InvalidHandleError\">InvalidHandleError</a>&gt;</h4></section></summary><div class=\"docblock\">Performs the conversion.</div></details></div></details><details class=\"toggle implementors-toggle\" open=\"\"><summary><section id=\"impl-TryFrom%3CHandleOrNull%3E-for-OwnedHandle\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.63.0\">1.63.0</span> · <a class=\"src\" href=\"../../../../src/std/os/windows/io/handle.rs.html#161-174\">source</a></span><a href=\"#impl-TryFrom%3CHandleOrNull%3E-for-OwnedHandle\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"../../../convert/trait.TryFrom.html\" title=\"trait std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"struct.HandleOrNull.html\" title=\"struct std::os::windows::io::HandleOrNull\">HandleOrNull</a>&gt; for <a class=\"struct\" href=\"struct.OwnedHandle.html\" title=\"struct std::os::windows::io::OwnedHandle\">OwnedHandle</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open=\"\"><summary><section id=\"associatedtype.Error-1\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error-1\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"../../../convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"struct.NullHandleError.html\" title=\"struct std::os::windows::io::NullHandleError\">NullHandleError</a></h4></section></summary><div class=\"docblock\">The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.try_from-1\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"../../../../src/std/os/windows/io/handle.rs.html#165-173\">source</a><a href=\"#method.try_from-1\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"../../../convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(handle_or_null: <a class=\"struct\" href=\"struct.HandleOrNull.html\" title=\"struct std::os::windows::io::HandleOrNull\">HandleOrNull</a>) -&gt; <a class=\"enum\" href=\"../../../result/enum.Result.html\" title=\"enum std::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"struct.NullHandleError.html\" title=\"struct std::os::windows::io::NullHandleError\">NullHandleError</a>&gt;</h4></section></summary><div class=\"docblock\">Performs the conversion.</div></details></div></details><section id=\"impl-Send-for-OwnedHandle\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.63.0\">1.63.0</span> · <a class=\"src\" href=\"../../../../src/std/os/windows/io/handle.rs.html#121\">source</a></span><a href=\"#impl-Send-for-OwnedHandle\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"../../../marker/trait.Send.html\" title=\"trait std::marker::Send\">Send</a> for <a class=\"struct\" href=\"struct.OwnedHandle.html\" title=\"struct std::os::windows::io::OwnedHandle\">OwnedHandle</a></h3></section><section id=\"impl-Sync-for-OwnedHandle\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.63.0\">1.63.0</span> · <a class=\"src\" href=\"../../../../src/std/os/windows/io/handle.rs.html#129\">source</a></span><a href=\"#impl-Sync-for-OwnedHandle\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"../../../marker/trait.Sync.html\" title=\"trait std::marker::Sync\">Sync</a> for <a class=\"struct\" href=\"struct.OwnedHandle.html\" title=\"struct std::os::windows::io::OwnedHandle\">OwnedHandle</a></h3></section></div><h2 id=\"synthetic-implementations\" class=\"section-header\">Auto Trait Implementations<a href=\"#synthetic-implementations\" class=\"anchor\">§</a></h2><div id=\"synthetic-implementations-list\"><section id=\"impl-Freeze-for-OwnedHandle\" class=\"impl\"><a href=\"#impl-Freeze-for-OwnedHandle\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"../../../marker/trait.Freeze.html\" title=\"trait std::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"struct.OwnedHandle.html\" title=\"struct std::os::windows::io::OwnedHandle\">OwnedHandle</a></h3></section><section id=\"impl-RefUnwindSafe-for-OwnedHandle\" class=\"impl\"><a href=\"#impl-RefUnwindSafe-for-OwnedHandle\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"../../../panic/trait.RefUnwindSafe.html\" title=\"trait std::panic::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"struct\" href=\"struct.OwnedHandle.html\" title=\"struct std::os::windows::io::OwnedHandle\">OwnedHandle</a></h3></section><section id=\"impl-Unpin-for-OwnedHandle\" class=\"impl\"><a href=\"#impl-Unpin-for-OwnedHandle\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"../../../marker/trait.Unpin.html\" title=\"trait std::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"struct.OwnedHandle.html\" title=\"struct std::os::windows::io::OwnedHandle\">OwnedHandle</a></h3></section><section id=\"impl-UnwindSafe-for-OwnedHandle\" class=\"impl\"><a href=\"#impl-UnwindSafe-for-OwnedHandle\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"../../../panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"struct.OwnedHandle.html\" title=\"struct std::os::windows::io::OwnedHandle\">OwnedHandle</a></h3></section></div><h2 id=\"blanket-implementations\" class=\"section-header\">Blanket Implementations<a href=\"#blanket-implementations\" class=\"anchor\">§</a></h2><div id=\"blanket-implementations-list\"><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-Any-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/any.rs.html#140\">source</a><a href=\"#impl-Any-for-T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"../../../any/trait.Any.html\" title=\"trait std::any::Any\">Any</a> for T<div class=\"where\">where\n    T: 'static + ?<a class=\"trait\" href=\"../../../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.type_id\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/any.rs.html#141\">source</a><a href=\"#method.type_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"../../../any/trait.Any.html#tymethod.type_id\" class=\"fn\">type_id</a>(&amp;self) -&gt; <a class=\"struct\" href=\"../../../any/struct.TypeId.html\" title=\"struct std::any::TypeId\">TypeId</a></h4></section></summary><div class=\"docblock\">Gets the <code>TypeId</code> of <code>self</code>. <a href=\"../../../any/trait.Any.html#tymethod.type_id\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-Borrow%3CT%3E-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/borrow.rs.html#208\">source</a><a href=\"#impl-Borrow%3CT%3E-for-T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"../../../borrow/trait.Borrow.html\" title=\"trait std::borrow::Borrow\">Borrow</a>&lt;T&gt; for T<div class=\"where\">where\n    T: ?<a class=\"trait\" href=\"../../../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.borrow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/borrow.rs.html#210\">source</a><a href=\"#method.borrow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"../../../borrow/trait.Borrow.html#tymethod.borrow\" class=\"fn\">borrow</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"../../../primitive.reference.html\">&amp;T</a></h4></section></summary><div class=\"docblock\">Immutably borrows from an owned value. <a href=\"../../../borrow/trait.Borrow.html#tymethod.borrow\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-BorrowMut%3CT%3E-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/borrow.rs.html#216\">source</a><a href=\"#impl-BorrowMut%3CT%3E-for-T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"../../../borrow/trait.BorrowMut.html\" title=\"trait std::borrow::BorrowMut\">BorrowMut</a>&lt;T&gt; for T<div class=\"where\">where\n    T: ?<a class=\"trait\" href=\"../../../marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.borrow_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/borrow.rs.html#217\">source</a><a href=\"#method.borrow_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"../../../borrow/trait.BorrowMut.html#tymethod.borrow_mut\" class=\"fn\">borrow_mut</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"../../../primitive.reference.html\">&amp;mut T</a></h4></section></summary><div class=\"docblock\">Mutably borrows from an owned value. <a href=\"../../../borrow/trait.BorrowMut.html#tymethod.borrow_mut\">Read more</a></div></details></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-From%3CT%3E-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#765\">source</a><a href=\"#impl-From%3CT%3E-for-T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"../../../convert/trait.From.html\" title=\"trait std::convert::From\">From</a>&lt;T&gt; for T</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.from-11\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#768\">source</a><a href=\"#method.from-11\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"../../../convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(t: T) -&gt; T</h4></section></summary><div class=\"docblock\"><p>Returns the argument unchanged.</p>\n</div></details></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-Into%3CU%3E-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#748-750\">source</a><a href=\"#impl-Into%3CU%3E-for-T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"../../../convert/trait.Into.html\" title=\"trait std::convert::Into\">Into</a>&lt;U&gt; for T<div class=\"where\">where\n    U: <a class=\"trait\" href=\"../../../convert/trait.From.html\" title=\"trait std::convert::From\">From</a>&lt;T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#758\">source</a><a href=\"#method.into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"../../../convert/trait.Into.html#tymethod.into\" class=\"fn\">into</a>(self) -&gt; U</h4></section></summary><div class=\"docblock\"><p>Calls <code>U::from(self)</code>.</p>\n<p>That is, this conversion is whatever the implementation of\n<code><a href=\"../../../convert/trait.From.html\" title=\"trait std::convert::From\">From</a>&lt;T&gt; for U</code> chooses to do.</p>\n</div></details></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-TryFrom%3CU%3E-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#805-807\">source</a><a href=\"#impl-TryFrom%3CU%3E-for-T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"../../../convert/trait.TryFrom.html\" title=\"trait std::convert::TryFrom\">TryFrom</a>&lt;U&gt; for T<div class=\"where\">where\n    U: <a class=\"trait\" href=\"../../../convert/trait.Into.html\" title=\"trait std::convert::Into\">Into</a>&lt;T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open=\"\"><summary><section id=\"associatedtype.Error-3\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error-3\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"../../../convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"../../../convert/enum.Infallible.html\" title=\"enum std::convert::Infallible\">Infallible</a></h4></section></summary><div class=\"docblock\">The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.try_from-2\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#812\">source</a><a href=\"#method.try_from-2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"../../../convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(value: U) -&gt; <a class=\"enum\" href=\"../../../result/enum.Result.html\" title=\"enum std::result::Result\">Result</a>&lt;T, &lt;T as <a class=\"trait\" href=\"../../../convert/trait.TryFrom.html\" title=\"trait std::convert::TryFrom\">TryFrom</a>&lt;U&gt;&gt;::<a class=\"associatedtype\" href=\"../../../convert/trait.TryFrom.html#associatedtype.Error\" title=\"type std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\">Performs the conversion.</div></details></div></details><details class=\"toggle implementors-toggle\"><summary><section id=\"impl-TryInto%3CU%3E-for-T\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#790-792\">source</a><a href=\"#impl-TryInto%3CU%3E-for-T\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"../../../convert/trait.TryInto.html\" title=\"trait std::convert::TryInto\">TryInto</a>&lt;U&gt; for T<div class=\"where\">where\n    U: <a class=\"trait\" href=\"../../../convert/trait.TryFrom.html\" title=\"trait std::convert::TryFrom\">TryFrom</a>&lt;T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open=\"\"><summary><section id=\"associatedtype.Error-2\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error-2\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"../../../convert/trait.TryInto.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = &lt;U as <a class=\"trait\" href=\"../../../convert/trait.TryFrom.html\" title=\"trait std::convert::TryFrom\">TryFrom</a>&lt;T&gt;&gt;::<a class=\"associatedtype\" href=\"../../../convert/trait.TryFrom.html#associatedtype.Error\" title=\"type std::convert::TryFrom::Error\">Error</a></h4></section></summary><div class=\"docblock\">The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open=\"\"><summary><section id=\"method.try_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/convert/mod.rs.html#797\">source</a><a href=\"#method.try_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"../../../convert/trait.TryInto.html#tymethod.try_into\" class=\"fn\">try_into</a>(self) -&gt; <a class=\"enum\" href=\"../../../result/enum.Result.html\" title=\"enum std::result::Result\">Result</a>&lt;U, &lt;U as <a class=\"trait\" href=\"../../../convert/trait.TryFrom.html\" title=\"trait std::convert::TryFrom\">TryFrom</a>&lt;T&gt;&gt;::<a class=\"associatedtype\" href=\"../../../convert/trait.TryFrom.html#associatedtype.Error\" title=\"type std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\">Performs the conversion.</div></details></div></details></div><script type=\"text/json\" id=\"notable-traits-data\">{\"ChildStderr\":\"<h3>Notable traits for <code><a class=\\\"struct\\\" href=\\\"../../../process/struct.ChildStderr.html\\\" title=\\\"struct std::process::ChildStderr\\\">ChildStderr</a></code></h3><pre><code><div class=\\\"where\\\">impl <a class=\\\"trait\\\" href=\\\"../../../io/trait.Read.html\\\" title=\\\"trait std::io::Read\\\">Read</a> for <a class=\\\"struct\\\" href=\\\"../../../process/struct.ChildStderr.html\\\" title=\\\"struct std::process::ChildStderr\\\">ChildStderr</a></div>\",\"ChildStdin\":\"<h3>Notable traits for <code>&amp;<a class=\\\"struct\\\" href=\\\"../../../process/struct.ChildStdin.html\\\" title=\\\"struct std::process::ChildStdin\\\">ChildStdin</a></code></h3><pre><code><div class=\\\"where\\\">impl <a class=\\\"trait\\\" href=\\\"../../../io/trait.Write.html\\\" title=\\\"trait std::io::Write\\\">Write</a> for &amp;<a class=\\\"struct\\\" href=\\\"../../../process/struct.ChildStdin.html\\\" title=\\\"struct std::process::ChildStdin\\\">ChildStdin</a></div><div class=\\\"where\\\">impl <a class=\\\"trait\\\" href=\\\"../../../io/trait.Write.html\\\" title=\\\"trait std::io::Write\\\">Write</a> for <a class=\\\"struct\\\" href=\\\"../../../process/struct.ChildStdin.html\\\" title=\\\"struct std::process::ChildStdin\\\">ChildStdin</a></div>\",\"ChildStdout\":\"<h3>Notable traits for <code><a class=\\\"struct\\\" href=\\\"../../../process/struct.ChildStdout.html\\\" title=\\\"struct std::process::ChildStdout\\\">ChildStdout</a></code></h3><pre><code><div class=\\\"where\\\">impl <a class=\\\"trait\\\" href=\\\"../../../io/trait.Read.html\\\" title=\\\"trait std::io::Read\\\">Read</a> for <a class=\\\"struct\\\" href=\\\"../../../process/struct.ChildStdout.html\\\" title=\\\"struct std::process::ChildStdout\\\">ChildStdout</a></div>\"}</script></section></div></main></body></html>",
	"crawlDate": "2024-07-28T05:13:10.028Z"
}